{"version":3,"file":"wharfkit-CgoYgCEG.js","sources":["../../__vite-browser-external","../../node_modules/brorand/index.js","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/bn.js/lib/bn.js","../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../node_modules/elliptic/lib/elliptic/utils.js","../../node_modules/elliptic/lib/elliptic/curve/base.js","../../node_modules/elliptic/lib/elliptic/curve/short.js","../../node_modules/elliptic/lib/elliptic/curve/mont.js","../../node_modules/elliptic/lib/elliptic/curve/edwards.js","../../node_modules/elliptic/lib/elliptic/curve/index.js","../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../node_modules/elliptic/lib/elliptic/curves.js","../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../node_modules/elliptic/lib/elliptic/ec/key.js","../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../node_modules/elliptic/lib/elliptic/ec/index.js","../../node_modules/elliptic/lib/elliptic/eddsa/key.js","../../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../node_modules/elliptic/lib/elliptic/eddsa/index.js","../../node_modules/elliptic/lib/elliptic.js","../../node_modules/tslib/tslib.es6.mjs","../../node_modules/pako/dist/pako.esm.mjs","../../node_modules/@wharfkit/antelope/lib/antelope.m.js","../../node_modules/@wharfkit/common/lib/common.m.js","../../node_modules/@wharfkit/signing-request/lib/signing-request.m.js","../../node_modules/@wharfkit/abicache/lib/abicache.m.js","../../node_modules/@wharfkit/session/lib/session.m.js","../../node_modules/@wharfkit/web-renderer/lib/web-renderer.m.js"],"sourcesContent":["export default {}","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","/**\n * @wharfkit/antelope v1.1.1\n * https://github.com/wharfkit/antelope\n *\n * @license\n * Copyright (c) 2023 FFF00 Agents AB & Greymass Inc. All Rights Reserved.\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * 1.  Redistribution of source code must retain the above copyright notice, this\n *     list of conditions and the following disclaimer.\n * \n * 2.  Redistribution in binary form must reproduce the above copyright notice,\n *     this list of conditions and the following disclaimer in the documentation\n *     and/or other materials provided with the distribution.\n * \n * 3.  Neither the name of the copyright holder nor the names of its contributors\n *     may be used to endorse or promote products derived from this software without\n *     specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR INTENDED FOR USE\n * IN THE DESIGN, CONSTRUCTION, OPERATION OR MAINTENANCE OF ANY MILITARY FACILITY.\n */\nimport rand from 'brorand';\nimport { sha256, sha512, ripemd160 } from 'hash.js';\nimport BN from 'bn.js';\nimport { ec } from 'elliptic';\nimport { __decorate } from 'tslib';\nimport pako from 'pako';\n\nfunction arrayEquals(a, b) {\n    const len = a.length;\n    if (len !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < len; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayEquatableEquals(a, b) {\n    const len = a.length;\n    if (len !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < len; i++) {\n        if (!a[i].equals(b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconst hexLookup = {};\nfunction buildHexLookup() {\n    hexLookup.enc = new Array(0xff);\n    hexLookup.dec = {};\n    for (let i = 0; i <= 0xff; ++i) {\n        const b = i.toString(16).padStart(2, '0');\n        hexLookup.enc[i] = b;\n        hexLookup.dec[b] = i;\n    }\n}\nfunction arrayToHex(array) {\n    if (!hexLookup.enc) {\n        buildHexLookup();\n    }\n    const len = array.length;\n    const rv = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        rv[i] = hexLookup.enc[array[i]];\n    }\n    return rv.join('');\n}\nfunction hexToArray(hex) {\n    if (!hexLookup.dec) {\n        buildHexLookup();\n    }\n    if (typeof hex !== 'string') {\n        throw new Error('Expected string containing hex digits');\n    }\n    if (hex.length % 2) {\n        throw new Error('Odd number of hex digits');\n    }\n    hex = hex.toLowerCase();\n    const len = hex.length / 2;\n    const result = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        const b = hexLookup.dec[hex[i * 2] + hex[i * 2 + 1]];\n        if (b === undefined) {\n            throw new Error('Expected hex string');\n        }\n        result[i] = b;\n    }\n    return result;\n}\n/** Generate N random bytes, throws if a secure random source isn't available. */\nfunction secureRandom(length) {\n    return rand(length);\n}\n/** Used in isInstanceOf checks so we don't spam with warnings. */\nlet didWarn = false;\n/** Check if object in instance of class. */\nfunction isInstanceOf(object, someClass) {\n    if (object instanceof someClass) {\n        return true;\n    }\n    if (object == null || typeof object !== 'object') {\n        return false;\n    }\n    // not an actual instance but since bundlers can fail to dedupe stuff or\n    // multiple versions can be included we check for compatibility if possible\n    const className = someClass['__className'] || someClass['abiName'];\n    if (!className) {\n        return false;\n    }\n    let instanceClass = object.constructor;\n    let isAlienInstance = false;\n    while (instanceClass && !isAlienInstance) {\n        const instanceClassName = instanceClass['__className'] || instanceClass['abiName'];\n        if (!instanceClassName) {\n            break;\n        }\n        isAlienInstance = className == instanceClassName;\n        instanceClass = Object.getPrototypeOf(instanceClass);\n    }\n    if (isAlienInstance && !didWarn) {\n        // eslint-disable-next-line no-console\n        console.warn(`Detected alien instance of ${className}, this usually means more than one version of @wharfkit/antelope has been included in your bundle.`);\n        didWarn = true;\n    }\n    return isAlienInstance;\n}\n\nclass Blob {\n    /**\n     * Create a new Blob instance.\n     */\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return this.fromString(value);\n        }\n        throw new Error('Invalid blob');\n    }\n    static fromString(value) {\n        // If buffer is available, use it (maintains support for nodejs 14)\n        if (typeof Buffer === 'function') {\n            return new this(new Uint8Array(Buffer.from(value, 'base64')));\n        }\n        // fix up base64 padding from nodeos\n        switch (value.length % 4) {\n            case 2:\n                value += '==';\n                break;\n            case 3:\n                value += '=';\n                break;\n            case 1:\n                value = value.substring(0, value.length - 1);\n                break;\n        }\n        const string = atob(value);\n        const array = new Uint8Array(string.length);\n        for (let i = 0; i < string.length; i++) {\n            array[i] = string.charCodeAt(i);\n        }\n        return new this(array);\n    }\n    constructor(array) {\n        this.array = array;\n    }\n    equals(other) {\n        const self = this.constructor;\n        try {\n            return arrayEquals(this.array, self.from(other).array);\n        }\n        catch {\n            return false;\n        }\n    }\n    get base64String() {\n        // If buffer is available, use it (maintains support for nodejs 14)\n        if (typeof Buffer === 'function') {\n            return Buffer.from(this.array).toString('base64');\n        }\n        return btoa(this.utf8String);\n    }\n    /** UTF-8 string representation of this instance. */\n    get utf8String() {\n        return new TextDecoder().decode(this.array);\n    }\n    toABI(encoder) {\n        encoder.writeArray(this.array);\n    }\n    toString() {\n        return this.base64String;\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nBlob.abiName = 'blob';\n\nclass Bytes {\n    /**\n     * Create a new Bytes instance.\n     * @note Make sure to take a [[copy]] before mutating the bytes as the underlying source is not copied here.\n     */\n    static from(value, encoding) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return this.fromString(value, encoding);\n        }\n        if (ArrayBuffer.isView(value)) {\n            return new this(new Uint8Array(value.buffer, value.byteOffset, value.byteLength));\n        }\n        if (isInstanceOf(value['array'], Uint8Array)) {\n            return new this(value['array']);\n        }\n        return new this(new Uint8Array(value));\n    }\n    static fromString(value, encoding = 'hex') {\n        if (encoding === 'hex') {\n            const array = hexToArray(value);\n            return new this(array);\n        }\n        else if (encoding == 'utf8') {\n            const encoder = new TextEncoder();\n            return new this(encoder.encode(value));\n        }\n        else {\n            throw new Error(`Unknown encoding: ${encoding}`);\n        }\n    }\n    static fromABI(decoder) {\n        const len = decoder.readVaruint32();\n        return new this(decoder.readArray(len));\n    }\n    static abiDefault() {\n        return new Bytes();\n    }\n    static equal(a, b) {\n        return this.from(a).equals(this.from(b));\n    }\n    static random(length) {\n        return new this(secureRandom(length));\n    }\n    /** Return true if given value is a valid `BytesType`. */\n    static isBytes(value) {\n        if (isInstanceOf(value, Bytes) || isInstanceOf(value, Uint8Array)) {\n            return true;\n        }\n        if (Array.isArray(value) && value.every((v) => typeof v === 'number')) {\n            return true;\n        }\n        if (typeof value === 'string' && (/[\\da-f]/i.test(value) || value === '')) {\n            return true;\n        }\n        return false;\n    }\n    constructor(array = new Uint8Array()) {\n        this.array = array;\n    }\n    /** Number of bytes in this instance. */\n    get length() {\n        return this.array.byteLength;\n    }\n    /** Hex string representation of this instance. */\n    get hexString() {\n        return arrayToHex(this.array);\n    }\n    /** UTF-8 string representation of this instance. */\n    get utf8String() {\n        return new TextDecoder().decode(this.array);\n    }\n    /** Mutating. Append bytes to this instance. */\n    append(other) {\n        other = Bytes.from(other);\n        const newSize = this.array.byteLength + other.array.byteLength;\n        const buffer = new ArrayBuffer(newSize);\n        const array = new Uint8Array(buffer);\n        array.set(this.array);\n        array.set(other.array, this.array.byteLength);\n        this.array = array;\n    }\n    /** Non-mutating, returns a copy of this instance with appended bytes. */\n    appending(other) {\n        const rv = new Bytes(this.array);\n        rv.append(other);\n        return rv;\n    }\n    /** Mutating. Pad this instance to length. */\n    zeropad(n, truncate = false) {\n        const newSize = truncate ? n : Math.max(n, this.array.byteLength);\n        const buffer = new ArrayBuffer(newSize);\n        const array = new Uint8Array(buffer);\n        array.fill(0);\n        if (truncate && this.array.byteLength > newSize) {\n            array.set(this.array.slice(0, newSize), 0);\n        }\n        else {\n            array.set(this.array, newSize - this.array.byteLength);\n        }\n        this.array = array;\n    }\n    /** Non-mutating, returns a copy of this instance with zeros padded. */\n    zeropadded(n, truncate = false) {\n        const rv = new Bytes(this.array);\n        rv.zeropad(n, truncate);\n        return rv;\n    }\n    /** Mutating. Drop bytes from the start of this instance. */\n    dropFirst(n = 1) {\n        this.array = this.array.subarray(n);\n    }\n    /** Non-mutating, returns a copy of this instance with dropped bytes from the start. */\n    droppingFirst(n = 1) {\n        return new Bytes(this.array.subarray(n));\n    }\n    copy() {\n        const buffer = new ArrayBuffer(this.array.byteLength);\n        const array = new Uint8Array(buffer);\n        array.set(this.array);\n        return new Bytes(array);\n    }\n    equals(other) {\n        return arrayEquals(this.array, Bytes.from(other).array);\n    }\n    toString(encoding = 'hex') {\n        if (encoding === 'hex') {\n            return this.hexString;\n        }\n        else if (encoding === 'utf8') {\n            return this.utf8String;\n        }\n        else {\n            throw new Error(`Unknown encoding: ${encoding}`);\n        }\n    }\n    toABI(encoder) {\n        encoder.writeVaruint32(this.array.byteLength);\n        encoder.writeArray(this.array);\n    }\n    toJSON() {\n        return this.hexString;\n    }\n}\nBytes.abiName = 'bytes';\n\nclass Checksum {\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (isInstanceOf(value, Checksum)) {\n            return new this(value.array);\n        }\n        return new this(Bytes.from(value).array);\n    }\n    static fromABI(decoder) {\n        return new this(decoder.readArray(this.byteSize));\n    }\n    static abiDefault() {\n        return new this(new Uint8Array(this.byteSize));\n    }\n    constructor(array) {\n        const byteSize = this.constructor.byteSize;\n        if (array.byteLength !== byteSize) {\n            throw new Error(`Checksum size mismatch, expected ${byteSize} bytes got ${array.byteLength}`);\n        }\n        this.array = array;\n    }\n    equals(other) {\n        const self = this.constructor;\n        try {\n            return arrayEquals(this.array, self.from(other).array);\n        }\n        catch {\n            return false;\n        }\n    }\n    get hexString() {\n        return arrayToHex(this.array);\n    }\n    toABI(encoder) {\n        encoder.writeArray(this.array);\n    }\n    toString() {\n        return this.hexString;\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nChecksum.abiName = '__checksum';\nclass Checksum256 extends Checksum {\n    static from(value) {\n        return super.from(value);\n    }\n    static hash(data) {\n        const digest = new Uint8Array(sha256().update(Bytes.from(data).array).digest());\n        return new Checksum256(digest);\n    }\n}\nChecksum256.abiName = 'checksum256';\nChecksum256.byteSize = 32;\nclass Checksum512 extends Checksum {\n    static from(value) {\n        return super.from(value);\n    }\n    static hash(data) {\n        const digest = new Uint8Array(sha512().update(Bytes.from(data).array).digest());\n        return new Checksum512(digest);\n    }\n}\nChecksum512.abiName = 'checksum512';\nChecksum512.byteSize = 64;\nclass Checksum160 extends Checksum {\n    static from(value) {\n        return super.from(value);\n    }\n    static hash(data) {\n        const digest = new Uint8Array(ripemd160().update(Bytes.from(data).array).digest());\n        return new Checksum160(digest);\n    }\n}\nChecksum160.abiName = 'checksum160';\nChecksum160.byteSize = 20;\n\n/** Supported Antelope/EOSIO curve types. */\nvar KeyType;\n(function (KeyType) {\n    KeyType[\"K1\"] = \"K1\";\n    KeyType[\"R1\"] = \"R1\";\n    KeyType[\"WA\"] = \"WA\";\n})(KeyType || (KeyType = {}));\n(function (KeyType) {\n    function indexFor(value) {\n        switch (value) {\n            case KeyType.K1:\n                return 0;\n            case KeyType.R1:\n                return 1;\n            case KeyType.WA:\n                return 2;\n            default:\n                throw new Error(`Unknown curve type: ${value}`);\n        }\n    }\n    KeyType.indexFor = indexFor;\n    function from(value) {\n        let index;\n        if (typeof value !== 'number') {\n            index = KeyType.indexFor(value);\n        }\n        else {\n            index = value;\n        }\n        switch (index) {\n            case 0:\n                return KeyType.K1;\n            case 1:\n                return KeyType.R1;\n            case 2:\n                return KeyType.WA;\n            default:\n                throw new Error('Unknown curve type');\n        }\n    }\n    KeyType.from = from;\n})(KeyType || (KeyType = {}));\n\n/**\n * Binary integer with the underlying value represented by a BN.js instance.\n * Follows C++11 standard for arithmetic operators and conversions.\n * @note This type is optimized for correctness not speed, if you plan to manipulate\n *       integers in a tight loop you're advised to use the underlying BN.js value or\n *       convert to a JavaScript number first.\n */\nclass Int {\n    /** Largest value that can be represented by this integer type. */\n    static get max() {\n        return new BN(2).pow(new BN(this.byteWidth * 8 - (this.isSigned ? 1 : 0))).isubn(1);\n    }\n    /** Smallest value that can be represented by this integer type. */\n    static get min() {\n        return this.isSigned ? this.max.ineg().isubn(1) : new BN(0);\n    }\n    /** Return a zero value of this type */\n    static get zero() {\n        return this.from(0);\n    }\n    /** Add `lhs` to `rhs` and return the resulting value. */\n    static add(lhs, rhs, overflow = 'truncate') {\n        return Int.operator(lhs, rhs, overflow, (a, b) => a.add(b));\n    }\n    /** Add `lhs` to `rhs` and return the resulting value. */\n    static sub(lhs, rhs, overflow) {\n        return Int.operator(lhs, rhs, overflow, (a, b) => a.sub(b));\n    }\n    /** Multiply `lhs` by `rhs` and return the resulting value. */\n    static mul(lhs, rhs, overflow) {\n        return Int.operator(lhs, rhs, overflow, (a, b) => a.mul(b));\n    }\n    /**\n     * Divide `lhs` by `rhs` and return the quotient, dropping the remainder.\n     * @throws When dividing by zero.\n     */\n    static div(lhs, rhs, overflow) {\n        return Int.operator(lhs, rhs, overflow, (a, b) => {\n            if (b.isZero()) {\n                throw new Error('Division by zero');\n            }\n            return a.div(b);\n        });\n    }\n    /**\n     * Divide `lhs` by `rhs` and return the quotient + remainder rounded to the closest integer.\n     * @throws When dividing by zero.\n     */\n    static divRound(lhs, rhs, overflow) {\n        return Int.operator(lhs, rhs, overflow, (a, b) => {\n            if (b.isZero()) {\n                throw new Error('Division by zero');\n            }\n            return a.divRound(b);\n        });\n    }\n    /**\n     * Divide `lhs` by `rhs` and return the quotient + remainder rounded up to the closest integer.\n     * @throws When dividing by zero.\n     */\n    static divCeil(lhs, rhs, overflow) {\n        return Int.operator(lhs, rhs, overflow, (a, b) => {\n            if (b.isZero()) {\n                throw new Error('Division by zero');\n            }\n            const dm = a.divmod(b);\n            if (dm.mod.isZero())\n                return dm.div;\n            return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n        });\n    }\n    /** Compare `lhs` to `rhs` and return true if `lhs` is greater than `rhs`. */\n    static gt(lhs, rhs) {\n        return lhs.value.gt(rhs.value);\n    }\n    /** Compare `lhs` to `rhs` and return true if `lhs` is less than `rhs`. */\n    static lt(lhs, rhs) {\n        return lhs.value.lt(rhs.value);\n    }\n    /** Compare `lhs` to `rhs` and return true if `lhs` is greater than or equal to `rhs`. */\n    static gte(lhs, rhs) {\n        return lhs.value.gte(rhs.value);\n    }\n    /** Compare `lhs` to `rhs` and return true if `lhs` is less than or equal to `rhs`. */\n    static lte(lhs, rhs) {\n        return lhs.value.lte(rhs.value);\n    }\n    /**\n     * Can be used to implement custom operator.\n     * @internal\n     */\n    static operator(lhs, rhs, overflow = 'truncate', fn) {\n        const { a, b } = convert(lhs, rhs);\n        const type = a.constructor;\n        const result = fn(a.value, b.value);\n        return type.from(result, overflow);\n    }\n    static from(value, overflow) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        let fromType = this;\n        let bn;\n        if (isInstanceOf(value, Int)) {\n            fromType = value.constructor;\n            bn = value.value.clone();\n        }\n        else if (value instanceof Uint8Array) {\n            bn = new BN(value, undefined, 'le');\n            if (fromType.isSigned) {\n                bn = bn.fromTwos(fromType.byteWidth * 8);\n            }\n        }\n        else {\n            if ((typeof value === 'string' && !/[0-9]+/.test(value)) ||\n                (typeof value === 'number' && !Number.isFinite(value))) {\n                throw new Error('Invalid number');\n            }\n            bn = BN.isBN(value) ? value.clone() : new BN(value, 10);\n            if (bn.isNeg() && !fromType.isSigned) {\n                fromType = { byteWidth: fromType.byteWidth, isSigned: true };\n            }\n        }\n        switch (overflow) {\n            case 'clamp':\n                bn = clamp(bn, this.min, this.max);\n                break;\n            case 'truncate':\n                bn = truncate(bn, fromType, this);\n                break;\n        }\n        return new this(bn);\n    }\n    static fromABI(decoder) {\n        return this.from(decoder.readArray(this.byteWidth));\n    }\n    static abiDefault() {\n        return this.from(0);\n    }\n    static random() {\n        return this.from(secureRandom(this.byteWidth));\n    }\n    /**\n     * Create a new instance, don't use this directly. Use the `.from` factory method instead.\n     * @throws If the value over- or under-flows the integer type.\n     */\n    constructor(value) {\n        const self = this.constructor;\n        if (self.isSigned === undefined || self.byteWidth === undefined) {\n            throw new Error('Cannot instantiate abstract class Int');\n        }\n        if (value.gt(self.max)) {\n            throw new Error(`Number ${value} overflows ${self.abiName}`);\n        }\n        if (value.lt(self.min)) {\n            throw new Error(`Number ${value} underflows ${self.abiName}`);\n        }\n        this.value = value;\n    }\n    cast(type, overflow = 'truncate') {\n        if (this.constructor === type) {\n            return this;\n        }\n        return type.from(this, overflow);\n    }\n    /** Number as bytes in little endian (matches memory layout in C++ contract). */\n    get byteArray() {\n        const self = this.constructor;\n        const value = self.isSigned ? this.value.toTwos(self.byteWidth * 8) : this.value;\n        return value.toArrayLike(Uint8Array, 'le', self.byteWidth);\n    }\n    /**\n     * Compare two integers, if strict is set to true the test will only consider integers\n     * of the exact same type. I.e. Int64.from(1).equals(UInt64.from(1)) will return false.\n     */\n    equals(other, strict = false) {\n        const self = this.constructor;\n        if (strict === true && isInstanceOf(other, Int)) {\n            const otherType = other.constructor;\n            if (self.byteWidth !== otherType.byteWidth || self.isSigned !== otherType.isSigned) {\n                return false;\n            }\n        }\n        try {\n            return this.value.eq(self.from(other).value);\n        }\n        catch {\n            return false;\n        }\n    }\n    /** Mutating add. */\n    add(num) {\n        this.value = this.operator(num, Int.add).value;\n    }\n    /** Non-mutating add. */\n    adding(num) {\n        return this.operator(num, Int.add);\n    }\n    /** Mutating subtract. */\n    subtract(num) {\n        this.value = this.operator(num, Int.sub).value;\n    }\n    /** Non-mutating subtract. */\n    subtracting(num) {\n        return this.operator(num, Int.sub);\n    }\n    /** Mutating multiply. */\n    multiply(by) {\n        this.value = this.operator(by, Int.mul).value;\n    }\n    /** Non-mutating multiply. */\n    multiplying(by) {\n        return this.operator(by, Int.mul);\n    }\n    /**\n     * Mutating divide.\n     * @param behavior How to handle the remainder, default is to floor (round down).\n     * @throws When dividing by zero.\n     */\n    divide(by, behavior) {\n        this.value = this.dividing(by, behavior).value;\n    }\n    /**\n     * Non-mutating divide.\n     * @param behavior How to handle the remainder, default is to floor (round down).\n     * @throws When dividing by zero.\n     */\n    dividing(by, behavior) {\n        let op = Int.div;\n        switch (behavior) {\n            case 'ceil':\n                op = Int.divCeil;\n                break;\n            case 'round':\n                op = Int.divRound;\n                break;\n        }\n        return this.operator(by, op);\n    }\n    /** Greater than comparision operator */\n    gt(other) {\n        return Int.gt(this, other);\n    }\n    /** Less than comparision operator */\n    lt(other) {\n        return Int.lt(this, other);\n    }\n    /** Greater than or equal comparision operator */\n    gte(other) {\n        return Int.gte(this, other);\n    }\n    /** Less than or equal comparision operator */\n    lte(other) {\n        return Int.lte(this, other);\n    }\n    /**\n     * Run operator with C++11 implicit conversion.\n     * @internal\n     */\n    operator(other, fn) {\n        let rhs;\n        if (isInstanceOf(other, Int)) {\n            rhs = other;\n        }\n        else {\n            rhs = Int64.from(other, 'truncate');\n        }\n        return fn(this, rhs).cast(this.constructor);\n    }\n    /**\n     * Convert to a JavaScript number.\n     * @throws If the number cannot be represented by 53-bits.\n     **/\n    toNumber() {\n        return this.value.toNumber();\n    }\n    toString() {\n        return this.value.toString();\n    }\n    [Symbol.toPrimitive](type) {\n        if (type === 'number') {\n            return this.toNumber();\n        }\n        else {\n            return this.toString();\n        }\n    }\n    toABI(encoder) {\n        encoder.writeArray(this.byteArray);\n    }\n    toJSON() {\n        // match FCs behavior and return strings for anything above 32-bit\n        if (this.value.bitLength() > 32) {\n            return this.value.toString();\n        }\n        else {\n            return this.value.toNumber();\n        }\n    }\n}\nInt.abiName = '__int';\nclass Int8 extends Int {\n}\nInt8.abiName = 'int8';\nInt8.byteWidth = 1;\nInt8.isSigned = true;\nclass Int16 extends Int {\n}\nInt16.abiName = 'int16';\nInt16.byteWidth = 2;\nInt16.isSigned = true;\nclass Int32 extends Int {\n}\nInt32.abiName = 'int32';\nInt32.byteWidth = 4;\nInt32.isSigned = true;\nclass Int64 extends Int {\n}\nInt64.abiName = 'int64';\nInt64.byteWidth = 8;\nInt64.isSigned = true;\nclass Int128 extends Int {\n}\nInt128.abiName = 'int128';\nInt128.byteWidth = 16;\nInt128.isSigned = true;\nclass UInt8 extends Int {\n}\nUInt8.abiName = 'uint8';\nUInt8.byteWidth = 1;\nUInt8.isSigned = false;\nclass UInt16 extends Int {\n}\nUInt16.abiName = 'uint16';\nUInt16.byteWidth = 2;\nUInt16.isSigned = false;\nclass UInt32 extends Int {\n}\nUInt32.abiName = 'uint32';\nUInt32.byteWidth = 4;\nUInt32.isSigned = false;\nclass UInt64 extends Int {\n}\nUInt64.abiName = 'uint64';\nUInt64.byteWidth = 8;\nUInt64.isSigned = false;\nclass UInt128 extends Int {\n}\nUInt128.abiName = 'uint128';\nUInt128.byteWidth = 16;\nUInt128.isSigned = false;\nclass VarInt extends Int {\n    static fromABI(decoder) {\n        return new this(new BN(decoder.readVarint32()));\n    }\n    toABI(encoder) {\n        encoder.writeVarint32(Number(this));\n    }\n}\nVarInt.abiName = 'varint32';\nVarInt.byteWidth = 32;\nVarInt.isSigned = true;\nclass VarUInt extends Int {\n    static fromABI(decoder) {\n        return new this(new BN(decoder.readVaruint32()));\n    }\n    toABI(encoder) {\n        encoder.writeVaruint32(Number(this));\n    }\n}\nVarUInt.abiName = 'varuint32';\nVarUInt.byteWidth = 32;\nVarUInt.isSigned = false;\n/** Clamp number between min and max. */\nfunction clamp(num, min, max) {\n    return BN.min(BN.max(num, min), max);\n}\n/**\n * Create new BN with the same bit pattern as the passed value,\n * extending or truncating the value’s representation as necessary.\n */\nfunction truncate(value, from, to) {\n    const fill = value.isNeg() ? 255 : 0;\n    const fromValue = from.isSigned ? value.toTwos(from.byteWidth * 8) : value;\n    const fromBytes = fromValue.toArrayLike(Uint8Array, 'le');\n    const toBytes = new Uint8Array(to.byteWidth);\n    toBytes.fill(fill);\n    toBytes.set(fromBytes.slice(0, to.byteWidth));\n    const toValue = new BN(toBytes, undefined, 'le');\n    return to.isSigned ? toValue.fromTwos(to.byteWidth * 8) : toValue;\n}\n/** C++11 implicit integer conversions. */\nfunction convert(a, b) {\n    // The integral promotions (4.5) shall be performed on both operands.\n    a = promote(a);\n    b = promote(b);\n    const aType = a.constructor;\n    const bType = b.constructor;\n    // If both operands have the same type, no further conversion is needed\n    if (aType !== bType) {\n        // Otherwise, if both operands have signed integer types or both have unsigned integer types,\n        // the operand with the type of lesser integer conversion rank shall be converted to the type\n        // of the operand with greater rank.\n        if (aType.isSigned === bType.isSigned) {\n            if (aType.byteWidth > bType.byteWidth) {\n                b = b.cast(aType);\n            }\n            else if (bType.byteWidth > aType.byteWidth) {\n                a = a.cast(bType);\n            }\n        }\n        else {\n            // Otherwise, if the operand that has unsigned integer type has rank greater than or equal\n            // to the rank of the type of the other operand, the operand with signed integer type\n            // shall be converted to the type of the operand with unsigned integer type.\n            if (aType.isSigned === false && aType.byteWidth >= bType.byteWidth) {\n                b = b.cast(aType);\n            }\n            else if (bType.isSigned === false && bType.byteWidth >= aType.byteWidth) {\n                a = a.cast(bType);\n            }\n            else {\n                // Otherwise, if the type of the operand with signed integer type can represent all of the\n                // values of the type of the operand with unsigned integer type, the operand with unsigned\n                // integer type shall be converted to the type of the operand with signed integer type.\n                if (aType.isSigned === true &&\n                    aType.max.gte(bType.max) &&\n                    aType.min.lte(bType.min)) {\n                    b = b.cast(aType);\n                }\n                else if (bType.isSigned === true &&\n                    bType.max.gte(aType.max) &&\n                    bType.min.lte(aType.min)) {\n                    a = a.cast(bType);\n                }\n                else ;\n            }\n        }\n    }\n    return { a, b };\n}\n/** C++11 integral promotion. */\nfunction promote(n) {\n    // An rvalue of type char, signed char, unsigned char, short int, or\n    // unsigned short int can be converted to an rvalue of type int if int\n    // can represent all the values of the source type; otherwise, the source\n    // rvalue can be converted to an rvalue of type unsigned int.\n    let rv = n;\n    const type = n.constructor;\n    if (type.byteWidth < 4) {\n        rv = n.cast(Int32);\n    }\n    return rv;\n}\n\n/** Return a ABI definition for given ABISerializableType. */\nfunction synthesizeABI(type) {\n    const structs = [];\n    const variants = [];\n    const aliases = [];\n    const seen = new Set();\n    const resolveAbiType = (t) => {\n        let typeName;\n        if (typeof t.type !== 'string') {\n            typeName = resolve(t.type);\n        }\n        else {\n            typeName = t.type;\n        }\n        if (t.array === true) {\n            if (t.size) {\n                typeName += `[${t.size}]`;\n            }\n            else {\n                typeName += '[]';\n            }\n        }\n        if (t.optional === true) {\n            typeName += '?';\n        }\n        if (t.extension === true) {\n            typeName += '$';\n        }\n        return typeName;\n    };\n    const resolve = (t) => {\n        if (!t.abiName) {\n            throw new Error('Encountered non-conforming type');\n        }\n        else if (t.abiName === '__struct') {\n            throw new Error('Misconfigured Struct subclass, did you forget @Struct.type?');\n        }\n        if (seen.has(t)) {\n            return t.abiName;\n        }\n        seen.add(t);\n        if (t.abiAlias) {\n            aliases.push({\n                new_type_name: t.abiName,\n                type: resolveAbiType(t.abiAlias),\n            });\n        }\n        else if (t.abiFields) {\n            const fields = t.abiFields.map((field) => {\n                return {\n                    name: field.name,\n                    type: resolveAbiType(field),\n                };\n            });\n            const struct = {\n                base: t.abiBase ? resolve(t.abiBase) : '',\n                name: t.abiName,\n                fields,\n            };\n            structs.push(struct);\n        }\n        else if (t.abiVariant) {\n            const variant = {\n                name: t.abiName,\n                types: t.abiVariant.map(resolveAbiType),\n            };\n            variants.push(variant);\n        }\n        return t.abiName;\n    };\n    const root = resolve(type);\n    return { abi: ABI.from({ structs, variants, types: aliases }), types: Array.from(seen), root };\n}\nfunction abiTypeString(type) {\n    let typeName = typeof type.type === 'string' ? type.type : type.type.abiName;\n    if (type.array === true) {\n        if (type.size) {\n            typeName += `[${type.size}]`;\n        }\n        else {\n            typeName += '[]';\n        }\n    }\n    if (type.optional === true) {\n        typeName += '?';\n    }\n    if (type.extension === true) {\n        typeName += '$';\n    }\n    return typeName;\n}\nfunction isTypeDescriptor(type) {\n    return (typeof type !== 'string' &&\n        type.abiName === undefined &&\n        type.type !== undefined);\n}\nfunction toTypeDescriptor(type) {\n    if (typeof type === 'string') {\n        return { type };\n    }\n    if (typeof type.abiName !== 'undefined') {\n        return { type: type };\n    }\n    return type;\n}\n\nconst StringType = {\n    abiName: 'string',\n    abiDefault: () => '',\n    fromABI: (decoder) => {\n        return decoder.readString();\n    },\n    from: (string) => string,\n    toABI: (string, encoder) => {\n        encoder.writeString(string);\n    },\n};\nconst BoolType = {\n    abiName: 'bool',\n    abiDefault: () => false,\n    fromABI: (decoder) => {\n        return decoder.readByte() === 1;\n    },\n    from: (value) => value,\n    toABI: (value, encoder) => {\n        encoder.writeByte(value === true ? 1 : 0);\n    },\n};\nfunction getBuiltins() {\n    return [\n        // types represented by JavaScript builtins\n        BoolType,\n        StringType,\n        // types represented by Classes\n        Asset,\n        Asset.Symbol,\n        Asset.SymbolCode,\n        BlockTimestamp,\n        Bytes,\n        Checksum160,\n        Checksum256,\n        Checksum512,\n        ExtendedAsset,\n        Float128,\n        Float32,\n        Float64,\n        Int128,\n        Int16,\n        Int32,\n        Int64,\n        Int8,\n        Name,\n        PublicKey,\n        Signature,\n        TimePoint,\n        TimePointSec,\n        UInt128,\n        UInt16,\n        UInt32,\n        UInt64,\n        UInt8,\n        VarInt,\n        VarUInt,\n    ];\n}\nfunction buildTypeLookup(additional = []) {\n    const rv = {};\n    const builtins = getBuiltins();\n    for (const type of builtins) {\n        rv[type.abiName] = type;\n    }\n    for (const type of additional) {\n        if (!type.abiName) {\n            throw new Error('Invalid type');\n        }\n        rv[type.abiName] = type;\n    }\n    return rv;\n}\nfunction getTypeName(object) {\n    if (object.constructor && object.constructor.abiName !== undefined) {\n        return object.constructor.abiName;\n    }\n    if (Array.isArray(object)) {\n        const types = object.map(getTypeName);\n        const type = types[0];\n        if (!type || !types.every((t) => t === type)) {\n            return;\n        }\n        return type + '[]';\n    }\n    switch (typeof object) {\n        case 'boolean':\n            return 'bool';\n        case 'string':\n            return 'string';\n    }\n}\nfunction getType(object, name = 'jsobj') {\n    var _a;\n    if (object.constructor && object.constructor.abiName !== undefined) {\n        return object.constructor;\n    }\n    if (Array.isArray(object)) {\n        // check for array of all ABISerializableType with same type name\n        const types = object.map((v) => {\n            return getType(v, name);\n        });\n        const type = types[0];\n        if (!type) {\n            return; // some type not known\n        }\n        if (!types.every((t) => t && t.abiName === type.abiName)) {\n            return; // not all types are the same\n        }\n        return type;\n    }\n    const objectType = typeof object;\n    if (objectType === 'object' && object !== null) {\n        const fields = Object.keys(object).map((key) => {\n            return { name: key, type: getType(object[key], name + '_nested') };\n        });\n        if (fields.find((field) => !field.type)) {\n            return; // encountered unknown type\n        }\n        return _a = class extends Struct {\n            },\n            _a.abiName = name,\n            _a.abiFields = fields,\n            _a;\n    }\n    switch (objectType) {\n        case 'boolean':\n            return BoolType;\n        case 'string':\n            return StringType;\n    }\n}\n\n/**\n * Antelope/EOSIO ABI Decoder\n */\nclass DecodingError extends Error {\n    constructor(ctx, underlyingError) {\n        const path = ctx.codingPath\n            .map(({ field, type }) => {\n            if (typeof field === 'number') {\n                return field;\n            }\n            else {\n                return `${field}<${type.typeName}>`;\n            }\n        })\n            .join('.');\n        super(`Decoding error at ${path}: ${underlyingError.message}`);\n        this.stack = underlyingError.stack;\n        this.ctx = ctx;\n        this.underlyingError = underlyingError;\n    }\n}\nDecodingError.__className = 'DecodingError';\nfunction abiDecode(args) {\n    const descriptor = toTypeDescriptor(args.type);\n    const typeName = abiTypeString(descriptor);\n    const customTypes = args.customTypes || [];\n    let abi;\n    if (args.abi) {\n        abi = ABI.from(args.abi);\n    }\n    else {\n        try {\n            let type;\n            if (typeof descriptor.type === 'string') {\n                const lookup = buildTypeLookup(customTypes);\n                const rName = new ABI.ResolvedType(descriptor.type).name; // type name w/o suffixes\n                type = lookup[rName];\n                if (!type) {\n                    throw new Error(`Unknown type: ${descriptor.type}`);\n                }\n            }\n            else {\n                type = descriptor.type;\n            }\n            const synthesized = synthesizeABI(type);\n            abi = synthesized.abi;\n            customTypes.push(...synthesized.types);\n        }\n        catch (error) {\n            throw Error(`Unable to synthesize ABI for: ${typeName} (${error.message}). ` +\n                'To decode non-class types you need to pass the ABI definition manually.');\n        }\n    }\n    const resolved = abi.resolveType(typeName);\n    if (typeof descriptor.type !== 'string') {\n        customTypes.unshift(descriptor.type);\n    }\n    const ctx = {\n        types: buildTypeLookup(customTypes),\n        strictExtensions: args.strictExtensions || false,\n        codingPath: [{ field: 'root', type: resolved }],\n    };\n    try {\n        if (args.data || args.data === '') {\n            let decoder;\n            if (isInstanceOf(args.data, ABIDecoder)) {\n                decoder = args.data;\n            }\n            else {\n                const bytes = Bytes.from(args.data);\n                const fatal = args.ignoreInvalidUTF8 === undefined ? true : !args.ignoreInvalidUTF8;\n                decoder = new ABIDecoder(bytes.array, new TextDecoder('utf-8', { fatal }));\n            }\n            if (args.metadata) {\n                decoder.metadata = args.metadata;\n            }\n            return decodeBinary(resolved, decoder, ctx);\n        }\n        else if (args.object !== undefined) {\n            return decodeObject(args.object, resolved, ctx);\n        }\n        else if (args.json) {\n            return decodeObject(JSON.parse(args.json), resolved, ctx);\n        }\n        else {\n            throw new Error('Nothing to decode, you must set one of data, json, object');\n        }\n    }\n    catch (error) {\n        throw new DecodingError(ctx, error);\n    }\n}\n/** Marker for objects when they have been resolved, i.e. their types `from` factory method will not need to resolve children. */\nconst Resolved = Symbol('Resolved');\nfunction decodeBinary(type, decoder, ctx) {\n    if (ctx.codingPath.length > 32) {\n        throw new Error('Maximum decoding depth exceeded');\n    }\n    if (type.isExtension) {\n        if (!decoder.canRead()) {\n            if (ctx.strictExtensions) {\n                return defaultValue(type, ctx);\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    if (type.isOptional) {\n        if (decoder.readByte() === 0) {\n            return null;\n        }\n    }\n    if (type.isArray) {\n        const len = decoder.readVaruint32();\n        const rv = [];\n        for (let i = 0; i < len; i++) {\n            ctx.codingPath.push({ field: i, type });\n            rv.push(decodeInner());\n            ctx.codingPath.pop();\n        }\n        return rv;\n    }\n    else {\n        return decodeInner();\n    }\n    function decodeInner() {\n        const abiType = ctx.types[type.name];\n        if (abiType && abiType.fromABI) {\n            return abiType.fromABI(decoder);\n        }\n        else {\n            if (type.ref) {\n                // follow type alias\n                ctx.codingPath.push({ field: '', type: type.ref });\n                const rv = decodeBinary(type.ref, decoder, ctx);\n                ctx.codingPath.pop();\n                return rv;\n            }\n            else if (type.fields) {\n                const fields = type.allFields;\n                if (!fields) {\n                    throw new Error('Invalid struct fields');\n                }\n                const rv = {};\n                for (const field of fields) {\n                    ctx.codingPath.push({ field: field.name, type: field.type });\n                    rv[field.name] = decodeBinary(field.type, decoder, ctx);\n                    ctx.codingPath.pop();\n                }\n                if (abiType) {\n                    rv[Resolved] = true;\n                    return abiType.from(rv);\n                }\n                else {\n                    return rv;\n                }\n            }\n            else if (type.variant) {\n                const vIdx = decoder.readByte();\n                const vType = type.variant[vIdx];\n                if (!vType) {\n                    throw new Error(`Unknown variant idx: ${vIdx}`);\n                }\n                ctx.codingPath.push({ field: `v${vIdx}`, type: vType });\n                const rv = [vType.typeName, decodeBinary(vType, decoder, ctx)];\n                ctx.codingPath.pop();\n                if (abiType) {\n                    return abiType.from(rv);\n                }\n                else {\n                    return rv;\n                }\n            }\n            else if (abiType) {\n                throw new Error('Invalid type');\n            }\n            else {\n                throw new Error(type.name === 'any' ? \"Unable to decode 'any' type from binary\" : 'Unknown type');\n            }\n        }\n    }\n}\nfunction decodeObject(value, type, ctx) {\n    if (value === null || value === undefined) {\n        if (type.isOptional) {\n            return null;\n        }\n        if (type.isExtension) {\n            if (ctx.strictExtensions) {\n                return defaultValue(type, ctx);\n            }\n            else {\n                return null;\n            }\n        }\n        throw new Error(`Unexpectedly encountered ${value} for non-optional (${ctx.codingPath\n            .map((path) => path.field)\n            .join('.')})`);\n    }\n    else if (type.isArray) {\n        if (!Array.isArray(value)) {\n            throw new Error('Expected array');\n        }\n        const rv = [];\n        const len = value.length;\n        for (let i = 0; i < len; i++) {\n            ctx.codingPath.push({ field: i, type });\n            rv.push(decodeInner(value[i]));\n            ctx.codingPath.pop();\n        }\n        return rv;\n    }\n    else {\n        return decodeInner(value);\n    }\n    function decodeInner(value) {\n        const abiType = ctx.types[type.name];\n        if (type.ref && !abiType) {\n            // follow type alias\n            return decodeObject(value, type.ref, ctx);\n        }\n        else if (type.fields) {\n            if (typeof value !== 'object') {\n                throw new Error('Expected object');\n            }\n            if (typeof abiType === 'function' && isInstanceOf(value, abiType)) {\n                return value;\n            }\n            const fields = type.allFields;\n            if (!fields) {\n                throw new Error('Invalid struct fields');\n            }\n            const struct = {};\n            for (const field of fields) {\n                ctx.codingPath.push({ field: field.name, type: field.type });\n                struct[field.name] = decodeObject(value[field.name], field.type, ctx);\n                ctx.codingPath.pop();\n            }\n            if (abiType) {\n                struct[Resolved] = true;\n                return abiType.from(struct);\n            }\n            else {\n                return struct;\n            }\n        }\n        else if (type.variant) {\n            let vName;\n            if (Array.isArray(value) && value.length === 2 && typeof value[0] === 'string') {\n                vName = value[0];\n                value = value[1];\n            }\n            else if (isInstanceOf(value, Variant)) {\n                vName = value.variantName;\n                value = value.value;\n            }\n            else {\n                vName = getTypeName(value);\n            }\n            const vIdx = type.variant.findIndex((t) => t.typeName === vName);\n            if (vIdx === -1) {\n                throw new Error(`Unknown variant type: ${vName}`);\n            }\n            const vType = type.variant[vIdx];\n            ctx.codingPath.push({ field: `v${vIdx}`, type: vType });\n            const rv = [vType.typeName, decodeObject(value, vType, ctx)];\n            ctx.codingPath.pop();\n            if (abiType) {\n                rv[Resolved] = true;\n                return abiType.from(rv);\n            }\n            else {\n                return rv;\n            }\n        }\n        else {\n            if (!abiType) {\n                // special case for `any` when decoding from object\n                if (type.name === 'any') {\n                    return value;\n                }\n                throw new Error('Unknown type');\n            }\n            return abiType.from(value);\n        }\n    }\n}\n/** Return default value (aka initialized value, matching C++ where possible) for given type */\nfunction defaultValue(type, ctx, seen = new Set()) {\n    if (type.isArray) {\n        return [];\n    }\n    if (type.isOptional) {\n        return null;\n    }\n    const abiType = ctx.types[type.name];\n    if (abiType && abiType.abiDefault) {\n        return abiType.abiDefault();\n    }\n    if (seen.has(type.name)) {\n        throw new Error('Circular type reference');\n    }\n    seen.add(type.name);\n    if (type.allFields) {\n        const rv = {};\n        for (const field of type.allFields) {\n            ctx.codingPath.push({ field: field.name, type: field.type });\n            rv[field.name] = defaultValue(field.type, ctx, seen);\n            ctx.codingPath.pop();\n        }\n        if (abiType) {\n            rv[Resolved] = true;\n            return abiType.from(rv);\n        }\n        return rv;\n    }\n    if (type.variant && type.variant.length > 0) {\n        const rv = [type.variant[0].typeName, defaultValue(type.variant[0], ctx)];\n        if (abiType) {\n            rv[Resolved] = true;\n            return abiType.from(rv);\n        }\n        return rv;\n    }\n    if (type.ref) {\n        ctx.codingPath.push({ field: '', type: type.ref });\n        const rv = defaultValue(type.ref, ctx, seen);\n        ctx.codingPath.pop();\n        return rv;\n    }\n    throw new Error('Unable to determine default value');\n}\nclass ABIDecoder {\n    constructor(array, textDecoder) {\n        this.array = array;\n        this.pos = 0;\n        /** User declared metadata, can be used to pass info to instances when decoding.  */\n        this.metadata = {};\n        this.textDecoder = textDecoder || new TextDecoder('utf-8', { fatal: true });\n        this.data = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    }\n    canRead(bytes = 1) {\n        return !(this.pos + bytes > this.array.byteLength);\n    }\n    ensure(bytes) {\n        if (!this.canRead(bytes)) {\n            throw new Error('Read past end of buffer');\n        }\n    }\n    setPosition(pos) {\n        if (pos < 0 || pos > this.array.byteLength) {\n            throw new Error('Invalid position');\n        }\n        this.pos = pos;\n    }\n    getPosition() {\n        return this.pos;\n    }\n    advance(bytes) {\n        this.ensure(bytes);\n        this.pos += bytes;\n    }\n    /** Read one byte. */\n    readByte() {\n        this.ensure(1);\n        return this.array[this.pos++];\n    }\n    /** Read floating point as JavaScript number, 32 or 64 bits. */\n    readFloat(byteWidth) {\n        this.ensure(byteWidth);\n        let rv;\n        switch (byteWidth) {\n            case 4:\n                rv = this.data.getFloat32(this.pos, true);\n                break;\n            case 8:\n                rv = this.data.getFloat64(this.pos, true);\n                break;\n            default:\n                throw new Error('Invalid float size');\n        }\n        this.pos += byteWidth;\n        return rv;\n    }\n    readVaruint32() {\n        let v = 0;\n        let bit = 0;\n        for (;;) {\n            const b = this.readByte();\n            v |= (b & 0x7f) << bit;\n            bit += 7;\n            if (!(b & 0x80)) {\n                break;\n            }\n        }\n        return v >>> 0;\n    }\n    readVarint32() {\n        const v = this.readVaruint32();\n        if (v & 1) {\n            return (~v >> 1) | 2147483648;\n        }\n        else {\n            return v >>> 1;\n        }\n    }\n    readArray(length) {\n        this.ensure(length);\n        const rv = this.array.subarray(this.pos, this.pos + length);\n        this.pos += length;\n        return rv;\n    }\n    readString() {\n        const length = this.readVaruint32();\n        return this.textDecoder.decode(this.readArray(length));\n    }\n}\nABIDecoder.__className = 'ABIDecoder';\n\n/**\n * Antelope/EOSIO ABI Encoder\n */\nclass EncodingError extends Error {\n    constructor(ctx, underlyingError) {\n        const path = ctx.codingPath\n            .map(({ field, type }) => {\n            if (typeof field === 'number') {\n                return field;\n            }\n            else {\n                return `${field}<${type.typeName}>`;\n            }\n        })\n            .join('.');\n        super(`Encoding error at ${path}: ${underlyingError.message}`);\n        this.stack = underlyingError.stack;\n        this.ctx = ctx;\n        this.underlyingError = underlyingError;\n    }\n}\nEncodingError.__className = 'EncodingError';\nfunction abiEncode(args) {\n    let type;\n    let typeName;\n    if (typeof args.type === 'string') {\n        typeName = args.type;\n    }\n    else if (args.type && isTypeDescriptor(args.type)) {\n        if (typeof args.type.type !== 'string') {\n            type = args.type.type;\n        }\n        typeName = abiTypeString(args.type);\n    }\n    else if (args.type && args.type.abiName !== undefined) {\n        type = args.type;\n        typeName = args.type.abiName;\n    }\n    else {\n        type = getType(args.object);\n        if (type) {\n            typeName = type.abiName;\n            if (Array.isArray(args.object)) {\n                typeName += '[]';\n            }\n        }\n    }\n    const customTypes = args.customTypes ? args.customTypes.slice() : [];\n    if (type) {\n        customTypes.unshift(type);\n    }\n    else if (typeName) {\n        const rootName = new ABI.ResolvedType(typeName).name;\n        type = customTypes.find((t) => t.abiName === rootName);\n    }\n    let rootType;\n    if (args.abi && typeName) {\n        rootType = ABI.from(args.abi).resolveType(typeName);\n    }\n    else if (type) {\n        const synthesized = synthesizeABI(type);\n        rootType = synthesized.abi.resolveType(typeName || type.abiName);\n        customTypes.push(...synthesized.types);\n    }\n    else if (typeName) {\n        rootType = new ABI.ResolvedType(typeName);\n    }\n    else {\n        throw new Error('Unable to determine the type of the object to be encoded. ' +\n            'To encode custom ABI types you must pass the type argument.');\n    }\n    const types = buildTypeLookup(customTypes);\n    const encoder = args.encoder || new ABIEncoder();\n    if (args.metadata) {\n        encoder.metadata = args.metadata;\n    }\n    const ctx = {\n        types,\n        encoder,\n        codingPath: [{ field: 'root', type: rootType }],\n    };\n    try {\n        encodeAny(args.object, rootType, ctx);\n    }\n    catch (error) {\n        throw new EncodingError(ctx, error);\n    }\n    return Bytes.from(encoder.getData());\n}\nfunction encodeAny(value, type, ctx) {\n    const valueExists = value !== undefined && value !== null;\n    if (type.isOptional) {\n        ctx.encoder.writeByte(valueExists ? 1 : 0);\n        if (!valueExists) {\n            return;\n        }\n    }\n    if (type.isArray) {\n        if (!Array.isArray(value)) {\n            throw new Error(`Expected array for: ${type.typeName}`);\n        }\n        const len = value.length;\n        if (!type.size) {\n            ctx.encoder.writeVaruint32(len);\n        }\n        for (let i = 0; i < len; i++) {\n            ctx.codingPath.push({ field: i, type });\n            encodeInner(value[i]);\n            ctx.codingPath.pop();\n        }\n    }\n    else {\n        encodeInner(value);\n    }\n    function encodeInner(value) {\n        const abiType = ctx.types[type.name];\n        if (type.ref && !abiType) {\n            // type is alias, follow it\n            encodeAny(value, type.ref, ctx);\n            return;\n        }\n        if (!valueExists) {\n            if (type.isExtension) {\n                return;\n            }\n            throw new Error(`Found ${value} for non-optional type: ${type.typeName} (${ctx.codingPath\n                .map((path) => path.field)\n                .join('.')})`);\n        }\n        if (abiType && abiType.toABI) {\n            // type explicitly handles encoding\n            abiType.toABI(value, ctx.encoder);\n        }\n        else if (typeof value.toABI === 'function' && value.constructor.abiName === type.name) {\n            // instance handles encoding\n            value.toABI(ctx.encoder);\n        }\n        else {\n            // encode according to abi def if possible\n            if (type.fields) {\n                if (typeof value !== 'object') {\n                    throw new Error(`Expected object for: ${type.name}`);\n                }\n                const fields = type.allFields;\n                if (!fields) {\n                    throw new Error('Invalid struct fields');\n                }\n                for (const field of fields) {\n                    ctx.codingPath.push({ field: field.name, type: field.type });\n                    encodeAny(value[field.name], field.type, ctx);\n                    ctx.codingPath.pop();\n                }\n            }\n            else if (type.variant) {\n                let vName;\n                if (Array.isArray(value) && value.length === 2 && typeof value[0] === 'string') {\n                    vName = value[0];\n                    value = value[1];\n                }\n                else if (isInstanceOf(value, Variant)) {\n                    vName = value.variantName;\n                    value = value.value;\n                }\n                else {\n                    vName = getTypeName(value);\n                }\n                const vIdx = type.variant.findIndex((t) => t.typeName === vName);\n                if (vIdx === -1) {\n                    const types = type.variant.map((t) => `'${t.typeName}'`).join(', ');\n                    throw new Error(`Unknown variant type '${vName}', expected one of ${types}`);\n                }\n                const vType = type.variant[vIdx];\n                ctx.encoder.writeVaruint32(vIdx);\n                ctx.codingPath.push({ field: `v${vIdx}`, type: vType });\n                encodeAny(value, vType, ctx);\n                ctx.codingPath.pop();\n            }\n            else {\n                if (!abiType) {\n                    throw new Error(type.name === 'any' ? 'Unable to encode any type to binary' : 'Unknown type');\n                }\n                const instance = abiType.from(value);\n                if (!instance.toABI) {\n                    throw new Error(`Invalid type ${type.name}, no encoding methods implemented`);\n                }\n                instance.toABI(ctx.encoder);\n            }\n        }\n    }\n}\nclass ABIEncoder {\n    constructor(pageSize = 1024) {\n        this.pageSize = pageSize;\n        this.pos = 0;\n        this.textEncoder = new TextEncoder();\n        /** User declared metadata, can be used to pass info to instances when encoding.  */\n        this.metadata = {};\n        const buffer = new ArrayBuffer(pageSize);\n        this.data = new DataView(buffer);\n        this.array = new Uint8Array(buffer);\n    }\n    ensure(bytes) {\n        if (this.data.byteLength >= this.pos + bytes) {\n            return;\n        }\n        const pages = Math.ceil(bytes / this.pageSize);\n        const newSize = this.data.byteLength + this.pageSize * pages;\n        const buffer = new ArrayBuffer(newSize);\n        const data = new DataView(buffer);\n        const array = new Uint8Array(buffer);\n        array.set(this.array);\n        this.data = data;\n        this.array = array;\n    }\n    /** Write a single byte. */\n    writeByte(byte) {\n        this.ensure(1);\n        this.array[this.pos++] = byte;\n    }\n    /** Write an array of bytes. */\n    writeArray(bytes) {\n        const size = bytes.length;\n        this.ensure(size);\n        this.array.set(bytes, this.pos);\n        this.pos += size;\n    }\n    writeFloat(value, byteWidth) {\n        this.ensure(byteWidth);\n        switch (byteWidth) {\n            case 4:\n                this.data.setFloat32(this.pos, value, true);\n                break;\n            case 8:\n                this.data.setFloat64(this.pos, value, true);\n                break;\n            default:\n                throw new Error('Invalid float size');\n        }\n        this.pos += byteWidth;\n    }\n    writeVaruint32(v) {\n        this.ensure(4);\n        for (;;) {\n            if (v >>> 7) {\n                this.array[this.pos++] = 0x80 | (v & 0x7f);\n                v = v >>> 7;\n            }\n            else {\n                this.array[this.pos++] = v;\n                break;\n            }\n        }\n    }\n    writeVarint32(v) {\n        this.writeVaruint32((v << 1) ^ (v >> 31));\n    }\n    writeString(v) {\n        const data = this.textEncoder.encode(v);\n        this.writeVaruint32(data.byteLength);\n        this.writeArray(data);\n    }\n    getData() {\n        return new Uint8Array(this.array.buffer, this.array.byteOffset, this.pos);\n    }\n    getBytes() {\n        return new Bytes(this.getData());\n    }\n}\nABIEncoder.__className = 'ABIEncoder';\n\nclass ABI {\n    constructor(args) {\n        this.version = args.version || ABI.version;\n        this.types = args.types || [];\n        this.variants = args.variants || [];\n        this.structs = args.structs || [];\n        this.actions = args.actions || [];\n        this.tables = args.tables || [];\n        this.ricardian_clauses = args.ricardian_clauses || [];\n        this.action_results = args.action_results || [];\n    }\n    static from(value) {\n        if (isInstanceOf(value, ABI)) {\n            return value;\n        }\n        if (isInstanceOf(value, Blob)) {\n            return abiDecode({\n                data: value.array,\n                type: this,\n            });\n        }\n        if (typeof value === 'string') {\n            return new ABI(JSON.parse(value));\n        }\n        return new ABI(value);\n    }\n    static fromABI(decoder) {\n        const version = decoder.readString();\n        const types = [];\n        const numTypes = decoder.readVaruint32();\n        for (let i = 0; i < numTypes; i++) {\n            types.push({ new_type_name: decoder.readString(), type: decoder.readString() });\n        }\n        const structs = [];\n        const numStructs = decoder.readVaruint32();\n        for (let i = 0; i < numStructs; i++) {\n            const name = decoder.readString();\n            const base = decoder.readString();\n            const numFields = decoder.readVaruint32();\n            const fields = [];\n            for (let j = 0; j < numFields; j++) {\n                fields.push({ name: decoder.readString(), type: decoder.readString() });\n            }\n            structs.push({ base, name, fields });\n        }\n        const actions = [];\n        const numActions = decoder.readVaruint32();\n        for (let i = 0; i < numActions; i++) {\n            const name = Name.fromABI(decoder);\n            const type = decoder.readString();\n            const ricardian_contract = decoder.readString();\n            actions.push({ name, type, ricardian_contract });\n        }\n        const tables = [];\n        const numTables = decoder.readVaruint32();\n        for (let i = 0; i < numTables; i++) {\n            const name = Name.fromABI(decoder);\n            const index_type = decoder.readString();\n            const key_names = [];\n            const numKeyNames = decoder.readVaruint32();\n            for (let j = 0; j < numKeyNames; j++) {\n                key_names.push(decoder.readString());\n            }\n            const key_types = [];\n            const numKeyTypes = decoder.readVaruint32();\n            for (let j = 0; j < numKeyTypes; j++) {\n                key_types.push(decoder.readString());\n            }\n            const type = decoder.readString();\n            tables.push({ name, index_type, key_names, key_types, type });\n        }\n        const ricardian_clauses = [];\n        const numClauses = decoder.readVaruint32();\n        for (let i = 0; i < numClauses; i++) {\n            const id = decoder.readString();\n            const body = decoder.readString();\n            ricardian_clauses.push({ id, body });\n        }\n        // error_messages, never used?\n        const numErrors = decoder.readVaruint32();\n        for (let i = 0; i < numErrors; i++) {\n            decoder.advance(8); // uint64 error_code\n            decoder.advance(decoder.readVaruint32()); // string error_msgr\n        }\n        // extensions, not used\n        const numExtensions = decoder.readVaruint32();\n        for (let i = 0; i < numExtensions; i++) {\n            decoder.advance(2); // uint16 type\n            decoder.advance(decoder.readVaruint32()); // bytes data\n        }\n        // variants is a binary extension for some reason even though extensions are defined on the type\n        const variants = [];\n        if (decoder.canRead()) {\n            const numVariants = decoder.readVaruint32();\n            for (let i = 0; i < numVariants; i++) {\n                const name = decoder.readString();\n                const types = [];\n                const numTypes = decoder.readVaruint32();\n                for (let j = 0; j < numTypes; j++) {\n                    types.push(decoder.readString());\n                }\n                variants.push({ name, types });\n            }\n        }\n        const action_results = [];\n        if (decoder.canRead()) {\n            const numActionResults = decoder.readVaruint32();\n            for (let i = 0; i < numActionResults; i++) {\n                const name = Name.fromABI(decoder);\n                const result_type = decoder.readString();\n                action_results.push({ name, result_type });\n            }\n        }\n        return new ABI({\n            version,\n            types,\n            structs,\n            actions,\n            tables,\n            ricardian_clauses,\n            variants,\n            action_results,\n        });\n    }\n    toABI(encoder) {\n        encoder.writeString(this.version);\n        encoder.writeVaruint32(this.types.length);\n        for (const type of this.types) {\n            encoder.writeString(type.new_type_name);\n            encoder.writeString(type.type);\n        }\n        encoder.writeVaruint32(this.structs.length);\n        for (const struct of this.structs) {\n            encoder.writeString(struct.name);\n            encoder.writeString(struct.base);\n            encoder.writeVaruint32(struct.fields.length);\n            for (const field of struct.fields) {\n                encoder.writeString(field.name);\n                encoder.writeString(field.type);\n            }\n        }\n        encoder.writeVaruint32(this.actions.length);\n        for (const action of this.actions) {\n            Name.from(action.name).toABI(encoder);\n            encoder.writeString(action.type);\n            encoder.writeString(action.ricardian_contract);\n        }\n        encoder.writeVaruint32(this.tables.length);\n        for (const table of this.tables) {\n            Name.from(table.name).toABI(encoder);\n            encoder.writeString(table.index_type);\n            encoder.writeVaruint32(table.key_names.length);\n            for (const key of table.key_names) {\n                encoder.writeString(key);\n            }\n            encoder.writeVaruint32(table.key_types.length);\n            for (const key of table.key_types) {\n                encoder.writeString(key);\n            }\n            encoder.writeString(table.type);\n        }\n        encoder.writeVaruint32(this.ricardian_clauses.length);\n        for (const clause of this.ricardian_clauses) {\n            encoder.writeString(clause.id);\n            encoder.writeString(clause.body);\n        }\n        encoder.writeVaruint32(0); // error_messages\n        encoder.writeVaruint32(0); // extensions\n        encoder.writeVaruint32(this.variants.length);\n        for (const variant of this.variants) {\n            encoder.writeString(variant.name);\n            encoder.writeVaruint32(variant.types.length);\n            for (const type of variant.types) {\n                encoder.writeString(type);\n            }\n        }\n        encoder.writeVaruint32(this.action_results.length);\n        for (const result of this.action_results) {\n            Name.from(result.name).toABI(encoder);\n            encoder.writeString(result.result_type);\n        }\n    }\n    resolveType(name) {\n        const types = {};\n        return this.resolve({ name, types }, { id: 0 });\n    }\n    resolveAll() {\n        const types = {};\n        const ctx = { id: 0 };\n        return {\n            types: this.types.map((t) => this.resolve({ name: t.new_type_name, types }, ctx)),\n            variants: this.variants.map((t) => this.resolve({ name: t.name, types }, ctx)),\n            structs: this.structs.map((t) => this.resolve({ name: t.name, types }, ctx)),\n        };\n    }\n    resolve({ name, types }, ctx) {\n        const existing = types[name];\n        if (existing) {\n            return existing;\n        }\n        const type = new ABI.ResolvedType(name, ++ctx.id);\n        types[type.typeName] = type;\n        const alias = this.types.find((typeDef) => typeDef.new_type_name == type.name);\n        if (alias) {\n            type.ref = this.resolve({ name: alias.type, types }, ctx);\n            return type;\n        }\n        const struct = this.getStruct(type.name);\n        if (struct) {\n            if (struct.base) {\n                type.base = this.resolve({ name: struct.base, types }, ctx);\n            }\n            type.fields = struct.fields.map((field) => {\n                return {\n                    name: field.name,\n                    type: this.resolve({ name: field.type, types }, ctx),\n                };\n            });\n            return type;\n        }\n        const variant = this.getVariant(type.name);\n        if (variant) {\n            type.variant = variant.types.map((name) => this.resolve({ name, types }, ctx));\n            return type;\n        }\n        // builtin or unknown type\n        return type;\n    }\n    getStruct(name) {\n        return this.structs.find((struct) => struct.name == name);\n    }\n    getVariant(name) {\n        return this.variants.find((variant) => variant.name == name);\n    }\n    /** Return arguments type of an action in this ABI. */\n    getActionType(actionName) {\n        const name = Name.from(actionName).toString();\n        const action = this.actions.find((a) => a.name.toString() === name);\n        if (action) {\n            return action.type;\n        }\n    }\n    equals(other) {\n        const o = ABI.from(other);\n        if (this.version != o.version ||\n            this.types.length != o.types.length ||\n            this.structs.length != o.structs.length ||\n            this.actions.length != o.actions.length ||\n            this.tables.length != o.tables.length ||\n            this.ricardian_clauses.length != o.ricardian_clauses.length ||\n            this.variants.length != o.variants.length ||\n            this.action_results.length != o.action_results.length) {\n            return false;\n        }\n        return abiEncode({ object: this }).equals(abiEncode({ object: o }));\n    }\n    toJSON() {\n        return {\n            version: this.version,\n            types: this.types,\n            structs: this.structs,\n            actions: this.actions,\n            tables: this.tables,\n            ricardian_clauses: this.ricardian_clauses,\n            error_messages: [],\n            abi_extensions: [],\n            variants: this.variants,\n            action_results: this.action_results,\n        };\n    }\n}\nABI.abiName = 'abi';\nABI.version = 'eosio::abi/1.1';\n(function (ABI) {\n    class ResolvedType {\n        constructor(fullName, id = 0) {\n            let name = fullName;\n            if (name.endsWith('$')) {\n                name = name.slice(0, -1);\n                this.isExtension = true;\n            }\n            else {\n                this.isExtension = false;\n            }\n            if (name.endsWith('?')) {\n                name = name.slice(0, -1);\n                this.isOptional = true;\n            }\n            else {\n                this.isOptional = false;\n            }\n            this.isArray = false;\n            if (name.endsWith('[]')) {\n                name = name.slice(0, -2);\n                this.isArray = true;\n            }\n            const fixedMatch = name.match(/(.*)\\[(\\d+)\\]/);\n            if (fixedMatch) {\n                const [, fixedName, fixedSize] = fixedMatch;\n                name = fixedName;\n                this.isArray = true;\n                this.size = Number(fixedSize);\n            }\n            this.id = id;\n            this.name = name;\n        }\n        /**\n         * Type name including suffixes: [] array, ? optional, $ binary ext\n         */\n        get typeName() {\n            let rv = this.name;\n            if (this.isArray) {\n                if (this.size) {\n                    rv += `[${this.size}]`;\n                }\n                else {\n                    rv += '[]';\n                }\n            }\n            if (this.isOptional) {\n                rv += '?';\n            }\n            if (this.isExtension) {\n                rv += '$';\n            }\n            return rv;\n        }\n        /** All fields including base struct(s), undefined if not a struct type. */\n        get allFields() {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            let current = this;\n            const rv = [];\n            const seen = new Set();\n            do {\n                if (!current.fields) {\n                    return; // invalid struct\n                }\n                if (seen.has(current.name)) {\n                    return; // circular ref\n                }\n                for (let i = current.fields.length - 1; i >= 0; i--) {\n                    rv.unshift(current.fields[i]);\n                }\n                seen.add(current.name);\n                current = current.base;\n            } while (current !== undefined);\n            return rv;\n        }\n    }\n    ABI.ResolvedType = ResolvedType;\n})(ABI || (ABI = {}));\n\nclass Struct {\n    static from(value) {\n        if (value[Resolved] === true) {\n            // objects already resolved\n            return new this(value);\n        }\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        return abiDecode({ object: value, type: this });\n    }\n    static get structFields() {\n        const rv = [];\n        const walk = (t) => {\n            if (t.abiBase) {\n                walk(t.abiBase);\n            }\n            for (const field of t.abiFields || []) {\n                rv.push(field);\n            }\n        };\n        walk(this);\n        return rv;\n    }\n    /** @internal */\n    constructor(object) {\n        const self = this.constructor;\n        for (const field of self.structFields) {\n            const isOptional = typeof field.type === 'string'\n                ? new ABI.ResolvedType(String(field.type)).isOptional\n                : field.optional;\n            const value = object[field.name];\n            if (isOptional && !value)\n                continue;\n            this[field.name] = value;\n        }\n    }\n    /**\n     * Return true if this struct equals the other.\n     *\n     * Note: This compares the ABI encoded bytes of both structs, subclasses\n     *       should implement their own fast equality check when possible.\n     */\n    equals(other) {\n        const self = this.constructor;\n        if (other.constructor &&\n            typeof other.constructor.abiName === 'string' &&\n            other.constructor.abiName !== self.abiName) {\n            return false;\n        }\n        return abiEncode({ object: this }).equals(abiEncode({ object: self.from(other) }));\n    }\n    /** @internal */\n    toJSON() {\n        const self = this.constructor;\n        const rv = {};\n        for (const field of self.structFields) {\n            if (field.optional && !this[field.name])\n                continue;\n            rv[field.name] = this[field.name];\n        }\n        return rv;\n    }\n}\nStruct.abiName = '__struct';\n(function (Struct) {\n    const FieldsOwner = Symbol('FieldsOwner');\n    function type(name) {\n        return function (struct) {\n            struct.abiName = name;\n            return struct;\n        };\n    }\n    Struct.type = type;\n    function field(type, options = {}) {\n        return (target, name) => {\n            const ctor = target.constructor;\n            if (!ctor.abiFields) {\n                ctor.abiFields = [];\n                ctor.abiFields[FieldsOwner] = ctor;\n            }\n            else if (ctor.abiFields[FieldsOwner] !== ctor) {\n                // if the target class isn't the owner we set the base and start new fields\n                ctor.abiBase = ctor.abiFields[FieldsOwner];\n                ctor.abiFields = [];\n                ctor.abiFields[FieldsOwner] = ctor;\n            }\n            ctor.abiFields.push({ ...options, name, type });\n        };\n    }\n    Struct.field = field;\n})(Struct || (Struct = {}));\n\nfunction TypeAlias(name) {\n    return function (typeAlias) {\n        typeAlias.abiAlias = { type: Object.getPrototypeOf(typeAlias.prototype).constructor };\n        typeAlias.abiName = name;\n        return typeAlias;\n    };\n}\n\nclass Variant {\n    static from(object) {\n        if (object[Resolved]) {\n            return new this(object);\n        }\n        if (isInstanceOf(object, this)) {\n            return object;\n        }\n        return abiDecode({ object, type: this });\n    }\n    /** @internal */\n    constructor(variant) {\n        const abiVariant = this.constructor.abiVariant;\n        this.value = variant[1];\n        const variantIdx = abiVariant.map(abiTypeString).findIndex((t) => t === variant[0]);\n        if (0 > variantIdx || abiVariant.length <= variantIdx) {\n            throw new Error(`Unknown variant ${variant[0]}`);\n        }\n        this.variantIdx = variantIdx;\n    }\n    /**\n     * Return true if this variant equals the other.\n     *\n     * Note: This compares the ABI encoded bytes of both variants, subclasses\n     *       should implement their own fast equality check when possible.\n     */\n    equals(other) {\n        const self = this.constructor;\n        const otherVariant = self.from(other);\n        if (this.variantIdx !== otherVariant.variantIdx) {\n            return false;\n        }\n        return abiEncode({ object: this }).equals(abiEncode({ object: otherVariant }));\n    }\n    get variantName() {\n        const variant = this.constructor.abiVariant[this.variantIdx];\n        return abiTypeString(variant);\n    }\n    /** @internal */\n    toJSON() {\n        return [this.variantName, this.value];\n    }\n}\nVariant.abiName = '__variant';\nVariant.abiVariant = [];\n(function (Variant) {\n    function type(name, types) {\n        return function (variant) {\n            variant.abiName = name;\n            variant.abiVariant = types.map(toTypeDescriptor);\n            return variant;\n        };\n    }\n    Variant.type = type;\n})(Variant || (Variant = {}));\n\nclass Float {\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            value = Number.parseFloat(value);\n        }\n        else if (isInstanceOf(value, Float)) {\n            value = value.value;\n        }\n        return new this(value);\n    }\n    static fromABI(decoder) {\n        return new this(decoder.readFloat(this.byteWidth));\n    }\n    static abiDefault() {\n        return this.from(0);\n    }\n    static random() {\n        const bytes = secureRandom(this.byteWidth);\n        const decoder = new ABIDecoder(bytes);\n        return this.fromABI(decoder);\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    equals(other) {\n        const self = this.constructor;\n        return this.value === self.from(other).value;\n    }\n    toABI(encoder) {\n        const self = this.constructor;\n        encoder.writeFloat(this.value, self.byteWidth);\n    }\n    toString() {\n        return this.value.toString();\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nFloat.abiName = '__float';\nclass Float32 extends Float {\n    toString() {\n        return this.value.toFixed(7);\n    }\n}\nFloat32.abiName = 'float32';\nFloat32.byteWidth = 4;\nclass Float64 extends Float {\n}\nFloat64.abiName = 'float64';\nFloat64.byteWidth = 8;\nclass Float128 {\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (typeof value === 'string' && value.startsWith('0x')) {\n            value = value.slice(2);\n        }\n        return new this(Bytes.from(value));\n    }\n    static fromABI(decoder) {\n        return new this(new Bytes(decoder.readArray(this.byteWidth)));\n    }\n    static random() {\n        const bytes = secureRandom(16);\n        const decoder = new ABIDecoder(bytes);\n        return this.fromABI(decoder);\n    }\n    constructor(data) {\n        if (data.array.length !== 16) {\n            throw new Error('Invalid float128');\n        }\n        this.data = data;\n    }\n    equals(other) {\n        const self = this.constructor;\n        return this.data.equals(self.from(other).data);\n    }\n    toABI(encoder) {\n        encoder.writeArray(this.data.array);\n    }\n    toString() {\n        // float128 uses 0x prefixed hex strings as opposed to everywhere else in where there is no prefix ¯\\_(ツ)_/¯\n        return '0x' + this.data.hexString;\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nFloat128.abiName = 'float128';\nFloat128.byteWidth = 16;\n\n/** Antelope/EOSIO Name */\nclass Name {\n    /**\n     * The raw representation of the name.\n     * @deprecated Use value instead.\n     */\n    get rawValue() {\n        return this.value;\n    }\n    /** Create a new Name instance from any of its representing types. */\n    static from(value) {\n        if (isInstanceOf(value, Name)) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            return new Name(stringToName(value));\n        }\n        else if (isInstanceOf(value, UInt64)) {\n            return new Name(value);\n        }\n        else {\n            throw new Error('Invalid name');\n        }\n    }\n    static fromABI(decoder) {\n        return new Name(UInt64.fromABI(decoder));\n    }\n    static abiDefault() {\n        return new this(UInt64.from(0));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    /** Return true if this name is equal to passed name. */\n    equals(other) {\n        return this.value.equals(Name.from(other).value);\n    }\n    /** Return string representation of this name. */\n    toString() {\n        return nameToString(this.value);\n    }\n    toABI(encoder) {\n        this.value.toABI(encoder);\n    }\n    /** @internal */\n    toJSON() {\n        return this.toString();\n    }\n}\nName.abiName = 'name';\n/** Regex pattern matching a Antelope/EOSIO name, case-sensitive. */\nName.pattern = /^[a-z1-5.]{0,13}$/;\nfunction stringToName(s) {\n    function charToSymbol(c) {\n        if (c >= 'a'.charCodeAt(0) && c <= 'z'.charCodeAt(0)) {\n            return c - 'a'.charCodeAt(0) + 6;\n        }\n        if (c >= '1'.charCodeAt(0) && c <= '5'.charCodeAt(0)) {\n            return c - '1'.charCodeAt(0) + 1;\n        }\n        return 0;\n    }\n    const a = new Uint8Array(8);\n    let bit = 63;\n    for (let i = 0; i < s.length; ++i) {\n        let c = charToSymbol(s.charCodeAt(i));\n        if (bit < 5) {\n            c = c << 1;\n        }\n        for (let j = 4; j >= 0; --j) {\n            if (bit >= 0) {\n                a[Math.floor(bit / 8)] |= ((c >> j) & 1) << bit % 8;\n                --bit;\n            }\n        }\n    }\n    return UInt64.from(a);\n}\nfunction nameToString(n) {\n    const a = n.value.toArray('le', 8);\n    let result = '';\n    for (let bit = 63; bit >= 0;) {\n        let c = 0;\n        for (let i = 0; i < 5; ++i) {\n            if (bit >= 0) {\n                c = (c << 1) | ((a[Math.floor(bit / 8)] >> bit % 8) & 1);\n                --bit;\n            }\n        }\n        if (c >= 6) {\n            result += String.fromCharCode(c + 'a'.charCodeAt(0) - 6);\n        }\n        else if (c >= 1) {\n            result += String.fromCharCode(c + '1'.charCodeAt(0) - 1);\n        }\n        else {\n            result += '.';\n        }\n    }\n    while (result.endsWith('.')) {\n        result = result.substr(0, result.length - 1);\n    }\n    return result;\n}\n\nclass TimePointBase {\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (isInstanceOf(value, TimePointBase)) {\n            // converting between types\n            return this.fromMilliseconds(value.toMilliseconds());\n        }\n        if (isInstanceOf(value, Date)) {\n            return this.fromDate(value);\n        }\n        if (typeof value === 'string') {\n            return this.fromString(value);\n        }\n        return this.fromInteger(value);\n    }\n    static fromString(string) {\n        const value = Date.parse(string + 'Z');\n        if (!Number.isFinite(value)) {\n            throw new Error('Invalid date string');\n        }\n        return this.fromMilliseconds(value);\n    }\n    static fromDate(date) {\n        return this.fromMilliseconds(date.getTime());\n    }\n    static abiDefault() {\n        return this.from(0);\n    }\n    toABI(encoder) {\n        const self = this;\n        self.value.toABI(encoder);\n    }\n    equals(other) {\n        const self = this.constructor;\n        return this.toMilliseconds() === self.from(other).toMilliseconds();\n    }\n    toMilliseconds() {\n        throw new Error('Not implemented');\n    }\n    toDate() {\n        return new Date(this.toMilliseconds());\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nTimePointBase.abiName = '__time_point_base';\n/** Timestamp with microsecond accuracy. */\nclass TimePoint extends TimePointBase {\n    static fromMilliseconds(ms) {\n        return new this(Int64.from(Math.round(ms * 1000)));\n    }\n    static fromInteger(value) {\n        return new this(Int64.from(value));\n    }\n    static fromABI(decoder) {\n        return new this(Int64.fromABI(decoder));\n    }\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    toString() {\n        return this.toDate().toISOString().slice(0, -1);\n    }\n    toMilliseconds() {\n        return Number(this.value.dividing(1000, 'round'));\n    }\n}\nTimePoint.abiName = 'time_point';\n/** Timestamp with second accuracy. */\nclass TimePointSec extends TimePointBase {\n    static fromMilliseconds(ms) {\n        return new this(UInt32.from(Math.round(ms / 1000)));\n    }\n    static fromInteger(value) {\n        return new this(UInt32.from(value));\n    }\n    static fromABI(decoder) {\n        return new this(UInt32.fromABI(decoder));\n    }\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    toString() {\n        return this.toDate().toISOString().slice(0, -5);\n    }\n    toMilliseconds() {\n        return Number(this.value.cast(UInt64).multiplying(1000));\n    }\n}\nTimePointSec.abiName = 'time_point_sec';\nclass BlockTimestamp extends TimePointBase {\n    static fromMilliseconds(ms) {\n        return new this(UInt32.from(Math.round((ms - 946684800000) / 500)));\n    }\n    static fromInteger(value) {\n        return new this(UInt32.from(value));\n    }\n    static fromABI(decoder) {\n        return new this(UInt32.fromABI(decoder));\n    }\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    toString() {\n        return this.toDate().toISOString().slice(0, -1);\n    }\n    toMilliseconds() {\n        return Number(this.value.cast(UInt64).multiplying(500).adding(946684800000));\n    }\n}\nBlockTimestamp.abiName = 'block_timestamp_type';\n\nclass Asset {\n    static from(value, symbol) {\n        if (isInstanceOf(value, Asset)) {\n            return value;\n        }\n        switch (typeof value) {\n            case 'number':\n                if (!symbol) {\n                    throw new Error('Symbol is required when creating Asset from number');\n                }\n                return this.fromFloat(value, symbol);\n            case 'string':\n                return this.fromString(value);\n            default:\n                throw new Error('Invalid asset');\n        }\n    }\n    static fromString(value) {\n        const parts = (typeof value === 'string' ? value : '').split(' ');\n        if (parts.length !== 2) {\n            throw new Error('Invalid asset string');\n        }\n        const amount = parts[0].replace('.', '');\n        const precision = (parts[0].split('.')[1] || '').length;\n        const symbol = Asset.Symbol.fromParts(parts[1], precision);\n        return new Asset(Int64.from(amount), symbol);\n    }\n    static fromFloat(value, symbol) {\n        const s = Asset.Symbol.from(symbol);\n        return new Asset(s.convertFloat(value), s);\n    }\n    static fromUnits(value, symbol) {\n        return new Asset(Int64.from(value), Asset.Symbol.from(symbol));\n    }\n    static fromABI(decoder) {\n        const units = Int64.fromABI(decoder);\n        const symbol = Asset.Symbol.fromABI(decoder);\n        return new Asset(units, symbol);\n    }\n    static abiDefault() {\n        return new this(Int64.from(0), Asset.Symbol.abiDefault());\n    }\n    static formatUnits(units, precision) {\n        const digits = Int64.from(units).toString().split('');\n        let negative = false;\n        if (digits[0] === '-') {\n            negative = true;\n            digits.shift();\n        }\n        while (digits.length <= precision) {\n            digits.unshift('0');\n        }\n        if (precision > 0) {\n            digits.splice(digits.length - precision, 0, '.');\n        }\n        let rv = digits.join('');\n        if (negative) {\n            rv = '-' + rv;\n        }\n        return rv;\n    }\n    constructor(units, symbol) {\n        this.units = units;\n        this.symbol = symbol;\n    }\n    equals(other) {\n        const { symbol, units } = Asset.from(other);\n        return this.symbol.value.equals(symbol.value) && this.units.equals(units);\n    }\n    get value() {\n        return this.symbol.convertUnits(this.units);\n    }\n    set value(newValue) {\n        this.units = this.symbol.convertFloat(newValue);\n    }\n    get quantity() {\n        return Asset.formatUnits(this.units, this.symbol.precision);\n    }\n    toABI(encoder) {\n        this.units.toABI(encoder);\n        this.symbol.toABI(encoder);\n    }\n    toString() {\n        return this.quantity + ' ' + this.symbol.name;\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nAsset.abiName = 'asset';\n(function (Asset) {\n    class Symbol {\n        static from(value) {\n            if (isInstanceOf(value, Symbol)) {\n                return value;\n            }\n            if (isInstanceOf(value, UInt64)) {\n                return new Symbol(value);\n            }\n            const parts = value.split(',');\n            if (parts.length !== 2 && value !== '0,') {\n                throw new Error('Invalid symbol string');\n            }\n            if (value === '0,') {\n                parts.push('');\n            }\n            const precision = Number.parseInt(parts[0]);\n            return Symbol.fromParts(parts[1], precision);\n        }\n        static fromParts(name, precision) {\n            return new Symbol(toRawSymbol(name, precision));\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        static fromABI(decoder) {\n            return new Symbol(UInt64.fromABI(decoder));\n        }\n        static abiDefault() {\n            return this.from('4,SYS'); // CORE_SYMBOL = 4,CORE_SYMBOL_NAME\n        }\n        constructor(value) {\n            if (toSymbolPrecision(value) > Symbol.maxPrecision) {\n                throw new Error('Invalid asset symbol, precision too large');\n            }\n            if (!value.equals(0) && !SymbolCode.pattern.test(toSymbolName(value))) {\n                throw new Error('Invalid asset symbol, name must be uppercase A-Z');\n            }\n            this.value = value;\n        }\n        equals(other) {\n            return this.value.equals(Symbol.from(other).value);\n        }\n        get name() {\n            return toSymbolName(this.value);\n        }\n        get precision() {\n            return toSymbolPrecision(this.value);\n        }\n        get code() {\n            return new SymbolCode(UInt64.from(this.value.value.clone().iushrn(8)));\n        }\n        toABI(encoder) {\n            this.value.toABI(encoder);\n        }\n        /**\n         * Convert units to floating point number according to symbol precision.\n         * @throws If the given units can't be represented in 53 bits.\n         **/\n        convertUnits(units) {\n            return units.value.toNumber() / Math.pow(10, this.precision);\n        }\n        /**\n         * Convert floating point to units according to symbol precision.\n         * Note that the value will be rounded to closest precision.\n         **/\n        convertFloat(float) {\n            return Int64.from(float.toFixed(this.precision).replace('.', ''));\n        }\n        toString() {\n            return `${this.precision},${this.name}`;\n        }\n        toJSON() {\n            return this.toString();\n        }\n    }\n    Symbol.abiName = 'symbol';\n    Symbol.maxPrecision = 18;\n    Asset.Symbol = Symbol;\n    class SymbolCode {\n        static from(value) {\n            if (isInstanceOf(value, SymbolCode)) {\n                return value;\n            }\n            if (typeof value === 'string') {\n                value = UInt64.from(toRawSymbolCode(value));\n            }\n            return new this(UInt64.from(value));\n        }\n        static fromABI(decoder) {\n            return new SymbolCode(UInt64.fromABI(decoder));\n        }\n        static abiDefault() {\n            return this.from('SYS'); // CORE_SYMBOL_NAME\n        }\n        constructor(value) {\n            if (!value.equals(0) && !SymbolCode.pattern.test(toSymbolName(value))) {\n                throw new Error('Invalid asset symbol, name must be uppercase A-Z');\n            }\n            this.value = value;\n        }\n        equals(other) {\n            return this.value.equals(SymbolCode.from(other).value);\n        }\n        toABI(encoder) {\n            this.value.toABI(encoder);\n        }\n        toString() {\n            return charsToSymbolName(this.value.value.toArray('be'));\n        }\n        toJSON() {\n            return this.toString();\n        }\n    }\n    SymbolCode.abiName = 'symbol_code';\n    SymbolCode.pattern = /^[A-Z]{0,7}$/;\n    Asset.SymbolCode = SymbolCode;\n})(Asset || (Asset = {}));\nclass ExtendedAsset {\n    static from(value) {\n        if (isInstanceOf(value, ExtendedAsset)) {\n            return value;\n        }\n        return new this(Asset.from(value.quantity), Name.from(value.contract));\n    }\n    static fromABI(decoder) {\n        return new ExtendedAsset(Asset.fromABI(decoder), Name.fromABI(decoder));\n    }\n    constructor(quantity, contract) {\n        this.quantity = quantity;\n        this.contract = contract;\n    }\n    equals(other) {\n        return this.quantity.equals(other.quantity) && this.contract.equals(other.contract);\n    }\n    toABI(encoder) {\n        this.quantity.toABI(encoder);\n        this.contract.toABI(encoder);\n    }\n    toJSON() {\n        return {\n            quantity: this.quantity,\n            contract: this.contract,\n        };\n    }\n}\nExtendedAsset.abiName = 'extended_asset';\nclass ExtendedSymbol {\n    static from(value) {\n        if (isInstanceOf(value, ExtendedSymbol)) {\n            return value;\n        }\n        return new this(Asset.Symbol.from(value.sym), Name.from(value.contract));\n    }\n    static fromABI(decoder) {\n        return new ExtendedSymbol(Asset.Symbol.fromABI(decoder), Name.fromABI(decoder));\n    }\n    constructor(sym, contract) {\n        this.sym = sym;\n        this.contract = contract;\n    }\n    equals(other) {\n        return this.sym.equals(other.sym) && this.contract.equals(other.contract);\n    }\n    toABI(encoder) {\n        this.sym.toABI(encoder);\n        this.contract.toABI(encoder);\n    }\n    toJSON() {\n        return {\n            sym: this.sym,\n            contract: this.contract,\n        };\n    }\n}\nExtendedSymbol.abiName = 'extended_symbol';\nfunction toSymbolPrecision(rawSymbol) {\n    return rawSymbol.value.and(UInt64.from(0xff).value).toNumber();\n}\nfunction toSymbolName(rawSymbol) {\n    const chars = rawSymbol.value.toArray('be').slice(0, -1);\n    return charsToSymbolName(chars);\n}\nfunction charsToSymbolName(chars) {\n    return chars\n        .map((char) => String.fromCharCode(char))\n        .reverse()\n        .join('');\n}\nfunction toRawSymbol(name, precision) {\n    const code = toRawSymbolCode(name);\n    const bytes = new Uint8Array(code.length + 1);\n    bytes[0] = precision;\n    bytes.set(code, 1);\n    return UInt64.from(bytes);\n}\nfunction toRawSymbolCode(name) {\n    const length = Math.min(name.length, 7);\n    const bytes = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        bytes[i] = name.charCodeAt(i);\n    }\n    return bytes;\n}\n\nvar Base58;\n(function (Base58) {\n    let ErrorCode;\n    (function (ErrorCode) {\n        ErrorCode[\"E_CHECKSUM\"] = \"E_CHECKSUM\";\n        ErrorCode[\"E_INVALID\"] = \"E_INVALID\";\n    })(ErrorCode = Base58.ErrorCode || (Base58.ErrorCode = {}));\n    class DecodingError extends Error {\n        constructor(message, code, info = {}) {\n            super(message);\n            this.code = code;\n            this.info = info;\n        }\n    }\n    DecodingError.__className = 'DecodingError';\n    Base58.DecodingError = DecodingError;\n    const chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n    const charMap = new Int16Array(0xff).fill(-1);\n    for (let i = 0; i < 58; ++i) {\n        charMap[chars.charCodeAt(i)] = i;\n    }\n    /** Decode a Base58 encoded string. */\n    function decode(s, size) {\n        if (size == null) {\n            return decodeVar(s);\n        }\n        const result = new Uint8Array(size);\n        for (let i = 0; i < s.length; ++i) {\n            let carry = charMap[s.charCodeAt(i)];\n            if (carry < 0) {\n                throw new DecodingError('Invalid Base58 character encountered', ErrorCode.E_INVALID, { char: s[i] });\n            }\n            for (let j = 0; j < size; ++j) {\n                const x = result[j] * 58 + carry;\n                result[j] = x;\n                carry = x >> 8;\n            }\n            if (carry) {\n                throw new DecodingError('Base58 value is out of range', ErrorCode.E_INVALID);\n            }\n        }\n        result.reverse();\n        return new Bytes(result);\n    }\n    Base58.decode = decode;\n    /** Decode a Base58Check encoded string. */\n    function decodeCheck(encoded, size) {\n        const decoded = decode(encoded, size != null ? size + 4 : size);\n        const data = decoded.array.subarray(0, -4);\n        const expected = decoded.array.subarray(-4);\n        const actual = dsha256Checksum(data);\n        if (!arrayEquals(expected, actual)) {\n            throw new DecodingError('Checksum mismatch', ErrorCode.E_CHECKSUM, {\n                actual,\n                expected,\n                data,\n                hash: 'double_sha256',\n            });\n        }\n        return new Bytes(data);\n    }\n    Base58.decodeCheck = decodeCheck;\n    /** Decode a Base58Check encoded string that uses ripemd160 instead of double sha256 for the digest. */\n    function decodeRipemd160Check(encoded, size, suffix) {\n        const decoded = decode(encoded, size != null ? size + 4 : size);\n        const data = decoded.array.subarray(0, -4);\n        const expected = decoded.array.subarray(-4);\n        const actual = ripemd160Checksum(data, suffix);\n        if (!arrayEquals(expected, actual)) {\n            throw new DecodingError('Checksum mismatch', ErrorCode.E_CHECKSUM, {\n                actual,\n                expected,\n                data,\n                hash: 'ripemd160',\n            });\n        }\n        return new Bytes(data);\n    }\n    Base58.decodeRipemd160Check = decodeRipemd160Check;\n    /** Encode bytes to a Base58 string.  */\n    function encode(data) {\n        data = Bytes.from(data);\n        const result = [];\n        for (const byte of data.array) {\n            let carry = byte;\n            for (let j = 0; j < result.length; ++j) {\n                const x = (charMap[result[j]] << 8) + carry;\n                result[j] = chars.charCodeAt(x % 58);\n                carry = (x / 58) | 0;\n            }\n            while (carry) {\n                result.push(chars.charCodeAt(carry % 58));\n                carry = (carry / 58) | 0;\n            }\n        }\n        for (const byte of data.array) {\n            if (byte) {\n                break;\n            }\n            else {\n                result.push('1'.charCodeAt(0));\n            }\n        }\n        result.reverse();\n        return String.fromCharCode(...result);\n    }\n    Base58.encode = encode;\n    function encodeCheck(data) {\n        data = Bytes.from(data);\n        data = data.appending(dsha256Checksum(data.array));\n        return encode(data);\n    }\n    Base58.encodeCheck = encodeCheck;\n    function encodeRipemd160Check(data, suffix) {\n        data = Bytes.from(data);\n        data = data.appending(ripemd160Checksum(data.array, suffix));\n        return encode(data);\n    }\n    Base58.encodeRipemd160Check = encodeRipemd160Check;\n    /** @internal */\n    function decodeVar(s) {\n        const result = [];\n        for (let i = 0; i < s.length; ++i) {\n            let carry = charMap[s.charCodeAt(i)];\n            if (carry < 0) {\n                throw new DecodingError('Invalid Base58 character encountered', ErrorCode.E_INVALID, { char: s[i] });\n            }\n            for (let j = 0; j < result.length; ++j) {\n                const x = result[j] * 58 + carry;\n                result[j] = x & 0xff;\n                carry = x >> 8;\n            }\n            if (carry) {\n                result.push(carry);\n            }\n        }\n        for (const ch of s) {\n            if (ch === '1') {\n                result.push(0);\n            }\n            else {\n                break;\n            }\n        }\n        result.reverse();\n        return Bytes.from(result);\n    }\n    /** @internal */\n    function ripemd160Checksum(data, suffix) {\n        const hash = ripemd160().update(data);\n        if (suffix) {\n            hash.update(suffix);\n        }\n        return new Uint8Array(hash.digest().slice(0, 4));\n    }\n    /** @internal */\n    function dsha256Checksum(data) {\n        const round1 = sha256().update(data).digest();\n        const round2 = sha256().update(round1).digest();\n        return new Uint8Array(round2.slice(0, 4));\n    }\n})(Base58 || (Base58 = {}));\n\nclass PublicKey {\n    /** Create PublicKey object from representing types. */\n    static from(value) {\n        if (isInstanceOf(value, PublicKey)) {\n            return value;\n        }\n        if (typeof value === 'object' && value.type && value.compressed) {\n            return new PublicKey(KeyType.from(value.type), new Bytes(value.compressed));\n        }\n        if (typeof value !== 'string') {\n            throw new Error('Invalid public key');\n        }\n        if (value.startsWith('PUB_')) {\n            const parts = value.split('_');\n            if (parts.length !== 3) {\n                throw new Error('Invalid public key string');\n            }\n            const type = KeyType.from(parts[1]);\n            const size = type === KeyType.K1 || type === KeyType.R1 ? 33 : undefined;\n            const data = Base58.decodeRipemd160Check(parts[2], size, type);\n            return new PublicKey(type, data);\n        }\n        else if (value.length >= 50) {\n            // Legacy EOS key\n            const data = Base58.decodeRipemd160Check(value.slice(-50));\n            return new PublicKey(KeyType.K1, data);\n        }\n        else {\n            throw new Error('Invalid public key string');\n        }\n    }\n    /** @internal */\n    static fromABI(decoder) {\n        const type = KeyType.from(decoder.readByte());\n        if (type == KeyType.WA) {\n            const startPos = decoder.getPosition();\n            decoder.advance(33); // key_data\n            decoder.advance(1); // user presence\n            decoder.advance(decoder.readVaruint32()); // rpid\n            const len = decoder.getPosition() - startPos;\n            decoder.setPosition(startPos);\n            const data = Bytes.from(decoder.readArray(len));\n            return new PublicKey(KeyType.WA, data);\n        }\n        return new PublicKey(type, new Bytes(decoder.readArray(33)));\n    }\n    /** @internal */\n    constructor(type, data) {\n        this.type = type;\n        this.data = data;\n    }\n    /**\n     * Returns the core 33-byte compressed public key data as a Uint8Array.\n     * This is suitable for cryptographic operations like verification.\n     */\n    getCompressedKeyBytes() {\n        return this.type === KeyType.WA ? this.data.array.slice(0, 33) : this.data.array;\n    }\n    equals(other) {\n        const otherKey = PublicKey.from(other);\n        return this.type === otherKey.type && this.data.equals(otherKey.data);\n    }\n    /**\n     * Return Antelope/EOSIO legacy (`EOS<base58data>`) formatted key.\n     * @throws If the key type isn't `K1`\n     */\n    toLegacyString(prefix = 'EOS') {\n        if (this.type !== KeyType.K1) {\n            throw new Error('Unable to create legacy formatted string for non-K1 key');\n        }\n        return `${prefix}${Base58.encodeRipemd160Check(this.data)}`;\n    }\n    /** Return key in modern Antelope/EOSIO format (`PUB_<type>_<base58data>`) */\n    toString() {\n        return `PUB_${this.type}_${Base58.encodeRipemd160Check(this.data, this.type)}`;\n    }\n    /** @internal */\n    toABI(encoder) {\n        encoder.writeByte(KeyType.indexFor(this.type));\n        encoder.writeArray(this.data.array);\n    }\n    /** @internal */\n    toJSON() {\n        return this.toString();\n    }\n}\nPublicKey.abiName = 'public_key';\n\nconst curves = {};\n/**\n * Get curve for key type.\n * @internal\n */\nfunction getCurve(type) {\n    let rv = curves[type];\n    if (!rv) {\n        if (type === 'K1') {\n            rv = curves[type] = new ec('secp256k1');\n        }\n        else if (type === 'R1') {\n            rv = curves[type] = new ec('p256');\n        }\n        else if (type === 'WA') {\n            rv = curves[type] = new ec('p256');\n        }\n        else {\n            throw new Error(`Unknown curve type: ${type}`);\n        }\n    }\n    return rv;\n}\n\n/**\n * Recover public key from signature and recovery id.\n * @internal\n */\nfunction recover(signature, message, type) {\n    if (type === KeyType.WA) {\n        throw new Error(`can't recover webauthn public keys, please use @wharfkit/webauthn.`);\n    }\n    const curve = getCurve(type);\n    const recid = signature[0] - 31;\n    const r = signature.subarray(1, 33);\n    const s = signature.subarray(33, 33 + 32);\n    const point = curve.recoverPubKey(message, { r, s }, recid);\n    return new Uint8Array(point.encodeCompressed());\n}\n\n/**\n * Verify signature using message and public key.\n * @internal\n */\nfunction verify(signature, message, pubkey, type) {\n    const curve = getCurve(type);\n    const r = signature.subarray(1, 33);\n    const s = signature.subarray(33, 33 + 32);\n    return curve.verify(message, { r, s }, pubkey);\n}\n\nclass Signature {\n    /** Create Signature object from representing types. */\n    static from(value) {\n        if (isInstanceOf(value, Signature)) {\n            return value;\n        }\n        if (typeof value === 'object' && value.r && value.s) {\n            const data = new Uint8Array(1 + 32 + 32);\n            let recid = value.recid;\n            const type = KeyType.from(value.type);\n            if (value.type === KeyType.K1 || value.type === KeyType.R1) {\n                recid += 31;\n            }\n            data[0] = recid;\n            data.set(value.r, 1);\n            data.set(value.s, 33);\n            return new Signature(type, new Bytes(data));\n        }\n        if (typeof value !== 'string') {\n            throw new Error('Invalid signature');\n        }\n        if (value.startsWith('SIG_')) {\n            const parts = value.split('_');\n            if (parts.length !== 3) {\n                throw new Error('Invalid signature string');\n            }\n            const type = KeyType.from(parts[1]);\n            const size = type === KeyType.K1 || type === KeyType.R1 ? 65 : undefined;\n            const data = Base58.decodeRipemd160Check(parts[2], size, type);\n            return new Signature(type, data);\n        }\n        else {\n            throw new Error('Invalid signature string');\n        }\n    }\n    /** @internal */\n    static fromABI(decoder) {\n        const type = KeyType.from(decoder.readByte());\n        if (type === KeyType.WA) {\n            const startPos = decoder.getPosition();\n            decoder.advance(65); // compact_signature\n            decoder.advance(decoder.readVaruint32()); // auth_data\n            decoder.advance(decoder.readVaruint32()); // client_json\n            const len = decoder.getPosition() - startPos;\n            decoder.setPosition(startPos);\n            const data = Bytes.from(decoder.readArray(len));\n            return new Signature(KeyType.WA, data);\n        }\n        return new Signature(type, new Bytes(decoder.readArray(65)));\n    }\n    /** @internal */\n    constructor(type, data) {\n        this.type = type;\n        this.data = data;\n    }\n    equals(other) {\n        const otherSig = Signature.from(other);\n        return this.type === otherSig.type && this.data.equals(otherSig.data);\n    }\n    /** Recover public key from given message digest. */\n    recoverDigest(digest) {\n        digest = Checksum256.from(digest);\n        const compressed = recover(this.data.array, digest.array, this.type);\n        return PublicKey.from({ compressed, type: this.type });\n    }\n    /** Recover public key from given message. */\n    recoverMessage(message) {\n        return this.recoverDigest(Checksum256.hash(message));\n    }\n    /** Verify this signature with given message digest and public key. */\n    verifyDigest(digest, publicKey) {\n        digest = Checksum256.from(digest);\n        return verify(this.data.array, digest.array, publicKey.getCompressedKeyBytes(), this.type);\n    }\n    /** Verify this signature with given message and public key. */\n    verifyMessage(message, publicKey) {\n        return this.verifyDigest(Checksum256.hash(message), publicKey);\n    }\n    /** Base58check encoded string representation of this signature (`SIG_<type>_<data>`). */\n    toString() {\n        return `SIG_${this.type}_${Base58.encodeRipemd160Check(this.data, this.type)}`;\n    }\n    /** @internal */\n    toABI(encoder) {\n        encoder.writeByte(KeyType.indexFor(this.type));\n        encoder.writeArray(this.data.array);\n    }\n    /** @internal */\n    toJSON() {\n        return this.toString();\n    }\n}\nSignature.abiName = 'signature';\n\n/**\n * Get public key corresponding to given private key.\n * @internal\n */\nfunction getPublic(privkey, type) {\n    const curve = getCurve(type);\n    const key = curve.keyFromPrivate(privkey);\n    const point = key.getPublic();\n    return new Uint8Array(point.encodeCompressed());\n}\n\n/**\n * Derive shared secret for key pair.\n * @internal\n */\nfunction sharedSecret(privkey, pubkey, type) {\n    const curve = getCurve(type);\n    const priv = curve.keyFromPrivate(privkey);\n    const pub = curve.keyFromPublic(pubkey).getPublic();\n    return priv.derive(pub).toArrayLike(Uint8Array, 'be');\n}\n\n/**\n * Sign digest using private key.\n * @internal\n */\nfunction sign(secret, message, type) {\n    const curve = getCurve(type);\n    const key = curve.keyFromPrivate(secret);\n    let sig;\n    let r;\n    let s;\n    if (type === 'K1') {\n        let attempt = 1;\n        do {\n            sig = key.sign(message, { canonical: true, pers: [attempt++] });\n            r = sig.r.toArrayLike(Uint8Array, 'be', 32);\n            s = sig.s.toArrayLike(Uint8Array, 'be', 32);\n        } while (!isCanonical(r, s));\n    }\n    else {\n        sig = key.sign(message, { canonical: true });\n        r = sig.r.toArrayLike(Uint8Array, 'be', 32);\n        s = sig.s.toArrayLike(Uint8Array, 'be', 32);\n    }\n    return { type, r, s, recid: sig.recoveryParam || 0 };\n}\n/**\n * Here be dragons\n * - https://github.com/steemit/steem/issues/1944\n * - https://github.com/EOSIO/eos/issues/6699\n * @internal\n */\nfunction isCanonical(r, s) {\n    return (!(r[0] & 0x80) &&\n        !(r[0] === 0 && !(r[1] & 0x80)) &&\n        !(s[0] & 0x80) &&\n        !(s[0] === 0 && !(s[1] & 0x80)));\n}\n\n/**\n * Generate a new private key for given type.\n * @internal\n */\nfunction generate(type) {\n    const curve = getCurve(type);\n    const privkey = curve.genKeyPair().getPrivate();\n    return privkey.toArrayLike(Uint8Array, 'be', 32);\n}\n\nclass PrivateKey {\n    /** Create PrivateKey object from representing types. */\n    static from(value) {\n        if (isInstanceOf(value, PrivateKey)) {\n            return value;\n        }\n        else {\n            return this.fromString(value);\n        }\n    }\n    /**\n     * Create PrivateKey object from a string representation.\n     * Accepts WIF (5...) and Antelope/EOSIO (PVT_...) style private keys.\n     */\n    static fromString(string, ignoreChecksumError = false) {\n        try {\n            const { type, data } = decodeKey(string);\n            if (this.isAllZero(data)) {\n                throw new Error('Invalid private key: All-zero private key is not allowed');\n            }\n            return new this(type, data);\n        }\n        catch (error) {\n            error.message = `Invalid private key (${error.message})`;\n            if (ignoreChecksumError &&\n                isInstanceOf(error, Base58.DecodingError) &&\n                error.code === Base58.ErrorCode.E_CHECKSUM) {\n                const type = string.startsWith('PVT_R1') ? KeyType.R1 : KeyType.K1;\n                const data = new Bytes(error.info.data);\n                if (data.length === 33) {\n                    data.dropFirst();\n                }\n                data.zeropad(32, true);\n                if (this.isAllZero(data)) {\n                    throw new Error('Invalid private key: All-zero private key is not allowed');\n                }\n                return new this(type, data);\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generate new PrivateKey.\n     * @throws If a secure random source isn't available.\n     */\n    static generate(type) {\n        const keyType = KeyType.from(type);\n        const maxRetries = 3;\n        let attempts = 0;\n        let data;\n        do {\n            if (attempts >= maxRetries) {\n                throw new Error('Failed to generate valid private key: Maximum retries exceeded');\n            }\n            data = new Bytes(generate(keyType));\n            attempts++;\n        } while (this.isAllZero(data));\n        return new PrivateKey(keyType, data);\n    }\n    /** @internal */\n    constructor(type, data) {\n        if ((type === KeyType.K1 || type === KeyType.R1) && data.length !== 32) {\n            throw new Error('Invalid private key length');\n        }\n        this.type = type;\n        this.data = data;\n    }\n    /**\n     * Sign message digest using this key.\n     * @throws If the key type isn't R1 or K1.\n     */\n    signDigest(digest) {\n        digest = Checksum256.from(digest);\n        return Signature.from(sign(this.data.array, digest.array, this.type));\n    }\n    /**\n     * Sign message using this key.\n     * @throws If the key type isn't R1 or K1.\n     */\n    signMessage(message) {\n        return this.signDigest(Checksum256.hash(message));\n    }\n    /**\n     * Derive the shared secret between this private key and given public key.\n     * @throws If the key type isn't R1 or K1.\n     */\n    sharedSecret(publicKey) {\n        const shared = sharedSecret(this.data.array, publicKey.data.array, this.type);\n        return Checksum512.hash(shared);\n    }\n    /**\n     * Get the corresponding public key.\n     * @throws If the key type isn't R1 or K1.\n     */\n    toPublic() {\n        const compressed = getPublic(this.data.array, this.type);\n        return PublicKey.from({ compressed, type: this.type });\n    }\n    /**\n     * Return WIF representation of this private key\n     * @throws If the key type isn't K1.\n     */\n    toWif() {\n        if (this.type !== KeyType.K1) {\n            throw new Error('Unable to generate WIF for non-k1 key');\n        }\n        return Base58.encodeCheck(Bytes.from([0x80]).appending(this.data));\n    }\n    static isAllZero(data) {\n        return data.array.every((byte) => byte === 0);\n    }\n    /**\n     * Return the key in Antelope/EOSIO PVT_<type>_<base58check> format.\n     */\n    toString() {\n        return `PVT_${this.type}_${Base58.encodeRipemd160Check(this.data, this.type)}`;\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\n/** @internal */\nfunction decodeKey(value) {\n    const type = typeof value;\n    if (type !== 'string') {\n        throw new Error(`Expected string, got ${type}`);\n    }\n    if (value.startsWith('PVT_')) {\n        // Antelope/EOSIO format\n        const parts = value.split('_');\n        if (parts.length !== 3) {\n            throw new Error('Invalid PVT format');\n        }\n        const type = KeyType.from(parts[1]);\n        let size;\n        switch (type) {\n            case KeyType.K1:\n            case KeyType.R1:\n                size = 32;\n                break;\n        }\n        const data = Base58.decodeRipemd160Check(parts[2], size, type);\n        return { type, data };\n    }\n    else {\n        // WIF format\n        const type = KeyType.K1;\n        const data = Base58.decodeCheck(value);\n        if (data.array[0] !== 0x80) {\n            throw new Error('Invalid WIF');\n        }\n        return { type, data: data.droppingFirst() };\n    }\n}\n\nvar PermissionLevel_1;\n/** Antelope/EOSIO Permission Level, a.k.a \"auth\". */\nlet PermissionLevel = PermissionLevel_1 = class PermissionLevel extends Struct {\n    /** Create new permission level from representing types. Can be expressed as a string in the format `<actor>@<permission>`. */\n    static from(value) {\n        if (typeof value === 'string') {\n            const parts = value.split('@');\n            if (parts.length !== 2 && parts[0].length > 0 && parts[1].length > 0) {\n                throw new Error('Invalid permission level string, should be in the format <actor>@<permission>');\n            }\n            value = { actor: parts[0], permission: parts[1] };\n        }\n        return super.from(value);\n    }\n    /** Return true if this permission level equals other. */\n    equals(other) {\n        const otherPerm = PermissionLevel_1.from(other);\n        return this.actor.equals(otherPerm.actor) && this.permission.equals(otherPerm.permission);\n    }\n    toString() {\n        return `${this.actor}@${this.permission}`;\n    }\n};\n__decorate([\n    Struct.field('name')\n], PermissionLevel.prototype, \"actor\", void 0);\n__decorate([\n    Struct.field('name')\n], PermissionLevel.prototype, \"permission\", void 0);\nPermissionLevel = PermissionLevel_1 = __decorate([\n    Struct.type('permission_level')\n], PermissionLevel);\n\nvar Action_1;\nlet Action = Action_1 = class Action extends Struct {\n    static from(anyAction, abi) {\n        let object = { ...anyAction };\n        const data = object.data;\n        if (!Bytes.isBytes(data)) {\n            let type;\n            if (abi) {\n                type = ABI.from(abi).getActionType(object.name);\n                if (!type) {\n                    throw new Error(`The action \"${object.name}\" does not exist on the ABI provided.`);\n                }\n            }\n            else if (!data.constructor || data.constructor.abiName === undefined) {\n                throw new Error('Missing ABI definition when creating action with untyped action data');\n            }\n            object = {\n                ...object,\n                data: abiEncode({ object: data, type, abi }),\n            };\n        }\n        const action = super.from(object);\n        if (abi) {\n            action.abi = ABI.from(abi);\n        }\n        else {\n            const type = getType(data);\n            if (type) {\n                action.abi = ABI.from({\n                    ...synthesizeABI(type).abi,\n                    actions: [\n                        {\n                            name: action.name,\n                            type: type.abiName,\n                            ricardian_contract: '',\n                        },\n                    ],\n                });\n            }\n        }\n        return action;\n    }\n    /** Return true if this Action is equal to given action. */\n    equals(other) {\n        const otherAction = Action_1.from(other, this.abi);\n        return (this.account.equals(otherAction.account) &&\n            this.name.equals(otherAction.name) &&\n            arrayEquatableEquals(this.authorization, otherAction.authorization) &&\n            this.data.equals(otherAction.data));\n    }\n    decodeData(typeOrAbi) {\n        if (typeof typeOrAbi === 'string' || typeOrAbi.abiName) {\n            return abiDecode({\n                data: this.data,\n                type: typeOrAbi,\n            });\n        }\n        else {\n            const abi = ABI.from(typeOrAbi);\n            const type = abi.getActionType(this.name);\n            if (!type) {\n                throw new Error(`Action ${this.name} does not exist in provided ABI`);\n            }\n            return abiDecode({ data: this.data, type, abi });\n        }\n    }\n    get decoded() {\n        if (!this.abi) {\n            throw new Error('Missing ABI definition when decoding action data');\n        }\n        return {\n            ...this.toJSON(),\n            data: this.decodeData(this.abi),\n        };\n    }\n};\n__decorate([\n    Struct.field('name')\n], Action.prototype, \"account\", void 0);\n__decorate([\n    Struct.field('name')\n], Action.prototype, \"name\", void 0);\n__decorate([\n    Struct.field(PermissionLevel, { array: true })\n], Action.prototype, \"authorization\", void 0);\n__decorate([\n    Struct.field('bytes')\n], Action.prototype, \"data\", void 0);\nAction = Action_1 = __decorate([\n    Struct.type('action')\n], Action);\n\nvar Transaction_1;\nlet TransactionExtension = class TransactionExtension extends Struct {\n};\n__decorate([\n    Struct.field('uint16')\n], TransactionExtension.prototype, \"type\", void 0);\n__decorate([\n    Struct.field('bytes')\n], TransactionExtension.prototype, \"data\", void 0);\nTransactionExtension = __decorate([\n    Struct.type('transaction_extension')\n], TransactionExtension);\nlet TransactionHeader = class TransactionHeader extends Struct {\n    static from(object) {\n        return super.from({\n            max_net_usage_words: 0,\n            max_cpu_usage_ms: 0,\n            delay_sec: 0,\n            ...object,\n        });\n    }\n};\n__decorate([\n    Struct.field('time_point_sec')\n], TransactionHeader.prototype, \"expiration\", void 0);\n__decorate([\n    Struct.field('uint16')\n], TransactionHeader.prototype, \"ref_block_num\", void 0);\n__decorate([\n    Struct.field('uint32')\n], TransactionHeader.prototype, \"ref_block_prefix\", void 0);\n__decorate([\n    Struct.field('varuint32')\n], TransactionHeader.prototype, \"max_net_usage_words\", void 0);\n__decorate([\n    Struct.field('uint8')\n], TransactionHeader.prototype, \"max_cpu_usage_ms\", void 0);\n__decorate([\n    Struct.field('varuint32')\n], TransactionHeader.prototype, \"delay_sec\", void 0);\nTransactionHeader = __decorate([\n    Struct.type('transaction_header')\n], TransactionHeader);\nlet Transaction = Transaction_1 = class Transaction extends TransactionHeader {\n    static from(object, abis) {\n        const abiFor = (contract) => {\n            if (!abis) {\n                return;\n            }\n            else if (Array.isArray(abis)) {\n                return abis\n                    .filter((abi) => Name.from(abi.contract).equals(contract))\n                    .map(({ abi }) => abi)[0];\n            }\n            else {\n                return abis;\n            }\n        };\n        const resolveAction = (action) => {\n            if (action instanceof Action) {\n                return action;\n            }\n            else {\n                return Action.from(action, abiFor(action.account));\n            }\n        };\n        const actions = (object.actions || []).map(resolveAction);\n        const context_free_actions = (object.context_free_actions || []).map(resolveAction);\n        const transaction = {\n            transaction_extensions: [],\n            ...object,\n            context_free_actions,\n            actions,\n        };\n        return super.from(transaction);\n    }\n    /** Return true if this transaction is equal to given transaction. */\n    equals(other) {\n        const tx = Transaction_1.from(other);\n        return this.id.equals(tx.id);\n    }\n    get id() {\n        return Checksum256.hash(abiEncode({ object: this }));\n    }\n    signingDigest(chainId) {\n        const data = this.signingData(chainId);\n        return Checksum256.hash(data);\n    }\n    signingData(chainId) {\n        let data = Bytes.from(Checksum256.from(chainId).array);\n        data = data.appending(abiEncode({ object: this }));\n        data = data.appending(new Uint8Array(32));\n        return data;\n    }\n};\n__decorate([\n    Struct.field(Action, { array: true })\n], Transaction.prototype, \"context_free_actions\", void 0);\n__decorate([\n    Struct.field(Action, { array: true })\n], Transaction.prototype, \"actions\", void 0);\n__decorate([\n    Struct.field(TransactionExtension, { array: true })\n], Transaction.prototype, \"transaction_extensions\", void 0);\nTransaction = Transaction_1 = __decorate([\n    Struct.type('transaction')\n], Transaction);\nlet SignedTransaction = class SignedTransaction extends Transaction {\n    /** The transaction without the signatures. */\n    get transaction() {\n        return Transaction.from({\n            ...this,\n            signatures: undefined,\n            context_free_data: undefined,\n        });\n    }\n    get id() {\n        return this.transaction.id;\n    }\n    static from(object) {\n        return super.from({\n            signatures: [],\n            context_free_data: [],\n            ...object,\n        });\n    }\n};\n__decorate([\n    Struct.field('signature[]')\n], SignedTransaction.prototype, \"signatures\", void 0);\n__decorate([\n    Struct.field('bytes[]')\n], SignedTransaction.prototype, \"context_free_data\", void 0);\nSignedTransaction = __decorate([\n    Struct.type('signed_transaction')\n], SignedTransaction);\n// reference: https://github.com/AntelopeIO/leap/blob/339d98eed107b9fd94736988996082c7002fa52a/libraries/chain/include/eosio/chain/transaction.hpp#L131-L134\nvar CompressionType;\n(function (CompressionType) {\n    CompressionType[CompressionType[\"none\"] = 0] = \"none\";\n    CompressionType[CompressionType[\"zlib\"] = 1] = \"zlib\";\n})(CompressionType || (CompressionType = {}));\nlet PackedTransaction = class PackedTransaction extends Struct {\n    static from(object) {\n        return super.from({\n            signatures: [],\n            packed_context_free_data: '',\n            compression: 0,\n            ...object,\n        });\n    }\n    static fromSigned(signed, compression = 1) {\n        // Encode data\n        let packed_trx = abiEncode({ object: Transaction.from(signed) });\n        let packed_context_free_data = abiEncode({\n            object: signed.context_free_data,\n            type: 'bytes[]',\n        });\n        switch (compression) {\n            case CompressionType.zlib: {\n                // compress data\n                packed_trx = pako.deflate(packed_trx.array);\n                packed_context_free_data = pako.deflate(packed_context_free_data.array);\n                break;\n            }\n            case CompressionType.none: {\n                break;\n            }\n        }\n        return this.from({\n            compression,\n            signatures: signed.signatures,\n            packed_context_free_data,\n            packed_trx,\n        });\n    }\n    getTransaction() {\n        switch (Number(this.compression)) {\n            // none\n            case CompressionType.none: {\n                return abiDecode({ data: this.packed_trx, type: Transaction });\n            }\n            // zlib compressed\n            case CompressionType.zlib: {\n                const inflated = pako.inflate(this.packed_trx.array);\n                return abiDecode({ data: inflated, type: Transaction });\n            }\n            default: {\n                throw new Error(`Unknown transaction compression ${this.compression}`);\n            }\n        }\n    }\n    getSignedTransaction() {\n        const transaction = this.getTransaction();\n        // TODO: decode context free data\n        return SignedTransaction.from({\n            ...transaction,\n            signatures: this.signatures,\n        });\n    }\n};\n__decorate([\n    Struct.field('signature[]')\n], PackedTransaction.prototype, \"signatures\", void 0);\n__decorate([\n    Struct.field('uint8')\n], PackedTransaction.prototype, \"compression\", void 0);\n__decorate([\n    Struct.field('bytes')\n], PackedTransaction.prototype, \"packed_context_free_data\", void 0);\n__decorate([\n    Struct.field('bytes')\n], PackedTransaction.prototype, \"packed_trx\", void 0);\nPackedTransaction = __decorate([\n    Struct.type('packed_transaction')\n], PackedTransaction);\nlet TransactionReceipt = class TransactionReceipt extends Struct {\n};\n__decorate([\n    Struct.field('string')\n], TransactionReceipt.prototype, \"status\", void 0);\n__decorate([\n    Struct.field('uint32')\n], TransactionReceipt.prototype, \"cpu_usage_us\", void 0);\n__decorate([\n    Struct.field('uint32')\n], TransactionReceipt.prototype, \"net_usage_words\", void 0);\nTransactionReceipt = __decorate([\n    Struct.type('transaction_receipt')\n], TransactionReceipt);\n\nvar Authority_1;\nlet Weight = class Weight extends UInt16 {\n};\nWeight = __decorate([\n    TypeAlias('weight_type')\n], Weight);\nlet KeyWeight = class KeyWeight extends Struct {\n};\n__decorate([\n    Struct.field(PublicKey)\n], KeyWeight.prototype, \"key\", void 0);\n__decorate([\n    Struct.field(Weight)\n], KeyWeight.prototype, \"weight\", void 0);\nKeyWeight = __decorate([\n    Struct.type('key_weight')\n], KeyWeight);\nlet PermissionLevelWeight = class PermissionLevelWeight extends Struct {\n};\n__decorate([\n    Struct.field(PermissionLevel)\n], PermissionLevelWeight.prototype, \"permission\", void 0);\n__decorate([\n    Struct.field(Weight)\n], PermissionLevelWeight.prototype, \"weight\", void 0);\nPermissionLevelWeight = __decorate([\n    Struct.type('permission_level_weight')\n], PermissionLevelWeight);\nlet WaitWeight = class WaitWeight extends Struct {\n};\n__decorate([\n    Struct.field(UInt32)\n], WaitWeight.prototype, \"wait_sec\", void 0);\n__decorate([\n    Struct.field(Weight)\n], WaitWeight.prototype, \"weight\", void 0);\nWaitWeight = __decorate([\n    Struct.type('wait_weight')\n], WaitWeight);\nlet Authority = Authority_1 = class Authority extends Struct {\n    static from(value) {\n        if (isInstanceOf(value, Authority_1)) {\n            return value;\n        }\n        const rv = super.from({\n            keys: [],\n            accounts: [],\n            waits: [],\n            ...value,\n        });\n        rv.sort();\n        return rv;\n    }\n    /** Total weight of all waits. */\n    get waitThreshold() {\n        return this.waits.reduce((val, wait) => val + wait.weight.toNumber(), 0);\n    }\n    /** Weight a key needs to sign for this authority. */\n    get keyThreshold() {\n        return this.threshold.toNumber() - this.waitThreshold;\n    }\n    /** Return the weight for given public key, or zero if it is not included in this authority. */\n    keyWeight(publicKey) {\n        const weight = this.keys.find(({ key }) => key.equals(publicKey));\n        return weight ? weight.weight.toNumber() : 0;\n    }\n    /**\n     * Check if given public key has permission in this authority,\n     * @attention Does not take indirect permissions for the key via account weights into account.\n     * @param publicKey The key to check.\n     * @param includePartial Whether to consider auths where the key is included but can't be reached alone (e.g. multisig).\n     */\n    hasPermission(publicKey, includePartial = false) {\n        const threshold = includePartial ? 1 : this.keyThreshold;\n        const weight = this.keyWeight(publicKey);\n        return weight >= threshold;\n    }\n    /**\n     * Sorts the authority weights in place, should be called before including the authority in a `updateauth` action or it might be rejected.\n     */\n    sort() {\n        // This hack satisfies the constraints that authority weights, see: https://github.com/wharfkit/antelope/issues/8\n        this.keys.sort((a, b) => String(a.key).localeCompare(String(b.key)));\n        this.accounts.sort((a, b) => String(a.permission).localeCompare(String(b.permission)));\n        this.waits.sort((a, b) => String(a.wait_sec).localeCompare(String(b.wait_sec)));\n    }\n};\n__decorate([\n    Struct.field(UInt32)\n], Authority.prototype, \"threshold\", void 0);\n__decorate([\n    Struct.field(KeyWeight, { array: true })\n], Authority.prototype, \"keys\", void 0);\n__decorate([\n    Struct.field(PermissionLevelWeight, { array: true })\n], Authority.prototype, \"accounts\", void 0);\n__decorate([\n    Struct.field(WaitWeight, { array: true })\n], Authority.prototype, \"waits\", void 0);\nAuthority = Authority_1 = __decorate([\n    Struct.type('authority')\n], Authority);\n\nclass BlockId {\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (Bytes.isBytes(value)) {\n            return new this(Bytes.from(value).array);\n        }\n        else {\n            return this.fromBlockChecksum(value.checksum, value.blockNum);\n        }\n    }\n    static fromABI(decoder) {\n        return new this(decoder.readArray(32));\n    }\n    static fromBlockChecksum(checksum, blockNum) {\n        const id = new BlockId(Checksum256.from(checksum).array);\n        const numBuffer = new Uint8Array(4);\n        numBuffer[0] = (Number(blockNum) >> 24) & 0xff;\n        numBuffer[1] = (Number(blockNum) >> 16) & 0xff;\n        numBuffer[2] = (Number(blockNum) >> 8) & 0xff;\n        numBuffer[3] = Number(blockNum) & 0xff;\n        id.array.set(numBuffer, 0);\n        return id;\n    }\n    constructor(array) {\n        if (array.byteLength !== 32) {\n            throw new Error(`BlockId size mismatch, expected 32 bytes got ${array.byteLength}`);\n        }\n        this.array = array;\n    }\n    equals(other) {\n        const self = this.constructor;\n        try {\n            return arrayEquals(this.array, self.from(other).array);\n        }\n        catch {\n            return false;\n        }\n    }\n    toABI(encoder) {\n        encoder.writeArray(this.array);\n    }\n    toString() {\n        return this.hexString;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    get hexString() {\n        return arrayToHex(this.array);\n    }\n    get blockNum() {\n        const bytes = this.array.slice(0, 4);\n        let num = 0;\n        for (let i = 0; i < 4; i++) {\n            num = (num << 8) + bytes[i];\n        }\n        return UInt32.from(num);\n    }\n}\nBlockId.abiName = 'block_id_type'; // eosio contract context defines this with a _type suffix for some reason\n\nvar Serializer;\n(function (Serializer) {\n    Serializer.encode = abiEncode;\n    Serializer.decode = abiDecode;\n    /** Create an Antelope/EOSIO ABI definition for given core type. */\n    function synthesize(type) {\n        return synthesizeABI(type).abi;\n    }\n    Serializer.synthesize = synthesize;\n    /** Create JSON representation of a core object. */\n    function stringify(object) {\n        return JSON.stringify(object);\n    }\n    Serializer.stringify = stringify;\n    /** Create a vanilla js representation of a core object. */\n    function objectify(object) {\n        const walk = (v) => {\n            switch (typeof v) {\n                case 'boolean':\n                case 'number':\n                case 'string':\n                    return v;\n                case 'object': {\n                    if (v === null) {\n                        return v;\n                    }\n                    if (typeof v.toJSON === 'function') {\n                        return walk(v.toJSON());\n                    }\n                    if (Array.isArray(v)) {\n                        return v.map(walk);\n                    }\n                    const rv = {};\n                    for (const key of Object.keys(v)) {\n                        rv[key] = walk(v[key]);\n                    }\n                    return rv;\n                }\n            }\n        };\n        return walk(object);\n    }\n    Serializer.objectify = objectify;\n})(Serializer || (Serializer = {}));\n\n/** Default provider that uses the Fetch API to call a single node. */\nclass FetchProvider {\n    constructor(url, options = {}) {\n        this.headers = {};\n        url = url.trim();\n        if (url.endsWith('/'))\n            url = url.slice(0, -1);\n        this.url = url;\n        if (options.headers) {\n            this.headers = options.headers;\n        }\n        if (!options.fetch) {\n            if (typeof window !== 'undefined' && window.fetch) {\n                this.fetch = window.fetch.bind(window);\n            }\n            else if (typeof global !== 'undefined' && global.fetch) {\n                this.fetch = global.fetch.bind(global);\n            }\n            else {\n                throw new Error('Missing fetch');\n            }\n        }\n        else {\n            this.fetch = options.fetch;\n        }\n    }\n    async call(args) {\n        const url = this.url + args.path;\n        const reqBody = args.params !== undefined ? JSON.stringify(args.params) : undefined;\n        const reqHeaders = {\n            ...this.headers,\n            ...args.headers,\n        };\n        const response = await this.fetch(url, {\n            method: args.method || 'POST',\n            body: reqBody,\n            headers: reqHeaders,\n        });\n        const text = await response.text();\n        let json;\n        try {\n            json = JSON.parse(text);\n        }\n        catch {\n            // ignore json parse errors\n        }\n        const headers = {};\n        for (const [key, value] of response.headers.entries()) {\n            headers[key] = value;\n        }\n        return { headers, status: response.status, json, text };\n    }\n}\n\nlet AccountLinkedAction = class AccountLinkedAction extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], AccountLinkedAction.prototype, \"account\", void 0);\n__decorate([\n    Struct.field('name', { optional: true })\n], AccountLinkedAction.prototype, \"action\", void 0);\nAccountLinkedAction = __decorate([\n    Struct.type('account_linked_action')\n], AccountLinkedAction);\nlet AccountPermission = class AccountPermission extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], AccountPermission.prototype, \"perm_name\", void 0);\n__decorate([\n    Struct.field('name')\n], AccountPermission.prototype, \"parent\", void 0);\n__decorate([\n    Struct.field(Authority)\n], AccountPermission.prototype, \"required_auth\", void 0);\n__decorate([\n    Struct.field(AccountLinkedAction, { optional: true, array: true })\n], AccountPermission.prototype, \"linked_actions\", void 0);\nAccountPermission = __decorate([\n    Struct.type('account_permission')\n], AccountPermission);\nlet AccountResourceLimit = class AccountResourceLimit extends Struct {\n};\n__decorate([\n    Struct.field('int64')\n], AccountResourceLimit.prototype, \"used\", void 0);\n__decorate([\n    Struct.field('int64')\n], AccountResourceLimit.prototype, \"available\", void 0);\n__decorate([\n    Struct.field('int64')\n], AccountResourceLimit.prototype, \"max\", void 0);\n__decorate([\n    Struct.field('time_point', { optional: true })\n], AccountResourceLimit.prototype, \"last_usage_update_time\", void 0);\n__decorate([\n    Struct.field('int64', { optional: true })\n], AccountResourceLimit.prototype, \"current_used\", void 0);\nAccountResourceLimit = __decorate([\n    Struct.type('account_resource_limit')\n], AccountResourceLimit);\nlet AccountTotalResources = class AccountTotalResources extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], AccountTotalResources.prototype, \"owner\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountTotalResources.prototype, \"net_weight\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountTotalResources.prototype, \"cpu_weight\", void 0);\n__decorate([\n    Struct.field('uint64')\n], AccountTotalResources.prototype, \"ram_bytes\", void 0);\nAccountTotalResources = __decorate([\n    Struct.type('account_total_resources')\n], AccountTotalResources);\nlet AccountSelfDelegatedBandwidth = class AccountSelfDelegatedBandwidth extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], AccountSelfDelegatedBandwidth.prototype, \"from\", void 0);\n__decorate([\n    Struct.field('name')\n], AccountSelfDelegatedBandwidth.prototype, \"to\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountSelfDelegatedBandwidth.prototype, \"net_weight\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountSelfDelegatedBandwidth.prototype, \"cpu_weight\", void 0);\nAccountSelfDelegatedBandwidth = __decorate([\n    Struct.type('account_self_delegated_bandwidth')\n], AccountSelfDelegatedBandwidth);\nlet AccountRefundRequest = class AccountRefundRequest extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], AccountRefundRequest.prototype, \"owner\", void 0);\n__decorate([\n    Struct.field('time_point')\n], AccountRefundRequest.prototype, \"request_time\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountRefundRequest.prototype, \"net_amount\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountRefundRequest.prototype, \"cpu_amount\", void 0);\nAccountRefundRequest = __decorate([\n    Struct.type('account_refund_request')\n], AccountRefundRequest);\nlet AccountVoterInfo = class AccountVoterInfo extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], AccountVoterInfo.prototype, \"owner\", void 0);\n__decorate([\n    Struct.field('name')\n], AccountVoterInfo.prototype, \"proxy\", void 0);\n__decorate([\n    Struct.field('name', { array: true })\n], AccountVoterInfo.prototype, \"producers\", void 0);\n__decorate([\n    Struct.field('int64', { optional: true })\n], AccountVoterInfo.prototype, \"staked\", void 0);\n__decorate([\n    Struct.field('float64')\n], AccountVoterInfo.prototype, \"last_vote_weight\", void 0);\n__decorate([\n    Struct.field('float64')\n], AccountVoterInfo.prototype, \"proxied_vote_weight\", void 0);\n__decorate([\n    Struct.field('bool')\n], AccountVoterInfo.prototype, \"is_proxy\", void 0);\n__decorate([\n    Struct.field('uint32', { optional: true })\n], AccountVoterInfo.prototype, \"flags1\", void 0);\n__decorate([\n    Struct.field('uint32')\n], AccountVoterInfo.prototype, \"reserved2\", void 0);\n__decorate([\n    Struct.field('string')\n], AccountVoterInfo.prototype, \"reserved3\", void 0);\nAccountVoterInfo = __decorate([\n    Struct.type('account_voter_info')\n], AccountVoterInfo);\nlet AccountRexInfoMaturities = class AccountRexInfoMaturities extends Struct {\n};\n__decorate([\n    Struct.field('time_point', { optional: true })\n], AccountRexInfoMaturities.prototype, \"key\", void 0);\n__decorate([\n    Struct.field('int64', { optional: true })\n], AccountRexInfoMaturities.prototype, \"value\", void 0);\n__decorate([\n    Struct.field('time_point', { optional: true })\n], AccountRexInfoMaturities.prototype, \"first\", void 0);\n__decorate([\n    Struct.field('int64', { optional: true })\n], AccountRexInfoMaturities.prototype, \"second\", void 0);\nAccountRexInfoMaturities = __decorate([\n    Struct.type('account_rex_info_maturities')\n], AccountRexInfoMaturities);\nlet AccountRexInfo = class AccountRexInfo extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], AccountRexInfo.prototype, \"version\", void 0);\n__decorate([\n    Struct.field('name')\n], AccountRexInfo.prototype, \"owner\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountRexInfo.prototype, \"vote_stake\", void 0);\n__decorate([\n    Struct.field('asset')\n], AccountRexInfo.prototype, \"rex_balance\", void 0);\n__decorate([\n    Struct.field('int64')\n], AccountRexInfo.prototype, \"matured_rex\", void 0);\n__decorate([\n    Struct.field(AccountRexInfoMaturities, { array: true })\n], AccountRexInfo.prototype, \"rex_maturities\", void 0);\nAccountRexInfo = __decorate([\n    Struct.type('account_rex_info')\n], AccountRexInfo);\nlet GetRawAbiResponse = class GetRawAbiResponse extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], GetRawAbiResponse.prototype, \"account_name\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetRawAbiResponse.prototype, \"code_hash\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetRawAbiResponse.prototype, \"abi_hash\", void 0);\n__decorate([\n    Struct.field(Blob)\n], GetRawAbiResponse.prototype, \"abi\", void 0);\nGetRawAbiResponse = __decorate([\n    Struct.type('get_raw_abi_response')\n], GetRawAbiResponse);\nlet AccountObject = class AccountObject extends Struct {\n    getPermission(permission) {\n        const name = Name.from(permission);\n        const match = this.permissions.find((p) => p.perm_name.equals(name));\n        if (!match) {\n            throw new Error(`Unknown permission ${name} on account ${this.account_name}.`);\n        }\n        return match;\n    }\n};\n__decorate([\n    Struct.field('name')\n], AccountObject.prototype, \"account_name\", void 0);\n__decorate([\n    Struct.field('uint32')\n], AccountObject.prototype, \"head_block_num\", void 0);\n__decorate([\n    Struct.field('time_point')\n], AccountObject.prototype, \"head_block_time\", void 0);\n__decorate([\n    Struct.field('bool')\n], AccountObject.prototype, \"privileged\", void 0);\n__decorate([\n    Struct.field('time_point')\n], AccountObject.prototype, \"last_code_update\", void 0);\n__decorate([\n    Struct.field('time_point')\n], AccountObject.prototype, \"created\", void 0);\n__decorate([\n    Struct.field('asset?')\n], AccountObject.prototype, \"core_liquid_balance\", void 0);\n__decorate([\n    Struct.field('int64')\n], AccountObject.prototype, \"ram_quota\", void 0);\n__decorate([\n    Struct.field('int64')\n], AccountObject.prototype, \"net_weight\", void 0);\n__decorate([\n    Struct.field('int64')\n], AccountObject.prototype, \"cpu_weight\", void 0);\n__decorate([\n    Struct.field(AccountResourceLimit)\n], AccountObject.prototype, \"net_limit\", void 0);\n__decorate([\n    Struct.field(AccountResourceLimit)\n], AccountObject.prototype, \"cpu_limit\", void 0);\n__decorate([\n    Struct.field(AccountResourceLimit, { optional: true })\n], AccountObject.prototype, \"subjective_cpu_bill_limit\", void 0);\n__decorate([\n    Struct.field('uint64')\n], AccountObject.prototype, \"ram_usage\", void 0);\n__decorate([\n    Struct.field(AccountPermission, { array: true })\n], AccountObject.prototype, \"permissions\", void 0);\n__decorate([\n    Struct.field(AccountTotalResources, { optional: true })\n], AccountObject.prototype, \"total_resources\", void 0);\n__decorate([\n    Struct.field(AccountSelfDelegatedBandwidth, { optional: true })\n], AccountObject.prototype, \"self_delegated_bandwidth\", void 0);\n__decorate([\n    Struct.field(AccountRefundRequest, { optional: true })\n], AccountObject.prototype, \"refund_request\", void 0);\n__decorate([\n    Struct.field(AccountVoterInfo, { optional: true })\n], AccountObject.prototype, \"voter_info\", void 0);\n__decorate([\n    Struct.field(AccountRexInfo, { optional: true })\n], AccountObject.prototype, \"rex_info\", void 0);\nAccountObject = __decorate([\n    Struct.type('account_object')\n], AccountObject);\nlet AccountByAuthorizersRow = class AccountByAuthorizersRow extends Struct {\n};\n__decorate([\n    Struct.field(Name)\n], AccountByAuthorizersRow.prototype, \"account_name\", void 0);\n__decorate([\n    Struct.field(Name)\n], AccountByAuthorizersRow.prototype, \"permission_name\", void 0);\n__decorate([\n    Struct.field(PublicKey, { optional: true })\n], AccountByAuthorizersRow.prototype, \"authorizing_key\", void 0);\n__decorate([\n    Struct.field(PermissionLevel, { optional: true })\n], AccountByAuthorizersRow.prototype, \"authorizing_account\", void 0);\n__decorate([\n    Struct.field(Weight)\n], AccountByAuthorizersRow.prototype, \"weight\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], AccountByAuthorizersRow.prototype, \"threshold\", void 0);\nAccountByAuthorizersRow = __decorate([\n    Struct.type('account_by_authorizers_row')\n], AccountByAuthorizersRow);\nlet AccountsByAuthorizers = class AccountsByAuthorizers extends Struct {\n};\n__decorate([\n    Struct.field(AccountByAuthorizersRow, { array: true })\n], AccountsByAuthorizers.prototype, \"accounts\", void 0);\nAccountsByAuthorizers = __decorate([\n    Struct.type('account_by_authorizers')\n], AccountsByAuthorizers);\nlet NewProducersEntry$1 = class NewProducersEntry extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], NewProducersEntry$1.prototype, \"producer_name\", void 0);\n__decorate([\n    Struct.field('public_key')\n], NewProducersEntry$1.prototype, \"block_signing_key\", void 0);\nNewProducersEntry$1 = __decorate([\n    Struct.type('new_producers_entry')\n], NewProducersEntry$1);\nlet NewProducers$1 = class NewProducers extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], NewProducers$1.prototype, \"version\", void 0);\n__decorate([\n    Struct.field(NewProducersEntry$1, { array: true })\n], NewProducers$1.prototype, \"producers\", void 0);\nNewProducers$1 = __decorate([\n    Struct.type('new_producers')\n], NewProducers$1);\nlet BlockExtension$1 = class BlockExtension extends Struct {\n};\n__decorate([\n    Struct.field('uint16')\n], BlockExtension$1.prototype, \"type\", void 0);\n__decorate([\n    Struct.field('bytes')\n], BlockExtension$1.prototype, \"data\", void 0);\nBlockExtension$1 = __decorate([\n    Struct.type('block_extension')\n], BlockExtension$1);\nlet HeaderExtension$1 = class HeaderExtension extends Struct {\n};\n__decorate([\n    Struct.field('uint16')\n], HeaderExtension$1.prototype, \"type\", void 0);\n__decorate([\n    Struct.field('bytes')\n], HeaderExtension$1.prototype, \"data\", void 0);\nHeaderExtension$1 = __decorate([\n    Struct.type('header_extension')\n], HeaderExtension$1);\n// fc \"mutable variant\" returned by get_block api\nlet TrxVariant$1 = class TrxVariant {\n    static from(data) {\n        let id;\n        let extra;\n        if (typeof data === 'string') {\n            id = Checksum256.from(data);\n            extra = {};\n        }\n        else {\n            id = Checksum256.from(data.id);\n            extra = data;\n        }\n        return new this(id, extra);\n    }\n    constructor(id, extra) {\n        this.id = id;\n        this.extra = extra;\n    }\n    get transaction() {\n        if (this.extra.packed_trx) {\n            switch (this.extra.compression) {\n                case 'zlib': {\n                    const inflated = pako.inflate(Bytes.from(this.extra.packed_trx, 'hex').array);\n                    return Serializer.decode({ data: inflated, type: Transaction });\n                }\n                case 'none': {\n                    return Serializer.decode({ data: this.extra.packed_trx, type: Transaction });\n                }\n                default: {\n                    throw new Error(`Unsupported compression type ${this.extra.compression}`);\n                }\n            }\n        }\n    }\n    get signatures() {\n        if (this.extra.signatures) {\n            return this.extra.signatures.map(Signature.from);\n        }\n    }\n    equals(other) {\n        return this.id.equals(other.id);\n    }\n    toJSON() {\n        return this.id;\n    }\n};\nTrxVariant$1.abiName = 'trx_variant';\nlet GetBlockResponseTransactionReceipt = class GetBlockResponseTransactionReceipt extends TransactionReceipt {\n    get id() {\n        return this.trx.id;\n    }\n};\n__decorate([\n    Struct.field(TrxVariant$1)\n], GetBlockResponseTransactionReceipt.prototype, \"trx\", void 0);\nGetBlockResponseTransactionReceipt = __decorate([\n    Struct.type('get_block_response_receipt')\n], GetBlockResponseTransactionReceipt);\nlet GetBlockResponse = class GetBlockResponse extends Struct {\n};\n__decorate([\n    Struct.field('time_point')\n], GetBlockResponse.prototype, \"timestamp\", void 0);\n__decorate([\n    Struct.field('name')\n], GetBlockResponse.prototype, \"producer\", void 0);\n__decorate([\n    Struct.field('uint16')\n], GetBlockResponse.prototype, \"confirmed\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetBlockResponse.prototype, \"previous\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetBlockResponse.prototype, \"transaction_mroot\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetBlockResponse.prototype, \"action_mroot\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockResponse.prototype, \"schedule_version\", void 0);\n__decorate([\n    Struct.field(NewProducers$1, { optional: true })\n], GetBlockResponse.prototype, \"new_producers\", void 0);\n__decorate([\n    Struct.field('any', { optional: true })\n], GetBlockResponse.prototype, \"header_extensions\", void 0);\n__decorate([\n    Struct.field('any', { optional: true })\n], GetBlockResponse.prototype, \"new_protocol_features\", void 0);\n__decorate([\n    Struct.field('signature')\n], GetBlockResponse.prototype, \"producer_signature\", void 0);\n__decorate([\n    Struct.field(GetBlockResponseTransactionReceipt, { array: true })\n], GetBlockResponse.prototype, \"transactions\", void 0);\n__decorate([\n    Struct.field('block_extension', { optional: true })\n], GetBlockResponse.prototype, \"block_extensions\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetBlockResponse.prototype, \"id\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockResponse.prototype, \"block_num\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockResponse.prototype, \"ref_block_prefix\", void 0);\nGetBlockResponse = __decorate([\n    Struct.type('get_block_response')\n], GetBlockResponse);\nlet GetBlockInfoResponse = class GetBlockInfoResponse extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], GetBlockInfoResponse.prototype, \"block_num\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockInfoResponse.prototype, \"ref_block_num\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetBlockInfoResponse.prototype, \"id\", void 0);\n__decorate([\n    Struct.field('time_point')\n], GetBlockInfoResponse.prototype, \"timestamp\", void 0);\n__decorate([\n    Struct.field('name')\n], GetBlockInfoResponse.prototype, \"producer\", void 0);\n__decorate([\n    Struct.field('uint16')\n], GetBlockInfoResponse.prototype, \"confirmed\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetBlockInfoResponse.prototype, \"previous\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetBlockInfoResponse.prototype, \"transaction_mroot\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetBlockInfoResponse.prototype, \"action_mroot\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockInfoResponse.prototype, \"schedule_version\", void 0);\n__decorate([\n    Struct.field('signature')\n], GetBlockInfoResponse.prototype, \"producer_signature\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockInfoResponse.prototype, \"ref_block_prefix\", void 0);\nGetBlockInfoResponse = __decorate([\n    Struct.type('get_block_response')\n], GetBlockInfoResponse);\nlet ActiveScheduleProducerAuthority = class ActiveScheduleProducerAuthority extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], ActiveScheduleProducerAuthority.prototype, \"producer_name\", void 0);\n__decorate([\n    Struct.field('any')\n], ActiveScheduleProducerAuthority.prototype, \"authority\", void 0);\nActiveScheduleProducerAuthority = __decorate([\n    Struct.type('active_schedule_producer_authority')\n], ActiveScheduleProducerAuthority);\nlet ActiveScheduleProducer = class ActiveScheduleProducer extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], ActiveScheduleProducer.prototype, \"producer_name\", void 0);\n__decorate([\n    Struct.field(ActiveScheduleProducerAuthority)\n], ActiveScheduleProducer.prototype, \"authority\", void 0);\nActiveScheduleProducer = __decorate([\n    Struct.type('active_schedule_producer')\n], ActiveScheduleProducer);\nlet ActiveSchedule = class ActiveSchedule extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], ActiveSchedule.prototype, \"version\", void 0);\n__decorate([\n    Struct.field(ActiveScheduleProducer, { array: true })\n], ActiveSchedule.prototype, \"producers\", void 0);\nActiveSchedule = __decorate([\n    Struct.type('active_schedule')\n], ActiveSchedule);\nlet BlockStateHeader = class BlockStateHeader extends Struct {\n};\n__decorate([\n    Struct.field('time_point')\n], BlockStateHeader.prototype, \"timestamp\", void 0);\n__decorate([\n    Struct.field('name')\n], BlockStateHeader.prototype, \"producer\", void 0);\n__decorate([\n    Struct.field('uint16')\n], BlockStateHeader.prototype, \"confirmed\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], BlockStateHeader.prototype, \"previous\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], BlockStateHeader.prototype, \"transaction_mroot\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], BlockStateHeader.prototype, \"action_mroot\", void 0);\n__decorate([\n    Struct.field('uint32')\n], BlockStateHeader.prototype, \"schedule_version\", void 0);\n__decorate([\n    Struct.field('any', { array: true, optional: true })\n], BlockStateHeader.prototype, \"header_extensions\", void 0);\n__decorate([\n    Struct.field('signature')\n], BlockStateHeader.prototype, \"producer_signature\", void 0);\nBlockStateHeader = __decorate([\n    Struct.type('block_state_header')\n], BlockStateHeader);\nlet GetBlockHeaderStateResponse = class GetBlockHeaderStateResponse extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], GetBlockHeaderStateResponse.prototype, \"block_num\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockHeaderStateResponse.prototype, \"dpos_proposed_irreversible_blocknum\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetBlockHeaderStateResponse.prototype, \"dpos_irreversible_blocknum\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetBlockHeaderStateResponse.prototype, \"id\", void 0);\n__decorate([\n    Struct.field(BlockStateHeader)\n], GetBlockHeaderStateResponse.prototype, \"header\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"active_schedule\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"blockroot_merkle\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"producer_to_last_produced\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"producer_to_last_implied_irb\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"valid_block_signing_authority\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"confirm_count\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"pending_schedule\", void 0);\n__decorate([\n    Struct.field('any', { optional: true })\n], GetBlockHeaderStateResponse.prototype, \"activated_protocol_features\", void 0);\n__decorate([\n    Struct.field('any')\n], GetBlockHeaderStateResponse.prototype, \"additional_signatures\", void 0);\nGetBlockHeaderStateResponse = __decorate([\n    Struct.type('get_block_header_state_response')\n], GetBlockHeaderStateResponse);\nlet GetInfoResponse = class GetInfoResponse extends Struct {\n    getTransactionHeader(secondsAhead = 120) {\n        const expiration = TimePointSec.fromMilliseconds(this.head_block_time.toMilliseconds() + secondsAhead * 1000);\n        const id = this.last_irreversible_block_id;\n        const prefixArray = id.array.subarray(8, 12);\n        const prefix = new Uint32Array(prefixArray.buffer, prefixArray.byteOffset, 1)[0];\n        return TransactionHeader.from({\n            expiration,\n            ref_block_num: Number(this.last_irreversible_block_num) & 0xffff,\n            ref_block_prefix: prefix,\n        });\n    }\n};\n__decorate([\n    Struct.field('string')\n], GetInfoResponse.prototype, \"server_version\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetInfoResponse.prototype, \"chain_id\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetInfoResponse.prototype, \"head_block_num\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetInfoResponse.prototype, \"last_irreversible_block_num\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetInfoResponse.prototype, \"last_irreversible_block_id\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetInfoResponse.prototype, \"head_block_id\", void 0);\n__decorate([\n    Struct.field('time_point')\n], GetInfoResponse.prototype, \"head_block_time\", void 0);\n__decorate([\n    Struct.field('name')\n], GetInfoResponse.prototype, \"head_block_producer\", void 0);\n__decorate([\n    Struct.field('uint64')\n], GetInfoResponse.prototype, \"virtual_block_cpu_limit\", void 0);\n__decorate([\n    Struct.field('uint64')\n], GetInfoResponse.prototype, \"virtual_block_net_limit\", void 0);\n__decorate([\n    Struct.field('uint64')\n], GetInfoResponse.prototype, \"block_cpu_limit\", void 0);\n__decorate([\n    Struct.field('uint64')\n], GetInfoResponse.prototype, \"block_net_limit\", void 0);\n__decorate([\n    Struct.field('string?')\n], GetInfoResponse.prototype, \"server_version_string\", void 0);\n__decorate([\n    Struct.field('uint32?')\n], GetInfoResponse.prototype, \"fork_db_head_block_num\", void 0);\n__decorate([\n    Struct.field('block_id_type?')\n], GetInfoResponse.prototype, \"fork_db_head_block_id\", void 0);\nGetInfoResponse = __decorate([\n    Struct.type('get_info_response')\n], GetInfoResponse);\nlet GetTableByScopeResponseRow = class GetTableByScopeResponseRow extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], GetTableByScopeResponseRow.prototype, \"code\", void 0);\n__decorate([\n    Struct.field('name')\n], GetTableByScopeResponseRow.prototype, \"scope\", void 0);\n__decorate([\n    Struct.field('name')\n], GetTableByScopeResponseRow.prototype, \"table\", void 0);\n__decorate([\n    Struct.field('name')\n], GetTableByScopeResponseRow.prototype, \"payer\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetTableByScopeResponseRow.prototype, \"count\", void 0);\nGetTableByScopeResponseRow = __decorate([\n    Struct.type('get_table_by_scope_response_row')\n], GetTableByScopeResponseRow);\nlet GetTableByScopeResponse = class GetTableByScopeResponse extends Struct {\n};\n__decorate([\n    Struct.field(GetTableByScopeResponseRow, { array: true })\n], GetTableByScopeResponse.prototype, \"rows\", void 0);\n__decorate([\n    Struct.field('string')\n], GetTableByScopeResponse.prototype, \"more\", void 0);\nGetTableByScopeResponse = __decorate([\n    Struct.type('get_table_by_scope_response')\n], GetTableByScopeResponse);\nlet OrderedActionsResult = class OrderedActionsResult extends Struct {\n};\n__decorate([\n    Struct.field(UInt64)\n], OrderedActionsResult.prototype, \"global_action_seq\", void 0);\n__decorate([\n    Struct.field(Int64)\n], OrderedActionsResult.prototype, \"account_action_seq\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], OrderedActionsResult.prototype, \"block_num\", void 0);\n__decorate([\n    Struct.field(BlockTimestamp)\n], OrderedActionsResult.prototype, \"block_time\", void 0);\n__decorate([\n    Struct.field('any')\n], OrderedActionsResult.prototype, \"action_trace\", void 0);\n__decorate([\n    Struct.field('boolean?')\n], OrderedActionsResult.prototype, \"irrevirsible\", void 0);\nOrderedActionsResult = __decorate([\n    Struct.type('ordered_action_result')\n], OrderedActionsResult);\nlet GetActionsResponse = class GetActionsResponse extends Struct {\n};\n__decorate([\n    Struct.field(OrderedActionsResult, { array: true })\n], GetActionsResponse.prototype, \"actions\", void 0);\n__decorate([\n    Struct.field(Int32)\n], GetActionsResponse.prototype, \"last_irreversible_block\", void 0);\n__decorate([\n    Struct.field(Int32)\n], GetActionsResponse.prototype, \"head_block_num\", void 0);\n__decorate([\n    Struct.field('boolean?')\n], GetActionsResponse.prototype, \"time_limit_exceeded_error\", void 0);\nGetActionsResponse = __decorate([\n    Struct.type('get_actions_response')\n], GetActionsResponse);\nlet TransactionTrace = class TransactionTrace extends Struct {\n};\nTransactionTrace = __decorate([\n    Struct.type('transaction_trace')\n], TransactionTrace);\nlet Trx = class Trx extends Struct {\n};\n__decorate([\n    Struct.field('any')\n], Trx.prototype, \"actions\", void 0);\n__decorate([\n    Struct.field('any')\n], Trx.prototype, \"context_free_actions\", void 0);\n__decorate([\n    Struct.field('any')\n], Trx.prototype, \"context_free_data\", void 0);\n__decorate([\n    Struct.field('number')\n], Trx.prototype, \"delay_sec\", void 0);\n__decorate([\n    Struct.field('string')\n], Trx.prototype, \"expiration\", void 0);\n__decorate([\n    Struct.field('number')\n], Trx.prototype, \"max_cpu_usage_ms\", void 0);\n__decorate([\n    Struct.field('number')\n], Trx.prototype, \"max_net_usage_words\", void 0);\n__decorate([\n    Struct.field('number')\n], Trx.prototype, \"ref_block_num\", void 0);\n__decorate([\n    Struct.field('number')\n], Trx.prototype, \"ref_block_prefix\", void 0);\n__decorate([\n    Struct.field('string', { array: true })\n], Trx.prototype, \"signatures\", void 0);\nTrx = __decorate([\n    Struct.type('trx')\n], Trx);\nlet TransactionInfo = class TransactionInfo extends Struct {\n};\n__decorate([\n    Struct.field(TransactionReceipt)\n], TransactionInfo.prototype, \"receipt\", void 0);\n__decorate([\n    Struct.field('trx')\n], TransactionInfo.prototype, \"trx\", void 0);\nTransactionInfo = __decorate([\n    Struct.type('transaction_info')\n], TransactionInfo);\nlet GetTransactionResponse = class GetTransactionResponse extends Struct {\n};\n__decorate([\n    Struct.field(Checksum256)\n], GetTransactionResponse.prototype, \"id\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], GetTransactionResponse.prototype, \"block_num\", void 0);\n__decorate([\n    Struct.field(BlockTimestamp)\n], GetTransactionResponse.prototype, \"block_time\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], GetTransactionResponse.prototype, \"last_irreversible_block\", void 0);\n__decorate([\n    Struct.field('any?')\n], GetTransactionResponse.prototype, \"traces\", void 0);\n__decorate([\n    Struct.field('any')\n], GetTransactionResponse.prototype, \"trx\", void 0);\nGetTransactionResponse = __decorate([\n    Struct.type('get_transaction_response')\n], GetTransactionResponse);\nlet GetKeyAccountsResponse = class GetKeyAccountsResponse extends Struct {\n};\n__decorate([\n    Struct.field('name', { array: true })\n], GetKeyAccountsResponse.prototype, \"account_names\", void 0);\nGetKeyAccountsResponse = __decorate([\n    Struct.type('get_key_accounts_response')\n], GetKeyAccountsResponse);\nlet GetCodeResponse = class GetCodeResponse extends Struct {\n};\n__decorate([\n    Struct.field(ABI)\n], GetCodeResponse.prototype, \"abi\", void 0);\n__decorate([\n    Struct.field('name')\n], GetCodeResponse.prototype, \"account_name\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GetCodeResponse.prototype, \"code_hash\", void 0);\n__decorate([\n    Struct.field('string')\n], GetCodeResponse.prototype, \"wast\", void 0);\n__decorate([\n    Struct.field('string')\n], GetCodeResponse.prototype, \"wasm\", void 0);\nGetCodeResponse = __decorate([\n    Struct.type('get_code_response')\n], GetCodeResponse);\nlet GetControlledAccountsResponse = class GetControlledAccountsResponse extends Struct {\n};\n__decorate([\n    Struct.field('name', { array: true })\n], GetControlledAccountsResponse.prototype, \"controlled_accounts\", void 0);\nGetControlledAccountsResponse = __decorate([\n    Struct.type('get_controlled_accounts_response')\n], GetControlledAccountsResponse);\nlet GetCurrencyStatsItemResponse = class GetCurrencyStatsItemResponse extends Struct {\n};\n__decorate([\n    Struct.field('asset')\n], GetCurrencyStatsItemResponse.prototype, \"supply\", void 0);\n__decorate([\n    Struct.field('asset')\n], GetCurrencyStatsItemResponse.prototype, \"max_supply\", void 0);\n__decorate([\n    Struct.field('name')\n], GetCurrencyStatsItemResponse.prototype, \"issuer\", void 0);\nGetCurrencyStatsItemResponse = __decorate([\n    Struct.type('get_currency_stats_item_response')\n], GetCurrencyStatsItemResponse);\nlet GetTransactionStatusResponse = class GetTransactionStatusResponse extends Struct {\n};\n__decorate([\n    Struct.field('string')\n], GetTransactionStatusResponse.prototype, \"state\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetTransactionStatusResponse.prototype, \"head_number\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetTransactionStatusResponse.prototype, \"head_id\", void 0);\n__decorate([\n    Struct.field('time_point')\n], GetTransactionStatusResponse.prototype, \"head_timestamp\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetTransactionStatusResponse.prototype, \"irreversible_number\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetTransactionStatusResponse.prototype, \"irreversible_id\", void 0);\n__decorate([\n    Struct.field('time_point')\n], GetTransactionStatusResponse.prototype, \"irreversible_timestamp\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], GetTransactionStatusResponse.prototype, \"earliest_tracked_block_id\", void 0);\n__decorate([\n    Struct.field('uint32')\n], GetTransactionStatusResponse.prototype, \"earliest_tracked_block_number\", void 0);\nGetTransactionStatusResponse = __decorate([\n    Struct.type('get_transaction_status_response')\n], GetTransactionStatusResponse);\nlet ProducerAuthority = class ProducerAuthority extends Struct {\n};\n__decorate([\n    Struct.field(UInt32)\n], ProducerAuthority.prototype, \"threshold\", void 0);\n__decorate([\n    Struct.field(KeyWeight, { array: true })\n], ProducerAuthority.prototype, \"keys\", void 0);\nProducerAuthority = __decorate([\n    Struct.type('producer_authority')\n], ProducerAuthority);\nlet Producer = class Producer extends Struct {\n    static from(data) {\n        return super.from({\n            ...data,\n            authority: [data.authority[0], ProducerAuthority.from(data.authority[1])],\n        });\n    }\n};\n__decorate([\n    Struct.field('name')\n], Producer.prototype, \"producer_name\", void 0);\n__decorate([\n    Struct.field('any', { array: true })\n], Producer.prototype, \"authority\", void 0);\nProducer = __decorate([\n    Struct.type('producer')\n], Producer);\nlet ProducerSchedule = class ProducerSchedule extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], ProducerSchedule.prototype, \"version\", void 0);\n__decorate([\n    Struct.field(Producer, { array: true })\n], ProducerSchedule.prototype, \"producers\", void 0);\nProducerSchedule = __decorate([\n    Struct.type('producer_schedule')\n], ProducerSchedule);\nlet GetProducerScheduleResponse = class GetProducerScheduleResponse extends Struct {\n};\n__decorate([\n    Struct.field(ProducerSchedule, { optional: true })\n], GetProducerScheduleResponse.prototype, \"active\", void 0);\n__decorate([\n    Struct.field(ProducerSchedule, { optional: true })\n], GetProducerScheduleResponse.prototype, \"pending\", void 0);\n__decorate([\n    Struct.field(ProducerSchedule, { optional: true })\n], GetProducerScheduleResponse.prototype, \"proposed\", void 0);\nGetProducerScheduleResponse = __decorate([\n    Struct.type('get_producer_schedule_response')\n], GetProducerScheduleResponse);\nlet ProtocolFeature = class ProtocolFeature extends Struct {\n};\n__decorate([\n    Struct.field('checksum256')\n], ProtocolFeature.prototype, \"feature_digest\", void 0);\n__decorate([\n    Struct.field('uint32')\n], ProtocolFeature.prototype, \"activation_ordinal\", void 0);\n__decorate([\n    Struct.field('uint32')\n], ProtocolFeature.prototype, \"activation_block_num\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], ProtocolFeature.prototype, \"description_digest\", void 0);\n__decorate([\n    Struct.field('string', { array: true })\n], ProtocolFeature.prototype, \"dependencies\", void 0);\n__decorate([\n    Struct.field('string')\n], ProtocolFeature.prototype, \"protocol_feature_type\", void 0);\n__decorate([\n    Struct.field('any', { array: true })\n], ProtocolFeature.prototype, \"specification\", void 0);\nProtocolFeature = __decorate([\n    Struct.type('protocol_feature')\n], ProtocolFeature);\nlet GetProtocolFeaturesResponse = class GetProtocolFeaturesResponse extends Struct {\n};\n__decorate([\n    Struct.field(ProtocolFeature, { array: true })\n], GetProtocolFeaturesResponse.prototype, \"activated_protocol_features\", void 0);\n__decorate([\n    Struct.field('uint32', { optional: true })\n], GetProtocolFeaturesResponse.prototype, \"more\", void 0);\nGetProtocolFeaturesResponse = __decorate([\n    Struct.type('get_protocol_features_response')\n], GetProtocolFeaturesResponse);\n\nvar types$2 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get AccountByAuthorizersRow () { return AccountByAuthorizersRow; },\n    get AccountLinkedAction () { return AccountLinkedAction; },\n    get AccountObject () { return AccountObject; },\n    get AccountPermission () { return AccountPermission; },\n    get AccountRefundRequest () { return AccountRefundRequest; },\n    get AccountResourceLimit () { return AccountResourceLimit; },\n    get AccountRexInfo () { return AccountRexInfo; },\n    get AccountRexInfoMaturities () { return AccountRexInfoMaturities; },\n    get AccountSelfDelegatedBandwidth () { return AccountSelfDelegatedBandwidth; },\n    get AccountTotalResources () { return AccountTotalResources; },\n    get AccountVoterInfo () { return AccountVoterInfo; },\n    get AccountsByAuthorizers () { return AccountsByAuthorizers; },\n    get ActiveSchedule () { return ActiveSchedule; },\n    get ActiveScheduleProducer () { return ActiveScheduleProducer; },\n    get ActiveScheduleProducerAuthority () { return ActiveScheduleProducerAuthority; },\n    get BlockExtension () { return BlockExtension$1; },\n    get BlockStateHeader () { return BlockStateHeader; },\n    get GetActionsResponse () { return GetActionsResponse; },\n    get GetBlockHeaderStateResponse () { return GetBlockHeaderStateResponse; },\n    get GetBlockInfoResponse () { return GetBlockInfoResponse; },\n    get GetBlockResponse () { return GetBlockResponse; },\n    get GetBlockResponseTransactionReceipt () { return GetBlockResponseTransactionReceipt; },\n    get GetCodeResponse () { return GetCodeResponse; },\n    get GetControlledAccountsResponse () { return GetControlledAccountsResponse; },\n    get GetCurrencyStatsItemResponse () { return GetCurrencyStatsItemResponse; },\n    get GetInfoResponse () { return GetInfoResponse; },\n    get GetKeyAccountsResponse () { return GetKeyAccountsResponse; },\n    get GetProducerScheduleResponse () { return GetProducerScheduleResponse; },\n    get GetProtocolFeaturesResponse () { return GetProtocolFeaturesResponse; },\n    get GetRawAbiResponse () { return GetRawAbiResponse; },\n    get GetTableByScopeResponse () { return GetTableByScopeResponse; },\n    get GetTableByScopeResponseRow () { return GetTableByScopeResponseRow; },\n    get GetTransactionResponse () { return GetTransactionResponse; },\n    get GetTransactionStatusResponse () { return GetTransactionStatusResponse; },\n    get HeaderExtension () { return HeaderExtension$1; },\n    get NewProducers () { return NewProducers$1; },\n    get NewProducersEntry () { return NewProducersEntry$1; },\n    get OrderedActionsResult () { return OrderedActionsResult; },\n    get Producer () { return Producer; },\n    get ProducerAuthority () { return ProducerAuthority; },\n    get ProducerSchedule () { return ProducerSchedule; },\n    get ProtocolFeature () { return ProtocolFeature; },\n    get TransactionInfo () { return TransactionInfo; },\n    get TransactionTrace () { return TransactionTrace; },\n    get Trx () { return Trx; },\n    TrxVariant: TrxVariant$1\n});\n\nclass ChainAPI {\n    constructor(client) {\n        this.client = client;\n    }\n    async get_abi(accountName) {\n        return this.client.call({\n            path: '/v1/chain/get_abi',\n            params: { account_name: Name.from(accountName) },\n        });\n    }\n    async get_code(accountName) {\n        return this.client.call({\n            path: '/v1/chain/get_code',\n            params: { account_name: Name.from(accountName) },\n            responseType: GetCodeResponse,\n        });\n    }\n    async get_raw_abi(accountName) {\n        return this.client.call({\n            path: '/v1/chain/get_raw_abi',\n            params: { account_name: Name.from(accountName) },\n            responseType: GetRawAbiResponse,\n        });\n    }\n    async get_account(accountName, responseType = AccountObject) {\n        return this.client.call({\n            path: '/v1/chain/get_account',\n            params: { account_name: Name.from(accountName) },\n            responseType: responseType,\n        });\n    }\n    async get_accounts_by_authorizers(params) {\n        return this.client.call({\n            path: '/v1/chain/get_accounts_by_authorizers',\n            params,\n            responseType: AccountsByAuthorizers,\n        });\n    }\n    async get_activated_protocol_features(params) {\n        return this.client.call({\n            path: '/v1/chain/get_activated_protocol_features',\n            params,\n            responseType: GetProtocolFeaturesResponse,\n        });\n    }\n    async get_block(block_num_or_id) {\n        return this.client.call({\n            path: '/v1/chain/get_block',\n            params: { block_num_or_id },\n            responseType: GetBlockResponse,\n        });\n    }\n    async get_block_header_state(block_num_or_id) {\n        return this.client.call({\n            path: '/v1/chain/get_block_header_state',\n            params: { block_num_or_id },\n            responseType: GetBlockHeaderStateResponse,\n        });\n    }\n    async get_block_info(block_num) {\n        return this.client.call({\n            path: '/v1/chain/get_block_info',\n            params: { block_num },\n            responseType: GetBlockInfoResponse,\n        });\n    }\n    async get_currency_balance(contract, accountName, symbol) {\n        const params = {\n            account: Name.from(accountName),\n            code: Name.from(contract),\n        };\n        if (symbol) {\n            params.symbol = symbol;\n        }\n        return this.client.call({\n            path: '/v1/chain/get_currency_balance',\n            params,\n            responseType: 'asset[]',\n        });\n    }\n    async get_currency_stats(contract, symbol) {\n        const params = {\n            code: Name.from(contract),\n            symbol,\n        };\n        const response = await this.client.call({\n            path: '/v1/chain/get_currency_stats',\n            params,\n        });\n        const result = {};\n        Object.keys(response).forEach((r) => (result[r] = GetCurrencyStatsItemResponse.from(response[r])));\n        return result;\n    }\n    async get_info() {\n        return this.client.call({\n            path: '/v1/chain/get_info',\n            responseType: GetInfoResponse,\n            method: 'GET',\n        });\n    }\n    async get_producer_schedule() {\n        return this.client.call({\n            path: '/v1/chain/get_producer_schedule',\n            responseType: GetProducerScheduleResponse,\n        });\n    }\n    async compute_transaction(tx) {\n        if (!isInstanceOf(tx, PackedTransaction)) {\n            tx = PackedTransaction.fromSigned(SignedTransaction.from(tx));\n        }\n        return this.client.call({\n            path: '/v1/chain/compute_transaction',\n            params: {\n                transaction: tx,\n            },\n        });\n    }\n    async send_read_only_transaction(tx) {\n        if (!isInstanceOf(tx, PackedTransaction)) {\n            tx = PackedTransaction.fromSigned(SignedTransaction.from(tx));\n        }\n        return this.client.call({\n            path: '/v1/chain/send_read_only_transaction',\n            params: {\n                transaction: tx,\n            },\n        });\n    }\n    async push_transaction(tx) {\n        if (!isInstanceOf(tx, PackedTransaction)) {\n            tx = PackedTransaction.fromSigned(SignedTransaction.from(tx));\n        }\n        return this.client.call({\n            path: '/v1/chain/push_transaction',\n            params: tx,\n        });\n    }\n    async send_transaction(tx) {\n        if (!isInstanceOf(tx, PackedTransaction)) {\n            tx = PackedTransaction.fromSigned(SignedTransaction.from(tx));\n        }\n        return this.client.call({\n            path: '/v1/chain/send_transaction',\n            params: tx,\n        });\n    }\n    async send_transaction2(tx, options) {\n        if (!isInstanceOf(tx, PackedTransaction)) {\n            tx = PackedTransaction.fromSigned(SignedTransaction.from(tx));\n        }\n        return this.client.call({\n            path: '/v1/chain/send_transaction2',\n            params: {\n                return_failure_trace: true,\n                retry_trx: false,\n                retry_trx_num_blocks: 0,\n                transaction: tx,\n                ...options,\n            },\n        });\n    }\n    async get_table_rows(params) {\n        const type = params.type;\n        let key_type = params.key_type;\n        const someBound = params.lower_bound || params.upper_bound;\n        if (!key_type && someBound) {\n            // determine key type from bounds type\n            if (isInstanceOf(someBound, UInt64)) {\n                key_type = 'i64';\n            }\n            else if (isInstanceOf(someBound, UInt128)) {\n                key_type = 'i128';\n            }\n            else if (isInstanceOf(someBound, Checksum256)) {\n                key_type = 'sha256';\n            }\n            else if (isInstanceOf(someBound, Checksum160)) {\n                key_type = 'ripemd160';\n            }\n        }\n        if (!key_type) {\n            key_type = 'name';\n        }\n        let json = params.json;\n        if (json === undefined) {\n            // if we know the row type don't ask the node to perform abi decoding\n            json = type === undefined;\n        }\n        let upper_bound = params.upper_bound;\n        if (upper_bound && typeof upper_bound !== 'string') {\n            upper_bound = String(upper_bound);\n        }\n        let lower_bound = params.lower_bound;\n        if (lower_bound && typeof lower_bound !== 'string') {\n            lower_bound = String(lower_bound);\n        }\n        let scope = params.scope;\n        if (typeof scope === 'undefined') {\n            scope = String(Name.from(params.code));\n        }\n        else if (typeof scope !== 'string') {\n            scope = String(scope);\n        }\n        // eslint-disable-next-line prefer-const\n        let { rows, more, next_key } = await this.client.call({\n            path: '/v1/chain/get_table_rows',\n            params: {\n                ...params,\n                code: Name.from(params.code),\n                table: Name.from(params.table),\n                limit: params.limit !== undefined ? UInt32.from(params.limit) : undefined,\n                scope,\n                key_type,\n                json,\n                upper_bound,\n                lower_bound,\n            },\n        });\n        let ram_payers;\n        if (params.show_payer) {\n            ram_payers = [];\n            rows = rows.map(({ data, payer }) => {\n                ram_payers.push(Name.from(payer));\n                return data;\n            });\n        }\n        if (type) {\n            if (json) {\n                rows = rows.map((value) => {\n                    if (typeof value === 'string' && Bytes.isBytes(value)) {\n                        // this handles the case where nodeos bails on abi decoding and just returns a hex string\n                        return Serializer.decode({ data: Bytes.from(value), type });\n                    }\n                    else {\n                        return Serializer.decode({ object: value, type });\n                    }\n                });\n            }\n            else {\n                rows = rows\n                    .map((hex) => Bytes.from(hex))\n                    .map((data) => Serializer.decode({ data, type }));\n            }\n        }\n        if (next_key && next_key.length > 0) {\n            let indexType;\n            // set index type so we can decode next_key in the response if present\n            switch (key_type) {\n                case 'i64':\n                    indexType = UInt64;\n                    break;\n                case 'i128':\n                    indexType = UInt128;\n                    break;\n                case 'name':\n                    indexType = Name;\n                    break;\n                case 'float64':\n                    indexType = Float64;\n                    break;\n                case 'float128':\n                    indexType = Float128;\n                    break;\n                case 'sha256':\n                    indexType = Checksum256;\n                    break;\n                case 'ripemd160':\n                    indexType = Checksum160;\n                    break;\n                default:\n                    throw new Error(`Unsupported key type: ${key_type}`);\n            }\n            if (indexType === Name) {\n                // names are sent back as an uint64 string instead of a name string..\n                next_key = Name.from(Serializer.decode({ object: next_key, type: UInt64 }));\n            }\n            else {\n                next_key = Serializer.decode({ object: next_key, type: indexType });\n            }\n        }\n        else {\n            next_key = undefined;\n        }\n        return { rows, more, next_key, ram_payers };\n    }\n    async get_table_by_scope(params) {\n        return this.client.call({\n            path: '/v1/chain/get_table_by_scope',\n            params,\n            responseType: GetTableByScopeResponse,\n        });\n    }\n    async get_transaction_status(id) {\n        return this.client.call({\n            path: '/v1/chain/get_transaction_status',\n            params: {\n                id: Checksum256.from(id),\n            },\n            responseType: GetTransactionStatusResponse,\n        });\n    }\n}\n\nclass HistoryAPI {\n    constructor(client) {\n        this.client = client;\n    }\n    async get_actions(accountName, pos, offset) {\n        return this.client.call({\n            path: '/v1/history/get_actions',\n            params: {\n                account_name: Name.from(accountName),\n                pos: Int32.from(pos),\n                offset: Int32.from(offset),\n            },\n            responseType: GetActionsResponse,\n        });\n    }\n    async get_transaction(id, options = {}) {\n        return this.client.call({\n            path: '/v1/history/get_transaction',\n            params: {\n                id: Checksum256.from(id),\n                block_num_hint: options.blockNumHint && UInt32.from(options.blockNumHint),\n                traces: options.excludeTraces === true ? false : undefined,\n            },\n            responseType: GetTransactionResponse,\n        });\n    }\n    async get_key_accounts(publicKey) {\n        return this.client.call({\n            path: '/v1/history/get_key_accounts',\n            params: { public_key: PublicKey.from(publicKey) },\n            responseType: GetKeyAccountsResponse,\n        });\n    }\n    async get_controlled_accounts(controllingAccount) {\n        return this.client.call({\n            path: '/v1/history/get_controlled_accounts',\n            params: { controlling_account: Name.from(controllingAccount) },\n            responseType: GetControlledAccountsResponse,\n        });\n    }\n}\n\nclass APIError extends Error {\n    static formatError(error) {\n        if (error.what === 'unspecified' &&\n            error.details[0].file &&\n            error.details[0].file === 'http_plugin.cpp' &&\n            error.details[0].message.slice(0, 11) === 'unknown key') {\n            // fix cryptic error messages from nodeos for missing accounts\n            return 'Account not found';\n        }\n        else if (error.what === 'unspecified' && error.details && error.details.length > 0) {\n            return error.details[0].message;\n        }\n        else if (error.what && error.what.length > 0) {\n            return error.what;\n        }\n        else {\n            return 'Unknown API error';\n        }\n    }\n    constructor(path, response) {\n        let message;\n        if (response.json && response.json.error) {\n            message = `${APIError.formatError(response.json.error)} at ${path}`;\n        }\n        else {\n            message = `HTTP ${response.status} at ${path}`;\n        }\n        super(message);\n        this.path = path;\n        this.response = response;\n    }\n    /** The nodeos error object. */\n    get error() {\n        const { json } = this.response;\n        return (json ? json.error : undefined);\n    }\n    /** The nodeos error name, e.g. `tx_net_usage_exceeded` */\n    get name() {\n        const { error } = this;\n        return error ? error.name : 'unspecified';\n    }\n    /** The nodeos error code, e.g. `3080002`. */\n    get code() {\n        const { error } = this;\n        return error ? error.code : 0;\n    }\n    /** List of exceptions, if any. */\n    get details() {\n        const { error } = this;\n        return error ? error.details : [];\n    }\n}\nAPIError.__className = 'APIError';\nclass APIClient {\n    constructor(options) {\n        this.v1 = {\n            chain: new ChainAPI(this),\n            history: new HistoryAPI(this),\n        };\n        if (options.provider) {\n            this.provider = options.provider;\n        }\n        else if (options.url) {\n            this.provider = new FetchProvider(options.url, options);\n        }\n        else {\n            throw new Error('Missing url or provider');\n        }\n    }\n    async call(args) {\n        const response = await this.provider.call(args);\n        const { json } = response;\n        if (Math.floor(response.status / 100) !== 2 || (json && typeof json.error === 'object')) {\n            throw new APIError(args.path, response);\n        }\n        if (args.responseType) {\n            return abiDecode({ type: args.responseType, object: response.json });\n        }\n        return response.json || response.text;\n    }\n}\nAPIClient.__className = 'APIClient';\n\nvar types$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    v1: types$2\n});\n\nvar BlockHeader_1;\nlet HandshakeMessage = class HandshakeMessage extends Struct {\n};\n__decorate([\n    Struct.field('uint16')\n], HandshakeMessage.prototype, \"networkVersion\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], HandshakeMessage.prototype, \"chainId\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], HandshakeMessage.prototype, \"nodeId\", void 0);\n__decorate([\n    Struct.field('public_key')\n], HandshakeMessage.prototype, \"key\", void 0);\n__decorate([\n    Struct.field('int64')\n], HandshakeMessage.prototype, \"time\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], HandshakeMessage.prototype, \"token\", void 0);\n__decorate([\n    Struct.field('signature')\n], HandshakeMessage.prototype, \"sig\", void 0);\n__decorate([\n    Struct.field('string')\n], HandshakeMessage.prototype, \"p2pAddress\", void 0);\n__decorate([\n    Struct.field('uint32')\n], HandshakeMessage.prototype, \"lastIrreversibleBlockNumber\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], HandshakeMessage.prototype, \"lastIrreversibleBlockId\", void 0);\n__decorate([\n    Struct.field('uint32')\n], HandshakeMessage.prototype, \"headNum\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], HandshakeMessage.prototype, \"headId\", void 0);\n__decorate([\n    Struct.field('string')\n], HandshakeMessage.prototype, \"os\", void 0);\n__decorate([\n    Struct.field('string')\n], HandshakeMessage.prototype, \"agent\", void 0);\n__decorate([\n    Struct.field('int16')\n], HandshakeMessage.prototype, \"generation\", void 0);\nHandshakeMessage = __decorate([\n    Struct.type('handshake_message')\n], HandshakeMessage);\nlet ChainSizeMessage = class ChainSizeMessage extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], ChainSizeMessage.prototype, \"lastIrreversibleBlockNumber\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], ChainSizeMessage.prototype, \"lastIrreversibleBlockId\", void 0);\n__decorate([\n    Struct.field('uint32')\n], ChainSizeMessage.prototype, \"headNum\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], ChainSizeMessage.prototype, \"headId\", void 0);\nChainSizeMessage = __decorate([\n    Struct.type('chain_size_message')\n], ChainSizeMessage);\nlet GoAwayMessage = class GoAwayMessage extends Struct {\n};\n__decorate([\n    Struct.field('uint8')\n], GoAwayMessage.prototype, \"reason\", void 0);\n__decorate([\n    Struct.field('checksum256')\n], GoAwayMessage.prototype, \"nodeId\", void 0);\nGoAwayMessage = __decorate([\n    Struct.type('go_away_message')\n], GoAwayMessage);\nlet TimeMessage = class TimeMessage extends Struct {\n};\n__decorate([\n    Struct.field('int64')\n], TimeMessage.prototype, \"org\", void 0);\n__decorate([\n    Struct.field('int64')\n], TimeMessage.prototype, \"rec\", void 0);\n__decorate([\n    Struct.field('int64')\n], TimeMessage.prototype, \"xmt\", void 0);\n__decorate([\n    Struct.field('int64')\n], TimeMessage.prototype, \"dst\", void 0);\nTimeMessage = __decorate([\n    Struct.type('time_message')\n], TimeMessage);\nlet NoticeMessage = class NoticeMessage extends Struct {\n};\n__decorate([\n    Struct.field('checksum256', { array: true })\n], NoticeMessage.prototype, \"knownTrx\", void 0);\n__decorate([\n    Struct.field(BlockId, { array: true })\n], NoticeMessage.prototype, \"knownBlocks\", void 0);\nNoticeMessage = __decorate([\n    Struct.type('notice_message')\n], NoticeMessage);\nlet RequestMessage = class RequestMessage extends Struct {\n};\n__decorate([\n    Struct.field('checksum256', { array: true })\n], RequestMessage.prototype, \"reqTrx\", void 0);\n__decorate([\n    Struct.field(BlockId, { array: true })\n], RequestMessage.prototype, \"reqBlocks\", void 0);\nRequestMessage = __decorate([\n    Struct.type('request_message')\n], RequestMessage);\nlet SyncRequestMessage = class SyncRequestMessage extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], SyncRequestMessage.prototype, \"startBlock\", void 0);\n__decorate([\n    Struct.field('uint32')\n], SyncRequestMessage.prototype, \"endBlock\", void 0);\nSyncRequestMessage = __decorate([\n    Struct.type('sync_request_message')\n], SyncRequestMessage);\nlet NewProducersEntry = class NewProducersEntry extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], NewProducersEntry.prototype, \"producer_name\", void 0);\n__decorate([\n    Struct.field('public_key')\n], NewProducersEntry.prototype, \"block_signing_key\", void 0);\nNewProducersEntry = __decorate([\n    Struct.type('new_producers_entry')\n], NewProducersEntry);\nlet NewProducers = class NewProducers extends Struct {\n};\n__decorate([\n    Struct.field('uint32')\n], NewProducers.prototype, \"version\", void 0);\n__decorate([\n    Struct.field(NewProducersEntry, { array: true })\n], NewProducers.prototype, \"producers\", void 0);\nNewProducers = __decorate([\n    Struct.type('new_producers')\n], NewProducers);\nlet BlockExtension = class BlockExtension extends Struct {\n};\n__decorate([\n    Struct.field('uint16')\n], BlockExtension.prototype, \"type\", void 0);\n__decorate([\n    Struct.field('bytes')\n], BlockExtension.prototype, \"data\", void 0);\nBlockExtension = __decorate([\n    Struct.type('block_extension')\n], BlockExtension);\nlet HeaderExtension = class HeaderExtension extends Struct {\n};\n__decorate([\n    Struct.field('uint16')\n], HeaderExtension.prototype, \"type\", void 0);\n__decorate([\n    Struct.field('bytes')\n], HeaderExtension.prototype, \"data\", void 0);\nHeaderExtension = __decorate([\n    Struct.type('header_extension')\n], HeaderExtension);\nlet TrxVariant = class TrxVariant extends Variant {\n};\nTrxVariant = __decorate([\n    Variant.type('trx_variant', [Checksum256, PackedTransaction])\n], TrxVariant);\nlet FullTransactionReceipt = class FullTransactionReceipt extends Struct {\n};\n__decorate([\n    Struct.field(UInt8)\n], FullTransactionReceipt.prototype, \"status\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], FullTransactionReceipt.prototype, \"cpu_usage_us\", void 0);\n__decorate([\n    Struct.field(VarUInt)\n], FullTransactionReceipt.prototype, \"net_usage_words\", void 0);\n__decorate([\n    Struct.field(TrxVariant)\n], FullTransactionReceipt.prototype, \"trx\", void 0);\nFullTransactionReceipt = __decorate([\n    Struct.type('full_transaction_receipt')\n], FullTransactionReceipt);\nlet BlockHeader = BlockHeader_1 = class BlockHeader extends Struct {\n    get blockNum() {\n        return this.previous.blockNum.adding(1);\n    }\n    get id() {\n        const id = Checksum256.hash(Serializer.encode({ object: this, type: BlockHeader_1 }));\n        return BlockId.fromBlockChecksum(id, this.blockNum);\n    }\n};\n__decorate([\n    Struct.field('uint32')\n], BlockHeader.prototype, \"timeSlot\", void 0);\n__decorate([\n    Struct.field('name')\n], BlockHeader.prototype, \"producer\", void 0);\n__decorate([\n    Struct.field('uint16')\n], BlockHeader.prototype, \"confirmed\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], BlockHeader.prototype, \"previous\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], BlockHeader.prototype, \"transaction_mroot\", void 0);\n__decorate([\n    Struct.field(BlockId)\n], BlockHeader.prototype, \"action_mroot\", void 0);\n__decorate([\n    Struct.field('uint32')\n], BlockHeader.prototype, \"schedule_version\", void 0);\n__decorate([\n    Struct.field(NewProducers, { optional: true })\n], BlockHeader.prototype, \"new_producers\", void 0);\n__decorate([\n    Struct.field('any', { array: true })\n], BlockHeader.prototype, \"header_extensions\", void 0);\nBlockHeader = BlockHeader_1 = __decorate([\n    Struct.type('block_header')\n], BlockHeader);\nlet SignedBlock = class SignedBlock extends BlockHeader {\n};\n__decorate([\n    Struct.field('signature')\n], SignedBlock.prototype, \"producer_signature\", void 0);\n__decorate([\n    Struct.field(FullTransactionReceipt, { array: true })\n], SignedBlock.prototype, \"transactions\", void 0);\n__decorate([\n    Struct.field(BlockExtension, { array: true })\n], SignedBlock.prototype, \"block_extensions\", void 0);\nSignedBlock = __decorate([\n    Struct.type('signed_block')\n], SignedBlock);\nlet NetMessage = class NetMessage extends Variant {\n};\nNetMessage = __decorate([\n    Variant.type('net_message', [\n        HandshakeMessage,\n        ChainSizeMessage,\n        GoAwayMessage,\n        TimeMessage,\n        NoticeMessage,\n        RequestMessage,\n        SyncRequestMessage,\n        SignedBlock,\n        PackedTransaction,\n    ])\n], NetMessage);\n\nvar types = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get BlockExtension () { return BlockExtension; },\n    get BlockHeader () { return BlockHeader; },\n    get ChainSizeMessage () { return ChainSizeMessage; },\n    get FullTransactionReceipt () { return FullTransactionReceipt; },\n    get GoAwayMessage () { return GoAwayMessage; },\n    get HandshakeMessage () { return HandshakeMessage; },\n    get HeaderExtension () { return HeaderExtension; },\n    get NetMessage () { return NetMessage; },\n    get NewProducers () { return NewProducers; },\n    get NewProducersEntry () { return NewProducersEntry; },\n    get NoticeMessage () { return NoticeMessage; },\n    get RequestMessage () { return RequestMessage; },\n    get SignedBlock () { return SignedBlock; },\n    get SyncRequestMessage () { return SyncRequestMessage; },\n    get TimeMessage () { return TimeMessage; }\n});\n\nclass P2PClient {\n    constructor(options) {\n        if (options.provider) {\n            this.provider = options.provider;\n        }\n        else {\n            throw new Error('Missing provider');\n        }\n        if (options.setTimeoutImpl !== undefined) {\n            this.setTimeoutImpl = options.setTimeoutImpl;\n        }\n        else {\n            this.setTimeoutImpl = setTimeout;\n        }\n        if (options.heartbeatTimoutMs !== undefined) {\n            this.heartbeatTimoutMs = options.heartbeatTimoutMs;\n            this.resetHeartbeat();\n        }\n        this.provider.on('data', (data) => {\n            this.handleData(data);\n        });\n        this.provider.on('error', (e) => {\n            this.emit('error', [e]);\n        });\n        this.provider.on('close', () => {\n            this.emit('close', []);\n        });\n        this.eventListeners = {};\n    }\n    send(message, done) {\n        const wrappedMessage = NetMessage.from(message);\n        const messageBuffer = Serializer.encode({ object: wrappedMessage });\n        this.provider.write(messageBuffer.array, done);\n    }\n    end(cb) {\n        this.endHeartbeat();\n        this.provider.end(cb);\n    }\n    destroy(err) {\n        this.endHeartbeat();\n        this.provider.destroy(err);\n    }\n    handleData(data) {\n        try {\n            const message = Serializer.decode({ type: NetMessage, data });\n            this.emit('message', [message]);\n        }\n        catch (e) {\n            this.emit('error', [e]);\n        }\n    }\n    endHeartbeat() {\n        if (this.heartbeatTimoutId !== undefined) {\n            clearTimeout(this.heartbeatTimoutId);\n            this.heartbeatTimoutId = undefined;\n        }\n    }\n    resetHeartbeat() {\n        this.endHeartbeat();\n        if (this.heartbeatTimoutMs !== undefined) {\n            this.setTimeoutImpl(() => {\n                this.handleHeartbeat();\n            }, this.heartbeatTimoutMs);\n        }\n    }\n    handleHeartbeat() {\n        const now = Date.now();\n        const timeMessage = TimeMessage.from({\n            org: now,\n            rec: 0,\n            xmt: 0,\n            dst: 0,\n        });\n        this.send(timeMessage, () => {\n            this.resetHeartbeat();\n        });\n    }\n    on(event, handler) {\n        return this.addListenerInternal(event, handler, false, false);\n    }\n    once(event, handler) {\n        return this.addListenerInternal(event, handler, true, false);\n    }\n    addListener(event, handler) {\n        return this.addListenerInternal(event, handler, false, false);\n    }\n    prependListener(event, handler) {\n        return this.addListenerInternal(event, handler, false, true);\n    }\n    removeListener(event, handler) {\n        if (this.eventListeners[event] !== undefined) {\n            this.eventListeners[event] = this.eventListeners[event].filter((e) => {\n                return e.handler !== handler;\n            });\n        }\n        return this;\n    }\n    addListenerInternal(event, handler, once, prepend) {\n        if (this.eventListeners[event] === undefined) {\n            this.eventListeners[event] = [];\n        }\n        if (!prepend) {\n            this.eventListeners[event].push({ once, handler });\n        }\n        else {\n            this.eventListeners[event].unshift({ once, handler });\n        }\n        return this;\n    }\n    emit(event, args) {\n        if (this.eventListeners[event] === undefined) {\n            return;\n        }\n        for (const { handler } of this.eventListeners[event]) {\n            // typescript is loosing the specificity provided by T in the assignment above\n            const erasedHandler = handler;\n            erasedHandler(...args);\n        }\n        this.eventListeners[event] = this.eventListeners[event].filter((e) => {\n            return e.once !== true;\n        });\n    }\n}\nP2PClient.__className = 'P2PClient';\n\nclass SimpleEnvelopeP2PProvider {\n    constructor(nextProvider) {\n        this.nextProvider = nextProvider;\n        this.remainingData = new Uint8Array(0);\n        this.dataHandlers = [];\n        this.errorHandlers = [];\n        // process nextProvider data\n        this.nextProvider.on('data', (data) => {\n            const newData = new Uint8Array(this.remainingData.byteLength + data.byteLength);\n            newData.set(this.remainingData, 0);\n            newData.set(data, this.remainingData.byteLength);\n            this.remainingData = newData;\n            while (this.remainingData.byteLength >= 4) {\n                const view = new DataView(this.remainingData.buffer);\n                const messageLength = view.getUint32(0, true);\n                if (messageLength > SimpleEnvelopeP2PProvider.maxReadLength) {\n                    this.emitError(new Error('Incoming Message too long'));\n                }\n                if (this.remainingData.byteLength < 4 + messageLength) {\n                    // need more data\n                    break;\n                }\n                const messageBuffer = this.remainingData.subarray(4, 4 + messageLength);\n                this.remainingData = this.remainingData.slice(4 + messageLength);\n                this.emitData(messageBuffer);\n            }\n        });\n        // proxy error\n        this.nextProvider.on('error', (err) => {\n            this.emitError(err);\n        });\n    }\n    write(data, done) {\n        const nextBuffer = new Uint8Array(4 + data.byteLength);\n        const view = new DataView(nextBuffer.buffer);\n        view.setUint32(0, data.byteLength, true);\n        nextBuffer.set(data, 4);\n        this.nextProvider.write(nextBuffer, done);\n    }\n    end(cb) {\n        this.nextProvider.end(cb);\n    }\n    destroy(err) {\n        this.nextProvider.destroy(err);\n    }\n    on(event, handler) {\n        if (event === 'data') {\n            this.dataHandlers.push(handler);\n        }\n        else if (event === 'error') {\n            this.errorHandlers.push(handler);\n        }\n        else {\n            this.nextProvider.on(event, handler);\n        }\n        return this;\n    }\n    emitData(messageBuffer) {\n        for (const handler of this.dataHandlers) {\n            // typescript is loosing the specificity provided by T in the assignment above\n            handler(messageBuffer);\n        }\n    }\n    emitError(err) {\n        for (const handler of this.errorHandlers) {\n            // typescript is loosing the specificity provided by T in the assignment above\n            handler(err);\n        }\n    }\n}\nSimpleEnvelopeP2PProvider.maxReadLength = 8 * 1024 * 1024;\n\nexport { ABI, ABIDecoder, ABIEncoder, types$1 as API, APIClient, APIError, Action, Asset, Authority, Base58, Blob, BlockId, BlockTimestamp, Bytes, ChainAPI, Checksum160, Checksum256, Checksum512, CompressionType, ExtendedAsset, ExtendedSymbol, FetchProvider, Float128, Float32, Float64, HistoryAPI, Int, Int128, Int16, Int32, Int64, Int8, KeyType, KeyWeight, Name, types as P2P, P2PClient, PackedTransaction, PermissionLevel, PermissionLevelWeight, PrivateKey, PublicKey, Serializer, Signature, SignedTransaction, SimpleEnvelopeP2PProvider, Struct, TimePoint, TimePointSec, Transaction, TransactionExtension, TransactionHeader, TransactionReceipt, TypeAlias, UInt128, UInt16, UInt32, UInt64, UInt8, VarInt, VarUInt, Variant, WaitWeight, Weight, isInstanceOf };\n//# sourceMappingURL=antelope.m.js.map\n","import { Struct, Checksum256, Name, Asset, API, Int64, Float64, TimePoint } from '@wharfkit/antelope';\n\nclass Canceled extends Error {\n    constructor(reason, silent = false) {\n        super(reason);\n        this.silent = false;\n        this.silent = silent;\n        Object.setPrototypeOf(this, Canceled.prototype);\n    }\n}\nfunction cancelable(promise, onCancel) {\n    let cancel = null;\n    const cancelable = new Promise((resolve, reject) => {\n        cancel = (reason = '', silent = false) => {\n            try {\n                if (onCancel) {\n                    onCancel(new Canceled(reason, silent));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n            return cancelable;\n        };\n        promise.then(resolve, reject);\n    });\n    if (cancel) {\n        cancelable.cancel = cancel;\n    }\n    return cancelable;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nlet ExplorerDefinition = class ExplorerDefinition extends Struct {\n    url(id) {\n        return `${this.prefix}${id}${this.suffix}`;\n    }\n};\n__decorate([\n    Struct.field('string')\n], ExplorerDefinition.prototype, \"prefix\", void 0);\n__decorate([\n    Struct.field('string')\n], ExplorerDefinition.prototype, \"suffix\", void 0);\nExplorerDefinition = __decorate([\n    Struct.type('explorer_definition')\n], ExplorerDefinition);\n\nvar Logo_1;\nlet Logo = Logo_1 = class Logo extends Struct {\n    static from(data) {\n        if (typeof data === 'string') {\n            return new Logo_1({ light: data, dark: data });\n        }\n        return super.from(data);\n    }\n    getVariant(variant) {\n        return this[variant];\n    }\n    toString() {\n        return this.light;\n    }\n};\n__decorate([\n    Struct.field('string')\n], Logo.prototype, \"dark\", void 0);\n__decorate([\n    Struct.field('string')\n], Logo.prototype, \"light\", void 0);\nLogo = Logo_1 = __decorate([\n    Struct.type('logo')\n], Logo);\n\nlet TokenIdentifier = class TokenIdentifier extends Struct {\n};\n__decorate([\n    Struct.field(Checksum256)\n], TokenIdentifier.prototype, \"chain\", void 0);\n__decorate([\n    Struct.field(Name)\n], TokenIdentifier.prototype, \"contract\", void 0);\n__decorate([\n    Struct.field(Asset.Symbol)\n], TokenIdentifier.prototype, \"symbol\", void 0);\nTokenIdentifier = __decorate([\n    Struct.type('token_identifier')\n], TokenIdentifier);\nlet TokenMeta = class TokenMeta extends Struct {\n};\n__decorate([\n    Struct.field(TokenIdentifier)\n], TokenMeta.prototype, \"id\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], TokenMeta.prototype, \"logo\", void 0);\nTokenMeta = __decorate([\n    Struct.type('token_meta')\n], TokenMeta);\nlet TokenBalance = class TokenBalance extends Struct {\n};\n__decorate([\n    Struct.field(Asset)\n], TokenBalance.prototype, \"asset\", void 0);\n__decorate([\n    Struct.field(Name)\n], TokenBalance.prototype, \"contract\", void 0);\n__decorate([\n    Struct.field(TokenMeta)\n], TokenBalance.prototype, \"metadata\", void 0);\nTokenBalance = __decorate([\n    Struct.type('token_balance')\n], TokenBalance);\n\nclass ChainDefinition {\n    constructor(data) {\n        this.id = Checksum256.from(data.id);\n        this.url = data.url;\n        this.logo = data.logo;\n        this.explorer = data.explorer;\n        this.accountDataType = data.accountDataType;\n        this.coinType = data.coinType;\n        if (data.systemTokenContract && data.systemTokenSymbol) {\n            this.systemToken = TokenIdentifier.from({\n                chain: this.id,\n                contract: data.systemTokenContract,\n                symbol: data.systemTokenSymbol,\n            });\n        }\n        if (data.systemToken) {\n            this.systemToken = data.systemToken;\n        }\n    }\n    static from(data) {\n        return new ChainDefinition({\n            ...data,\n            explorer: data.explorer ? ExplorerDefinition.from(data.explorer) : undefined,\n            logo: data.logo ? Logo.from(data.logo) : undefined,\n        });\n    }\n    get name() {\n        const indice = chainIdsToIndices.get(String(this.id));\n        if (!indice) {\n            return 'Unknown blockchain';\n        }\n        return ChainNames[indice];\n    }\n    getLogo() {\n        const id = String(this.id);\n        if (this.logo) {\n            return Logo.from(this.logo);\n        }\n        if (chainLogos.has(id)) {\n            const logo = chainLogos.get(id);\n            if (logo) {\n                return Logo.from(logo);\n            }\n        }\n        return undefined;\n    }\n    equals(def) {\n        const other = ChainDefinition.from(def);\n        return this.id.equals(other.id) && this.url === other.url;\n    }\n}\nconst ChainNames = {\n    EOS: 'EOS',\n    FIO: 'FIO',\n    FIOTestnet: 'FIO (Testnet)',\n    Jungle4: 'Jungle 4 (Testnet)',\n    KylinTestnet: 'Kylin (Testnet)',\n    Libre: 'Libre',\n    LibreTestnet: 'Libre (Testnet)',\n    Proton: 'XPR Network',\n    ProtonTestnet: 'XPR Network (Testnet)',\n    Telos: 'Telos',\n    TelosTestnet: 'Telos (Testnet)',\n    UX: 'UX Network',\n    Vaulta: 'Vaulta',\n    WAX: 'WAX',\n    WAXTestnet: 'WAX (Testnet)',\n    XPR: 'XPR Network',\n    XPRTestnet: 'XPR Network (Testnet)',\n};\nlet TelosAccountVoterInfo = class TelosAccountVoterInfo extends API.v1.AccountVoterInfo {\n};\n__decorate([\n    Struct.field(Int64)\n], TelosAccountVoterInfo.prototype, \"last_stake\", void 0);\nTelosAccountVoterInfo = __decorate([\n    Struct.type('telos_account_voter_info')\n], TelosAccountVoterInfo);\nlet TelosAccountObject = class TelosAccountObject extends API.v1.AccountObject {\n};\n__decorate([\n    Struct.field(TelosAccountVoterInfo, { optional: true })\n], TelosAccountObject.prototype, \"voter_info\", void 0);\nTelosAccountObject = __decorate([\n    Struct.type('telos_account_object')\n], TelosAccountObject);\nlet WAXAccountVoterInfo = class WAXAccountVoterInfo extends API.v1.AccountVoterInfo {\n};\n__decorate([\n    Struct.field(Float64)\n], WAXAccountVoterInfo.prototype, \"unpaid_voteshare\", void 0);\n__decorate([\n    Struct.field(TimePoint)\n], WAXAccountVoterInfo.prototype, \"unpaid_voteshare_last_updated\", void 0);\n__decorate([\n    Struct.field(Float64)\n], WAXAccountVoterInfo.prototype, \"unpaid_voteshare_change_rate\", void 0);\n__decorate([\n    Struct.field(TimePoint)\n], WAXAccountVoterInfo.prototype, \"last_claim_time\", void 0);\nWAXAccountVoterInfo = __decorate([\n    Struct.type('wax_account_voter_info')\n], WAXAccountVoterInfo);\nlet WAXAccountObject = class WAXAccountObject extends API.v1.AccountObject {\n};\n__decorate([\n    Struct.field(WAXAccountVoterInfo, { optional: true })\n], WAXAccountObject.prototype, \"voter_info\", void 0);\nWAXAccountObject = __decorate([\n    Struct.type('wax_account_object')\n], WAXAccountObject);\nvar Chains;\n(function (Chains) {\n    Chains.EOS = ChainDefinition.from({\n        id: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        url: 'https://eos.greymass.com',\n        coinType: 194,\n        systemTokenSymbol: '4,EOS',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.FIO = ChainDefinition.from({\n        id: '21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c',\n        url: 'https://fio.greymass.com',\n        coinType: 235,\n        systemTokenSymbol: '9,FIO',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.FIOTestnet = ChainDefinition.from({\n        id: 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e',\n        url: 'https://fiotestnet.greymass.com',\n        systemTokenSymbol: '9,FIO',\n        systemTokenContract: 'fio.token',\n    });\n    Chains.Jungle4 = ChainDefinition.from({\n        id: '73e4385a2708e6d7048834fbc1079f2fabb17b3c125b146af438971e90716c4d',\n        url: 'https://jungle4.greymass.com',\n        coinType: 194,\n        systemTokenSymbol: '4,EOS',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.KylinTestnet = ChainDefinition.from({\n        id: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191',\n        url: 'https://kylintestnet.greymass.com',\n        coinType: 194,\n        systemTokenSymbol: '4,EOS',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.Libre = ChainDefinition.from({\n        id: '38b1d7815474d0c60683ecbea321d723e83f5da6ae5f1c1f9fecc69d9ba96465',\n        url: 'https://libre.greymass.com',\n        systemTokenSymbol: '4,LIBRE',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.LibreTestnet = ChainDefinition.from({\n        id: 'b64646740308df2ee06c6b72f34c0f7fa066d940e831f752db2006fcc2b78dee',\n        url: 'https://libretestnet.greymass.com',\n        systemTokenSymbol: '4,LIBRE',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.Proton = ChainDefinition.from({\n        id: '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0',\n        url: 'https://proton.greymass.com',\n        systemTokenSymbol: '4,XPR',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.ProtonTestnet = ChainDefinition.from({\n        id: '71ee83bcf52142d61019d95f9cc5427ba6a0d7ff8accd9e2088ae2abeaf3d3dd',\n        url: 'https://proton-testnet.greymass.com',\n        systemTokenSymbol: '4,XPR',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.Telos = ChainDefinition.from({\n        id: '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11',\n        url: 'https://telos.greymass.com',\n        accountDataType: TelosAccountObject,\n        coinType: 977,\n        systemTokenSymbol: '4,TLOS',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.TelosTestnet = ChainDefinition.from({\n        id: '1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f',\n        url: 'https://telostestnet.greymass.com',\n        accountDataType: TelosAccountObject,\n        coinType: 977,\n        systemTokenSymbol: '4,TLOS',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.UX = ChainDefinition.from({\n        id: '8fc6dce7942189f842170de953932b1f66693ad3788f766e777b6f9d22335c02',\n        url: 'https://api.uxnetwork.io',\n        systemTokenSymbol: '4,UTX',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.Vaulta = ChainDefinition.from({\n        id: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        url: 'https://eos.greymass.com',\n        coinType: 194,\n        systemTokenSymbol: '4,A',\n        systemTokenContract: 'core.vaulta',\n    });\n    Chains.WAX = ChainDefinition.from({\n        id: '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4',\n        url: 'https://wax.greymass.com',\n        accountDataType: WAXAccountObject,\n        coinType: 14001,\n        systemTokenSymbol: '8,WAX',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.WAXTestnet = ChainDefinition.from({\n        id: 'f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12',\n        url: 'https://waxtestnet.greymass.com',\n        accountDataType: WAXAccountObject,\n        coinType: 14001,\n        systemTokenSymbol: '8,WAX',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.XPR = ChainDefinition.from({\n        id: '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0',\n        url: 'https://proton.greymass.com',\n        systemTokenSymbol: '4,XPR',\n        systemTokenContract: 'eosio.token',\n    });\n    Chains.XPRTestnet = ChainDefinition.from({\n        id: '71ee83bcf52142d61019d95f9cc5427ba6a0d7ff8accd9e2088ae2abeaf3d3dd',\n        url: 'https://proton-testnet.greymass.com',\n        systemTokenSymbol: '4,XPR',\n        systemTokenContract: 'eosio.token',\n    });\n})(Chains || (Chains = {}));\nconst chainIdsToIndices = new Map([\n    ['21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c', 'FIO'],\n    ['b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e', 'FIOTestnet'],\n    ['73e4385a2708e6d7048834fbc1079f2fabb17b3c125b146af438971e90716c4d', 'Jungle4'],\n    ['5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191', 'KylinTestnet'],\n    ['38b1d7815474d0c60683ecbea321d723e83f5da6ae5f1c1f9fecc69d9ba96465', 'Libre'],\n    ['b64646740308df2ee06c6b72f34c0f7fa066d940e831f752db2006fcc2b78dee', 'LibreTestnet'],\n    ['384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0', 'XPR'],\n    ['71ee83bcf52142d61019d95f9cc5427ba6a0d7ff8accd9e2088ae2abeaf3d3dd', 'XPRTestnet'],\n    ['4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11', 'Telos'],\n    ['1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f', 'TelosTestnet'],\n    ['8fc6dce7942189f842170de953932b1f66693ad3788f766e777b6f9d22335c02', 'UX'],\n    ['aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906', 'Vaulta'],\n    ['1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4', 'WAX'],\n    ['f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12', 'WAXTestnet'],\n]);\nconst chainLogos = new Map([\n    [\n        '21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c',\n        'https://assets.wharfkit.com/chain/fio.png',\n    ],\n    [\n        'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e',\n        'https://assets.wharfkit.com/chain/fio.png',\n    ],\n    [\n        '2a02a0053e5a8cf73a56ba0fda11e4d92e0238a4a2aa74fccf46d5a910746840',\n        'https://assets.wharfkit.com/chain/jungle.png',\n    ],\n    [\n        '73e4385a2708e6d7048834fbc1079f2fabb17b3c125b146af438971e90716c4d',\n        'https://assets.wharfkit.com/chain/jungle.png',\n    ],\n    [\n        '38b1d7815474d0c60683ecbea321d723e83f5da6ae5f1c1f9fecc69d9ba96465',\n        'https://assets.wharfkit.com/chain/libre.png',\n    ],\n    [\n        'b64646740308df2ee06c6b72f34c0f7fa066d940e831f752db2006fcc2b78dee',\n        'https://assets.wharfkit.com/chain/libre.png',\n    ],\n    [\n        '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0',\n        'https://assets.wharfkit.com/chain/xprnetwork.png',\n    ],\n    [\n        '71ee83bcf52142d61019d95f9cc5427ba6a0d7ff8accd9e2088ae2abeaf3d3dd',\n        'https://assets.wharfkit.com/chain/xprnetwork.png',\n    ],\n    [\n        '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11',\n        'https://assets.wharfkit.com/chain/telos.png',\n    ],\n    [\n        '1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f',\n        'https://assets.wharfkit.com/chain/telos.png',\n    ],\n    [\n        'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        'https://assets.wharfkit.com/chain/vaulta.png',\n    ],\n    [\n        '8fc6dce7942189f842170de953932b1f66693ad3788f766e777b6f9d22335c02',\n        'https://assets.wharfkit.com/chain/ux.png',\n    ],\n    [\n        '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4',\n        'https://assets.wharfkit.com/chain/wax.png',\n    ],\n    [\n        'f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12',\n        'https://assets.wharfkit.com/chain/wax.png',\n    ],\n]);\n\nexport { Canceled, ChainDefinition, ChainNames, Chains, ExplorerDefinition, Logo, TelosAccountObject, TelosAccountVoterInfo, TokenBalance, TokenIdentifier, TokenMeta, WAXAccountObject, WAXAccountVoterInfo, cancelable, chainIdsToIndices, chainLogos };\n//# sourceMappingURL=common.m.js.map\n","/**\n * EOSIO Signing Request v3.2.0\n * https://github.com/greymass/eosio-signing-request\n *\n * @license\n * Copyright © 2021 Greymass Inc.\n * \n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the “Software”), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n * \n * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR\n * INTENDED FOR USE IN THE DESIGN, CONSTRUCTION, OPERATION OR\n * MAINTENANCE OF ANY MILITARY FACILITY.\n */\nimport { TypeAlias, Variant, Checksum256, isInstanceOf, UInt8, Struct, PermissionLevel, Action, Transaction, Name, TimePointSec, Signature, Serializer, Authority, Bytes, ABIEncoder, ABIDecoder, ABI, UInt16, UInt32 } from '@wharfkit/antelope';\nimport { __decorate } from 'tslib';\n\n/**\n * Base64u - URL-Safe Base64 variant no padding.\n * Based on https://gist.github.com/jonleighton/958841\n */\nconst baseCharset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < 62; i++) {\n    lookup[baseCharset.charCodeAt(i)] = i;\n}\n// support both urlsafe and standard base64\nlookup[43] = lookup[45] = 62;\nlookup[47] = lookup[95] = 63;\nfunction encode(data, urlSafe = true) {\n    const byteLength = data.byteLength;\n    const byteRemainder = byteLength % 3;\n    const mainLength = byteLength - byteRemainder;\n    const charset = baseCharset + (urlSafe ? '-_' : '+/');\n    const parts = [];\n    let a;\n    let b;\n    let c;\n    let d;\n    let chunk;\n    // Main loop deals with bytes in chunks of 3\n    for (let i = 0; i < mainLength; i += 3) {\n        // Combine the three bytes into a single integer\n        chunk = (data[i] << 16) | (data[i + 1] << 8) | data[i + 2];\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n        d = chunk & 63; // 63       =  2^6 - 1\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        parts.push(charset[a] + charset[b] + charset[c] + charset[d]);\n    }\n    // Deal with the remaining bytes\n    if (byteRemainder === 1) {\n        chunk = data[mainLength];\n        a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3) << 4; // 3   = 2^2 - 1\n        parts.push(charset[a] + charset[b]);\n    }\n    else if (byteRemainder === 2) {\n        chunk = (data[mainLength] << 8) | data[mainLength + 1];\n        a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15) << 2; // 15    = 2^4 - 1\n        parts.push(charset[a] + charset[b] + charset[c]);\n    }\n    return parts.join('');\n}\nfunction decode(input) {\n    const byteLength = input.length * 0.75;\n    const data = new Uint8Array(byteLength);\n    let a;\n    let b;\n    let c;\n    let d;\n    let p = 0;\n    for (let i = 0; i < input.length; i += 4) {\n        a = lookup[input.charCodeAt(i)];\n        b = lookup[input.charCodeAt(i + 1)];\n        c = lookup[input.charCodeAt(i + 2)];\n        d = lookup[input.charCodeAt(i + 3)];\n        data[p++] = (a << 2) | (b >> 4);\n        data[p++] = ((b & 15) << 4) | (c >> 2);\n        data[p++] = ((c & 3) << 6) | (d & 63);\n    }\n    return data;\n}\n\nvar base64u = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode,\n    decode: decode\n});\n\n/** Chain ID aliases. */\nvar ChainName;\n(function (ChainName) {\n    ChainName[ChainName[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    ChainName[ChainName[\"EOS\"] = 1] = \"EOS\";\n    ChainName[ChainName[\"TELOS\"] = 2] = \"TELOS\";\n    ChainName[ChainName[\"JUNGLE\"] = 3] = \"JUNGLE\";\n    ChainName[ChainName[\"KYLIN\"] = 4] = \"KYLIN\";\n    ChainName[ChainName[\"WORBLI\"] = 5] = \"WORBLI\";\n    ChainName[ChainName[\"BOS\"] = 6] = \"BOS\";\n    ChainName[ChainName[\"MEETONE\"] = 7] = \"MEETONE\";\n    ChainName[ChainName[\"INSIGHTS\"] = 8] = \"INSIGHTS\";\n    ChainName[ChainName[\"BEOS\"] = 9] = \"BEOS\";\n    ChainName[ChainName[\"WAX\"] = 10] = \"WAX\";\n    ChainName[ChainName[\"PROTON\"] = 11] = \"PROTON\";\n    ChainName[ChainName[\"FIO\"] = 12] = \"FIO\";\n})(ChainName || (ChainName = {}));\nlet ChainId = class ChainId extends Checksum256 {\n    static from(value) {\n        if (isInstanceOf(value, this)) {\n            return value;\n        }\n        if (typeof value === 'number') {\n            value = ChainIdLookup.get(value);\n            if (!value) {\n                throw new Error('Unknown chain id alias');\n            }\n        }\n        return super.from(value);\n    }\n    get chainVariant() {\n        const name = this.chainName;\n        if (name !== ChainName.UNKNOWN) {\n            return ChainIdVariant.from(['chain_alias', name]);\n        }\n        return ChainIdVariant.from(this);\n    }\n    get chainName() {\n        const cid = this.hexString;\n        for (const [n, id] of ChainIdLookup) {\n            if (id === cid) {\n                return n;\n            }\n        }\n        return ChainName.UNKNOWN;\n    }\n};\nChainId = __decorate([\n    TypeAlias('chain_id')\n], ChainId);\nlet ChainAlias = class ChainAlias extends UInt8 {\n};\nChainAlias = __decorate([\n    TypeAlias('chain_alias')\n], ChainAlias);\nlet ChainIdVariant = class ChainIdVariant extends Variant {\n    get chainId() {\n        if (isInstanceOf(this.value, ChainId)) {\n            return this.value;\n        }\n        return ChainId.from(Number(this.value.value));\n    }\n};\nChainIdVariant = __decorate([\n    Variant.type('variant_id', [ChainAlias, ChainId])\n], ChainIdVariant);\nconst ChainIdLookup = new Map([\n    [ChainName.EOS, 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'],\n    [ChainName.TELOS, '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11'],\n    [ChainName.JUNGLE, 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'],\n    [ChainName.KYLIN, '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'],\n    [ChainName.WORBLI, '73647cde120091e0a4b85bced2f3cfdb3041e266cbbe95cee59b73235a1b3b6f'],\n    [ChainName.BOS, 'd5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86'],\n    [ChainName.MEETONE, 'cfe6486a83bad4962f232d48003b1824ab5665c36778141034d75e57b956e422'],\n    [ChainName.INSIGHTS, 'b042025541e25a472bffde2d62edd457b7e70cee943412b1ea0f044f88591664'],\n    [ChainName.BEOS, 'b912d19a6abd2b1b05611ae5be473355d64d95aeff0c09bedc8c166cd6468fe4'],\n    [ChainName.WAX, '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4'],\n    [ChainName.PROTON, '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0'],\n    [ChainName.FIO, '21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c'],\n]);\n\n/** SigningRequest ABI and typedefs. */\nvar RequestFlags_1;\nlet AccountName = class AccountName extends Name {\n};\nAccountName = __decorate([\n    TypeAlias('account_name')\n], AccountName);\nlet PermissionName = class PermissionName extends Name {\n};\nPermissionName = __decorate([\n    TypeAlias('permission_name')\n], PermissionName);\nlet IdentityV2 = class IdentityV2 extends Struct {\n};\n__decorate([\n    Struct.field(PermissionLevel, { optional: true })\n], IdentityV2.prototype, \"permission\", void 0);\nIdentityV2 = __decorate([\n    Struct.type('identity')\n], IdentityV2);\nlet IdentityV3 = class IdentityV3 extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], IdentityV3.prototype, \"scope\", void 0);\n__decorate([\n    Struct.field(PermissionLevel, { optional: true })\n], IdentityV3.prototype, \"permission\", void 0);\nIdentityV3 = __decorate([\n    Struct.type('identity')\n], IdentityV3);\nlet RequestVariantV2 = class RequestVariantV2 extends Variant {\n};\nRequestVariantV2 = __decorate([\n    Variant.type('variant_req', [Action, { type: Action, array: true }, Transaction, IdentityV2])\n], RequestVariantV2);\nlet RequestVariantV3 = class RequestVariantV3 extends Variant {\n};\nRequestVariantV3 = __decorate([\n    Variant.type('variant_req', [Action, { type: Action, array: true }, Transaction, IdentityV3])\n], RequestVariantV3);\nlet RequestFlags = RequestFlags_1 = class RequestFlags extends UInt8 {\n    get broadcast() {\n        return (Number(this) & RequestFlags_1.broadcast) !== 0;\n    }\n    set broadcast(enabled) {\n        this.setFlag(RequestFlags_1.broadcast, enabled);\n    }\n    get background() {\n        return (Number(this) & RequestFlags_1.background) !== 0;\n    }\n    set background(enabled) {\n        this.setFlag(RequestFlags_1.background, enabled);\n    }\n    setFlag(flag, enabled) {\n        if (enabled) {\n            // TODO: implement bitwise operators in core, bn.js setbit does not work\n            this.value = UInt8.from(Number(this) | flag).value;\n        }\n        else {\n            this.value = UInt8.from(Number(this) & ~flag).value;\n        }\n    }\n};\nRequestFlags.broadcast = 1 << 0;\nRequestFlags.background = 1 << 1;\nRequestFlags = RequestFlags_1 = __decorate([\n    TypeAlias('request_flags')\n], RequestFlags);\nlet InfoPair = class InfoPair extends Struct {\n};\n__decorate([\n    Struct.field('string')\n], InfoPair.prototype, \"key\", void 0);\n__decorate([\n    Struct.field('bytes')\n], InfoPair.prototype, \"value\", void 0);\nInfoPair = __decorate([\n    Struct.type('info_pair')\n], InfoPair);\nlet RequestDataV2 = class RequestDataV2 extends Struct {\n};\n__decorate([\n    Struct.field(ChainIdVariant)\n], RequestDataV2.prototype, \"chain_id\", void 0);\n__decorate([\n    Struct.field(RequestVariantV2)\n], RequestDataV2.prototype, \"req\", void 0);\n__decorate([\n    Struct.field(RequestFlags)\n], RequestDataV2.prototype, \"flags\", void 0);\n__decorate([\n    Struct.field('string')\n], RequestDataV2.prototype, \"callback\", void 0);\n__decorate([\n    Struct.field(InfoPair, { array: true })\n], RequestDataV2.prototype, \"info\", void 0);\nRequestDataV2 = __decorate([\n    Struct.type('signing_request')\n], RequestDataV2);\nlet RequestDataV3 = class RequestDataV3 extends Struct {\n};\n__decorate([\n    Struct.field(ChainIdVariant)\n], RequestDataV3.prototype, \"chain_id\", void 0);\n__decorate([\n    Struct.field(RequestVariantV3)\n], RequestDataV3.prototype, \"req\", void 0);\n__decorate([\n    Struct.field(RequestFlags)\n], RequestDataV3.prototype, \"flags\", void 0);\n__decorate([\n    Struct.field('string')\n], RequestDataV3.prototype, \"callback\", void 0);\n__decorate([\n    Struct.field(InfoPair, { array: true })\n], RequestDataV3.prototype, \"info\", void 0);\nRequestDataV3 = __decorate([\n    Struct.type('signing_request')\n], RequestDataV3);\nlet RequestSignature = class RequestSignature extends Struct {\n};\n__decorate([\n    Struct.field('name')\n], RequestSignature.prototype, \"signer\", void 0);\n__decorate([\n    Struct.field('signature')\n], RequestSignature.prototype, \"signature\", void 0);\nRequestSignature = __decorate([\n    Struct.type('request_signature')\n], RequestSignature);\n\nvar IdentityProof_1;\nlet IdentityProof = IdentityProof_1 = class IdentityProof extends Struct {\n    static from(value) {\n        if (isInstanceOf(value, IdentityProof_1)) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            return IdentityProof_1.fromString(value);\n        }\n        else {\n            return super.from(value);\n        }\n    }\n    /**\n     * Create a new instance from an EOSIO authorization header string.\n     * \"EOSIO <base64payload>\"\n     */\n    static fromString(string) {\n        const parts = string.split(' ');\n        if (parts.length !== 2 || parts[0] !== 'EOSIO') {\n            throw new Error('Invalid IdentityProof string');\n        }\n        const data = decode(parts[1]);\n        return Serializer.decode({ data, type: IdentityProof_1 });\n    }\n    /** Create a new instance from a callback payload. */\n    static fromPayload(payload, options = {}) {\n        const request = SigningRequest.from(payload.req, options);\n        if (!(request.version >= 3 && request.isIdentity())) {\n            throw new Error('Not an identity request');\n        }\n        return this.from({\n            chainId: payload.cid || request.getChainId(),\n            scope: request.getIdentityScope(),\n            expiration: payload.ex,\n            signer: { actor: payload.sa, permission: payload.sp },\n            signature: payload.sig,\n        });\n    }\n    /**\n     * Transaction this proof resolves to.\n     * @internal\n     */\n    get transaction() {\n        const action = Action.from({\n            account: '',\n            name: 'identity',\n            authorization: [this.signer],\n            data: IdentityV3.from({ scope: this.scope, permission: this.signer }),\n        });\n        return Transaction.from({\n            ref_block_num: 0,\n            ref_block_prefix: 0,\n            expiration: this.expiration,\n            actions: [action],\n        });\n    }\n    /**\n     * Recover the public key that signed this proof.\n     */\n    recover() {\n        return this.signature.recoverDigest(this.transaction.signingDigest(this.chainId));\n    }\n    /**\n     * Verify that given authority signed this proof.\n     * @param auth The accounts signing authority.\n     * @param currentTime Time to verify expiry against, if unset will use system time.\n     */\n    verify(auth, currentTime) {\n        const now = TimePointSec.from(currentTime || new Date()).toMilliseconds();\n        return (now < this.expiration.toMilliseconds() &&\n            Authority.from(auth).hasPermission(this.recover()));\n    }\n    /**\n     * Encode the proof to an `EOSIO` auth header string.\n     */\n    toString() {\n        const data = Serializer.encode({ object: this });\n        return `EOSIO ${encode(data.array, false)}`;\n    }\n};\n__decorate([\n    Struct.field(ChainId)\n], IdentityProof.prototype, \"chainId\", void 0);\n__decorate([\n    Struct.field(Name)\n], IdentityProof.prototype, \"scope\", void 0);\n__decorate([\n    Struct.field(TimePointSec)\n], IdentityProof.prototype, \"expiration\", void 0);\n__decorate([\n    Struct.field(PermissionLevel)\n], IdentityProof.prototype, \"signer\", void 0);\n__decorate([\n    Struct.field(Signature)\n], IdentityProof.prototype, \"signature\", void 0);\nIdentityProof = IdentityProof_1 = __decorate([\n    Struct.type('identity_proof')\n], IdentityProof);\n\n/**\n * EOSIO Signing Request (ESR).\n */\n/** Current supported protocol version, backwards compatible with version 2. */\nconst ProtocolVersion = 3;\n/**\n * The placeholder name: `............1` aka `uint64(1)`.\n * If used in action data will be resolved to current signer.\n * If used in as an authorization permission will be resolved to\n * the signers permission level.\n *\n * Example action:\n * ```\n * { account: \"eosio.token\",\n *   name: \"transfer\",\n *   authorization: [{actor: \"............1\", permission: \"............1\"}],\n *   data: {\n *     from: \"............1\",\n *     to: \"bar\",\n *     quantity: \"42.0000 EOS\",\n *     memo: \"Don't panic\" }}\n * ```\n * When signed by `foo@active` would resolve to:\n * ```\n * { account: \"eosio.token\",\n *   name: \"transfer\",\n *   authorization: [{actor: \"foo\", permission: \"active\"}],\n *   data: {\n *     from: \"foo\",\n *     to: \"bar\",\n *     quantity: \"42.0000 EOS\",\n *     memo: \"Don't panic\" }}\n * ```\n */\nconst PlaceholderName = Name.from('............1'); // aka uint64(1)\n/** Placeholder that will resolve to signer permission name. */\nconst PlaceholderPermission = Name.from('............2'); // aka uint64(2)\nconst PlaceholderAuth = PermissionLevel.from({\n    actor: PlaceholderName,\n    permission: PlaceholderPermission,\n});\nclass SigningRequest {\n    /**\n     * Create a new signing request.\n     * Normally not used directly, see the `create` and `from` class methods.\n     */\n    constructor(version, data, zlib, abiProvider, signature) {\n        if (data.flags.broadcast && data.req.variantName === 'identity') {\n            throw new Error('Invalid request (identity request cannot be broadcast)');\n        }\n        this.version = version;\n        this.data = data;\n        this.zlib = zlib;\n        this.abiProvider = abiProvider;\n        this.signature = signature;\n    }\n    /** Return the identity ABI for given version. */\n    static identityAbi(version) {\n        const abi = Serializer.synthesize(this.identityType(version));\n        abi.actions = [{ name: 'identity', type: 'identity', ricardian_contract: '' }];\n        return abi;\n    }\n    /** Return the ABISerializableType identity type for given version. */\n    static identityType(version) {\n        return version === 2 ? IdentityV2 : IdentityV3;\n    }\n    /** Return the ABISerializableType storage type for given version. */\n    static storageType(version) {\n        return version === 2 ? RequestDataV2 : RequestDataV3;\n    }\n    /** Create a new signing request. */\n    static async create(args, options = {}) {\n        let actions;\n        if (args.action) {\n            actions = [args.action];\n        }\n        else if (args.actions) {\n            actions = args.actions;\n        }\n        else if (args.transaction) {\n            actions = args.transaction.actions || [];\n        }\n        else {\n            actions = [];\n        }\n        const requiredAbis = actions\n            .filter((action) => !Bytes.isBytes(action.data) &&\n            action.data.constructor.abiName === undefined)\n            .map((action) => Name.from(action.account));\n        const abis = {};\n        if (requiredAbis.length > 0) {\n            const provider = options.abiProvider;\n            if (!provider) {\n                throw new Error('Missing abi provider');\n            }\n            const accountAbis = await Promise.all(requiredAbis.map((account) => provider.getAbi(account)));\n            for (const [idx, abi] of accountAbis.entries()) {\n                abis[requiredAbis[idx].toString()] = abi;\n            }\n        }\n        return this.createSync(args, options, abis);\n    }\n    /**\n     * Synchronously create a new signing request.\n     * @throws If an un-encoded action with no abi def is encountered.\n     */\n    static createSync(args, options = {}, abis = {}) {\n        let version = 2;\n        const data = {};\n        const encode = (action) => encodeAction(action, abis);\n        // multi-chain requests requires version 3\n        if (args.chainId === null) {\n            version = 3;\n        }\n        // set the request data\n        if (args.identity !== undefined) {\n            if (args.identity.scope) {\n                version = 3;\n            }\n            data.req = ['identity', this.identityType(version).from(args.identity)];\n        }\n        else if (args.action && !args.actions && !args.transaction) {\n            data.req = ['action', encode(args.action)];\n        }\n        else if (args.actions && !args.action && !args.transaction) {\n            if (args.actions.length === 1) {\n                data.req = ['action', encode(args.actions[0])];\n            }\n            else {\n                data.req = ['action[]', args.actions.map(encode)];\n            }\n        }\n        else if (args.transaction && !args.action && !args.actions) {\n            const tx = args.transaction;\n            // set default values if missing\n            if (tx.expiration === undefined) {\n                tx.expiration = '1970-01-01T00:00:00.000';\n            }\n            if (tx.ref_block_num === undefined) {\n                tx.ref_block_num = 0;\n            }\n            if (tx.ref_block_prefix === undefined) {\n                tx.ref_block_prefix = 0;\n            }\n            if (tx.context_free_actions === undefined) {\n                tx.context_free_actions = [];\n            }\n            if (tx.transaction_extensions === undefined) {\n                tx.transaction_extensions = [];\n            }\n            if (tx.delay_sec === undefined) {\n                tx.delay_sec = 0;\n            }\n            if (tx.max_cpu_usage_ms === undefined) {\n                tx.max_cpu_usage_ms = 0;\n            }\n            if (tx.max_net_usage_words === undefined) {\n                tx.max_net_usage_words = 0;\n            }\n            if (tx.actions === undefined) {\n                tx.actions = [];\n            }\n            if (tx.context_free_actions === undefined) {\n                tx.context_free_actions = [];\n            }\n            // encode actions if needed\n            tx.actions = tx.actions.map(encode);\n            data.req = ['transaction', tx];\n        }\n        else {\n            throw new TypeError('Invalid arguments: Must have exactly one of action, actions or transaction');\n        }\n        // set the chain id\n        if (args.chainId === null) {\n            data.chain_id = ChainIdVariant.from(['chain_alias', 0]);\n        }\n        else {\n            data.chain_id = ChainId.from(args.chainId || ChainName.EOS).chainVariant;\n        }\n        // request flags and callback\n        const flags = RequestFlags.from(0);\n        let callback = '';\n        flags.broadcast = args.broadcast !== undefined ? args.broadcast : data.req[0] !== 'identity';\n        if (typeof args.callback === 'string') {\n            callback = args.callback;\n        }\n        else if (typeof args.callback === 'object') {\n            callback = args.callback.url;\n            flags.background = args.callback.background || false;\n        }\n        data.flags = flags;\n        data.callback = callback;\n        // info pairs\n        data.info = [];\n        if (typeof args.info === 'object') {\n            for (const key in args.info) {\n                const isOwn = Object.prototype.hasOwnProperty.call(args.info, key);\n                if (isOwn) {\n                    let value = args.info[key];\n                    if (typeof value === 'string') {\n                        value = Bytes.from(value, 'utf8');\n                    }\n                    else if (!(value instanceof Bytes)) {\n                        value = Serializer.encode({ object: value });\n                    }\n                    data.info.push({ key, value });\n                }\n            }\n        }\n        if (args.chainIds && args.chainId === null) {\n            const ids = args.chainIds.map((id) => ChainId.from(id).chainVariant);\n            data.info.push({\n                key: 'chain_ids',\n                value: Serializer.encode({ object: ids, type: { type: ChainIdVariant, array: true } }),\n            });\n        }\n        const req = new SigningRequest(version, this.storageType(version).from(data), options.zlib, options.abiProvider);\n        // sign the request if given a signature provider\n        if (options.signatureProvider) {\n            req.sign(options.signatureProvider);\n        }\n        return req;\n    }\n    /** Creates an identity request. */\n    static identity(args, options = {}) {\n        let permission = {\n            actor: args.account || PlaceholderName,\n            permission: args.permission || PlaceholderPermission,\n        };\n        if (permission.actor === PlaceholderName &&\n            permission.permission === PlaceholderPermission) {\n            permission = undefined;\n        }\n        return this.createSync({\n            ...args,\n            identity: {\n                permission,\n                scope: args.scope,\n            },\n            broadcast: false,\n        }, options);\n    }\n    /**\n     * Create a request from a chain id and serialized transaction.\n     * @param chainId The chain id where the transaction is valid.\n     * @param serializedTransaction The serialized transaction.\n     * @param options Creation options.\n     */\n    static fromTransaction(chainId, serializedTransaction, options = {}) {\n        const id = ChainId.from(chainId);\n        serializedTransaction = Bytes.from(serializedTransaction);\n        const encoder = new ABIEncoder();\n        encoder.writeByte(2); // header\n        encoder.writeArray(Serializer.encode({ object: id.chainVariant }).array);\n        encoder.writeByte(2); // transaction variant\n        encoder.writeArray(Bytes.from(serializedTransaction).array);\n        encoder.writeByte(RequestFlags.broadcast);\n        encoder.writeByte(0); // callback\n        encoder.writeByte(0); // info\n        return SigningRequest.fromData(encoder.getData(), options);\n    }\n    /** Creates a signing request from encoded `esr:` uri string. */\n    static from(uri, options = {}) {\n        if (typeof uri !== 'string') {\n            throw new Error('Invalid request uri');\n        }\n        const [, path] = uri.split(':');\n        const data = decode(path.startsWith('//') ? path.slice(2) : path);\n        return SigningRequest.fromData(data, options);\n    }\n    static fromData(data, options = {}) {\n        data = Bytes.from(data);\n        const header = data.array[0];\n        const version = header & ~(1 << 7);\n        if (version !== 2 && version !== 3) {\n            throw new Error('Unsupported protocol version');\n        }\n        let payload = data.droppingFirst(1);\n        if ((header & (1 << 7)) !== 0) {\n            if (!options.zlib) {\n                throw new Error('Compressed URI needs zlib');\n            }\n            payload = Bytes.from(options.zlib.inflateRaw(payload.array));\n        }\n        const decoder = new ABIDecoder(payload.array);\n        const req = Serializer.decode({ data: decoder, type: this.storageType(version) });\n        let sig;\n        if (decoder.canRead()) {\n            sig = Serializer.decode({ data: decoder, type: RequestSignature });\n        }\n        return new SigningRequest(version, req, options.zlib, options.abiProvider, sig);\n    }\n    /**\n     * Sign the request, mutating.\n     * @param signatureProvider The signature provider that provides a signature for the signer.\n     */\n    sign(signatureProvider) {\n        const message = this.getSignatureDigest();\n        this.signature = RequestSignature.from(signatureProvider.sign(message));\n    }\n    /**\n     * Get the signature digest for this request.\n     */\n    getSignatureDigest() {\n        // protocol version + utf8 \"request\"\n        const prefix = [this.version, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74];\n        return Checksum256.hash(Bytes.from(prefix).appending(this.getData()));\n    }\n    /**\n     * Set the signature data for this request, mutating.\n     * @param signer Account name of signer.\n     * @param signature The signature string.\n     */\n    setSignature(signer, signature) {\n        this.signature = RequestSignature.from({ signer, signature });\n    }\n    /**\n     * Set the request callback, mutating.\n     * @param url Where the callback should be sent.\n     * @param background Whether the callback should be sent in the background.\n     */\n    setCallback(url, background) {\n        this.data.callback = url;\n        this.data.flags.background = background;\n    }\n    /**\n     * Set broadcast flag.\n     * @param broadcast Whether the transaction should be broadcast by receiver.\n     */\n    setBroadcast(broadcast) {\n        this.data.flags.broadcast = broadcast;\n    }\n    /**\n     * Encode this request into an `esr:` uri.\n     * @argument compress Whether to compress the request data using zlib,\n     *                    defaults to true if omitted and zlib is present;\n     *                    otherwise false.\n     * @argument slashes Whether add slashes after the protocol scheme, i.e. `esr://`.\n     *                   Defaults to true.\n     * @returns An esr uri string.\n     */\n    encode(compress, slashes, scheme = 'esr:') {\n        const shouldCompress = compress !== undefined ? compress : this.zlib !== undefined;\n        if (shouldCompress && this.zlib === undefined) {\n            throw new Error('Need zlib to compress');\n        }\n        let header = this.version;\n        const data = this.getData();\n        const sigData = this.getSignatureData();\n        let array = new Uint8Array(data.byteLength + sigData.byteLength);\n        array.set(data, 0);\n        array.set(sigData, data.byteLength);\n        if (shouldCompress) {\n            const deflated = this.zlib.deflateRaw(array);\n            if (array.byteLength > deflated.byteLength) {\n                header |= 1 << 7;\n                array = deflated;\n            }\n        }\n        const out = new Uint8Array(1 + array.byteLength);\n        out[0] = header;\n        out.set(array, 1);\n        if (slashes !== false) {\n            scheme += '//';\n        }\n        return scheme + encode(out);\n    }\n    /** Get the request data without header or signature. */\n    getData() {\n        return Serializer.encode({ object: this.data }).array;\n    }\n    /** Get signature data, returns an empty array if request is not signed. */\n    getSignatureData() {\n        if (!this.signature) {\n            return new Uint8Array(0);\n        }\n        return Serializer.encode({ object: this.signature }).array;\n    }\n    /** ABI definitions required to resolve request. */\n    getRequiredAbis() {\n        return this.getRawActions()\n            .filter((action) => !isIdentity(action))\n            .map((action) => action.account)\n            .filter((value, index, self) => self.indexOf(value) === index);\n    }\n    /** Whether TaPoS values are required to resolve request. */\n    requiresTapos() {\n        const tx = this.getRawTransaction();\n        return !this.isIdentity() && !hasTapos(tx);\n    }\n    /** Resolve required ABI definitions. */\n    async fetchAbis(abiProvider) {\n        const required = this.getRequiredAbis();\n        if (required.length > 0) {\n            const provider = abiProvider || this.abiProvider;\n            if (!provider) {\n                throw new Error('Missing ABI provider');\n            }\n            const abis = new Map();\n            await Promise.all(required.map(async (account) => {\n                abis.set(account.toString(), ABI.from(await provider.getAbi(account)));\n            }));\n            return abis;\n        }\n        else {\n            return new Map();\n        }\n    }\n    /**\n     * Decode raw actions actions to object representations.\n     * @param abis ABI defenitions required to decode all actions.\n     * @param signer Placeholders in actions will be resolved to signer if set.\n     */\n    resolveActions(abis, signer) {\n        return this.getRawActions().map((rawAction) => {\n            let abi;\n            if (isIdentity(rawAction)) {\n                abi = this.constructor.identityAbi(this.version);\n            }\n            else {\n                const rawAbi = abis.get(rawAction.account.toString());\n                if (!rawAbi) {\n                    throw new Error(`Missing ABI definition for ${rawAction.account}`);\n                }\n                abi = ABI.from(rawAbi);\n            }\n            const type = abi.getActionType(rawAction.name);\n            if (!type) {\n                throw new Error(`Missing type for action ${rawAction.account}:${rawAction.name} in ABI`);\n            }\n            let data = rawAction.decodeData(abi);\n            let authorization = rawAction.authorization;\n            if (signer) {\n                const signerPerm = PermissionLevel.from(signer);\n                const resolve = (value) => {\n                    if (value instanceof Name) {\n                        if (value.equals(PlaceholderName)) {\n                            return signerPerm.actor;\n                        }\n                        else if (value.equals(PlaceholderPermission)) {\n                            return signerPerm.permission;\n                        }\n                        else {\n                            return value;\n                        }\n                    }\n                    else if (Array.isArray(value)) {\n                        return value.map(resolve);\n                    }\n                    else if (typeof value === 'object' && value !== null) {\n                        for (const key of Object.keys(value)) {\n                            value[key] = resolve(value[key]);\n                        }\n                        return value;\n                    }\n                    else {\n                        return value;\n                    }\n                };\n                data = resolve(data);\n                authorization = authorization.map((auth) => {\n                    let { actor, permission } = auth;\n                    if (actor.equals(PlaceholderName)) {\n                        actor = signerPerm.actor;\n                    }\n                    if (permission.equals(PlaceholderPermission)) {\n                        permission = signerPerm.permission;\n                    }\n                    // backwards compatibility, actor placeholder will also resolve to permission when used in auth\n                    if (permission.equals(PlaceholderName)) {\n                        permission = signerPerm.permission;\n                    }\n                    return PermissionLevel.from({ actor, permission });\n                });\n            }\n            return {\n                ...rawAction,\n                authorization,\n                data,\n            };\n        });\n    }\n    resolveTransaction(abis, signer, ctx = {}) {\n        const tx = this.getRawTransaction();\n        if (!this.isIdentity() && !hasTapos(tx)) {\n            if (ctx.expiration !== undefined &&\n                ctx.ref_block_num !== undefined &&\n                ctx.ref_block_prefix !== undefined) {\n                tx.expiration = TimePointSec.from(ctx.expiration);\n                tx.ref_block_num = UInt16.from(ctx.ref_block_num, 'truncate');\n                tx.ref_block_prefix = UInt32.from(ctx.ref_block_prefix);\n            }\n            else if (ctx.block_num !== undefined &&\n                ctx.ref_block_prefix !== undefined &&\n                ctx.timestamp !== undefined) {\n                tx.expiration = expirationTime(ctx.timestamp, ctx.expire_seconds);\n                tx.ref_block_num = UInt16.from(ctx.block_num, 'truncate');\n                tx.ref_block_prefix = UInt32.from(ctx.ref_block_prefix);\n            }\n            else {\n                throw new Error('Invalid transaction context, need either a reference block or explicit TaPoS values');\n            }\n        }\n        else if (this.isIdentity() && this.version > 2) {\n            // From ESR version 3 all identity requests have expiration\n            tx.expiration = ctx.expiration\n                ? TimePointSec.from(ctx.expiration)\n                : expirationTime(ctx.timestamp, ctx.expire_seconds);\n        }\n        const actions = this.resolveActions(abis, signer);\n        // TODO: resolve context free actions\n        const context_free_actions = tx.context_free_actions;\n        return { ...tx, context_free_actions, actions };\n    }\n    resolve(abis, signer, ctx = {}) {\n        const tx = this.resolveTransaction(abis, signer, ctx);\n        const actions = tx.actions.map((action) => {\n            let abi;\n            if (isIdentity(action)) {\n                abi = this.constructor.identityAbi(this.version);\n            }\n            else {\n                abi = abis.get(action.account.toString());\n            }\n            if (!abi) {\n                throw new Error(`Missing ABI definition for ${action.account}`);\n            }\n            const type = abi.getActionType(action.name);\n            const data = Serializer.encode({ object: action.data, type, abi });\n            return Action.from({ ...action, data });\n        });\n        const transaction = Transaction.from({ ...tx, actions });\n        let chainId;\n        if (this.isMultiChain()) {\n            if (!ctx.chainId) {\n                throw new Error('Missing chosen chain ID for multi-chain request');\n            }\n            chainId = ChainId.from(ctx.chainId);\n            const ids = this.getChainIds();\n            if (ids && !ids.some((id) => chainId.equals(id))) {\n                throw new Error('Trying to resolve for chain ID not defined in request');\n            }\n        }\n        else {\n            chainId = this.getChainId();\n        }\n        return new ResolvedSigningRequest(this, PermissionLevel.from(signer), transaction, tx, chainId);\n    }\n    /**\n     * Get the id of the chain where this request is valid.\n     * @returns The 32-byte chain id as hex encoded string.\n     */\n    getChainId() {\n        return this.data.chain_id.chainId;\n    }\n    /**\n     * Chain IDs this request is valid for, only valid for multi chain requests. Value of `null` when `isMultiChain` is true denotes any chain.\n     */\n    getChainIds() {\n        if (!this.isMultiChain()) {\n            return null;\n        }\n        const ids = this.getInfoKey('chain_ids', { type: ChainIdVariant, array: true });\n        if (ids) {\n            return ids.map((id) => id.chainId);\n        }\n        return null;\n    }\n    /**\n     * Set chain IDs this request is valid for, only considered for multi chain requests.\n     */\n    setChainIds(ids) {\n        const value = ids.map((id) => ChainId.from(id).chainVariant);\n        this.setInfoKey('chain_ids', value, { type: ChainIdVariant, array: true });\n    }\n    /**\n     * True if chainId is set to chain alias `0` which indicates that the request is valid for any chain.\n     */\n    isMultiChain() {\n        return (this.data.chain_id.variantIdx === 0 &&\n            this.data.chain_id.value.equals(ChainName.UNKNOWN));\n    }\n    /** Return the actions in this request with action data encoded. */\n    getRawActions() {\n        const req = this.data.req;\n        switch (req.variantName) {\n            case 'action':\n                return [req.value];\n            case 'action[]':\n                return req.value;\n            case 'identity': {\n                if (this.version === 2) {\n                    const id = req.value;\n                    let data = '0101000000000000000200000000000000'; // placeholder permission\n                    let authorization = [PlaceholderAuth];\n                    if (id.permission) {\n                        data = Serializer.encode({ object: id });\n                        authorization = [id.permission];\n                    }\n                    const action = Action.from({\n                        account: '',\n                        name: 'identity',\n                        authorization,\n                        data,\n                    });\n                    // TODO: The way payloads are encoded is including the ABI, which isn't what we want\n                    // This needs to be resolved in wharfkit/antelope, and then the delete call here should be removed\n                    delete action.abi;\n                    return [action];\n                }\n                else {\n                    // eslint-disable-next-line prefer-const\n                    let { scope, permission } = req.value;\n                    if (!permission) {\n                        permission = PlaceholderAuth;\n                    }\n                    const data = Serializer.encode({ object: { scope, permission }, type: IdentityV3 });\n                    const action = Action.from({\n                        account: '',\n                        name: 'identity',\n                        authorization: [permission],\n                        data,\n                    });\n                    // TODO: The way payloads are encoded is including the ABI, which isn't what we want\n                    // This needs to be resolved in wharfkit/antelope, and then the delete call here should be removed\n                    delete action.abi;\n                    return [action];\n                }\n            }\n            case 'transaction':\n                return req.value.actions;\n            default:\n                throw new Error('Invalid signing request data');\n        }\n    }\n    /** Unresolved transaction. */\n    getRawTransaction() {\n        const req = this.data.req;\n        switch (req.variantName) {\n            case 'transaction':\n                return Transaction.from({ ...req.value });\n            case 'action':\n            case 'action[]':\n            case 'identity':\n                return Transaction.from({\n                    actions: this.getRawActions(),\n                    context_free_actions: [],\n                    transaction_extensions: [],\n                    expiration: '1970-01-01T00:00:00.000',\n                    ref_block_num: 0,\n                    ref_block_prefix: 0,\n                    max_cpu_usage_ms: 0,\n                    max_net_usage_words: 0,\n                    delay_sec: 0,\n                });\n            default:\n                throw new Error('Invalid signing request data');\n        }\n    }\n    /** Whether the request is an identity request. */\n    isIdentity() {\n        return this.data.req.variantName === 'identity';\n    }\n    /** Whether the request should be broadcast by signer. */\n    shouldBroadcast() {\n        if (this.isIdentity()) {\n            return false;\n        }\n        return this.data.flags.broadcast;\n    }\n    /**\n     * Present if the request is an identity request and requests a specific account.\n     * @note This returns `nil` unless a specific identity has been requested,\n     *       use `isIdentity` to check id requests.\n     */\n    getIdentity() {\n        if (!this.isIdentity()) {\n            return null;\n        }\n        const id = this.data.req.value;\n        if (id.permission && !id.permission.actor.equals(PlaceholderName)) {\n            return id.permission.actor;\n        }\n        return null;\n    }\n    /**\n     * Present if the request is an identity request and requests a specific permission.\n     * @note This returns `nil` unless a specific permission has been requested,\n     *       use `isIdentity` to check id requests.\n     */\n    getIdentityPermission() {\n        if (!this.isIdentity()) {\n            return null;\n        }\n        const id = this.data.req.value;\n        if (id.permission && !id.permission.permission.equals(PlaceholderPermission)) {\n            return id.permission.permission;\n        }\n        return null;\n    }\n    /**\n     * Present if the request is an identity request and requests a specific permission.\n     * @note This returns `nil` unless a specific permission has been requested,\n     *       use `isIdentity` to check id requests.\n     */\n    getIdentityScope() {\n        if (!this.isIdentity() || this.version <= 2) {\n            return null;\n        }\n        const id = this.data.req.value;\n        return id.scope;\n    }\n    /** Get raw info dict */\n    getRawInfo() {\n        const rv = {};\n        for (const { key, value } of this.data.info) {\n            rv[key] = value;\n        }\n        return rv;\n    }\n    getRawInfoKey(key) {\n        const pair = this.data.info.find((pair) => pair.key === key);\n        if (pair) {\n            return pair.value;\n        }\n    }\n    setRawInfoKey(key, value) {\n        let pair = this.data.info.find((pair) => pair.key === key);\n        if (!pair) {\n            pair = InfoPair.from({ key, value });\n            this.data.info.push(pair);\n        }\n        else {\n            pair.value = Bytes.from(value);\n        }\n    }\n    /** Set a metadata key. */\n    setInfoKey(key, object, type) {\n        let data;\n        if (typeof object === 'string' && !type) {\n            // match old behavior where strings encode to raw utf8 as opposed to\n            // eosio-abi encoded strings (varuint32 length prefix + utf8 bytes)\n            data = Bytes.from(object, 'utf8');\n        }\n        else {\n            data = Serializer.encode({ object, type });\n        }\n        this.setRawInfoKey(key, data);\n    }\n    getInfoKey(key, type) {\n        const data = this.getRawInfoKey(key);\n        if (data) {\n            if (type) {\n                return Serializer.decode({ data, type });\n            }\n            else {\n                // assume utf8 string if no type is given\n                return data.utf8String;\n            }\n        }\n    }\n    /** Return a deep copy of this request. */\n    clone() {\n        let signature;\n        if (this.signature) {\n            signature = RequestSignature.from(JSON.parse(JSON.stringify(this.signature)));\n        }\n        const RequestData = this.constructor.storageType(this.version);\n        const data = RequestData.from(JSON.parse(JSON.stringify(this.data)));\n        return new SigningRequest(this.version, data, this.zlib, this.abiProvider, signature);\n    }\n    // Convenience methods.\n    toString() {\n        return this.encode();\n    }\n    toJSON() {\n        return this.encode();\n    }\n}\nclass ResolvedSigningRequest {\n    constructor(request, signer, transaction, resolvedTransaction, chainId) {\n        this.request = request;\n        this.signer = signer;\n        this.transaction = transaction;\n        this.resolvedTransaction = resolvedTransaction;\n        this.chainId = chainId;\n    }\n    /** Recreate a resolved request from a callback payload. */\n    static async fromPayload(payload, options = {}) {\n        const request = SigningRequest.from(payload.req, options);\n        const abis = await request.fetchAbis();\n        return request.resolve(abis, { actor: payload.sa, permission: payload.sp }, {\n            ref_block_num: payload.rbn,\n            ref_block_prefix: payload.rid,\n            expiration: payload.ex,\n            chainId: payload.cid || request.getChainId(),\n        });\n    }\n    get serializedTransaction() {\n        return Serializer.encode({ object: this.transaction }).array;\n    }\n    get signingDigest() {\n        return this.transaction.signingDigest(this.chainId);\n    }\n    get signingData() {\n        return this.transaction.signingData(this.chainId);\n    }\n    getCallback(signatures, blockNum) {\n        const { callback, flags } = this.request.data;\n        if (!callback || callback.length === 0) {\n            return null;\n        }\n        if (!signatures || signatures.length === 0) {\n            throw new Error('Must have at least one signature to resolve callback');\n        }\n        const sigs = signatures.map((sig) => Signature.from(sig));\n        const payload = {\n            sig: String(sigs[0]),\n            tx: String(this.transaction.id),\n            rbn: String(this.transaction.ref_block_num),\n            rid: String(this.transaction.ref_block_prefix),\n            ex: String(this.transaction.expiration),\n            req: this.request.encode(),\n            sa: String(this.signer.actor),\n            sp: String(this.signer.permission),\n            cid: String(this.chainId),\n        };\n        for (const [n, sig] of sigs.slice(1).entries()) {\n            payload[`sig${n}`] = String(sig);\n        }\n        if (blockNum) {\n            payload.bn = String(UInt32.from(blockNum));\n        }\n        const url = callback.replace(/({{([a-z0-9]+)}})/g, (_1, _2, m) => {\n            return payload[m] || '';\n        });\n        return {\n            background: flags.background,\n            payload,\n            url,\n        };\n    }\n    getIdentityProof(signature) {\n        if (!this.request.isIdentity()) {\n            throw new Error('Not a identity request');\n        }\n        return IdentityProof.from({\n            chainId: this.chainId,\n            scope: this.request.getIdentityScope(),\n            expiration: this.transaction.expiration,\n            signer: this.signer,\n            signature,\n        });\n    }\n}\nfunction encodeAction(action, abis) {\n    if (Bytes.isBytes(action.data) || action.data.constructor.abiName !== undefined) {\n        return Action.from(action);\n    }\n    const abi = abis[String(Name.from(action.account))];\n    if (!abi) {\n        throw new Error(`Missing ABI for ${action.account}`);\n    }\n    const data = Action.from(action, abi);\n    // TODO: The way payloads are encoded is including the ABI, which isn't what we want\n    // This needs to be resolved in wharfkit/antelope, and then the delete call here should be removed\n    delete data.abi;\n    return data;\n}\nfunction isIdentity(action) {\n    const account = Name.from(action.account);\n    const name = Name.from(action.name);\n    return account.rawValue.equals(0) && name.equals('identity');\n}\nfunction hasTapos(tx) {\n    return !(tx.expiration.equals(0) && tx.ref_block_num.equals(0) && tx.ref_block_prefix.equals(0));\n}\nfunction expirationTime(timestamp, expireSeconds = 60) {\n    const ts = TimePointSec.from(timestamp || new Date());\n    const exp = UInt32.from(expireSeconds);\n    return TimePointSec.fromInteger(ts.value.adding(exp));\n}\n\nexport { AccountName, base64u as Base64u, ChainAlias, ChainId, ChainIdVariant, ChainName, IdentityProof, IdentityV2, IdentityV3, InfoPair, PermissionName, PlaceholderAuth, PlaceholderName, PlaceholderPermission, ProtocolVersion, RequestDataV2, RequestDataV3, RequestFlags, RequestSignature, RequestVariantV2, RequestVariantV3, ResolvedSigningRequest, SigningRequest };\n//# sourceMappingURL=signing-request.m.js.map\n","import { ABI } from '@wharfkit/antelope';\n\nclass ABICache {\n    constructor(client) {\n        this.client = client;\n        this.cache = new Map();\n        this.pending = new Map();\n    }\n    async getAbi(account) {\n        const key = String(account);\n        let record = this.cache.get(key);\n        if (!record) {\n            let getAbi = this.pending.get(key);\n            if (!getAbi) {\n                getAbi = this.client.v1.chain.get_raw_abi(account);\n                this.pending.set(key, getAbi);\n            }\n            const response = await getAbi;\n            this.pending.delete(key);\n            if (response.abi) {\n                record = ABI.from(response.abi);\n                this.cache.set(key, record);\n            }\n            else {\n                throw new Error(`ABI for ${key} could not be loaded.`);\n            }\n        }\n        return record;\n    }\n    setAbi(account, abiDef, merge = false) {\n        const key = String(account);\n        const abi = ABI.from(abiDef);\n        const existing = this.cache.get(key);\n        if (merge && existing) {\n            this.cache.set(key, ABI.from({\n                action_results: mergeAndDeduplicate(existing.action_results, abi.action_results),\n                types: mergeAndDeduplicate(existing.types, abi.types, 'new_type_name'),\n                structs: mergeAndDeduplicate(existing.structs, abi.structs),\n                actions: mergeAndDeduplicate(existing.actions, abi.actions),\n                tables: mergeAndDeduplicate(existing.tables, abi.tables),\n                ricardian_clauses: mergeAndDeduplicate(existing.ricardian_clauses, abi.ricardian_clauses, 'id'),\n                variants: mergeAndDeduplicate(existing.variants, abi.variants),\n                version: abi.version,\n            }));\n        }\n        else {\n            this.cache.set(key, abi);\n        }\n    }\n}\nfunction mergeAndDeduplicate(array1, array2, byField = 'name') {\n    return array2.reduce((acc, current) => {\n        if (!acc.some((obj) => String(obj[byField]) === String(current[byField]))) {\n            acc.push(current);\n        }\n        return acc;\n    }, array1.slice());\n}\n\nexport { ABICache, ABICache as default };\n//# sourceMappingURL=abicache.m.js.map\n","import { ChainDefinition, Logo } from '@wharfkit/common';\nexport * from '@wharfkit/common';\nimport { APIClient, FetchProvider, Serializer, Action, PermissionLevel, SignedTransaction, Transaction, Name, Struct, Checksum256 } from '@wharfkit/antelope';\nexport * from '@wharfkit/antelope';\nimport zlib from 'pako';\nimport { RequestDataV2, RequestDataV3, RequestSignature, SigningRequest, ResolvedSigningRequest, ChainId } from '@wharfkit/signing-request';\nexport * from '@wharfkit/signing-request';\nimport { ABICache } from '@wharfkit/abicache';\nexport * from '@wharfkit/abicache';\nimport { __decorate } from 'tslib';\n\nvar LoginHookTypes;\n(function (LoginHookTypes) {\n    LoginHookTypes[\"beforeLogin\"] = \"beforeLogin\";\n    LoginHookTypes[\"afterLogin\"] = \"afterLogin\";\n})(LoginHookTypes || (LoginHookTypes = {}));\nclass LoginContext {\n    constructor(options) {\n        this.arbitrary = {};\n        this.chains = [];\n        this.hooks = {\n            afterLogin: [],\n            beforeLogin: [],\n        };\n        this.uiRequirements = {\n            requiresChainSelect: true,\n            requiresPermissionSelect: true,\n            requiresPermissionEntry: false,\n            requiresWalletSelect: true,\n        };\n        this.walletPlugins = [];\n        this.appName = String(options.appName);\n        if (options.arbitrary) {\n            this.arbitrary = options.arbitrary;\n        }\n        if (options.chains) {\n            this.chains = options.chains;\n        }\n        if (options.chain) {\n            this.chain = options.chain;\n        }\n        this.fetch = options.fetch;\n        this.permissionLevel = options.permissionLevel;\n        this.walletPlugins = options.walletPlugins || [];\n        this.ui = options.ui;\n        options.loginPlugins?.forEach((plugin) => {\n            plugin.register(this);\n        });\n    }\n    addHook(t, hook) {\n        this.hooks[t].push(hook);\n    }\n    getClient(chain) {\n        return new APIClient({ provider: new FetchProvider(chain.url, { fetch: this.fetch }) });\n    }\n    get esrOptions() {\n        return {\n            zlib,\n        };\n    }\n}\nclass AbstractLoginPlugin {\n}\nclass BaseLoginPlugin extends AbstractLoginPlugin {\n    register() {\n    }\n}\n\nvar TransactHookTypes;\n(function (TransactHookTypes) {\n    TransactHookTypes[\"beforeSign\"] = \"beforeSign\";\n    TransactHookTypes[\"afterSign\"] = \"afterSign\";\n    TransactHookTypes[\"afterBroadcast\"] = \"afterBroadcast\";\n})(TransactHookTypes || (TransactHookTypes = {}));\nclass TransactContext {\n    constructor(options) {\n        this.hooks = {\n            afterBroadcast: [],\n            afterSign: [],\n            beforeSign: [],\n        };\n        this.abiCache = options.abiCache;\n        this.appName = String(options.appName);\n        this.chain = options.chain;\n        this.client = options.client;\n        this.createRequest = options.createRequest;\n        this.fetch = options.fetch;\n        this.permissionLevel = options.permissionLevel;\n        if (options.storage) {\n            this.storage = options.storage;\n        }\n        this.transactPluginsOptions = options.transactPluginsOptions || {};\n        this.ui = options.ui;\n        options.transactPlugins?.forEach((plugin) => {\n            plugin.register(this);\n        });\n    }\n    get accountName() {\n        return this.permissionLevel.actor;\n    }\n    get permissionName() {\n        return this.permissionLevel.permission;\n    }\n    get esrOptions() {\n        return {\n            abiProvider: this.abiCache,\n            zlib,\n        };\n    }\n    addHook(t, hook) {\n        switch (t) {\n            case TransactHookTypes.beforeSign: {\n                this.hooks[t].push(hook);\n                break;\n            }\n            case TransactHookTypes.afterSign:\n            case TransactHookTypes.afterBroadcast: {\n                this.hooks[t].push(hook);\n                break;\n            }\n        }\n    }\n    async getInfo() {\n        let info = this.info;\n        if (this.info) {\n            info = this.info;\n        }\n        else {\n            this.info = info = await this.client.v1.chain.get_info();\n        }\n        return info;\n    }\n    async resolve(request, expireSeconds = 120) {\n        let resolveArgs = {\n            chainId: this.chain.id,\n        };\n        if (request.requiresTapos()) {\n            const info = await this.getInfo();\n            const header = info.getTransactionHeader(expireSeconds);\n            resolveArgs = {\n                ...resolveArgs,\n                ...header,\n            };\n        }\n        const abis = await request.fetchAbis(this.abiCache);\n        return request.resolve(abis, this.permissionLevel, resolveArgs);\n    }\n}\nclass TransactRevisions {\n    constructor(request) {\n        this.revisions = [];\n        this.addRevision({ request, signatures: [] }, 'original', true);\n    }\n    addRevision(response, code, allowModify) {\n        let modified = false;\n        const previous = this.revisions[this.revisions.length - 1];\n        if (previous) {\n            modified = previous.response.request !== String(response.request);\n        }\n        this.revisions.push({\n            allowModify,\n            code: String(code),\n            modified,\n            response: {\n                request: String(response.request),\n                signatures: response.signatures ? Serializer.objectify(response.signatures) : [],\n            },\n        });\n    }\n}\nclass AbstractTransactPlugin {\n}\nclass BaseTransactPlugin extends AbstractTransactPlugin {\n    get id() {\n        return 'base-transact-plugin';\n    }\n    register() {\n    }\n}\n\nfunction getFetch(options) {\n    if (options && options.fetch) {\n        return options.fetch;\n    }\n    if (typeof window !== 'undefined' && window.fetch) {\n        return window.fetch.bind(window);\n    }\n    if (typeof global !== 'undefined' && global.fetch) {\n        return global.fetch.bind(global);\n    }\n    throw new Error('Missing fetch');\n}\nfunction appendAction(request, action) {\n    const newAction = Action.from(action);\n    const cloned = request.clone();\n    switch (cloned.data.req.variantName) {\n        case 'action': {\n            cloned.data.req.value = [cloned.data.req.value, newAction];\n            cloned.data.req.variantIdx = 1;\n            break;\n        }\n        case 'action[]': {\n            const array = cloned.data.req.value;\n            array.push(newAction);\n            cloned.data.req.value = array;\n            break;\n        }\n        case 'transaction': {\n            const tx = cloned.data.req.value;\n            tx.actions.push(newAction);\n            cloned.data.req.value = tx;\n            break;\n        }\n        default: {\n            throw new Error('unknown data req type');\n        }\n    }\n    return cloned;\n}\nfunction prependAction(request, action) {\n    const newAction = Action.from(action);\n    const cloned = request.clone();\n    switch (cloned.data.req.variantName) {\n        case 'action': {\n            cloned.data.req.value = [newAction, cloned.data.req.value];\n            cloned.data.req.variantIdx = 1;\n            break;\n        }\n        case 'action[]': {\n            const array = cloned.data.req.value;\n            array.unshift(newAction);\n            cloned.data.req.value = array;\n            break;\n        }\n        case 'transaction': {\n            const tx = cloned.data.req.value;\n            tx.actions.unshift(newAction);\n            cloned.data.req.value = tx;\n            break;\n        }\n        default: {\n            throw new Error('unknown data req type');\n        }\n    }\n    return cloned;\n}\nfunction getPluginTranslations(transactPlugin) {\n    if (!transactPlugin.translations) {\n        return {};\n    }\n    const prefixed = {};\n    const languages = Object.keys(transactPlugin.translations);\n    languages.forEach((lang) => {\n        if (transactPlugin.translations) {\n            prefixed[lang] = { [transactPlugin.id]: transactPlugin.translations[lang] };\n        }\n    });\n    return prefixed;\n}\n\nclass Session {\n    get data() {\n        return this._data;\n    }\n    set data(data) {\n        this._data = data;\n    }\n    constructor(args, options = {}) {\n        this.abis = [];\n        this.allowModify = true;\n        this.broadcast = true;\n        this.expireSeconds = 120;\n        this.transactPluginsOptions = {};\n        this._data = {};\n        this.serialize = () => {\n            const serializableData = {\n                chain: this.chain.id,\n                actor: this.permissionLevel.actor,\n                permission: this.permissionLevel.permission,\n                walletPlugin: {\n                    id: this.walletPlugin.id,\n                    data: this.walletPlugin.data,\n                },\n            };\n            if (Object.keys(this._data).length > 0) {\n                serializableData.data = this.data;\n            }\n            return Serializer.objectify(serializableData);\n        };\n        this.chain = ChainDefinition.from(args.chain);\n        if (args.permissionLevel) {\n            this.permissionLevel = PermissionLevel.from(args.permissionLevel);\n        }\n        else if (args.actor && args.permission) {\n            this.permissionLevel = PermissionLevel.from(`${args.actor}@${args.permission}`);\n        }\n        else {\n            throw new Error('Either a permissionLevel or actor/permission must be provided when creating a new Session.');\n        }\n        this.walletPlugin = args.walletPlugin;\n        if (options.appName) {\n            this.appName = String(options.appName);\n        }\n        if (options.abis) {\n            this.abis = [...options.abis];\n        }\n        if (options.contracts) {\n            this.abis.push(...options.contracts.map((c) => ({ account: c.account, abi: c.abi })));\n        }\n        if (options.allowModify !== undefined) {\n            this.allowModify = options.allowModify;\n        }\n        if (options.broadcast !== undefined) {\n            this.broadcast = options.broadcast;\n        }\n        if (options.expireSeconds) {\n            this.expireSeconds = options.expireSeconds;\n        }\n        if (options.fetch) {\n            this.fetch = options.fetch;\n        }\n        else {\n            this.fetch = getFetch(options);\n        }\n        if (options.storage) {\n            this.storage = options.storage;\n        }\n        if (options.transactPlugins) {\n            this.transactPlugins = options.transactPlugins;\n        }\n        else {\n            this.transactPlugins = [new BaseTransactPlugin()];\n        }\n        if (options.transactPluginsOptions) {\n            this.transactPluginsOptions = options.transactPluginsOptions;\n        }\n        if (options.abiCache) {\n            this.abiCache = options.abiCache;\n        }\n        else {\n            this.abiCache = new ABICache(this.client);\n        }\n        if (options.ui) {\n            this.ui = options.ui;\n        }\n    }\n    get actor() {\n        return this.permissionLevel.actor;\n    }\n    get permission() {\n        return this.permissionLevel.permission;\n    }\n    get client() {\n        return new APIClient({ provider: new FetchProvider(this.chain.url, { fetch: this.fetch }) });\n    }\n    setEndpoint(url) {\n        this.chain.url = url;\n    }\n    upgradeTransaction(args) {\n        const anyArgs = args;\n        if (args.actions &&\n            (anyArgs.expiration ||\n                anyArgs.ref_block_num ||\n                anyArgs.ref_block_prefix ||\n                anyArgs.max_net_usage_words ||\n                anyArgs.max_cpu_usage_ms ||\n                anyArgs.delay_sec)) {\n            return (args = {\n                transaction: {\n                    expiration: '1970-01-01T00:00:00',\n                    ref_block_num: 0,\n                    ref_block_prefix: 0,\n                    max_net_usage_words: 0,\n                    max_cpu_usage_ms: 0,\n                    delay_sec: 0,\n                    ...anyArgs,\n                },\n            });\n        }\n        if (args.context_free_actions || args.context_free_data) {\n            const actions = args.actions || [args.action];\n            delete args.action;\n            return {\n                transaction: {\n                    expiration: '1970-01-01T00:00:00',\n                    ref_block_num: 0,\n                    ref_block_prefix: 0,\n                    max_net_usage_words: 0,\n                    max_cpu_usage_ms: 0,\n                    delay_sec: 0,\n                    context_free_actions: [],\n                    context_free_data: [],\n                    actions,\n                    ...anyArgs,\n                },\n            };\n        }\n        return args;\n    }\n    storageType(version) {\n        return version === 2 ? RequestDataV2 : RequestDataV3;\n    }\n    cloneRequest(request, abiCache) {\n        let signature;\n        if (request.signature) {\n            signature = RequestSignature.from(JSON.parse(JSON.stringify(request.signature)));\n        }\n        const RequestData = this.storageType(request.version);\n        const data = RequestData.from(JSON.parse(JSON.stringify(request.data)));\n        return new SigningRequest(request.version, data, zlib, abiCache, signature);\n    }\n    async createRequest(args, abiCache) {\n        let request;\n        const options = {\n            abiProvider: abiCache,\n            zlib,\n        };\n        if (args.request && args.request instanceof SigningRequest) {\n            request = this.cloneRequest(args.request, abiCache);\n        }\n        else if (args.request) {\n            request = SigningRequest.from(args.request, options);\n        }\n        else {\n            args = this.upgradeTransaction(args);\n            request = await SigningRequest.create({\n                ...args,\n                chainId: this.chain.id,\n            }, options);\n        }\n        request.setBroadcast(false);\n        return request;\n    }\n    async updateRequest(previous, modified, abiCache) {\n        const updatedRequest = this.cloneRequest(modified, abiCache);\n        const info = updatedRequest.getRawInfo();\n        previous.data.info.forEach((metadata) => {\n            if (info[metadata.key]) {\n                console.warn(`During an updateRequest call, the previous request had already set the ` +\n                    `metadata key of \"${metadata.key}\" which will not be overwritten.`);\n            }\n            updatedRequest.setRawInfoKey(metadata.key, metadata.value);\n        });\n        return updatedRequest;\n    }\n    async transact(args, options) {\n        try {\n            const expireSeconds = options && options.expireSeconds ? options.expireSeconds : this.expireSeconds;\n            const willBroadcast = options && typeof options.broadcast !== 'undefined'\n                ? options.broadcast\n                : this.broadcast;\n            const abiCache = this.getMergedAbiCache(args, options);\n            const transactPlugins = options?.transactPlugins || this.transactPlugins;\n            const transactPluginsOptions = options?.transactPluginsOptions || this.transactPluginsOptions;\n            let allowModify = options && typeof options.allowModify !== 'undefined'\n                ? options.allowModify\n                : this.allowModify;\n            const context = new TransactContext({\n                abiCache,\n                appName: this.appName,\n                chain: this.chain,\n                client: this.client,\n                createRequest: (a) => this.createRequest(a, abiCache),\n                fetch: this.fetch,\n                permissionLevel: this.permissionLevel,\n                storage: this.storage,\n                transactPlugins,\n                transactPluginsOptions,\n                ui: this.ui,\n            });\n            if (context.ui) {\n                await context.ui.onTransact();\n                for (const translation of transactPlugins.map((transactPlugin) => getPluginTranslations(transactPlugin))) {\n                    context.ui.addTranslations(translation);\n                }\n            }\n            let request = await this.createRequest(args, abiCache);\n            const result = {\n                chain: this.chain,\n                request,\n                resolved: undefined,\n                returns: [],\n                revisions: new TransactRevisions(request),\n                signatures: [],\n                signer: this.permissionLevel,\n                transaction: undefined,\n            };\n            for (const hook of context.hooks.beforeSign) {\n                const response = await hook(request.clone(), context);\n                if (response) {\n                    result.revisions.addRevision(response, String(hook), allowModify);\n                    if (allowModify) {\n                        request = await this.updateRequest(request, response.request, abiCache);\n                    }\n                    if (response.signatures) {\n                        result.signatures = [...result.signatures, ...response.signatures];\n                        allowModify = false;\n                    }\n                }\n            }\n            result.request = request;\n            result.resolved = await context.resolve(request, expireSeconds);\n            result.transaction = result.resolved.resolvedTransaction;\n            if (context.ui) {\n                await context.ui.onSign();\n                context.ui.addTranslations(getPluginTranslations(this.walletPlugin));\n            }\n            const walletResponse = await this.walletPlugin.sign(result.resolved, context);\n            result.signatures.push(...walletResponse.signatures);\n            if (walletResponse.resolved) {\n                const { resolved } = walletResponse;\n                const requestWasModified = !result.resolved.transaction.equals(resolved.transaction);\n                if (requestWasModified) {\n                    if (allowModify) {\n                        result.request = resolved.request;\n                        result.resolved = resolved;\n                        result.transaction = resolved.resolvedTransaction;\n                    }\n                    else {\n                        throw new Error(`The ${this.walletPlugin.metadata.name} plugin modified the transaction when it was not allowed to.`);\n                    }\n                }\n            }\n            for (const hook of context.hooks.afterSign)\n                await hook(result, context);\n            if (context.ui) {\n                await context.ui.onSignComplete();\n            }\n            if (willBroadcast) {\n                if (context.ui) {\n                    await context.ui.onBroadcast();\n                }\n                const signed = SignedTransaction.from({\n                    ...result.resolved.transaction,\n                    signatures: result.signatures,\n                });\n                result.response = await context.client.v1.chain.send_transaction(signed);\n                if (result.response.processed && result.response.processed.action_traces) {\n                    result.returns = await processReturnValues(result.response, abiCache);\n                }\n                for (const hook of context.hooks.afterBroadcast)\n                    await hook(result, context);\n                if (context.ui) {\n                    await context.ui.onBroadcastComplete();\n                }\n            }\n            if (context.ui) {\n                await context.ui.onTransactComplete();\n            }\n            return result;\n        }\n        catch (error) {\n            if (error.response && error.response.json) {\n                const { json } = error.response;\n                if (json.error && json.error.details) {\n                    const e = new Error(json.error.details[0].message);\n                    if (this.ui) {\n                        await this.ui.onError(e);\n                    }\n                    throw e;\n                }\n            }\n            else {\n                if (this.ui) {\n                    await this.ui.onError(error);\n                }\n            }\n            throw new Error(error);\n        }\n    }\n    async signTransaction(transaction) {\n        const context = new TransactContext({\n            abiCache: this.abiCache,\n            chain: this.chain,\n            client: this.client,\n            createRequest: (args) => this.createRequest(args, this.abiCache),\n            fetch: this.fetch,\n            permissionLevel: this.permissionLevel,\n        });\n        const request = await SigningRequest.create({\n            transaction,\n            chainId: this.chain.id,\n        }, context.esrOptions);\n        request.setBroadcast(false);\n        const resolvedRequest = new ResolvedSigningRequest(request, this.permissionLevel, Transaction.from(transaction), Serializer.objectify(Transaction.from(transaction)), ChainId.from(this.chain.id));\n        const walletResponse = await this.walletPlugin.sign(resolvedRequest, context);\n        return walletResponse.signatures;\n    }\n    getMergedAbiCache(args, options) {\n        const abiCache = options?.abiCache || this.abiCache;\n        if (!abiCache['setAbi']) {\n            throw new Error('Custom `abiCache` does not support `setAbi` method.');\n        }\n        this.abis.forEach((def) => abiCache.setAbi(def.account, def.abi));\n        if (options?.abis) {\n            options.abis.forEach((def) => abiCache.setAbi(def.account, def.abi));\n        }\n        if (options?.contracts) {\n            options.contracts.forEach((c) => abiCache.setAbi(c.account, c.abi));\n        }\n        if (args.action && args.action['abi']) {\n            abiCache.setAbi(args.action.account, args.action['abi'], true);\n        }\n        if (args.actions) {\n            args.actions.forEach((action) => {\n                if (action['abi']) {\n                    abiCache.setAbi(action.account, action['abi'], true);\n                }\n            });\n        }\n        if (args.transaction && args.transaction.actions) {\n            args.transaction.actions.forEach((action) => {\n                if (action['abi']) {\n                    abiCache.setAbi(action.account, action['abi'], true);\n                }\n            });\n        }\n        return abiCache;\n    }\n}\nasync function processReturnValues(response, abiCache) {\n    const decoded = [];\n    for (const actionTrace of response.processed.action_traces) {\n        if (actionTrace.return_value_hex_data) {\n            const contract = Name.from(actionTrace.act.account);\n            const action = Name.from(actionTrace.act.name);\n            const abi = await abiCache.getAbi(contract);\n            const returnType = abi.action_results.find((a) => Name.from(a.name).equals(action));\n            if (returnType) {\n                try {\n                    const data = Serializer.decode({\n                        data: actionTrace.return_value_hex_data,\n                        type: returnType.result_type,\n                        abi,\n                    });\n                    decoded.push({\n                        contract,\n                        action,\n                        hex: actionTrace.return_value_hex_data,\n                        data,\n                        returnType,\n                    });\n                }\n                catch (error) {\n                    console.warn(`Error decoding return value for ${contract}::${action}:`, error);\n                    decoded.push({\n                        contract,\n                        action,\n                        hex: actionTrace.return_value_hex_data,\n                        data: '',\n                        returnType,\n                    });\n                }\n            }\n            else {\n                console.warn(`No return type found for ${contract}::${action}`);\n                decoded.push({\n                    contract,\n                    action,\n                    hex: actionTrace.return_value_hex_data,\n                    data: '',\n                    returnType: {\n                        name: action,\n                        result_type: '',\n                    },\n                });\n            }\n        }\n    }\n    return decoded;\n}\n\nclass BrowserLocalStorage {\n    constructor(keyPrefix = '') {\n        this.keyPrefix = keyPrefix;\n    }\n    async write(key, data) {\n        localStorage.setItem(this.storageKey(key), data);\n    }\n    async read(key) {\n        return localStorage.getItem(this.storageKey(key));\n    }\n    async remove(key) {\n        localStorage.removeItem(this.storageKey(key));\n    }\n    storageKey(key) {\n        return `wharf-${this.keyPrefix}-${key}`;\n    }\n}\n\nvar WalletPluginMetadata_1;\nlet WalletPluginMetadata = WalletPluginMetadata_1 = class WalletPluginMetadata extends Struct {\n    static from(data) {\n        return new WalletPluginMetadata_1({\n            ...data,\n            logo: data.logo ? Logo.from(data.logo) : undefined,\n        });\n    }\n};\n__decorate([\n    Struct.field('string', { optional: true })\n], WalletPluginMetadata.prototype, \"name\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], WalletPluginMetadata.prototype, \"description\", void 0);\n__decorate([\n    Struct.field(Logo, { optional: true })\n], WalletPluginMetadata.prototype, \"logo\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], WalletPluginMetadata.prototype, \"homepage\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], WalletPluginMetadata.prototype, \"download\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], WalletPluginMetadata.prototype, \"publicKey\", void 0);\nWalletPluginMetadata = WalletPluginMetadata_1 = __decorate([\n    Struct.type('wallet_plugin_metadata')\n], WalletPluginMetadata);\nclass AbstractWalletPlugin {\n    constructor() {\n        this._data = {};\n        this.config = {\n            requiresChainSelect: true,\n            requiresPermissionSelect: false,\n            requiresPermissionEntry: false,\n        };\n        this.metadata = new WalletPluginMetadata({});\n    }\n    get data() {\n        return this._data;\n    }\n    set data(data) {\n        this._data = data;\n    }\n    serialize() {\n        return {\n            id: this.id,\n            data: this.data,\n        };\n    }\n}\n\nvar AccountCreationPluginMetadata_1;\nlet AccountCreationPluginMetadata = AccountCreationPluginMetadata_1 = class AccountCreationPluginMetadata extends Struct {\n    static from(data) {\n        return new AccountCreationPluginMetadata_1({\n            ...data,\n            logo: data.logo ? Logo.from(data.logo) : undefined,\n        });\n    }\n};\n__decorate([\n    Struct.field('string')\n], AccountCreationPluginMetadata.prototype, \"name\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], AccountCreationPluginMetadata.prototype, \"description\", void 0);\n__decorate([\n    Struct.field(Logo, { optional: true })\n], AccountCreationPluginMetadata.prototype, \"logo\", void 0);\n__decorate([\n    Struct.field('string', { optional: true })\n], AccountCreationPluginMetadata.prototype, \"homepage\", void 0);\nAccountCreationPluginMetadata = AccountCreationPluginMetadata_1 = __decorate([\n    Struct.type('account_creation_plugin_metadata')\n], AccountCreationPluginMetadata);\nclass CreateAccountContext {\n    constructor(options) {\n        this.accountCreationPlugins = [];\n        this.uiRequirements = {\n            requiresChainSelect: true,\n            requiresPluginSelect: true,\n        };\n        this.appName = String(options.appName);\n        if (options.chains) {\n            this.chains = options.chains;\n        }\n        if (options.chain) {\n            this.chain = options.chain;\n        }\n        this.fetch = options.fetch;\n        this.ui = options.ui;\n        if (options.accountCreationPlugins) {\n            this.accountCreationPlugins = options.accountCreationPlugins;\n        }\n        if (options.uiRequirements) {\n            this.uiRequirements = options.uiRequirements;\n        }\n    }\n    getClient(chain) {\n        return new APIClient({ provider: new FetchProvider(chain.url, { fetch: this.fetch }) });\n    }\n}\nclass AbstractAccountCreationPlugin {\n    constructor() {\n        this.config = {\n            requiresChainSelect: true,\n        };\n        this.metadata = new AccountCreationPluginMetadata({});\n    }\n}\n\nclass SessionKit {\n    constructor(args, options = {}) {\n        this.abis = [];\n        this.allowModify = true;\n        this.expireSeconds = 120;\n        this.transactPluginsOptions = {};\n        this.accountCreationPlugins = [];\n        this.appName = String(args.appName);\n        this.chains = args.chains.map((chain) => ChainDefinition.from(chain));\n        this.ui = args.ui;\n        this.walletPlugins = args.walletPlugins;\n        if (options.fetch) {\n            this.fetch = options.fetch;\n        }\n        else {\n            this.fetch = getFetch(options);\n        }\n        if (options.abis) {\n            this.abis = [...options.abis];\n        }\n        if (options.contracts) {\n            this.abis.push(...options.contracts.map((c) => ({ account: c.account, abi: c.abi })));\n        }\n        if (options.loginPlugins) {\n            this.loginPlugins = options.loginPlugins;\n        }\n        else {\n            this.loginPlugins = [new BaseLoginPlugin()];\n        }\n        if (options.storage) {\n            this.storage = options.storage;\n        }\n        else {\n            this.storage = new BrowserLocalStorage();\n        }\n        if (options.transactPlugins) {\n            this.transactPlugins = options.transactPlugins;\n        }\n        else {\n            this.transactPlugins = [new BaseTransactPlugin()];\n        }\n        if (typeof options.allowModify !== 'undefined') {\n            this.allowModify = options.allowModify;\n        }\n        if (options.expireSeconds) {\n            this.expireSeconds = options.expireSeconds;\n        }\n        if (options.transactPluginsOptions) {\n            this.transactPluginsOptions = options.transactPluginsOptions;\n        }\n        if (options.accountCreationPlugins) {\n            this.accountCreationPlugins = options.accountCreationPlugins;\n        }\n    }\n    setEndpoint(id, url) {\n        const modifiedChains = [...this.chains];\n        const chainId = Checksum256.from(id);\n        const chainIndex = this.chains.findIndex((c) => c.id.equals(chainId));\n        if (chainIndex < 0) {\n            throw new Error('Chain with specified ID not found.');\n        }\n        modifiedChains[chainIndex].url = url;\n        this.chains = modifiedChains;\n    }\n    getChainDefinition(id, override) {\n        const chains = override ? override : this.chains;\n        const chainId = Checksum256.from(id);\n        const chain = chains.find((c) => c.id.equals(chainId));\n        if (!chain) {\n            throw new Error(`No chain defined with an ID of: ${chainId}`);\n        }\n        return chain;\n    }\n    async createAccount(options) {\n        try {\n            if (this.accountCreationPlugins.length === 0) {\n                throw new Error('No account creation plugins available.');\n            }\n            let chain = options?.chain;\n            let requiresChainSelect = !chain;\n            let requiresPluginSelect = !options?.pluginId;\n            let accountCreationPlugin;\n            if (options?.pluginId) {\n                requiresPluginSelect = false;\n                accountCreationPlugin = this.accountCreationPlugins.find((p) => p.id === options.pluginId);\n                if (!accountCreationPlugin) {\n                    throw new Error('Invalid account creation plugin selected.');\n                }\n                if (accountCreationPlugin?.config.requiresChainSelect !== undefined) {\n                    requiresChainSelect = accountCreationPlugin?.config.requiresChainSelect;\n                }\n                if (!accountCreationPlugin.config.requiresChainSelect &&\n                    accountCreationPlugin.config.supportedChains &&\n                    accountCreationPlugin.config.supportedChains.length === 1) {\n                    chain = accountCreationPlugin.config.supportedChains[0];\n                }\n            }\n            let chains = this.chains;\n            if (accountCreationPlugin && accountCreationPlugin?.config.supportedChains?.length) {\n                chains = chains.filter((availableChain) => {\n                    return accountCreationPlugin?.config.supportedChains?.find((c) => {\n                        return c.id.equals(availableChain.id);\n                    });\n                });\n            }\n            const context = new CreateAccountContext({\n                accountCreationPlugins: this.accountCreationPlugins,\n                appName: this.appName,\n                chain,\n                chains,\n                fetch: this.fetch,\n                ui: this.ui,\n                uiRequirements: {\n                    requiresChainSelect,\n                    requiresPluginSelect,\n                },\n            });\n            if (requiresPluginSelect || requiresChainSelect) {\n                const response = await context.ui.onAccountCreate(context);\n                const pluginId = options?.pluginId || response.pluginId;\n                if (!pluginId) {\n                    throw new Error('No account creation plugin selected.');\n                }\n                accountCreationPlugin = context.accountCreationPlugins.find((p) => p.id === pluginId);\n                if (!accountCreationPlugin) {\n                    throw new Error('No account creation plugin selected.');\n                }\n                if (!accountCreationPlugin.config.requiresChainSelect &&\n                    accountCreationPlugin.config.supportedChains &&\n                    accountCreationPlugin.config.supportedChains.length === 1) {\n                    context.chain = accountCreationPlugin.config.supportedChains[0];\n                }\n                if (response.chain) {\n                    context.chain = this.getChainDefinition(response.chain, context.chains);\n                }\n                if (accountCreationPlugin.config.requiresChainSelect && !context.chain) {\n                    throw new Error(`Account creation plugin (${pluginId}) requires chain selection, and no chain was selected.`);\n                }\n            }\n            if (!accountCreationPlugin) {\n                throw new Error('No account creation plugin selected');\n            }\n            const accountCreationData = await accountCreationPlugin.create(context);\n            await context.ui.onAccountCreateComplete();\n            return accountCreationData;\n        }\n        catch (error) {\n            await this.ui.onError(error);\n            throw new Error(error);\n        }\n    }\n    async login(options) {\n        try {\n            const context = new LoginContext({\n                appName: this.appName,\n                arbitrary: options?.arbitrary || {},\n                chain: undefined,\n                chains: options && options?.chains\n                    ? options.chains.map((c) => this.getChainDefinition(c))\n                    : this.chains,\n                fetch: this.fetch,\n                loginPlugins: this.loginPlugins,\n                ui: this.ui,\n                walletPlugins: this.walletPlugins.map((plugin) => {\n                    return {\n                        config: plugin.config,\n                        metadata: WalletPluginMetadata.from(plugin.metadata),\n                        retrievePublicKey: plugin.retrievePublicKey?.bind(plugin),\n                    };\n                }),\n            });\n            await context.ui.onLogin();\n            let walletPlugin = undefined;\n            if (this.walletPlugins.length === 1) {\n                walletPlugin = this.walletPlugins[0];\n                context.walletPluginIndex = 0;\n                context.uiRequirements.requiresWalletSelect = false;\n            }\n            else if (options?.walletPlugin) {\n                const index = this.walletPlugins.findIndex((p) => p.id === options.walletPlugin);\n                if (index >= 0) {\n                    walletPlugin = this.walletPlugins[index];\n                    context.walletPluginIndex = index;\n                    context.uiRequirements.requiresWalletSelect = false;\n                }\n            }\n            if (walletPlugin) {\n                context.uiRequirements = {\n                    ...context.uiRequirements,\n                    ...walletPlugin.config,\n                };\n                context.ui.addTranslations(getPluginTranslations(walletPlugin));\n            }\n            if (options && options.chain) {\n                if (options.chain instanceof ChainDefinition) {\n                    context.chain = options.chain;\n                }\n                else {\n                    context.chain = this.getChainDefinition(options.chain, context.chains);\n                }\n                context.uiRequirements.requiresChainSelect = false;\n            }\n            else if (context.chains.length === 1) {\n                context.chain = context.chains[0];\n                context.uiRequirements.requiresChainSelect = false;\n            }\n            else {\n                context.uiRequirements.requiresChainSelect = true;\n            }\n            if (options?.permissionLevel) {\n                context.permissionLevel = PermissionLevel.from(options.permissionLevel);\n                context.uiRequirements.requiresPermissionSelect = false;\n            }\n            if (context.uiRequirements.requiresChainSelect ||\n                context.uiRequirements.requiresPermissionSelect ||\n                context.uiRequirements.requiresPermissionEntry ||\n                context.uiRequirements.requiresWalletSelect) {\n                const uiLoginResponse = await context.ui.login(context);\n                if (uiLoginResponse.walletPluginIndex !== undefined) {\n                    walletPlugin = this.walletPlugins[uiLoginResponse.walletPluginIndex];\n                }\n                if (!walletPlugin) {\n                    throw new Error('UserInterface did not return a valid WalletPlugin index.');\n                }\n                if (uiLoginResponse.chainId) {\n                    if (!context.chains.some((c) => c.id.equals(uiLoginResponse.chainId))) {\n                        throw new Error('UserInterface did not return a chain ID matching the subset of chains.');\n                    }\n                    context.chain = this.getChainDefinition(uiLoginResponse.chainId, context.chains);\n                }\n                if (uiLoginResponse.permissionLevel) {\n                    context.permissionLevel = PermissionLevel.from(uiLoginResponse.permissionLevel);\n                }\n            }\n            if (!walletPlugin) {\n                throw new Error('No WalletPlugin available to perform the login.');\n            }\n            const { supportedChains } = walletPlugin.config;\n            if (context.chain &&\n                supportedChains &&\n                supportedChains.length &&\n                !supportedChains.includes(String(context.chain.id))) {\n                throw new Error(`The wallet plugin '${walletPlugin.metadata.name}' does not support the chain '${context.chain.id}'`);\n            }\n            for (const hook of context.hooks.beforeLogin)\n                await hook(context);\n            const response = await walletPlugin.login(context);\n            const session = new Session({\n                chain: this.getChainDefinition(response.chain),\n                permissionLevel: response.permissionLevel,\n                walletPlugin,\n            }, this.getSessionOptions(options));\n            for (const hook of context.hooks.afterLogin)\n                await hook(context);\n            this.persistSession(session, options?.setAsDefault);\n            await context.ui.onLoginComplete();\n            return {\n                context,\n                response,\n                session,\n            };\n        }\n        catch (error) {\n            await this.ui.onError(error);\n            throw new Error(error);\n        }\n    }\n    logoutParams(session, walletPlugin) {\n        if (session instanceof Session) {\n            return {\n                session,\n                appName: this.appName,\n            };\n        }\n        else {\n            return {\n                session: new Session({\n                    chain: this.getChainDefinition(session.chain),\n                    permissionLevel: PermissionLevel.from({\n                        actor: session.actor,\n                        permission: session.permission,\n                    }),\n                    walletPlugin,\n                }),\n                appName: this.appName,\n            };\n        }\n    }\n    async logout(session) {\n        if (!this.storage) {\n            throw new Error('An instance of Storage must be provided to utilize the logout method.');\n        }\n        await this.storage.remove('session');\n        if (session) {\n            const walletPlugin = this.walletPlugins.find((wPlugin) => session?.walletPlugin.id === wPlugin.id);\n            if (walletPlugin?.logout) {\n                await walletPlugin.logout(this.logoutParams(session, walletPlugin));\n            }\n            const sessions = await this.getSessions();\n            if (sessions) {\n                let serialized = session;\n                if (session instanceof Session) {\n                    serialized = session.serialize();\n                }\n                const other = sessions.filter((s) => {\n                    return (!Checksum256.from(s.chain).equals(Checksum256.from(String(serialized.chain))) ||\n                        !Name.from(s.actor).equals(Name.from(serialized.actor)) ||\n                        !Name.from(s.permission).equals(Name.from(serialized.permission)));\n                });\n                await this.storage.write('sessions', JSON.stringify(other));\n            }\n        }\n        else {\n            const sessions = await this.getSessions();\n            await this.storage.remove('sessions');\n            if (sessions) {\n                Promise.all(sessions.map((s) => {\n                    const walletPlugin = this.walletPlugins.find((wPlugin) => s.walletPlugin.id === wPlugin.id);\n                    if (walletPlugin?.logout) {\n                        return walletPlugin.logout(this.logoutParams(s, walletPlugin));\n                    }\n                    else {\n                        return Promise.resolve();\n                    }\n                }));\n            }\n        }\n    }\n    async restore(args, options) {\n        if (!args) {\n            const data = await this.storage.read('session');\n            if (data) {\n                args = JSON.parse(data);\n            }\n            else {\n                return;\n            }\n        }\n        if (!args) {\n            throw new Error('Either a RestoreArgs object or a Storage instance must be provided.');\n        }\n        const chainId = Checksum256.from(args.chain instanceof ChainDefinition ? args.chain.id : args.chain);\n        let serializedSession;\n        const data = await this.storage.read('sessions');\n        if (data) {\n            const sessions = JSON.parse(data);\n            if (args.actor && args.permission) {\n                serializedSession = sessions.find((s) => {\n                    return (args &&\n                        chainId.equals(s.chain) &&\n                        s.actor === args.actor &&\n                        s.permission === args.permission);\n                });\n            }\n            else {\n                serializedSession = sessions.find((s) => {\n                    return args && chainId.equals(s.chain) && s.default;\n                });\n            }\n        }\n        else {\n            if (args.actor && args.permission && args.walletPlugin) {\n                serializedSession = {\n                    chain: String(chainId),\n                    actor: args.actor,\n                    permission: args.permission,\n                    walletPlugin: {\n                        id: args.walletPlugin.id,\n                        data: args.walletPlugin.data,\n                    },\n                    data: args.data,\n                };\n            }\n            else {\n                throw new Error('No sessions found in storage. A wallet plugin must be provided.');\n            }\n        }\n        if (!serializedSession) {\n            return;\n        }\n        const walletPlugin = this.walletPlugins.find((p) => {\n            if (!args) {\n                return false;\n            }\n            return p.id === serializedSession.walletPlugin.id;\n        });\n        if (!walletPlugin) {\n            throw new Error(`No WalletPlugin found with the ID of: '${serializedSession.walletPlugin.id}'`);\n        }\n        if (serializedSession.walletPlugin.data) {\n            walletPlugin.data = serializedSession.walletPlugin.data;\n        }\n        if (args.walletPlugin && args.walletPlugin.data) {\n            walletPlugin.data = args.walletPlugin.data;\n        }\n        const session = new Session({\n            chain: this.getChainDefinition(serializedSession.chain),\n            permissionLevel: PermissionLevel.from({\n                actor: serializedSession.actor,\n                permission: serializedSession.permission,\n            }),\n            walletPlugin,\n        }, this.getSessionOptions(options));\n        if (serializedSession.data) {\n            session.data = serializedSession.data;\n        }\n        this.persistSession(session, options?.setAsDefault);\n        return session;\n    }\n    async restoreAll() {\n        const sessions = [];\n        const serializedSessions = await this.getSessions();\n        if (serializedSessions) {\n            for (const s of serializedSessions) {\n                const session = await this.restore(s);\n                if (session) {\n                    sessions.push(session);\n                }\n            }\n        }\n        return sessions;\n    }\n    async persistSession(session, setAsDefault = true) {\n        if (!this.storage) {\n            return;\n        }\n        const serialized = session.serialize();\n        serialized.default = setAsDefault;\n        if (setAsDefault) {\n            this.storage.write('session', JSON.stringify(serialized));\n        }\n        const existing = await this.storage.read('sessions');\n        if (existing) {\n            const stored = JSON.parse(existing);\n            const sessions = stored\n                .filter((s) => {\n                return (!Checksum256.from(s.chain).equals(Checksum256.from(serialized.chain)) ||\n                    !Name.from(s.actor).equals(Name.from(serialized.actor)) ||\n                    !Name.from(s.permission).equals(Name.from(serialized.permission)));\n            })\n                .map((s) => {\n                if (session.chain.id.equals(s.chain)) {\n                    s.default = false;\n                }\n                return s;\n            });\n            const orderedSessions = [...sessions, serialized];\n            orderedSessions.sort((a, b) => {\n                const chain = String(a.chain).localeCompare(String(b.chain));\n                const actor = String(a.actor).localeCompare(String(b.actor));\n                const permission = String(a.permission).localeCompare(String(b.permission));\n                return chain || actor || permission;\n            });\n            this.storage.write('sessions', JSON.stringify(orderedSessions));\n        }\n        else {\n            this.storage.write('sessions', JSON.stringify([serialized]));\n        }\n    }\n    async getSessions() {\n        if (!this.storage) {\n            throw new Error('No storage instance is available to retrieve sessions from.');\n        }\n        const data = await this.storage.read('sessions');\n        if (!data)\n            return [];\n        try {\n            const parsed = JSON.parse(data);\n            const filtered = parsed.filter((s) => this.walletPlugins.some((p) => {\n                return p.id === s.walletPlugin.id;\n            }));\n            return filtered;\n        }\n        catch (e) {\n            throw new Error(`Failed to parse sessions from storage (${e})`);\n        }\n    }\n    getSessionOptions(options) {\n        return {\n            abis: this.abis,\n            allowModify: this.allowModify,\n            appName: this.appName,\n            expireSeconds: this.expireSeconds,\n            fetch: this.fetch,\n            storage: this.storage,\n            transactPlugins: options?.transactPlugins || this.transactPlugins,\n            transactPluginsOptions: options?.transactPluginsOptions || this.transactPluginsOptions,\n            ui: this.ui,\n        };\n    }\n}\n\nclass AbstractUserInterface {\n    translate(key, options, namespace) {\n        throw new Error('The `translate` method must be implemented in this UserInterface. Called with: ' +\n            JSON.stringify({\n                key,\n                options,\n                namespace,\n            }));\n    }\n    getTranslate(namespace) {\n        return (key, options) => this.translate(key, options, namespace);\n    }\n    addTranslations(translations) {\n        throw new Error('The `addTranslations` method must be implemented in this UserInterface. Called with: ' +\n            JSON.stringify(translations));\n    }\n}\n\nexport { AbstractAccountCreationPlugin, AbstractLoginPlugin, AbstractTransactPlugin, AbstractUserInterface, AbstractWalletPlugin, AccountCreationPluginMetadata, BaseLoginPlugin, BaseTransactPlugin, BrowserLocalStorage, CreateAccountContext, LoginContext, LoginHookTypes, Session, SessionKit, TransactContext, TransactHookTypes, TransactRevisions, WalletPluginMetadata, appendAction, SessionKit as default, getFetch, getPluginTranslations, prependAction };\n//# sourceMappingURL=session.m.js.map\n","import { BrowserLocalStorage, PermissionLevel, AbstractUserInterface, cancelable, Canceled } from '@wharfkit/session';\n\n/** @returns {void} */\nfunction noop() {}\n\nconst identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nfunction is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @returns {boolean} */\nfunction is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\nfunction subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nfunction get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nfunction component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nfunction create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nfunction update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {any[] | -1} */\nfunction get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\nfunction null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nfunction set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nconst is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nlet now = is_client ? () => window.performance.now() : () => Date.now();\n\nlet raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nfunction loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nfunction append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nfunction get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nfunction append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nfunction detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nfunction destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nfunction element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nfunction svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nfunction text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nfunction space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nfunction empty() {\n\treturn text('');\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nfunction listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nfunction prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nfunction stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nfunction self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nfunction attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nfunction children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nfunction set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @returns {void} */\nfunction set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nfunction set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nfunction toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\nfunction construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active$1 = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive$1 += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nfunction delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive$1 -= deleted;\n\t\tif (!active$1) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nfunction clear_rules() {\n\traf(() => {\n\t\tif (active$1) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n\nlet current_component;\n\n/** @returns {void} */\nfunction set_current_component(component) {\n\tcurrent_component = component;\n}\n\nfunction get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nfunction onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nfunction onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nfunction createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nfunction setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nfunction getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nfunction schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {void} */\nfunction add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nfunction add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nfunction flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nfunction flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nfunction group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nfunction check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nfunction transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nfunction transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nfunction create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nfunction create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n\n// general each functions:\n\nfunction ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n/** @returns {{}} */\nfunction get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nfunction get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n/** @returns {void} */\nfunction bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nfunction create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nfunction mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nfunction destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n/** @returns {void} */\nfunction init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tconst nodes = children(options.target);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nclass SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n// generated during release, do not modify\nconst PUBLIC_VERSION = '4';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n\n/* src/ui/components/BodyTitle.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$p(target) {\n\tappend_styles(target, \"svelte-efme7g\", \"h2.svelte-efme7g{color:var(--body-text-color);font-size:var(--fs-2);font-weight:600;text-align:center;margin:0;margin-block-start:var(--space-xs)}\");\n}\n\nfunction create_fragment$A(ctx) {\n\tlet h2;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[1].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\n\n\treturn {\n\t\tc() {\n\t\t\th2 = element(\"h2\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(h2, \"class\", \"svelte-efme7g\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h2, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(h2, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[0],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(h2);\n\t\t\t}\n\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$A($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\n\t};\n\n\treturn [$$scope, slots];\n}\n\nclass BodyTitle extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$A, create_fragment$A, safe_not_equal, {}, add_css$p);\n\t}\n}\n\n/* src/ui/components/BodyText.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$o(target) {\n\tappend_styles(target, \"svelte-fszb3i\", \"p.svelte-fszb3i{color:var(--body-text-color-variant);font-size:var(--fs-1);font-weight:400;text-align:center;margin:0;overflow-wrap:anywhere}\");\n}\n\nfunction create_fragment$z(ctx) {\n\tlet p;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[1].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(p, \"class\", \"svelte-fszb3i\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(p, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[0],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$z($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\n\t};\n\n\treturn [$$scope, slots];\n}\n\nclass BodyText extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$z, create_fragment$z, safe_not_equal, {}, add_css$o);\n\t}\n}\n\nconst Alert = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-alert-circle\"\n><circle cx=\"12\" cy=\"12\" r=\"10\" /><line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"12\" /><line\n    x1=\"12\"\n    x2=\"12.01\"\n    y1=\"16\"\n    y2=\"16\"\n/></svg\n>\n`;\nconst Check = `<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"><polyline points=\"20 6 9 17 4 12\" /></svg\n>\n`;\nconst ChevronLeft = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"><polyline points=\"15 18 9 12 15 6\" /></svg\n>\n`;\nconst ChevronRight = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"><polyline points=\"9 18 15 12 9 6\" /></svg\n>\n`;\nconst Close$1 = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\n><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" /><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" /></svg\n>\n`;\nconst Copy = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\n><rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" /><path\n    d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"\n/></svg\n>\n`;\nconst Error$2 = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-x-octagon\"\n><polygon\n    points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"\n/><line x1=\"15\" x2=\"9\" y1=\"9\" y2=\"15\" /><line x1=\"9\" x2=\"15\" y1=\"9\" y2=\"15\" /></svg\n>\n`;\nconst ExternalLink = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-external-link\"\n><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\" /><polyline\n    points=\"15 3 21 3 21 9\"\n/><line x1=\"10\" x2=\"21\" y1=\"14\" y2=\"3\" /></svg\n>\n`;\nconst Expand = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\n><polyline points=\"15 3 21 3 21 9\" /><polyline points=\"9 21 3 21 3 15\" /><line\n    x1=\"21\"\n    y1=\"3\"\n    x2=\"14\"\n    y2=\"10\"\n/><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" /></svg\n>\n`;\nconst FileCode = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\n><path d=\"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\" /><polyline\n    points=\"14 2 14 8 20 8\"\n/><path d=\"m9 18 3-3-3-3\" /><path d=\"m5 12-3 3 3 3\" /></svg\n>\n`;\nconst Github = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-github\"\n><path\n    d=\"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\"\n/><path d=\"M9 18c-4.51 2-5-2-7-2\" /></svg\n>\n`;\nconst Globe = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-globe\"\n><circle cx=\"12\" cy=\"12\" r=\"10\" /><line x1=\"2\" x2=\"22\" y1=\"12\" y2=\"12\" /><path\n    d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"\n/></svg\n>\n`;\nconst Info = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-info\"\n><circle cx=\"12\" cy=\"12\" r=\"10\" /><line x1=\"12\" x2=\"12\" y1=\"16\" y2=\"12\" /><line\n    x1=\"12\"\n    x2=\"12.01\"\n    y1=\"8\"\n    y2=\"8\"\n/></svg\n>\n`;\nconst Login$1 = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\n><path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\" /><polyline\n    points=\"10 17 15 12 10 7\"\n/><line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\" /></svg\n>\n`;\nconst Settings$1 = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-settings-2\"\n><path d=\"M20 7h-9\" /><path d=\"M14 17H5\" /><circle cx=\"17\" cy=\"17\" r=\"3\" /><circle\n    cx=\"7\"\n    cy=\"7\"\n    r=\"3\"\n/></svg\n>\n`;\nconst Signal = `<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"lucide lucide-radio\"\n    ><path d=\"M4.9 19.1C1 15.2 1 8.8 4.9 4.9\" /><path d=\"M7.8 16.2c-2.3-2.3-2.3-6.1 0-8.5\" /><circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"2\"\n    /><path d=\"M16.2 7.8c2.3 2.3 2.3 6.1 0 8.5\" /><path d=\"M19.1 4.9C23 8.8 23 15.1 19.1 19\" /></svg\n>\n`;\nconst Theme = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-sun-moon\"\n><path d=\"M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z\" /><path d=\"M12 8a2.828 2.828 0 1 0 4 4\" /><path\n    d=\"M12 2v2\"\n/><path d=\"M12 20v2\" /><path d=\"m4.93 4.93 1.41 1.41\" /><path d=\"m17.66 17.66 1.41 1.41\" /><path\n    d=\"M2 12h2\"\n/><path d=\"M20 12h2\" /><path d=\"m6.34 17.66-1.41 1.41\" /><path d=\"m19.07 4.93-1.41 1.41\" /></svg\n>\n`;\nconst Wallet$1 = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\n><path d=\"M20 12V8H6a2 2 0 0 1-2-2c0-1.1.9-2 2-2h12v4\" /><path\n    d=\"M4 6v12c0 1.1.9 2 2 2h14v-4\"\n/><path d=\"M18 12a2 2 0 0 0-2 2c0 1.1.9 2 2 2h4v-4h-4z\" /></svg\n>\n`;\nconst Waves = `<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"currentColor\"\nstroke-width=\"2\"\nstroke-linecap=\"round\"\nstroke-linejoin=\"round\"\nclass=\"lucide lucide-waves\"\n><path\n    d=\"M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"\n/><path\n    d=\"M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"\n/><path\n    d=\"M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"\n/></svg\n>\n`;\nconst Wharf = `<svg width=\"36\" height=\"31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n><path\n    d=\"M35.54 18.77c-.019.989-.673 1.676-1.319 2.048l-1.388.802c-.663.383-1.438.531-2.132.531-.695 0-1.47-.148-2.132-.531l-1.362-.802v2.722c0 1.008-.664 1.711-1.318 2.089l-1.389.801c-.663.383-1.437.531-2.132.531-.694 0-1.469-.148-2.131-.53l-2.035-1.175-2.034 1.174c-.663.383-1.438.531-2.132.531-.694 0-1.469-.148-2.131-.53l-9.722-5.613c-.645-.372-1.3-1.06-1.317-2.049v-.061 3.626c.018.989.672 1.676 1.317 2.049l9.722 5.612c.662.382 1.437.53 2.131.53.694 0 1.47-.148 2.132-.53l2.034-1.175 2.035 1.175c.662.382 1.437.53 2.131.53.695 0 1.47-.148 2.132-.53l1.389-.802c.654-.378 1.318-1.08 1.318-2.088v-2.722l1.362.801c.663.383 1.437.531 2.132.531.694 0 1.469-.148 2.132-.53l1.388-.802c.646-.373 1.3-1.06 1.318-2.05V18.77Z\"\n    fill=\"#7BE7CE\"\n/><path\n    d=\"M.874 15.362a1.5 1.5 0 0 0-.009.161v3.246c.019.99.673 1.677 1.318 2.05l9.722 5.612c.662.382 1.437.53 2.131.53.694 0 1.47-.148 2.132-.53l2.034-1.175 2.035 1.175c.662.382 1.437.53 2.131.53.695 0 1.47-.148 2.132-.53l1.389-.802c.654-.378 1.318-1.08 1.318-2.089V20.82l1.362.801c.663.383 1.437.531 2.132.531.694 0 1.469-.148 2.132-.53l1.388-.802c.646-.373 1.3-1.06 1.318-2.05v-3.564c-.018.99-.672 1.677-1.318 2.049l-1.388.802c-.663.382-1.438.53-2.132.53-.695 0-1.47-.148-2.132-.53l-1.388-.802a2.943 2.943 0 0 1-.067-.04 2.168 2.168 0 0 1 .085.834c.005.05.008.101.008.152v1.776c0 1.008-.664 1.71-1.318 2.088l-1.389.802c-.663.383-1.437.531-2.132.531-.694 0-1.469-.148-2.131-.53l-2.035-1.175-2.034 1.174c-.663.383-1.438.531-2.132.531-.694 0-1.469-.148-2.131-.53l-9.722-5.613c-.61-.352-1.229-.987-1.31-1.892ZM17.54 5.749l.004.043c.07.6.368 1.074.74 1.424a4.94 4.94 0 0 0-.75.045V5.875c0-.043.002-.085.006-.126Z\"\n    fill=\"#B2F2E1\"\n/><path\n    d=\"m3.573 10.152-1.389.801c-.618.358-1.246 1.006-1.312 1.928a1.364 1.364 0 0 0-.007.136V15.204c.019.99.673 1.677 1.318 2.05l9.722 5.611c.662.383 1.437.532 2.131.532.694 0 1.47-.149 2.132-.532l2.034-1.174 2.035 1.174c.662.383 1.437.532 2.131.532.695 0 1.47-.149 2.132-.532l1.389-.801c.654-.378 1.318-1.08 1.318-2.089v-1.775c0-.052-.003-.102-.008-.153a2.25 2.25 0 0 0-.085-.833l.067.04 1.388.801c.663.383 1.437.531 2.132.531.694 0 1.469-.148 2.132-.53l1.388-.802c.646-.373 1.3-1.06 1.318-2.05v-2.092a2.359 2.359 0 0 0 0-.142V8.29l.001-.058c0-1.009-.664-1.711-1.318-2.089L24.501.531C23.838.15 23.064 0 22.369 0c-.694 0-1.469.149-2.131.531l-1.389.802c-.654.377-1.318 1.08-1.318 2.088 0 .048.001.095.004.14v1.847a2.069 2.069 0 0 0 .01.385c.069.6.367 1.073.739 1.423h-.08c-.695 0-1.47.148-2.133.53l-1.388.802c-.654.378-1.318 1.08-1.318 2.089 0 .065.002.13.008.193a1.485 1.485 0 0 0-.002.073v1.682l-.003.041-.002.045a2.298 2.298 0 0 0 .021.405c.017.112.041.22.072.322l-5.623-3.246C7.174 9.769 6.4 9.62 5.705 9.62c-.695 0-1.47.148-2.132.53Z\"\n    fill=\"#F4FAF4\"\n/><path\n    d=\"M23.758 1.818c-.767-.442-2.01-.442-2.778 0l-1.389.802c-.766.443-.766 1.16 0 1.604l9.553 5.514c.369.213.575.501.575.802v.195c0 .3-.207.589-.575.801l-1.22.705c-.767.443-.767 1.16 0 1.603l1.389.802c.767.443 2.01.443 2.777 0l1.389-.802c.767-.443.767-1.16 0-1.603l-1.22-.705c-.369-.212-.576-.5-.576-.801v-.195c0-.3.207-.59.576-.802l1.22-.704c.767-.443.767-1.16 0-1.604l-9.721-5.612ZM7.093 11.439c-.767-.443-2.01-.443-2.777 0l-1.39.802c-.766.443-.766 1.16 0 1.603l9.722 5.612c.767.443 2.01.443 2.777 0l2.778-1.603-11.11-6.414Z\"\n    fill=\"#494E62\"\n/><path\n    d=\"M23.351 15.545c0 .3.207.589.575.801l1.22.705c.767.443.767 1.16 0 1.603l-1.388.802c-.767.443-2.01.443-2.778 0l-2.777-1.603 2.609-1.507c.368-.212.575-.5.575-.801v-.195c0-.3-.207-.589-.575-.801l-5.387-3.11c-.767-.443-.767-1.16 0-1.603l1.39-.802c.766-.443 2.01-.443 2.776 0l5.555 3.207c.767.443.767 1.16 0 1.603l-1.22.705c-.368.212-.575.5-.575.801v.195Z\"\n    fill=\"#494E62\"\n/></svg\n>\n`;\nconst icons = {\n    copy: Copy,\n    check: Check,\n    close: Close$1,\n    'file-code': FileCode,\n    wharf: Wharf,\n    login: Login$1,\n    'chevron-right': ChevronRight,\n    'chevron-left': ChevronLeft,\n    wallet: Wallet$1,\n    expand: Expand,\n    signal: Signal,\n    settings: Settings$1,\n    globe: Globe,\n    github: Github,\n    info: Info,\n    theme: Theme,\n    waves: Waves,\n    'external-link': ExternalLink,\n    error: Error$2,\n    alert: Alert,\n};\n\n/* src/ui/components/Icon.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$n(target) {\n\tappend_styles(target, \"svelte-19w48ux\", \"div.svelte-19w48ux svg{width:100%;height:100%}\");\n}\n\nfunction create_fragment$y(ctx) {\n\tlet div;\n\tlet raw_value = icons[/*name*/ ctx[0]] + \"\";\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tset_style(div, \"width\", /*size*/ ctx[1]);\n\t\t\tset_style(div, \"display\", \"grid\");\n\t\t\tset_style(div, \"place-content\", \"center\");\n\t\t\tset_style(div, \"color\", /*color*/ ctx[2]);\n\t\t\tattr(div, \"class\", \"svelte-19w48ux\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tdiv.innerHTML = raw_value;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*name*/ 1 && raw_value !== (raw_value = icons[/*name*/ ctx[0]] + \"\")) div.innerHTML = raw_value;\n\t\t\tif (dirty & /*size*/ 2) {\n\t\t\t\tset_style(div, \"width\", /*size*/ ctx[1]);\n\t\t\t}\n\n\t\t\tif (dirty & /*color*/ 4) {\n\t\t\t\tset_style(div, \"color\", /*color*/ ctx[2]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction instance$y($$self, $$props, $$invalidate) {\n\tlet { name } = $$props;\n\tlet { size = 'var(--space-l)' } = $$props;\n\tlet { color = 'currentColor' } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\n\t\tif ('size' in $$props) $$invalidate(1, size = $$props.size);\n\t\tif ('color' in $$props) $$invalidate(2, color = $$props.color);\n\t};\n\n\treturn [name, size, color];\n}\n\nclass Icon extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$y, create_fragment$y, safe_not_equal, { name: 0, size: 1, color: 2 }, add_css$n);\n\t}\n}\n\n/* src/ui/components/Message.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$m(target) {\n\tappend_styles(target, \"svelte-1u0n4gl\", \"div.svelte-1u0n4gl{display:grid;justify-items:center;gap:var(--space-s);text-align:center;color:var(--body-text-color);margin-block:var(--space-s)}\");\n}\n\n// (11:4) {#if icon}\nfunction create_if_block_2$9(ctx) {\n\tlet icon_1;\n\tlet current;\n\n\ticon_1 = new Icon({\n\t\t\tprops: {\n\t\t\t\tname: /*icon*/ ctx[2],\n\t\t\t\tsize: \"var(--space-3xl)\",\n\t\t\t\tcolor: /*iconColor*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(icon_1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(icon_1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst icon_1_changes = {};\n\t\t\tif (dirty & /*icon*/ 4) icon_1_changes.name = /*icon*/ ctx[2];\n\t\t\tif (dirty & /*iconColor*/ 8) icon_1_changes.color = /*iconColor*/ ctx[3];\n\t\t\ticon_1.$set(icon_1_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon_1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon_1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(icon_1, detaching);\n\t\t}\n\t};\n}\n\n// (14:4) {#if title}\nfunction create_if_block_1$9(ctx) {\n\tlet bodytitle;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$a] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(bodytitle, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, title*/ 17) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(bodytitle, detaching);\n\t\t}\n\t};\n}\n\n// (15:8) <BodyTitle>\nfunction create_default_slot_1$a(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(/*title*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 1) set_data(t, /*title*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (17:4) {#if details}\nfunction create_if_block$j(ctx) {\n\tlet bodytext;\n\tlet current;\n\n\tbodytext = new BodyText({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$c] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(bodytext.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(bodytext, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytext_changes = {};\n\n\t\t\tif (dirty & /*$$scope, details*/ 18) {\n\t\t\t\tbodytext_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytext.$set(bodytext_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytext.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytext.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(bodytext, detaching);\n\t\t}\n\t};\n}\n\n// (18:8) <BodyText>\nfunction create_default_slot$c(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(/*details*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*details*/ 2) set_data(t, /*details*/ ctx[1]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_fragment$x(ctx) {\n\tlet div;\n\tlet t0;\n\tlet t1;\n\tlet current;\n\tlet if_block0 = /*icon*/ ctx[2] && create_if_block_2$9(ctx);\n\tlet if_block1 = /*title*/ ctx[0] && create_if_block_1$9(ctx);\n\tlet if_block2 = /*details*/ ctx[1] && create_if_block$j(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt1 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tattr(div, \"class\", \"svelte-1u0n4gl\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tif (if_block0) if_block0.m(div, null);\n\t\t\tappend(div, t0);\n\t\t\tif (if_block1) if_block1.m(div, null);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block2) if_block2.m(div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*icon*/ ctx[2]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*icon*/ 4) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_2$9(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(div, t0);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*title*/ ctx[0]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*title*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1$9(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(div, t1);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*details*/ ctx[1]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*details*/ 2) {\n\t\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block$j(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\tif_block2.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block2, 1, 1, () => {\n\t\t\t\t\tif_block2 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block1);\n\t\t\ttransition_in(if_block2);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block1);\n\t\t\ttransition_out(if_block2);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t}\n\t};\n}\n\nfunction instance$x($$self, $$props, $$invalidate) {\n\tlet { title = undefined } = $$props;\n\tlet { details = undefined } = $$props;\n\tlet { icon = undefined } = $$props;\n\tlet { iconColor = 'currentColor' } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('title' in $$props) $$invalidate(0, title = $$props.title);\n\t\tif ('details' in $$props) $$invalidate(1, details = $$props.details);\n\t\tif ('icon' in $$props) $$invalidate(2, icon = $$props.icon);\n\t\tif ('iconColor' in $$props) $$invalidate(3, iconColor = $$props.iconColor);\n\t};\n\n\treturn [title, details, icon, iconColor];\n}\n\nclass Message extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$x,\n\t\t\tcreate_fragment$x,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\ttitle: 0,\n\t\t\t\tdetails: 1,\n\t\t\t\ticon: 2,\n\t\t\t\ticonColor: 3\n\t\t\t},\n\t\t\tadd_css$m\n\t\t);\n\t}\n}\n\n/* src/ui/components/ErrorMessage.svelte generated by Svelte v4.2.0 */\n\nfunction create_fragment$w(ctx) {\n\tlet message;\n\tlet current;\n\n\tmessage = new Message({\n\t\t\tprops: {\n\t\t\t\ttitle: /*title*/ ctx[0],\n\t\t\t\tdetails: /*details*/ ctx[1],\n\t\t\t\ticon: \"error\",\n\t\t\t\ticonColor: \"var(--color-error-2)\"\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(message.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(message, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst message_changes = {};\n\t\t\tif (dirty & /*title*/ 1) message_changes.title = /*title*/ ctx[0];\n\t\t\tif (dirty & /*details*/ 2) message_changes.details = /*details*/ ctx[1];\n\t\t\tmessage.$set(message_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(message.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(message.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(message, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$w($$self, $$props, $$invalidate) {\n\tlet { title } = $$props;\n\tlet { details } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('title' in $$props) $$invalidate(0, title = $$props.title);\n\t\tif ('details' in $$props) $$invalidate(1, details = $$props.details);\n\t};\n\n\treturn [title, details];\n}\n\nclass ErrorMessage extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$w, create_fragment$w, safe_not_equal, { title: 0, details: 1 });\n\t}\n}\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nfunction readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nfunction writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nfunction derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n// Reset data in all stores\nfunction resetState() {\n    active.set(false);\n    router.set({ ...defaultUserInterfaceRouter });\n    props.set({ ...defaultUserInterfaceProps });\n    prompt.reset();\n    cancelablePromises.set([]);\n    transactContext.set(undefined);\n    loginContext.set(undefined);\n    loginPromise.set(undefined);\n    loginResponse.set({ ...defaultLoginResponse });\n    accountCreationContext.set(undefined);\n    accountCreationPromise.set(undefined);\n    accountCreationResponse.set({ ...defaultAccountCreationResponse });\n    errorDetails.set(undefined);\n    backAction.set(undefined);\n    transitionDirection.set(undefined);\n}\n/** Whether or not the interface is active in the browser */\nconst active = writable(false);\n/** Whether or not the settings button should be visable/usable */\nconst allowSettings = writable(false);\nconst defaultUserInterfaceSettings = {\n    language: '',\n    theme: undefined,\n    animations: true,\n};\nfunction makeSettingsStore(data = defaultUserInterfaceSettings) {\n    const store = writable(data);\n    const { subscribe, set } = store;\n    let storage;\n    if (typeof localStorage !== 'undefined') {\n        storage = new BrowserLocalStorage('web.renderer');\n        storage.read('settings').then((existing) => {\n            if (existing) {\n                set(JSON.parse(existing));\n            }\n        });\n    }\n    return {\n        subscribe,\n        set: (n) => {\n            if (storage) {\n                storage.write('settings', JSON.stringify(n));\n            }\n            set(n);\n        },\n        update: (cb) => {\n            const updatedStore = cb(get_store_value(store));\n            if (storage) {\n                storage.write('settings', JSON.stringify(updatedStore));\n            }\n            set(updatedStore);\n        },\n    };\n}\nconst settings$5 = makeSettingsStore();\nconst defaultUserInterfaceProps = {\n    title: 'Wharf',\n    subtitle: 'Status Message',\n};\nconst props = writable(defaultUserInterfaceProps);\nconst defaultUserInterfaceRouter = {\n    path: '',\n    history: [],\n};\nconst initRouter = () => {\n    const { set, subscribe, update } = writable(defaultUserInterfaceRouter);\n    return {\n        // Method to go one back in history\n        back: () => update((current) => ({\n            ...current,\n            path: current.history[current.history.length - 1],\n            history: current.history.slice(0, -1),\n        })),\n        // Push a new path on to history\n        push: (path) => update((current) => ({\n            ...current,\n            path,\n            history: [...current.history, current.path],\n        })),\n        set,\n        subscribe,\n        update,\n    };\n};\nconst router = initRouter();\nconst cancelablePromises = writable([]);\nconst transactContext = writable(undefined);\nconst initPrompt = () => {\n    const { set, subscribe, update } = writable(undefined);\n    return {\n        reset: () => set(undefined),\n        set,\n        subscribe,\n        update,\n    };\n};\nconst prompt = initPrompt();\nconst defaultLoginResponse = {\n    chainId: undefined,\n    permissionLevel: undefined,\n    walletPluginIndex: undefined,\n};\nconst loginContext = writable(undefined);\nconst loginPromise = writable(undefined);\nconst loginResponse = writable({ ...defaultLoginResponse });\nconst defaultAccountCreationResponse = {\n    chain: undefined,\n    pluginId: undefined,\n};\nconst accountCreationContext = writable(undefined);\nconst accountCreationResponse = writable({\n    ...defaultAccountCreationResponse,\n});\nconst accountCreationPromise = writable(undefined);\nconst errorDetails = writable(undefined);\nconst backAction = writable(undefined);\nconst transitionDirection = writable(undefined);\n\n/* src/ui/Error.svelte generated by Svelte v4.2.0 */\n\nfunction create_if_block$i(ctx) {\n\tlet errormessage;\n\tlet current;\n\n\terrormessage = new ErrorMessage({\n\t\t\tprops: {\n\t\t\t\ttitle: /*$t*/ ctx[1]('error.title', { default: 'Error' }),\n\t\t\t\tdetails: /*$errorDetails*/ ctx[0]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(errormessage.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(errormessage, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst errormessage_changes = {};\n\t\t\tif (dirty & /*$t*/ 2) errormessage_changes.title = /*$t*/ ctx[1]('error.title', { default: 'Error' });\n\t\t\tif (dirty & /*$errorDetails*/ 1) errormessage_changes.details = /*$errorDetails*/ ctx[0];\n\t\t\terrormessage.$set(errormessage_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(errormessage.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(errormessage.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(errormessage, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$v(ctx) {\n\tlet div;\n\tlet current;\n\tlet if_block = /*$errorDetails*/ ctx[0] && create_if_block$i(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div, \"class\", \"error\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*$errorDetails*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*$errorDetails*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$i(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$v($$self, $$props, $$invalidate) {\n\tlet $errorDetails;\n\tlet $t;\n\tcomponent_subscribe($$self, errorDetails, $$value => $$invalidate(0, $errorDetails = $$value));\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(1, $t = value));\n\treturn [$errorDetails, $t, t];\n}\n\nclass Error$1 extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$v, create_fragment$v, safe_not_equal, {});\n\t}\n}\n\n/* src/ui/components/List.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$l(target) {\n\tappend_styles(target, \"svelte-1q25md2\", \"ul.svelte-1q25md2{list-style:none;padding:0;margin:0}\");\n}\n\nfunction create_fragment$u(ctx) {\n\tlet ul;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[1].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(ul, \"class\", \"svelte-1q25md2\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(ul, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[0],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(ul);\n\t\t\t}\n\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$u($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\n\t};\n\n\treturn [$$scope, slots];\n}\n\nclass List extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$u, create_fragment$u, safe_not_equal, {}, add_css$l);\n\t}\n}\n\n/* src/ui/components/ListItem.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$k(target) {\n\tappend_styles(target, \"svelte-1w5zc52\", \"li.svelte-1w5zc52.svelte-1w5zc52{display:flex;height:calc(var(--space-l) * 2);align-items:center;color:var(--body-text-color);font-size:var(--fs-1);font-weight:500}li.svelte-1w5zc52.svelte-1w5zc52:not(:last-child){border-bottom:1px solid var(--list-divider-color)}button.svelte-1w5zc52.svelte-1w5zc52,a.svelte-1w5zc52.svelte-1w5zc52{flex:1;height:100%;display:flex;align-items:center;cursor:pointer;border:none;background:none;color:inherit;font-size:inherit;font-family:inherit;font-weight:inherit;margin:0;padding:0;padding-inline-start:var(--space-3xs);text-decoration:none}.leading.svelte-1w5zc52.svelte-1w5zc52{inline-size:var(--space-xl);block-size:var(--space-xl);display:grid;place-content:center}.leading.svelte-1w5zc52>.svelte-1w5zc52{max-inline-size:30px;max-block-size:30px}.leading.svelte-1w5zc52 img.svelte-1w5zc52{width:100%;height:100%;object-fit:contain}.trailing.svelte-1w5zc52.svelte-1w5zc52{opacity:0.2;padding-inline-end:var(--space-s)}li.svelte-1w5zc52.svelte-1w5zc52:hover{background:var(--list-item-background-color-hover)}li.svelte-1w5zc52:hover .trailing.svelte-1w5zc52{opacity:1}.label.svelte-1w5zc52.svelte-1w5zc52{flex:1;text-align:start;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding-inline-start:var(--space-xs)}.value.svelte-1w5zc52.svelte-1w5zc52{font-weight:400;padding-inline-end:var(--space-xs)}\");\n}\n\n// (39:8) {:else}\nfunction create_else_block$5(ctx) {\n\tlet a;\n\tlet div;\n\tlet current_block_type_index;\n\tlet if_block0;\n\tlet t0;\n\tlet span;\n\tlet t1;\n\tlet t2;\n\tlet t3;\n\tlet current;\n\tconst if_block_creators = [create_if_block_7, create_if_block_8];\n\tconst if_blocks = [];\n\n\tfunction select_block_type_2(ctx, dirty) {\n\t\tif (/*logo*/ ctx[4]) return 0;\n\t\tif (/*leadingIcon*/ ctx[2]) return 1;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type_2(ctx))) {\n\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\tlet if_block1 = /*value*/ ctx[5] && create_if_block_6$1(ctx);\n\tlet if_block2 = /*trailingIcon*/ ctx[3] && create_if_block_5$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\ta = element(\"a\");\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tt1 = text(/*label*/ ctx[0]);\n\t\t\tt2 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt3 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tattr(div, \"class\", \"leading svelte-1w5zc52\");\n\t\t\tattr(span, \"class\", \"label svelte-1w5zc52\");\n\t\t\tattr(a, \"href\", /*link*/ ctx[6]);\n\t\t\tattr(a, \"target\", \"_blank\");\n\t\t\tattr(a, \"rel\", \"noreferrer\");\n\t\t\tattr(a, \"class\", \"svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, a, anchor);\n\t\t\tappend(a, div);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(div, null);\n\t\t\t}\n\n\t\t\tappend(a, t0);\n\t\t\tappend(a, span);\n\t\t\tappend(span, t1);\n\t\t\tappend(a, t2);\n\t\t\tif (if_block1) if_block1.m(a, null);\n\t\t\tappend(a, t3);\n\t\t\tif (if_block2) if_block2.m(a, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type_2(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block0 = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block0) {\n\t\t\t\t\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block0.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(div, null);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*label*/ 1) set_data(t1, /*label*/ ctx[0]);\n\n\t\t\tif (/*value*/ ctx[5]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_6$1(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(a, t3);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\n\t\t\tif (/*trailingIcon*/ ctx[3]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*trailingIcon*/ 8) {\n\t\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block_5$1(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\tif_block2.m(a, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block2, 1, 1, () => {\n\t\t\t\t\tif_block2 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*link*/ 64) {\n\t\t\t\tattr(a, \"href\", /*link*/ ctx[6]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block2);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block2);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(a);\n\t\t\t}\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t}\n\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t}\n\t};\n}\n\n// (13:8) {#if !link}\nfunction create_if_block$h(ctx) {\n\tlet button;\n\tlet div;\n\tlet current_block_type_index;\n\tlet if_block0;\n\tlet t0;\n\tlet span;\n\tlet t1;\n\tlet t2;\n\tlet t3;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst if_block_creators = [create_if_block_3$6, create_if_block_4$5];\n\tconst if_blocks = [];\n\n\tfunction select_block_type_1(ctx, dirty) {\n\t\tif (/*logo*/ ctx[4]) return 0;\n\t\tif (/*leadingIcon*/ ctx[2]) return 1;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type_1(ctx))) {\n\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\tlet if_block1 = /*value*/ ctx[5] && create_if_block_2$8(ctx);\n\tlet if_block2 = /*trailingIcon*/ ctx[3] && create_if_block_1$8(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tt1 = text(/*label*/ ctx[0]);\n\t\t\tt2 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt3 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tattr(div, \"class\", \"leading svelte-1w5zc52\");\n\t\t\tattr(span, \"class\", \"label svelte-1w5zc52\");\n\t\t\tattr(button, \"class\", \"svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, div);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(div, null);\n\t\t\t}\n\n\t\t\tappend(button, t0);\n\t\t\tappend(button, span);\n\t\t\tappend(span, t1);\n\t\t\tappend(button, t2);\n\t\t\tif (if_block1) if_block1.m(button, null);\n\t\t\tappend(button, t3);\n\t\t\tif (if_block2) if_block2.m(button, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", function () {\n\t\t\t\t\tif (is_function(/*onClick*/ ctx[1])) /*onClick*/ ctx[1].apply(this, arguments);\n\t\t\t\t});\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type_1(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block0 = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block0) {\n\t\t\t\t\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block0.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(div, null);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*label*/ 1) set_data(t1, /*label*/ ctx[0]);\n\n\t\t\tif (/*value*/ ctx[5]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_2$8(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(button, t3);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\n\t\t\tif (/*trailingIcon*/ ctx[3]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*trailingIcon*/ 8) {\n\t\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block_1$8(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\tif_block2.m(button, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block2, 1, 1, () => {\n\t\t\t\t\tif_block2 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block2);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block2);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t}\n\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (46:42) \nfunction create_if_block_8(ctx) {\n\tlet div;\n\tlet icon;\n\tlet current;\n\ticon = new Icon({ props: { name: /*leadingIcon*/ ctx[2] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tattr(div, \"class\", \"icon svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(icon, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst icon_changes = {};\n\t\t\tif (dirty & /*leadingIcon*/ 4) icon_changes.name = /*leadingIcon*/ ctx[2];\n\t\t\ticon.$set(icon_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t}\n\t};\n}\n\n// (42:20) {#if logo}\nfunction create_if_block_7(ctx) {\n\tlet div;\n\tlet img;\n\tlet img_src_value;\n\tlet img_alt_value;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\timg = element(\"img\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*logo*/ ctx[4])) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", img_alt_value = `${/*label*/ ctx[0]} logo`);\n\t\t\tattr(img, \"class\", \"svelte-1w5zc52\");\n\t\t\tattr(div, \"class\", \"logo svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, img);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*logo*/ 16 && !src_url_equal(img.src, img_src_value = /*logo*/ ctx[4])) {\n\t\t\t\tattr(img, \"src\", img_src_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*label*/ 1 && img_alt_value !== (img_alt_value = `${/*label*/ ctx[0]} logo`)) {\n\t\t\t\tattr(img, \"alt\", img_alt_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (55:16) {#if value}\nfunction create_if_block_6$1(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*value*/ ctx[5]);\n\t\t\tattr(span, \"class\", \"value svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*value*/ 32) set_data(t, /*value*/ ctx[5]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(span);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (59:16) {#if trailingIcon}\nfunction create_if_block_5$1(ctx) {\n\tlet div;\n\tlet icon;\n\tlet current;\n\ticon = new Icon({ props: { name: /*trailingIcon*/ ctx[3] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tattr(div, \"class\", \"trailing svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(icon, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst icon_changes = {};\n\t\t\tif (dirty & /*trailingIcon*/ 8) icon_changes.name = /*trailingIcon*/ ctx[3];\n\t\t\ticon.$set(icon_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t}\n\t};\n}\n\n// (20:42) \nfunction create_if_block_4$5(ctx) {\n\tlet div;\n\tlet icon;\n\tlet current;\n\ticon = new Icon({ props: { name: /*leadingIcon*/ ctx[2] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tattr(div, \"class\", \"icon svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(icon, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst icon_changes = {};\n\t\t\tif (dirty & /*leadingIcon*/ 4) icon_changes.name = /*leadingIcon*/ ctx[2];\n\t\t\ticon.$set(icon_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t}\n\t};\n}\n\n// (16:20) {#if logo}\nfunction create_if_block_3$6(ctx) {\n\tlet div;\n\tlet img;\n\tlet img_src_value;\n\tlet img_alt_value;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\timg = element(\"img\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*logo*/ ctx[4])) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", img_alt_value = `${/*label*/ ctx[0]} logo`);\n\t\t\tattr(img, \"class\", \"svelte-1w5zc52\");\n\t\t\tattr(div, \"class\", \"logo svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, img);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*logo*/ 16 && !src_url_equal(img.src, img_src_value = /*logo*/ ctx[4])) {\n\t\t\t\tattr(img, \"src\", img_src_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*label*/ 1 && img_alt_value !== (img_alt_value = `${/*label*/ ctx[0]} logo`)) {\n\t\t\t\tattr(img, \"alt\", img_alt_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (29:16) {#if value}\nfunction create_if_block_2$8(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*value*/ ctx[5]);\n\t\t\tattr(span, \"class\", \"value svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*value*/ 32) set_data(t, /*value*/ ctx[5]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(span);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (33:16) {#if trailingIcon}\nfunction create_if_block_1$8(ctx) {\n\tlet div;\n\tlet icon;\n\tlet current;\n\ticon = new Icon({ props: { name: /*trailingIcon*/ ctx[3] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tattr(div, \"class\", \"trailing svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(icon, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst icon_changes = {};\n\t\t\tif (dirty & /*trailingIcon*/ 8) icon_changes.name = /*trailingIcon*/ ctx[3];\n\t\t\ticon.$set(icon_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t}\n\t};\n}\n\n// (12:10)          \nfunction fallback_block$2(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block$h, create_else_block$5];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (!/*link*/ ctx[6]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$t(ctx) {\n\tlet li;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[8].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[7], null);\n\tconst default_slot_or_fallback = default_slot || fallback_block$2(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tif (default_slot_or_fallback) default_slot_or_fallback.c();\n\t\t\tattr(li, \"class\", \"svelte-1w5zc52\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\n\t\t\tif (default_slot_or_fallback) {\n\t\t\t\tdefault_slot_or_fallback.m(li, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 128)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[7],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[7])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[7], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (default_slot_or_fallback && default_slot_or_fallback.p && (!current || dirty & /*onClick, trailingIcon, value, label, logo, leadingIcon, link*/ 127)) {\n\t\t\t\t\tdefault_slot_or_fallback.p(ctx, !current ? -1 : dirty);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot_or_fallback, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot_or_fallback, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(li);\n\t\t\t}\n\n\t\t\tif (default_slot_or_fallback) default_slot_or_fallback.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$t($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { label = undefined } = $$props;\n\n\tlet { onClick = () => {\n\t\t\n\t} } = $$props;\n\n\tlet { leadingIcon = undefined } = $$props;\n\tlet { trailingIcon = 'chevron-right' } = $$props;\n\tlet { logo = undefined } = $$props;\n\tlet { value = undefined } = $$props;\n\tlet { link = undefined } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('label' in $$props) $$invalidate(0, label = $$props.label);\n\t\tif ('onClick' in $$props) $$invalidate(1, onClick = $$props.onClick);\n\t\tif ('leadingIcon' in $$props) $$invalidate(2, leadingIcon = $$props.leadingIcon);\n\t\tif ('trailingIcon' in $$props) $$invalidate(3, trailingIcon = $$props.trailingIcon);\n\t\tif ('logo' in $$props) $$invalidate(4, logo = $$props.logo);\n\t\tif ('value' in $$props) $$invalidate(5, value = $$props.value);\n\t\tif ('link' in $$props) $$invalidate(6, link = $$props.link);\n\t\tif ('$$scope' in $$props) $$invalidate(7, $$scope = $$props.$$scope);\n\t};\n\n\treturn [label, onClick, leadingIcon, trailingIcon, logo, value, link, $$scope, slots];\n}\n\nclass ListItem extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$t,\n\t\t\tcreate_fragment$t,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tlabel: 0,\n\t\t\t\tonClick: 1,\n\t\t\t\tleadingIcon: 2,\n\t\t\t\ttrailingIcon: 3,\n\t\t\t\tlogo: 4,\n\t\t\t\tvalue: 5,\n\t\t\t\tlink: 6\n\t\t\t},\n\t\t\tadd_css$k\n\t\t);\n\t}\n}\n\nfunction isUrlImage(str) {\n    return str.startsWith('http://') || str.startsWith('https://');\n}\nfunction isBase64Image(str) {\n    return str.startsWith('data:image/');\n}\nfunction isValidIcon(str) {\n    return str in icons;\n}\n// Returns a themed logo based on the wallet metadata and the current color scheme preference\nfunction getThemedLogo(metadata) {\n    const { name, logo } = metadata;\n    let { theme } = get_store_value(settings$5);\n    const oppositeTheme = theme === 'light' ? 'dark' : 'light';\n    if (!theme) {\n        // if no theme is set, use the system preference for logo\n        window.matchMedia('(prefers-color-scheme: dark)').matches\n            ? (theme = 'dark')\n            : (theme = 'light');\n    }\n    if (!logo) {\n        if ('getLogo' in metadata) {\n            return metadata.getLogo()?.[theme] ?? metadata.getLogo()?.[oppositeTheme];\n        }\n        console.warn(`${name} does not have a logo.`);\n        return;\n    }\n    const image = logo[theme] ?? logo[oppositeTheme];\n    if (!isUrlImage(image.toString()) && !isBase64Image(image.toString())) {\n        console.warn(`${name} ${theme} logo is not a supported image format.`);\n        return;\n    }\n    return image;\n}\n\n/* src/ui/login/Blockchain.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$j(target) {\n\tappend_styles(target, \"svelte-1d8fcdl\", \"section.svelte-1d8fcdl{display:flex;flex-direction:column;gap:var(--space-s)}\");\n}\n\nfunction get_each_context$5(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[4] = list[i];\n\treturn child_ctx;\n}\n\n// (11:0) {#if chains}\nfunction create_if_block$g(ctx) {\n\tlet section;\n\tlet bodytitle;\n\tlet t;\n\tlet list;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$9] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tlist = new List({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$b] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt = space();\n\t\t\tcreate_component(list.$$.fragment);\n\t\t\tattr(section, \"class\", \"svelte-1d8fcdl\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tmount_component(bodytitle, section, null);\n\t\t\tappend(section, t);\n\t\t\tmount_component(list, section, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, title*/ 130) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst list_changes = {};\n\n\t\t\tif (dirty & /*$$scope, chains*/ 129) {\n\t\t\t\tlist_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlist.$set(list_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(list.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(list.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(section);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle);\n\t\t\tdestroy_component(list);\n\t\t}\n\t};\n}\n\n// (13:8) <BodyTitle>\nfunction create_default_slot_1$9(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(/*title*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 2) set_data(t, /*title*/ ctx[1]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (15:12) {#each chains as chain}\nfunction create_each_block$5(ctx) {\n\tlet listitem;\n\tlet current;\n\n\tfunction func() {\n\t\treturn /*func*/ ctx[3](/*chain*/ ctx[4]);\n\t}\n\n\tlistitem = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*chain*/ ctx[4].name,\n\t\t\t\tonClick: func,\n\t\t\t\tleadingIcon: \"wharf\",\n\t\t\t\tlogo: getThemedLogo(/*chain*/ ctx[4])\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listitem.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listitem, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst listitem_changes = {};\n\t\t\tif (dirty & /*chains*/ 1) listitem_changes.label = /*chain*/ ctx[4].name;\n\t\t\tif (dirty & /*chains*/ 1) listitem_changes.onClick = func;\n\t\t\tif (dirty & /*chains*/ 1) listitem_changes.logo = getThemedLogo(/*chain*/ ctx[4]);\n\t\t\tlistitem.$set(listitem_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listitem.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listitem.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(listitem, detaching);\n\t\t}\n\t};\n}\n\n// (14:8) <List>\nfunction create_default_slot$b(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = ensure_array_like(/*chains*/ ctx[0]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$5(get_each_context$5(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*chains, dispatch*/ 5) {\n\t\t\t\teach_value = ensure_array_like(/*chains*/ ctx[0]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$5(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$5(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(each_1_anchor);\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$s(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*chains*/ ctx[0] && create_if_block$g(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*chains*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*chains*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$g(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$s($$self, $$props, $$invalidate) {\n\tlet { chains } = $$props;\n\tlet { title } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tconst func = chain => dispatch('select', chain.id);\n\n\t$$self.$$set = $$props => {\n\t\tif ('chains' in $$props) $$invalidate(0, chains = $$props.chains);\n\t\tif ('title' in $$props) $$invalidate(1, title = $$props.title);\n\t};\n\n\treturn [chains, title, dispatch, func];\n}\n\nclass Blockchain extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$s, create_fragment$s, safe_not_equal, { chains: 0, title: 1 }, add_css$j);\n\t}\n}\n\n/* src/ui/components/Button.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$i(target) {\n\tappend_styles(target, \"svelte-hwtk1p\", \".button.svelte-hwtk1p{--button-height:var(--space-2xl);cursor:pointer;display:flex;justify-content:center;align-items:center;gap:var(--space-2xs);height:var(--button-height);line-height:var(--button-height);text-decoration:none;text-align:center;border-radius:var(--border-radius-inner);font-size:var(--fs-1);font-weight:600;color:var(--button-color, var(--button-text-color));background:var(--button-background, var(--button-primary-background));border:none;box-shadow:var(--button-outline);flex:1}.button.svelte-hwtk1p:hover{background:var(--button-background-hover, var(--button-primary-background-hover));box-shadow:var(--button-outline-hover, var(--button-primary-outline-hover))}.button.svelte-hwtk1p:active{background:var(--button-background-active, var(--button-primary-background-active));box-shadow:var(--button-outline-active);color:var(--button-text-color-active)}.secondary.svelte-hwtk1p{--button-background:var(--button-secondary-background);--button-background-hover:var(--button-secondary-background-hover);--button-background-active:var(--button-secondary-background-active);--button-outline-hover:var(--button-secondary-outline-hover)}.outlined.svelte-hwtk1p{--button-background:transparent;--button-background-hover:transparent;--button-background-active:var(--button-outlined-background-active);--button-outline:var(--button-outlined-outline);--button-outline-hover:var(--button-outlined-outline-hover)}\");\n}\n\n// (7:4) {#if icon}\nfunction create_if_block$f(ctx) {\n\tlet icon_1;\n\tlet current;\n\ticon_1 = new Icon({ props: { name: /*icon*/ ctx[1] } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(icon_1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(icon_1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon_1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon_1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(icon_1, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$r(ctx) {\n\tlet button;\n\tlet t0;\n\tlet span;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block = /*icon*/ ctx[1] && create_if_block$f(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tt0 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tspan.textContent = `${/*label*/ ctx[0]}`;\n\t\t\tattr(button, \"class\", \"button \" + /*variant*/ ctx[3] + \" svelte-hwtk1p\");\n\t\t\tbutton.autofocus = /*autofocus*/ ctx[4];\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tif (if_block) if_block.m(button, null);\n\t\t\tappend(button, t0);\n\t\t\tappend(button, span);\n\t\t\tcurrent = true;\n\t\t\tif (/*autofocus*/ ctx[4]) button.focus();\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*onClick*/ ctx[2]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*icon*/ ctx[1]) if_block.p(ctx, dirty);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$r($$self, $$props, $$invalidate) {\n\tlet { data } = $$props;\n\tconst { label, icon, onClick, variant = 'primary', autofocus } = data;\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(5, data = $$props.data);\n\t};\n\n\treturn [label, icon, onClick, variant, autofocus, data];\n}\n\nclass Button extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$r, create_fragment$r, safe_not_equal, { data: 5 }, add_css$i);\n\t}\n}\n\n/* src/ui/components/TextInput.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$h(target) {\n\tappend_styles(target, \"svelte-3b7p6\", \"input.svelte-3b7p6{box-sizing:border-box;height:var(--space-2xl);border-radius:var(--border-radius-inner);border:1px solid var(--input-border-color);padding-inline:var(--space-m);color:var(--body-text-color);background-color:var(--body-background-color);font-size:var(--fs-1)}input.svelte-3b7p6::placeholder{font-size:var(--fs-1);color:var(--input-placeholder-color);font-style:italic}input.svelte-3b7p6:hover{border:1px solid transparent;outline:2px solid var(--input-border-color-hover);background-color:var(--input-background-focus)}input.svelte-3b7p6:focus-within{border:1px solid transparent;outline:2px solid var(--input-border-color-focus);background-color:var(--input-background-focus)}input.error.svelte-3b7p6{border:1px solid var(--error-color);color:var(--error-color)}input.error.svelte-3b7p6:focus-within{border:1px solid transparent;color:var(--body-text-color)}\");\n}\n\nfunction create_fragment$q(ctx) {\n\tlet input;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tinput.autofocus = /*autofocus*/ ctx[3];\n\t\t\tattr(input, \"type\", \"text\");\n\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[1]);\n\t\t\tattr(input, \"class\", \"svelte-3b7p6\");\n\t\t\ttoggle_class(input, \"error\", /*error*/ ctx[4]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\t\t\tif (/*autofocus*/ ctx[3]) input.focus();\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"keyup\", prevent_default(function () {\n\t\t\t\t\t\tif (is_function(/*onKeyup*/ ctx[2])) /*onKeyup*/ ctx[2].apply(this, arguments);\n\t\t\t\t\t})),\n\t\t\t\t\tlisten(input, \"input\", /*input_input_handler*/ ctx[5])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (dirty & /*autofocus*/ 8) {\n\t\t\t\tinput.autofocus = /*autofocus*/ ctx[3];\n\t\t\t}\n\n\t\t\tif (dirty & /*placeholder*/ 2) {\n\t\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[1]);\n\t\t\t}\n\n\t\t\tif (dirty & /*value*/ 1 && input.value !== /*value*/ ctx[0]) {\n\t\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\t\t\t}\n\n\t\t\tif (dirty & /*error*/ 16) {\n\t\t\t\ttoggle_class(input, \"error\", /*error*/ ctx[4]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(input);\n\t\t\t}\n\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$q($$self, $$props, $$invalidate) {\n\tlet { value } = $$props;\n\tlet { placeholder } = $$props;\n\tlet { onKeyup } = $$props;\n\tlet { autofocus = false } = $$props;\n\tlet { error = false } = $$props;\n\n\tfunction input_input_handler() {\n\t\tvalue = this.value;\n\t\t$$invalidate(0, value);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('value' in $$props) $$invalidate(0, value = $$props.value);\n\t\tif ('placeholder' in $$props) $$invalidate(1, placeholder = $$props.placeholder);\n\t\tif ('onKeyup' in $$props) $$invalidate(2, onKeyup = $$props.onKeyup);\n\t\tif ('autofocus' in $$props) $$invalidate(3, autofocus = $$props.autofocus);\n\t\tif ('error' in $$props) $$invalidate(4, error = $$props.error);\n\t};\n\n\treturn [value, placeholder, onKeyup, autofocus, error, input_input_handler];\n}\n\nclass TextInput extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$q,\n\t\t\tcreate_fragment$q,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tplaceholder: 1,\n\t\t\t\tonKeyup: 2,\n\t\t\t\tautofocus: 3,\n\t\t\t\terror: 4\n\t\t\t},\n\t\t\tadd_css$h\n\t\t);\n\t}\n}\n\n/* src/ui/components/WarningMessage.svelte generated by Svelte v4.2.0 */\n\nfunction create_fragment$p(ctx) {\n\tlet message;\n\tlet current;\n\n\tmessage = new Message({\n\t\t\tprops: {\n\t\t\t\ttitle: /*title*/ ctx[0],\n\t\t\t\tdetails: /*details*/ ctx[1],\n\t\t\t\ticon: \"alert\"\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(message.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(message, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst message_changes = {};\n\t\t\tif (dirty & /*title*/ 1) message_changes.title = /*title*/ ctx[0];\n\t\t\tif (dirty & /*details*/ 2) message_changes.details = /*details*/ ctx[1];\n\t\t\tmessage.$set(message_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(message.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(message.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(message, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$p($$self, $$props, $$invalidate) {\n\tlet { title } = $$props;\n\tlet { details } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('title' in $$props) $$invalidate(0, title = $$props.title);\n\t\tif ('details' in $$props) $$invalidate(1, details = $$props.details);\n\t};\n\n\treturn [title, details];\n}\n\nclass WarningMessage extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$p, create_fragment$p, safe_not_equal, { title: 0, details: 1 });\n\t}\n}\n\n/* src/ui/login/Permission.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$g(target) {\n\tappend_styles(target, \"svelte-13p224c\", \"section.svelte-13p224c{display:flex;flex-direction:column;gap:var(--space-s)}p.loading.svelte-13p224c{margin:0;text-align:center;height:var(--space-4xl)}p.error.svelte-13p224c{margin:0;text-align:center;color:var(--error-color)}.input-group.svelte-13p224c{display:flex;flex-direction:column;gap:var(--space-m);margin-top:var(--space-s)}\");\n}\n\nfunction get_each_context$4(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[19] = list[i];\n\treturn child_ctx;\n}\n\n// (98:27) \nfunction create_if_block_3$5(ctx) {\n\tlet bodytitle;\n\tlet t0;\n\tlet div;\n\tlet textinput;\n\tlet updating_value;\n\tlet t1;\n\tlet t2;\n\tlet button;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_3$2] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tfunction textinput_value_binding(value) {\n\t\t/*textinput_value_binding*/ ctx[18](value);\n\t}\n\n\tlet textinput_props = {\n\t\tonKeyup: /*handleKeyup*/ ctx[13],\n\t\tplaceholder: \"Account name\",\n\t\tautofocus: !/*input*/ ctx[1],\n\t\terror: /*accountNotFound*/ ctx[4] && /*input*/ ctx[1] === /*prevInput*/ ctx[2]\n\t};\n\n\tif (/*input*/ ctx[1] !== void 0) {\n\t\ttextinput_props.value = /*input*/ ctx[1];\n\t}\n\n\ttextinput = new TextInput({ props: textinput_props });\n\tbinding_callbacks.push(() => bind(textinput, 'value', textinput_value_binding));\n\tlet if_block = /*accountNotFound*/ ctx[4] && create_if_block_4$4(ctx);\n\n\tbutton = new Button({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tvariant: 'primary',\n\t\t\t\t\tonClick: /*lookup*/ ctx[12],\n\t\t\t\t\tlabel: /*$t*/ ctx[8]('login.enter.lookup', { default: 'Lookup Account' })\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(textinput.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tt2 = space();\n\t\t\tcreate_component(button.$$.fragment);\n\t\t\tattr(div, \"class\", \"input-group svelte-13p224c\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(bodytitle, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(textinput, div, null);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t\tappend(div, t2);\n\t\t\tmount_component(button, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, title*/ 4194305) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst textinput_changes = {};\n\t\t\tif (dirty & /*input*/ 2) textinput_changes.autofocus = !/*input*/ ctx[1];\n\t\t\tif (dirty & /*accountNotFound, input, prevInput*/ 22) textinput_changes.error = /*accountNotFound*/ ctx[4] && /*input*/ ctx[1] === /*prevInput*/ ctx[2];\n\n\t\t\tif (!updating_value && dirty & /*input*/ 2) {\n\t\t\t\tupdating_value = true;\n\t\t\t\ttextinput_changes.value = /*input*/ ctx[1];\n\t\t\t\tadd_flush_callback(() => updating_value = false);\n\t\t\t}\n\n\t\t\ttextinput.$set(textinput_changes);\n\n\t\t\tif (/*accountNotFound*/ ctx[4]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block_4$4(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div, t2);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tconst button_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 256) button_changes.data = {\n\t\t\t\tvariant: 'primary',\n\t\t\t\tonClick: /*lookup*/ ctx[12],\n\t\t\t\tlabel: /*$t*/ ctx[8]('login.enter.lookup', { default: 'Lookup Account' })\n\t\t\t};\n\n\t\t\tbutton.$set(button_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(textinput.$$.fragment, local);\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(textinput.$$.fragment, local);\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t0);\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle, detaching);\n\t\t\tdestroy_component(textinput);\n\t\t\tif (if_block) if_block.d();\n\t\t\tdestroy_component(button);\n\t\t}\n\t};\n}\n\n// (89:24) \nfunction create_if_block_2$7(ctx) {\n\tlet bodytitle;\n\tlet t_1;\n\tlet warningmessage;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_2$2] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\twarningmessage = new WarningMessage({\n\t\t\tprops: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tdetails: /*$t*/ ctx[8]('login.select.no_match', {\n\t\t\t\t\tdefault: 'No accounts found matching {{publicKey}}',\n\t\t\t\t\tpublicKey: /*publicKey*/ ctx[6]\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt_1 = space();\n\t\t\tcreate_component(warningmessage.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(bodytitle, target, anchor);\n\t\t\tinsert(target, t_1, anchor);\n\t\t\tmount_component(warningmessage, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $t*/ 4194560) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst warningmessage_changes = {};\n\n\t\t\tif (dirty & /*$t, publicKey*/ 320) warningmessage_changes.details = /*$t*/ ctx[8]('login.select.no_match', {\n\t\t\t\tdefault: 'No accounts found matching {{publicKey}}',\n\t\t\t\tpublicKey: /*publicKey*/ ctx[6]\n\t\t\t});\n\n\t\t\twarningmessage.$set(warningmessage_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(warningmessage.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(warningmessage.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle, detaching);\n\t\t\tdestroy_component(warningmessage, detaching);\n\t\t}\n\t};\n}\n\n// (79:52) \nfunction create_if_block_1$7(ctx) {\n\tlet bodytitle;\n\tlet t_1;\n\tlet list;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$8] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tlist = new List({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$a] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt_1 = space();\n\t\t\tcreate_component(list.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(bodytitle, target, anchor);\n\t\t\tinsert(target, t_1, anchor);\n\t\t\tmount_component(list, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $t*/ 4194560) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst list_changes = {};\n\n\t\t\tif (dirty & /*$$scope, permissions*/ 4194336) {\n\t\t\t\tlist_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlist.$set(list_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(list.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(list.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle, detaching);\n\t\t\tdestroy_component(list, detaching);\n\t\t}\n\t};\n}\n\n// (77:4) {#if $busy}\nfunction create_if_block$e(ctx) {\n\tlet p;\n\tlet t_1_value = /*$t*/ ctx[8]('loading', { default: 'Loading...' }) + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tt_1 = text(t_1_value);\n\t\t\tattr(p, \"class\", \"loading svelte-13p224c\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t_1);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 256 && t_1_value !== (t_1_value = /*$t*/ ctx[8]('loading', { default: 'Loading...' }) + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (99:8) <BodyTitle>\nfunction create_default_slot_3$2(ctx) {\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tt_1 = text(/*title*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t_1, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 1) set_data(t_1, /*title*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (108:12) {#if accountNotFound}\nfunction create_if_block_4$4(ctx) {\n\tlet p;\n\tlet t0_value = /*$t*/ ctx[8]('login.enter.not_found', { default: 'Unable to find account' }) + \"\";\n\tlet t0;\n\tlet t1;\n\tlet t2;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tt2 = text(/*prevInput*/ ctx[2]);\n\t\t\tattr(p, \"class\", \"error svelte-13p224c\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t0);\n\t\t\tappend(p, t1);\n\t\t\tappend(p, t2);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 256 && t0_value !== (t0_value = /*$t*/ ctx[8]('login.enter.not_found', { default: 'Unable to find account' }) + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty & /*prevInput*/ 4) set_data(t2, /*prevInput*/ ctx[2]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (90:8) <BodyTitle>\nfunction create_default_slot_2$2(ctx) {\n\tlet t_1_value = /*$t*/ ctx[8]('login.select.no_accounts') + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tt_1 = text(t_1_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t_1, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 256 && t_1_value !== (t_1_value = /*$t*/ ctx[8]('login.select.no_accounts') + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (80:8) <BodyTitle>\nfunction create_default_slot_1$8(ctx) {\n\tlet t_1_value = /*$t*/ ctx[8]('login.select.account') + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tt_1 = text(t_1_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t_1, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 256 && t_1_value !== (t_1_value = /*$t*/ ctx[8]('login.select.account') + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (82:12) {#each permissions as permission}\nfunction create_each_block$4(ctx) {\n\tlet listitem;\n\tlet current;\n\n\tfunction func() {\n\t\treturn /*func*/ ctx[17](/*permission*/ ctx[19]);\n\t}\n\n\tlistitem = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: String(/*permission*/ ctx[19]),\n\t\t\t\tonClick: func\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listitem.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listitem, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst listitem_changes = {};\n\t\t\tif (dirty & /*permissions*/ 32) listitem_changes.label = String(/*permission*/ ctx[19]);\n\t\t\tif (dirty & /*permissions*/ 32) listitem_changes.onClick = func;\n\t\t\tlistitem.$set(listitem_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listitem.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listitem.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(listitem, detaching);\n\t\t}\n\t};\n}\n\n// (81:8) <List>\nfunction create_default_slot$a(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = ensure_array_like(/*permissions*/ ctx[5]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$4(get_each_context$4(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*String, permissions, dispatch*/ 1056) {\n\t\t\t\teach_value = ensure_array_like(/*permissions*/ ctx[5]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$4(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$4(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(each_1_anchor);\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$o(ctx) {\n\tlet section;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet current;\n\tconst if_block_creators = [create_if_block$e, create_if_block_1$7, create_if_block_2$7, create_if_block_3$5];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*$busy*/ ctx[7]) return 0;\n\t\tif (/*permissions*/ ctx[5] && /*permissions*/ ctx[5].length > 0) return 1;\n\t\tif (/*publicKey*/ ctx[6]) return 2;\n\t\tif (!/*accountName*/ ctx[3]) return 3;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type(ctx))) {\n\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(section, \"class\", \"svelte-13p224c\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(section, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block) {\n\t\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(section, null);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = null;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(section);\n\t\t\t}\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction instance$o($$self, $$props, $$invalidate) {\n\tlet $busy;\n\tlet $t;\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(8, $t = value));\n\tlet { chainId } = $$props;\n\tlet { client } = $$props;\n\tlet { walletPlugin } = $$props;\n\tlet { title } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tlet busy = writable(true);\n\tcomponent_subscribe($$self, busy, value => $$invalidate(7, $busy = value));\n\tlet input = '';\n\tlet prevInput = '';\n\tlet accountName;\n\tlet accountNotFound = false;\n\tlet permissions;\n\tlet publicKey = walletPlugin.metadata.publicKey;\n\n\tonMount(async () => {\n\t\tif (walletPlugin.config.requiresPermissionSelect) {\n\t\t\tif (chainId && walletPlugin.retrievePublicKey) {\n\t\t\t\ttry {\n\t\t\t\t\t$$invalidate(6, publicKey = String(await walletPlugin.retrievePublicKey(chainId)));\n\t\t\t\t} catch(error) {\n\t\t\t\t\terrorDetails.set(String(error));\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst response = await client.call({\n\t\t\t\tpath: '/v1/chain/get_accounts_by_authorizers',\n\t\t\t\tparams: { keys: [publicKey] }\n\t\t\t});\n\n\t\t\tbusy.set(false);\n\t\t\t$$invalidate(5, permissions = response.accounts.map(account => PermissionLevel.from(`${account.account_name}@${account.permission_name}`)));\n\t\t} else if (walletPlugin.config.requiresPermissionEntry) {\n\t\t\tbusy.set(false);\n\t\t\t$$invalidate(5, permissions = []);\n\t\t}\n\t});\n\n\tasync function lookup() {\n\t\tbusy.set(true);\n\n\t\ttry {\n\t\t\tconst response = await client.v1.chain.get_account(input);\n\n\t\t\tif (response.account_name.equals(input)) {\n\t\t\t\t$$invalidate(3, accountName = response.account_name);\n\t\t\t\t$$invalidate(5, permissions = response.permissions.map(permission => PermissionLevel.from(`${response.account_name}@${permission.perm_name}`)));\n\t\t\t}\n\n\t\t\t$$invalidate(4, accountNotFound = false);\n\t\t} catch(error) {\n\t\t\t$$invalidate(4, accountNotFound = true);\n\t\t} finally {\n\t\t\t$$invalidate(2, prevInput = input);\n\t\t\tbusy.set(false);\n\t\t}\n\t}\n\n\tfunction handleKeyup(event) {\n\t\tif (event.code == 'Enter') {\n\t\t\tevent.preventDefault();\n\t\t\tlookup();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst func = permission => dispatch('select', permission);\n\n\tfunction textinput_value_binding(value) {\n\t\tinput = value;\n\t\t$$invalidate(1, input);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('chainId' in $$props) $$invalidate(14, chainId = $$props.chainId);\n\t\tif ('client' in $$props) $$invalidate(15, client = $$props.client);\n\t\tif ('walletPlugin' in $$props) $$invalidate(16, walletPlugin = $$props.walletPlugin);\n\t\tif ('title' in $$props) $$invalidate(0, title = $$props.title);\n\t};\n\n\treturn [\n\t\ttitle,\n\t\tinput,\n\t\tprevInput,\n\t\taccountName,\n\t\taccountNotFound,\n\t\tpermissions,\n\t\tpublicKey,\n\t\t$busy,\n\t\t$t,\n\t\tt,\n\t\tdispatch,\n\t\tbusy,\n\t\tlookup,\n\t\thandleKeyup,\n\t\tchainId,\n\t\tclient,\n\t\twalletPlugin,\n\t\tfunc,\n\t\ttextinput_value_binding\n\t];\n}\n\nclass Permission extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$o,\n\t\t\tcreate_fragment$o,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tchainId: 14,\n\t\t\t\tclient: 15,\n\t\t\t\twalletPlugin: 16,\n\t\t\t\ttitle: 0\n\t\t\t},\n\t\t\tadd_css$g\n\t\t);\n\t}\n}\n\n/* src/ui/login/Wallet.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$f(target) {\n\tappend_styles(target, \"svelte-lwrp5l\", \"section.svelte-lwrp5l{display:flex;flex-direction:column;gap:var(--space-s)}\");\n}\n\nfunction get_each_context$3(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[4] = list[i];\n\tchild_ctx[6] = i;\n\treturn child_ctx;\n}\n\n// (11:0) {#if wallets}\nfunction create_if_block$d(ctx) {\n\tlet section;\n\tlet bodytitle;\n\tlet t;\n\tlet list;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$7] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tlist = new List({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$9] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt = space();\n\t\t\tcreate_component(list.$$.fragment);\n\t\t\tattr(section, \"class\", \"svelte-lwrp5l\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tmount_component(bodytitle, section, null);\n\t\t\tappend(section, t);\n\t\t\tmount_component(list, section, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, title*/ 130) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst list_changes = {};\n\n\t\t\tif (dirty & /*$$scope, wallets*/ 129) {\n\t\t\t\tlist_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlist.$set(list_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(list.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(list.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(section);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle);\n\t\t\tdestroy_component(list);\n\t\t}\n\t};\n}\n\n// (13:8) <BodyTitle>\nfunction create_default_slot_1$7(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(/*title*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 2) set_data(t, /*title*/ ctx[1]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (15:12) {#each wallets as wallet, index}\nfunction create_each_block$3(ctx) {\n\tlet listitem;\n\tlet current;\n\n\tfunction func() {\n\t\treturn /*func*/ ctx[3](/*index*/ ctx[6]);\n\t}\n\n\tlistitem = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*wallet*/ ctx[4].metadata.name,\n\t\t\t\tonClick: func,\n\t\t\t\tleadingIcon: \"wallet\",\n\t\t\t\tlogo: getThemedLogo(/*wallet*/ ctx[4].metadata)\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listitem.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listitem, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst listitem_changes = {};\n\t\t\tif (dirty & /*wallets*/ 1) listitem_changes.label = /*wallet*/ ctx[4].metadata.name;\n\t\t\tif (dirty & /*wallets*/ 1) listitem_changes.logo = getThemedLogo(/*wallet*/ ctx[4].metadata);\n\t\t\tlistitem.$set(listitem_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listitem.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listitem.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(listitem, detaching);\n\t\t}\n\t};\n}\n\n// (14:8) <List>\nfunction create_default_slot$9(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = ensure_array_like(/*wallets*/ ctx[0]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*wallets, dispatch*/ 5) {\n\t\t\t\teach_value = ensure_array_like(/*wallets*/ ctx[0]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$3(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$3(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(each_1_anchor);\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$n(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*wallets*/ ctx[0] && create_if_block$d(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*wallets*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*wallets*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$d(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$n($$self, $$props, $$invalidate) {\n\tlet { wallets } = $$props;\n\tlet { title } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tconst func = index => dispatch('select', index);\n\n\t$$self.$$set = $$props => {\n\t\tif ('wallets' in $$props) $$invalidate(0, wallets = $$props.wallets);\n\t\tif ('title' in $$props) $$invalidate(1, title = $$props.title);\n\t};\n\n\treturn [wallets, title, dispatch, func];\n}\n\nclass Wallet extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$n, create_fragment$n, safe_not_equal, { wallets: 0, title: 1 }, add_css$f);\n\t}\n}\n\n/**\n * @param {any} obj\n * @returns {boolean}\n */\nfunction is_date(obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Date]';\n}\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nfunction cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nfunction cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/** @returns {(t: any) => any} */\nfunction get_interpolator(a, b) {\n\tif (a === b || a !== a) return () => a;\n\tconst type = typeof a;\n\tif (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n\t\tthrow new Error('Cannot interpolate values of different type');\n\t}\n\tif (Array.isArray(a)) {\n\t\tconst arr = b.map((bi, i) => {\n\t\t\treturn get_interpolator(a[i], bi);\n\t\t});\n\t\treturn (t) => arr.map((fn) => fn(t));\n\t}\n\tif (type === 'object') {\n\t\tif (!a || !b) throw new Error('Object cannot be null');\n\t\tif (is_date(a) && is_date(b)) {\n\t\t\ta = a.getTime();\n\t\t\tb = b.getTime();\n\t\t\tconst delta = b - a;\n\t\t\treturn (t) => new Date(a + t * delta);\n\t\t}\n\t\tconst keys = Object.keys(b);\n\t\tconst interpolators = {};\n\t\tkeys.forEach((key) => {\n\t\t\tinterpolators[key] = get_interpolator(a[key], b[key]);\n\t\t});\n\t\treturn (t) => {\n\t\t\tconst result = {};\n\t\t\tkeys.forEach((key) => {\n\t\t\t\tresult[key] = interpolators[key](t);\n\t\t\t});\n\t\t\treturn result;\n\t\t};\n\t}\n\tif (type === 'number') {\n\t\tconst delta = b - a;\n\t\treturn (t) => a + t * delta;\n\t}\n\tthrow new Error(`Cannot interpolate ${type} values`);\n}\n\n/**\n * A tweened store in Svelte is a special type of store that provides smooth transitions between state values over time.\n *\n * https://svelte.dev/docs/svelte-motion#tweened\n * @template T\n * @param {T} [value]\n * @param {import('./private.js').TweenedOptions<T>} [defaults]\n * @returns {import('./public.js').Tweened<T>}\n */\nfunction tweened(value, defaults = {}) {\n\tconst store = writable(value);\n\t/** @type {import('../internal/private.js').Task} */\n\tlet task;\n\tlet target_value = value;\n\t/**\n\t * @param {T} new_value\n\t * @param {import('./private.js').TweenedOptions<T>} [opts]\n\t */\n\tfunction set(new_value, opts) {\n\t\tif (value == null) {\n\t\t\tstore.set((value = new_value));\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\ttarget_value = new_value;\n\t\tlet previous_task = task;\n\t\tlet started = false;\n\t\tlet {\n\t\t\tdelay = 0,\n\t\t\tduration = 400,\n\t\t\teasing = identity,\n\t\t\tinterpolate = get_interpolator\n\t\t} = assign(assign({}, defaults), opts);\n\t\tif (duration === 0) {\n\t\t\tif (previous_task) {\n\t\t\t\tprevious_task.abort();\n\t\t\t\tprevious_task = null;\n\t\t\t}\n\t\t\tstore.set((value = target_value));\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst start = now() + delay;\n\t\tlet fn;\n\t\ttask = loop((now) => {\n\t\t\tif (now < start) return true;\n\t\t\tif (!started) {\n\t\t\t\tfn = interpolate(value, new_value);\n\t\t\t\tif (typeof duration === 'function') duration = duration(value, new_value);\n\t\t\t\tstarted = true;\n\t\t\t}\n\t\t\tif (previous_task) {\n\t\t\t\tprevious_task.abort();\n\t\t\t\tprevious_task = null;\n\t\t\t}\n\t\t\tconst elapsed = now - start;\n\t\t\tif (elapsed > /** @type {number} */ (duration)) {\n\t\t\t\tstore.set((value = new_value));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tstore.set((value = fn(easing(elapsed / duration))));\n\t\t\treturn true;\n\t\t});\n\t\treturn task.promise;\n\t}\n\treturn {\n\t\tset,\n\t\tupdate: (fn, opts) => set(fn(target_value, value), opts),\n\t\tsubscribe: store.subscribe\n\t};\n}\n\n/* src/ui/components/Countdown.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$e(target) {\n\tappend_styles(target, \"svelte-1cxfvrd\", \".loader.svelte-1cxfvrd.svelte-1cxfvrd{position:relative;display:grid;place-items:center;grid-template-areas:\\\"stack\\\" \\\"text\\\";gap:var(--space-m)}.logo.svelte-1cxfvrd.svelte-1cxfvrd{grid-area:stack;place-self:center;color:var(--body-text-color);width:var(--space-2xl);display:flex;align-items:center;justify-content:center}.logo.svelte-1cxfvrd img.svelte-1cxfvrd{width:100%;height:100%;object-fit:contain}.logo.svelte-1cxfvrd>svg{width:35%;height:35%}.text.svelte-1cxfvrd.svelte-1cxfvrd{grid-area:text;display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;gap:var(--space-4xs)}.text.svelte-1cxfvrd .label.svelte-1cxfvrd{font-size:var(--fs-2);font-weight:500;color:var(--body-text-color);margin:0}.text.svelte-1cxfvrd span.svelte-1cxfvrd{font-size:var(--fs-1);font-variant-numeric:tabular-nums;color:var(--body-text-color-variant)}svg.svelte-1cxfvrd.svelte-1cxfvrd{grid-area:stack;animation:2.5s linear infinite svelte-1cxfvrd-svg-animation}@keyframes svelte-1cxfvrd-svg-animation{0%{transform:rotateZ(0deg)}100%{transform:rotateZ(360deg)}}circle.svelte-1cxfvrd.svelte-1cxfvrd{transform-origin:center}circle.spinner.svelte-1cxfvrd.svelte-1cxfvrd{stroke:var(--loading-circle-color)}circle.track.svelte-1cxfvrd.svelte-1cxfvrd{stroke:var(--loading-circle-track-color)}circle.animated.svelte-1cxfvrd.svelte-1cxfvrd{animation:svelte-1cxfvrd-dash 2.1s ease-in-out both infinite}@keyframes svelte-1cxfvrd-dash{0%{stroke-dashoffset:var(--circumference);transform:rotate(0)}50%,65%{stroke-dashoffset:70;transform:rotate(90deg)}100%{stroke-dashoffset:var(--circumference);transform:rotate(360deg)}}\");\n}\n\n// (77:4) {#if logo}\nfunction create_if_block_2$6(ctx) {\n\tlet div;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet current;\n\tconst if_block_creators = [create_if_block_3$4, create_if_block_4$3];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (isUrlImage(/*logo*/ ctx[5]) || isBase64Image(/*logo*/ ctx[5])) return 0;\n\t\tif (isValidIcon(/*logo*/ ctx[5])) return 1;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type(ctx))) {\n\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div, \"class\", \"logo svelte-1cxfvrd\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (if_block) if_block.p(ctx, dirty);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (81:40) \nfunction create_if_block_4$3(ctx) {\n\tlet icon;\n\tlet current;\n\n\ticon = new Icon({\n\t\t\tprops: { name: /*logo*/ ctx[5], size: \"75%\" }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(icon, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(icon, detaching);\n\t\t}\n\t};\n}\n\n// (79:12) {#if isUrlImage(logo) || isBase64Image(logo)}\nfunction create_if_block_3$4(ctx) {\n\tlet img;\n\tlet img_src_value;\n\n\treturn {\n\t\tc() {\n\t\t\timg = element(\"img\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*logo*/ ctx[5])) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", `loading logo`);\n\t\t\tattr(img, \"class\", \"svelte-1cxfvrd\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, img, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(img);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (88:8) {#if label}\nfunction create_if_block_1$6(ctx) {\n\tlet p;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tp.textContent = `${/*label*/ ctx[4]}`;\n\t\t\tattr(p, \"class\", \"label svelte-1cxfvrd\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (91:8) {#if deadline}\nfunction create_if_block$c(ctx) {\n\tlet previous_key = /*remaining*/ ctx[1];\n\tlet key_block_anchor;\n\tlet key_block = create_key_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tkey_block.c();\n\t\t\tkey_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tkey_block.m(target, anchor);\n\t\t\tinsert(target, key_block_anchor, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*remaining*/ 2 && safe_not_equal(previous_key, previous_key = /*remaining*/ ctx[1])) {\n\t\t\t\tkey_block.d(1);\n\t\t\t\tkey_block = create_key_block(ctx);\n\t\t\t\tkey_block.c();\n\t\t\t\tkey_block.m(key_block_anchor.parentNode, key_block_anchor);\n\t\t\t} else {\n\t\t\t\tkey_block.p(ctx, dirty);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(key_block_anchor);\n\t\t\t}\n\n\t\t\tkey_block.d(detaching);\n\t\t}\n\t};\n}\n\n// (92:12) {#key remaining}\nfunction create_key_block(ctx) {\n\tlet span;\n\tlet t_value = countdownFormat(/*deadline*/ ctx[0]) + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(t_value);\n\t\t\tattr(span, \"class\", \"svelte-1cxfvrd\");\n\t\t\ttoggle_class(span, \"label\", !/*label*/ ctx[4]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*deadline*/ 1 && t_value !== (t_value = countdownFormat(/*deadline*/ ctx[0]) + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(span);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_fragment$m(ctx) {\n\tlet div1;\n\tlet svg;\n\tlet circle0;\n\tlet circle1;\n\tlet t0;\n\tlet t1;\n\tlet div0;\n\tlet t2;\n\tlet current;\n\tlet if_block0 = /*logo*/ ctx[5] && create_if_block_2$6(ctx);\n\tlet if_block1 = /*label*/ ctx[4] && create_if_block_1$6(ctx);\n\tlet if_block2 = /*deadline*/ ctx[0] && create_if_block$c(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tsvg = svg_element(\"svg\");\n\t\t\tcircle0 = svg_element(\"circle\");\n\t\t\tcircle1 = svg_element(\"circle\");\n\t\t\tt0 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt1 = space();\n\t\t\tdiv0 = element(\"div\");\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt2 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tattr(circle0, \"class\", \"track svelte-1cxfvrd\");\n\t\t\tattr(circle0, \"cx\", /*offset*/ ctx[6]);\n\t\t\tattr(circle0, \"cy\", /*offset*/ ctx[6]);\n\t\t\tattr(circle0, \"r\", /*radius*/ ctx[7]);\n\t\t\tattr(circle0, \"stroke-width\", strokeWidth - 1);\n\t\t\tattr(circle0, \"stroke-linecap\", \"round\");\n\t\t\tattr(circle0, \"stroke-dasharray\", /*$circumference*/ ctx[3]);\n\t\t\tattr(circle0, \"stroke-dashoffset\", 0);\n\t\t\tattr(circle0, \"fill\", \"none\");\n\t\t\tattr(circle1, \"class\", \"spinner svelte-1cxfvrd\");\n\t\t\tattr(circle1, \"cx\", /*offset*/ ctx[6]);\n\t\t\tattr(circle1, \"cy\", /*offset*/ ctx[6]);\n\t\t\tattr(circle1, \"r\", /*radius*/ ctx[7]);\n\t\t\tattr(circle1, \"stroke-width\", strokeWidth);\n\t\t\tattr(circle1, \"stroke-linecap\", \"round\");\n\t\t\tattr(circle1, \"stroke-dasharray\", /*$circumference*/ ctx[3]);\n\t\t\tattr(circle1, \"fill\", \"none\");\n\t\t\tset_style(circle1, \"--radius\", /*radius*/ ctx[7]);\n\t\t\tset_style(circle1, \"--circumference\", /*$circumference*/ ctx[3]);\n\t\t\ttoggle_class(circle1, \"animated\", /*animated*/ ctx[2]);\n\t\t\tattr(svg, \"width\", size);\n\t\t\tattr(svg, \"height\", size);\n\t\t\tattr(svg, \"class\", \"svelte-1cxfvrd\");\n\t\t\ttoggle_class(svg, \"animated\", /*animated*/ ctx[2]);\n\t\t\tattr(div0, \"class\", \"text svelte-1cxfvrd\");\n\t\t\tattr(div1, \"class\", \"loader svelte-1cxfvrd\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, svg);\n\t\t\tappend(svg, circle0);\n\t\t\tappend(svg, circle1);\n\t\t\tappend(div1, t0);\n\t\t\tif (if_block0) if_block0.m(div1, null);\n\t\t\tappend(div1, t1);\n\t\t\tappend(div1, div0);\n\t\t\tif (if_block1) if_block1.m(div0, null);\n\t\t\tappend(div0, t2);\n\t\t\tif (if_block2) if_block2.m(div0, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (!current || dirty & /*$circumference*/ 8) {\n\t\t\t\tattr(circle0, \"stroke-dasharray\", /*$circumference*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*$circumference*/ 8) {\n\t\t\t\tattr(circle1, \"stroke-dasharray\", /*$circumference*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*$circumference*/ 8) {\n\t\t\t\tset_style(circle1, \"--circumference\", /*$circumference*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*animated*/ 4) {\n\t\t\t\ttoggle_class(circle1, \"animated\", /*animated*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*animated*/ 4) {\n\t\t\t\ttoggle_class(svg, \"animated\", /*animated*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (/*logo*/ ctx[5]) if_block0.p(ctx, dirty);\n\t\t\tif (/*label*/ ctx[4]) if_block1.p(ctx, dirty);\n\n\t\t\tif (/*deadline*/ ctx[0]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block$c(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\tif_block2.m(div0, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tif_block2.d(1);\n\t\t\t\tif_block2 = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div1);\n\t\t\t}\n\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t}\n\t};\n}\n\nlet size = 100;\nlet strokeWidth = 8;\n\nfunction countdownFormat(date) {\n\tconst timeLeft = date.getTime() - Date.now();\n\n\tif (timeLeft > 0) {\n\t\treturn new Date(timeLeft).toISOString().slice(14, 19);\n\t}\n\n\treturn '00:00';\n}\n\nfunction instance$m($$self, $$props, $$invalidate) {\n\tlet animated;\n\tlet $circumference;\n\tlet { data = {} } = $$props;\n\tlet { label, end, logo, loading = true } = data;\n\tlet deadline;\n\tlet remaining;\n\tlet timer;\n\tlet offset = size / 2;\n\tlet radius = offset - strokeWidth;\n\tlet circumference = tweened(2 * Math.PI * radius, { duration: 500, easing: cubicOut });\n\tcomponent_subscribe($$self, circumference, value => $$invalidate(3, $circumference = value));\n\n\tonDestroy(() => {\n\t\tif (timer) {\n\t\t\tclearInterval(timer);\n\t\t}\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(9, data = $$props.data);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*timer, deadline, remaining*/ 2051) {\n\t\t\t{\n\t\t\t\tif (timer) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t}\n\n\t\t\t\tif (end) {\n\t\t\t\t\t$$invalidate(0, deadline = new Date(end));\n\n\t\t\t\t\t$$invalidate(11, timer = setInterval(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t$$invalidate(1, remaining = new Date(deadline).getTime() - Date.now());\n\n\t\t\t\t\t\t\tif (remaining <= 0) {\n\t\t\t\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\t\t\t\tcircumference.set(1000);\n\t\t\t\t\t\t\t\t$$invalidate(10, loading = false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t200\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*loading*/ 1024) {\n\t\t\t$$invalidate(2, animated = loading);\n\t\t}\n\t};\n\n\treturn [\n\t\tdeadline,\n\t\tremaining,\n\t\tanimated,\n\t\t$circumference,\n\t\tlabel,\n\t\tlogo,\n\t\toffset,\n\t\tradius,\n\t\tcircumference,\n\t\tdata,\n\t\tloading,\n\t\ttimer\n\t];\n}\n\nclass Countdown extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$m, create_fragment$m, safe_not_equal, { data: 9 }, add_css$e);\n\t}\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nfunction fade(node, { delay = 0, duration = 400, easing = identity } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nfunction fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/* src/ui/components/Transition.svelte generated by Svelte v4.2.0 */\n\nfunction create_else_block$4(ctx) {\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[5].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);\n\n\treturn {\n\t\tc() {\n\t\t\tif (default_slot) default_slot.c();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(target, anchor);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 16)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[4],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[4])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[4], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\n// (17:0) {#if animations}\nfunction create_if_block$b(ctx) {\n\tlet div;\n\tlet div_intro;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[5].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(div, \"class\", \"transition\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 16)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[4],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[4])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[4], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\n\t\t\tif (!div_intro) {\n\t\t\t\tadd_render_callback(() => {\n\t\t\t\t\tdiv_intro = create_in_transition(div, fly, {\n\t\t\t\t\t\tduration: 200,\n\t\t\t\t\t\tx: /*x*/ ctx[1],\n\t\t\t\t\t\ty: /*y*/ ctx[0]\n\t\t\t\t\t});\n\n\t\t\t\t\tdiv_intro.start();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$l(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block$b, create_else_block$4];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*animations*/ ctx[2]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif_block.p(ctx, dirty);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$l($$self, $$props, $$invalidate) {\n\tlet x;\n\tlet y;\n\tlet $settings;\n\tcomponent_subscribe($$self, settings$5, $$value => $$invalidate(6, $settings = $$value));\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { direction = undefined } = $$props;\n\tconst { animations } = $settings;\n\tconst horizontal = ['ltr', 'rtl'];\n\n\t// const vertical = ['ttb', 'btt']\n\tconst getDistance = direction => {\n\t\treturn direction === 'rtl' || direction === 'btt' ? 100 : -100;\n\t};\n\n\t$$self.$$set = $$props => {\n\t\tif ('direction' in $$props) $$invalidate(3, direction = $$props.direction);\n\t\tif ('$$scope' in $$props) $$invalidate(4, $$scope = $$props.$$scope);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*direction*/ 8) {\n\t\t\t$$invalidate(\n\t\t\t\t1,\n\t\t\t\t[x, y] = direction\n\t\t\t\t? horizontal.includes(direction)\n\t\t\t\t\t? [getDistance(direction), 0]\n\t\t\t\t\t: [0, getDistance(direction)]\n\t\t\t\t: [0, 0],\n\t\t\t\tx,\n\t\t\t\t($$invalidate(0, y), $$invalidate(3, direction))\n\t\t\t);\n\t\t}\n\t};\n\n\treturn [y, x, animations, direction, $$scope, slots];\n}\n\nclass Transition extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$l, create_fragment$l, safe_not_equal, { direction: 3 });\n\t}\n}\n\n/* src/ui/Login.svelte generated by Svelte v4.2.0 */\n\nfunction create_else_block_1$2(ctx) {\n\tlet p;\n\tlet t_1_value = /*$t*/ ctx[4]('loading', { default: 'Loading...' }) + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tt_1 = text(t_1_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t_1);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 16 && t_1_value !== (t_1_value = /*$t*/ ctx[4]('loading', { default: 'Loading...' }) + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (154:0) {#if $props && $loginContext}\nfunction create_if_block$a(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\n\tconst if_block_creators = [\n\t\tcreate_if_block_1$5,\n\t\tcreate_if_block_2$5,\n\t\tcreate_if_block_3$3,\n\t\tcreate_if_block_4$2,\n\t\tcreate_else_block$3\n\t];\n\n\tconst if_blocks = [];\n\n\tfunction select_block_type_1(ctx, dirty) {\n\t\tif (/*$step*/ ctx[6] === /*Steps*/ ctx[0].selectWallet) return 0;\n\t\tif (/*$step*/ ctx[6] === /*Steps*/ ctx[0].selectChain && /*$chains*/ ctx[7]) return 1;\n\t\tif (/*$step*/ ctx[6] === /*Steps*/ ctx[0].enterPermission && /*$client*/ ctx[8] && /*$walletPlugin*/ ctx[9]) return 2;\n\t\tif (/*$step*/ ctx[6] === /*Steps*/ ctx[0].selectPermission && /*$client*/ ctx[8] && /*$walletPlugin*/ ctx[9]) return 3;\n\t\treturn 4;\n\t}\n\n\tcurrent_block_type_index = select_block_type_1(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type_1(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\n// (195:4) {:else}\nfunction create_else_block$3(ctx) {\n\tlet countdown;\n\tlet current;\n\n\tcountdown = new Countdown({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tlabel: /*$t*/ ctx[4]('login.complete', {\n\t\t\t\t\t\tdefault: 'Complete the login using your selected wallet.'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(countdown.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(countdown, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst countdown_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 16) countdown_changes.data = {\n\t\t\t\tlabel: /*$t*/ ctx[4]('login.complete', {\n\t\t\t\t\tdefault: 'Complete the login using your selected wallet.'\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tcountdown.$set(countdown_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(countdown.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(countdown.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(countdown, detaching);\n\t\t}\n\t};\n}\n\n// (184:75) \nfunction create_if_block_4$2(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[2],\n\t\t\t\t$$slots: { default: [create_default_slot_3$1] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 4) transition_changes.direction = /*$transitionDirection*/ ctx[2];\n\n\t\t\tif (dirty & /*$$scope, $loginResponse, $client, $walletPlugin, $t*/ 268436242) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (173:74) \nfunction create_if_block_3$3(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[2],\n\t\t\t\t$$slots: { default: [create_default_slot_2$1] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 4) transition_changes.direction = /*$transitionDirection*/ ctx[2];\n\n\t\t\tif (dirty & /*$$scope, $loginResponse, $client, $walletPlugin, $t*/ 268436242) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (164:53) \nfunction create_if_block_2$5(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[2],\n\t\t\t\t$$slots: { default: [create_default_slot_1$6] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 4) transition_changes.direction = /*$transitionDirection*/ ctx[2];\n\n\t\t\tif (dirty & /*$$scope, $chains, $t*/ 268435600) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (155:4) {#if $step === Steps.selectWallet}\nfunction create_if_block_1$5(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[2],\n\t\t\t\t$$slots: { default: [create_default_slot$8] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 4) transition_changes.direction = /*$transitionDirection*/ ctx[2];\n\n\t\t\tif (dirty & /*$$scope, $loginContext, $t*/ 268435480) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (185:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_3$1(ctx) {\n\tlet permission;\n\tlet current;\n\n\tpermission = new Permission({\n\t\t\tprops: {\n\t\t\t\tchainId: /*$loginResponse*/ ctx[1].chainId,\n\t\t\t\tclient: /*$client*/ ctx[8],\n\t\t\t\twalletPlugin: /*$walletPlugin*/ ctx[9],\n\t\t\t\ttitle: /*$t*/ ctx[4]('login.select.account', { default: 'Select an Account' })\n\t\t\t}\n\t\t});\n\n\tpermission.$on(\"select\", /*selectPermission*/ ctx[17]);\n\tpermission.$on(\"cancel\", /*unselectChain*/ ctx[16]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(permission.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(permission, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst permission_changes = {};\n\t\t\tif (dirty & /*$loginResponse*/ 2) permission_changes.chainId = /*$loginResponse*/ ctx[1].chainId;\n\t\t\tif (dirty & /*$client*/ 256) permission_changes.client = /*$client*/ ctx[8];\n\t\t\tif (dirty & /*$walletPlugin*/ 512) permission_changes.walletPlugin = /*$walletPlugin*/ ctx[9];\n\t\t\tif (dirty & /*$t*/ 16) permission_changes.title = /*$t*/ ctx[4]('login.select.account', { default: 'Select an Account' });\n\t\t\tpermission.$set(permission_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(permission.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(permission.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(permission, detaching);\n\t\t}\n\t};\n}\n\n// (174:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_2$1(ctx) {\n\tlet permission;\n\tlet current;\n\n\tpermission = new Permission({\n\t\t\tprops: {\n\t\t\t\tchainId: /*$loginResponse*/ ctx[1].chainId,\n\t\t\t\tclient: /*$client*/ ctx[8],\n\t\t\t\twalletPlugin: /*$walletPlugin*/ ctx[9],\n\t\t\t\ttitle: /*$t*/ ctx[4]('login.enter.account', { default: 'Enter account name' })\n\t\t\t}\n\t\t});\n\n\tpermission.$on(\"select\", /*selectPermission*/ ctx[17]);\n\tpermission.$on(\"cancel\", /*unselectChain*/ ctx[16]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(permission.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(permission, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst permission_changes = {};\n\t\t\tif (dirty & /*$loginResponse*/ 2) permission_changes.chainId = /*$loginResponse*/ ctx[1].chainId;\n\t\t\tif (dirty & /*$client*/ 256) permission_changes.client = /*$client*/ ctx[8];\n\t\t\tif (dirty & /*$walletPlugin*/ 512) permission_changes.walletPlugin = /*$walletPlugin*/ ctx[9];\n\t\t\tif (dirty & /*$t*/ 16) permission_changes.title = /*$t*/ ctx[4]('login.enter.account', { default: 'Enter account name' });\n\t\t\tpermission.$set(permission_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(permission.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(permission.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(permission, detaching);\n\t\t}\n\t};\n}\n\n// (165:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_1$6(ctx) {\n\tlet blockchain;\n\tlet current;\n\n\tblockchain = new Blockchain({\n\t\t\tprops: {\n\t\t\t\tchains: /*$chains*/ ctx[7],\n\t\t\t\ttitle: /*$t*/ ctx[4]('login.select.blockchain', { default: 'Select a Blockchain' })\n\t\t\t}\n\t\t});\n\n\tblockchain.$on(\"select\", /*selectChain*/ ctx[15]);\n\tblockchain.$on(\"cancel\", /*unselectWallet*/ ctx[19]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(blockchain.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(blockchain, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst blockchain_changes = {};\n\t\t\tif (dirty & /*$chains*/ 128) blockchain_changes.chains = /*$chains*/ ctx[7];\n\t\t\tif (dirty & /*$t*/ 16) blockchain_changes.title = /*$t*/ ctx[4]('login.select.blockchain', { default: 'Select a Blockchain' });\n\t\t\tblockchain.$set(blockchain_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(blockchain.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(blockchain.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(blockchain, detaching);\n\t\t}\n\t};\n}\n\n// (156:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot$8(ctx) {\n\tlet wallet;\n\tlet current;\n\n\twallet = new Wallet({\n\t\t\tprops: {\n\t\t\t\twallets: /*$loginContext*/ ctx[3].walletPlugins,\n\t\t\t\ttitle: /*$t*/ ctx[4]('login.select.wallet', { default: 'Select a Wallet' })\n\t\t\t}\n\t\t});\n\n\twallet.$on(\"select\", /*selectWallet*/ ctx[18]);\n\twallet.$on(\"cancel\", /*cancel*/ ctx[20]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(wallet.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(wallet, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst wallet_changes = {};\n\t\t\tif (dirty & /*$loginContext*/ 8) wallet_changes.wallets = /*$loginContext*/ ctx[3].walletPlugins;\n\t\t\tif (dirty & /*$t*/ 16) wallet_changes.title = /*$t*/ ctx[4]('login.select.wallet', { default: 'Select a Wallet' });\n\t\t\twallet.$set(wallet_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(wallet.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(wallet.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(wallet, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$k(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block$a, create_else_block_1$2];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*$props*/ ctx[5] && /*$loginContext*/ ctx[3]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$k($$self, $$props, $$invalidate) {\n\tlet $loginResponse;\n\tlet $transitionDirection;\n\tlet $backAction;\n\tlet $loginContext;\n\tlet $t;\n\tlet $props;\n\tlet $step;\n\tlet $chains;\n\tlet $client;\n\tlet $walletPlugin;\n\tcomponent_subscribe($$self, loginResponse, $$value => $$invalidate(1, $loginResponse = $$value));\n\tcomponent_subscribe($$self, transitionDirection, $$value => $$invalidate(2, $transitionDirection = $$value));\n\tcomponent_subscribe($$self, backAction, $$value => $$invalidate(22, $backAction = $$value));\n\tcomponent_subscribe($$self, loginContext, $$value => $$invalidate(3, $loginContext = $$value));\n\tcomponent_subscribe($$self, props, $$value => $$invalidate(5, $props = $$value));\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(4, $t = value));\n\tlet completed = false;\n\tconst dispatch = createEventDispatcher();\n\tvar Steps;\n\n\t(function (Steps) {\n\t\tSteps[\"done\"] = \"done\";\n\t\tSteps[\"enterPermission\"] = \"enterPermission\";\n\t\tSteps[\"selectChain\"] = \"selectChain\";\n\t\tSteps[\"selectPermission\"] = \"selectPermission\";\n\t\tSteps[\"selectWallet\"] = \"selectWallet\";\n\t})(Steps || (Steps = {}));\n\n\tconst chain = derived([loginContext, loginResponse], ([$currentContext, $currentResponse]) => {\n\t\tif (!$currentContext || $currentResponse.chainId === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ($currentContext.chain) {\n\t\t\treturn $currentContext.chain;\n\t\t}\n\n\t\treturn $currentContext.chains.find(c => c.id === $currentResponse.chainId);\n\t});\n\n\tconst client = derived([chain, loginContext], ([$currentChain, $currentContext]) => {\n\t\tif (!$currentContext || $currentChain === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn $currentContext.getClient($currentChain);\n\t});\n\n\tcomponent_subscribe($$self, client, value => $$invalidate(8, $client = value));\n\n\tconst walletPlugin = derived([loginContext, loginResponse], ([$currentContext, $currentResponse]) => {\n\t\tif (!$currentContext || $currentResponse.walletPluginIndex === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn $currentContext.walletPlugins[$currentResponse.walletPluginIndex];\n\t});\n\n\tcomponent_subscribe($$self, walletPlugin, value => $$invalidate(9, $walletPlugin = value));\n\n\tlet chains = derived([loginContext, walletPlugin], ([$currentContext, $currentWalletPlugin]) => {\n\t\tif (!$currentContext || !$currentWalletPlugin) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// If the selected WalletPlugin has an array of supported chains, filter the list of chains\n\t\tif ($currentWalletPlugin.config.supportedChains) {\n\t\t\treturn $currentContext.chains.filter(chain => {\n\t\t\t\treturn !$currentWalletPlugin.config.supportedChains || $currentWalletPlugin.config.supportedChains.includes(String(chain.id));\n\t\t\t});\n\t\t}\n\n\t\treturn $currentContext.chains;\n\t});\n\n\tcomponent_subscribe($$self, chains, value => $$invalidate(7, $chains = value));\n\n\tconst loginContextUnsubscribe = loginContext.subscribe(currentContext => {\n\t\tif (currentContext) {\n\t\t\t// If an appName is specified, set the title to it.\n\t\t\tset_store_value(\n\t\t\t\tprops,\n\t\t\t\t$props.subtitle = $t('login.title-app', {\n\t\t\t\t\tappName: currentContext.appName,\n\t\t\t\t\tdefault: 'Login to {{appName}}'\n\t\t\t\t}),\n\t\t\t\t$props\n\t\t\t);\n\n\t\t\t// If a chain is specified, set it on the response\n\t\t\tif (currentContext.chain) {\n\t\t\t\tset_store_value(loginResponse, $loginResponse.chainId = currentContext.chain.id, $loginResponse);\n\t\t\t}\n\n\t\t\t// If only one chain is provided, default to it\n\t\t\tif (currentContext.chains.length === 1) {\n\t\t\t\tset_store_value(loginResponse, $loginResponse.chainId = currentContext.chains[0].id, $loginResponse);\n\t\t\t}\n\n\t\t\t// If a permissionLevel is defined, set it on the response\n\t\t\tif (currentContext.permissionLevel) {\n\t\t\t\tset_store_value(loginResponse, $loginResponse.permissionLevel = currentContext.permissionLevel, $loginResponse);\n\t\t\t}\n\n\t\t\t// If only one wallet is provided, default to it\n\t\t\tif (currentContext.walletPlugins.length === 1) {\n\t\t\t\tset_store_value(loginResponse, $loginResponse.walletPluginIndex = 0, $loginResponse);\n\t\t\t}\n\n\t\t\t// If the walletPluginIndex is defined, set it on the response\n\t\t\tif (currentContext.walletPluginIndex !== undefined) {\n\t\t\t\tset_store_value(loginResponse, $loginResponse.walletPluginIndex = currentContext.walletPluginIndex, $loginResponse);\n\t\t\t}\n\t\t}\n\t});\n\n\tonMount(() => {\n\t\tset_store_value(props, $props.title = $t('login.title', { default: 'Login' }), $props);\n\t});\n\n\tonDestroy(loginContextUnsubscribe);\n\n\tconst step = derived([loginResponse, walletPlugin], ([$currentResponse, $currentWalletPlugin]) => {\n\t\tif (!$currentWalletPlugin) {\n\t\t\treturn Steps.selectWallet;\n\t\t}\n\n\t\tconst { requiresChainSelect, requiresPermissionEntry, requiresPermissionSelect, supportedChains } = $currentWalletPlugin.config;\n\n\t\tif (!$currentResponse.chainId && supportedChains && supportedChains.length === 1) {\n\t\t\tset_store_value(loginResponse, $loginResponse.chainId = supportedChains[0], $loginResponse);\n\t\t\treturn Steps.selectPermission;\n\t\t} else if (!$currentResponse.chainId && $loginContext && $loginContext.chain) {\n\t\t\tset_store_value(loginResponse, $loginResponse.chainId = $loginContext?.chain.id, $loginResponse);\n\t\t\treturn Steps.selectPermission;\n\t\t} else if (!$currentResponse.chainId && requiresChainSelect) {\n\t\t\treturn Steps.selectChain;\n\t\t} else if (!$currentResponse.permissionLevel && requiresPermissionSelect) {\n\t\t\treturn Steps.selectPermission;\n\t\t} else if (!$currentResponse.permissionLevel && requiresPermissionEntry) {\n\t\t\treturn Steps.enterPermission;\n\t\t}\n\n\t\t// We have completed, return response to kit for the WalletPlugin to trigger\n\t\tcomplete();\n\t});\n\n\tcomponent_subscribe($$self, step, value => $$invalidate(6, $step = value));\n\n\tconst selectChain = e => {\n\t\tset_store_value(loginResponse, $loginResponse.chainId = e.detail, $loginResponse);\n\t\tset_store_value(backAction, $backAction = unselectChain, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t};\n\n\tconst unselectChain = () => {\n\t\tset_store_value(loginResponse, $loginResponse.chainId = undefined, $loginResponse);\n\t\tset_store_value(backAction, $backAction = unselectWallet, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'ltr', $transitionDirection);\n\t};\n\n\tconst selectPermission = e => {\n\t\tset_store_value(loginResponse, $loginResponse.permissionLevel = e.detail, $loginResponse);\n\t\tset_store_value(backAction, $backAction = undefined, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t};\n\n\tconst selectWallet = e => {\n\t\tset_store_value(backAction, $backAction = unselectWallet, $backAction);\n\t\tset_store_value(loginResponse, $loginResponse.walletPluginIndex = e.detail, $loginResponse);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t};\n\n\tconst unselectWallet = () => {\n\t\tset_store_value(loginResponse, $loginResponse.walletPluginIndex = undefined, $loginResponse);\n\t\tset_store_value(backAction, $backAction = undefined, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'ltr', $transitionDirection);\n\t};\n\n\tconst complete = () => {\n\t\tif (!completed) {\n\t\t\tcompleted = true;\n\t\t\tdispatch('complete', $loginResponse);\n\t\t\tbackAction.set(undefined);\n\t\t\tallowSettings.set(false);\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tdispatch('cancel');\n\t};\n\n\treturn [\n\t\tSteps,\n\t\t$loginResponse,\n\t\t$transitionDirection,\n\t\t$loginContext,\n\t\t$t,\n\t\t$props,\n\t\t$step,\n\t\t$chains,\n\t\t$client,\n\t\t$walletPlugin,\n\t\tt,\n\t\tclient,\n\t\twalletPlugin,\n\t\tchains,\n\t\tstep,\n\t\tselectChain,\n\t\tunselectChain,\n\t\tselectPermission,\n\t\tselectWallet,\n\t\tunselectWallet,\n\t\tcancel\n\t];\n}\n\nclass Login extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$k, create_fragment$k, safe_not_equal, {});\n\t}\n}\n\n/* src/ui/components/ButtonGroup.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$d(target) {\n\tappend_styles(target, \"svelte-1m2zvm\", \"div.svelte-1m2zvm{flex:1;display:flex;justify-content:space-between;gap:var(--space-xs)}\");\n}\n\nfunction create_fragment$j(ctx) {\n\tlet div;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[1].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(div, \"class\", \"svelte-1m2zvm\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[0],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[0])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$j($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);\n\t};\n\n\treturn [$$scope, slots];\n}\n\nclass ButtonGroup extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$j, create_fragment$j, safe_not_equal, {}, add_css$d);\n\t}\n}\n\n/* src/ui/components/Accept.svelte generated by Svelte v4.2.0 */\n\nfunction create_default_slot$7(ctx) {\n\tlet button0;\n\tlet t_1;\n\tlet button1;\n\tlet current;\n\n\tbutton0 = new Button({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tvariant: 'outlined',\n\t\t\t\t\tlabel: /*$t*/ ctx[0]('decline', { default: 'Decline' }),\n\t\t\t\t\tonClick: /*func*/ ctx[3],\n\t\t\t\t\ticon: 'close'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tbutton1 = new Button({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tvariant: 'primary',\n\t\t\t\t\tlabel: /*$t*/ ctx[0]('accept', { default: 'Accept' }),\n\t\t\t\t\tonClick: /*func_1*/ ctx[4],\n\t\t\t\t\ticon: 'check',\n\t\t\t\t\tautofocus: true\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(button0.$$.fragment);\n\t\t\tt_1 = space();\n\t\t\tcreate_component(button1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(button0, target, anchor);\n\t\t\tinsert(target, t_1, anchor);\n\t\t\tmount_component(button1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst button0_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 1) button0_changes.data = {\n\t\t\t\tvariant: 'outlined',\n\t\t\t\tlabel: /*$t*/ ctx[0]('decline', { default: 'Decline' }),\n\t\t\t\tonClick: /*func*/ ctx[3],\n\t\t\t\ticon: 'close'\n\t\t\t};\n\n\t\t\tbutton0.$set(button0_changes);\n\t\t\tconst button1_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 1) button1_changes.data = {\n\t\t\t\tvariant: 'primary',\n\t\t\t\tlabel: /*$t*/ ctx[0]('accept', { default: 'Accept' }),\n\t\t\t\tonClick: /*func_1*/ ctx[4],\n\t\t\t\ticon: 'check',\n\t\t\t\tautofocus: true\n\t\t\t};\n\n\t\t\tbutton1.$set(button1_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button0.$$.fragment, local);\n\t\t\ttransition_in(button1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button0.$$.fragment, local);\n\t\t\ttransition_out(button1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\n\t\t\tdestroy_component(button0, detaching);\n\t\t\tdestroy_component(button1, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$i(ctx) {\n\tlet buttongroup;\n\tlet current;\n\n\tbuttongroup = new ButtonGroup({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$7] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(buttongroup.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(buttongroup, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst buttongroup_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $t*/ 33) {\n\t\t\t\tbuttongroup_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbuttongroup.$set(buttongroup_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(buttongroup.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(buttongroup.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(buttongroup, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$i($$self, $$props, $$invalidate) {\n\tlet $t;\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(0, $t = value));\n\tconst dispatch = createEventDispatcher();\n\tconst func = () => dispatch('cancel');\n\tconst func_1 = () => dispatch('complete');\n\treturn [$t, t, dispatch, func, func_1];\n}\n\nclass Accept extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$i, create_fragment$i, safe_not_equal, {});\n\t}\n}\n\n/* src/ui/components/Asset.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$c(target) {\n\tappend_styles(target, \"svelte-1lmgxnd\", \".asset.svelte-1lmgxnd.svelte-1lmgxnd{text-align:center}.asset.svelte-1lmgxnd>.svelte-1lmgxnd{margin:0;line-height:1.5}.value.svelte-1lmgxnd.svelte-1lmgxnd{font-size:var(--fs-2);font-weight:600;color:var(--body-text-color)}.label.svelte-1lmgxnd.svelte-1lmgxnd{font-size:var(--fs-0);font-weight:400;color:var(--body-text-color-variant)}\");\n}\n\n// (8:0) {#if data}\nfunction create_if_block$9(ctx) {\n\tlet div;\n\tlet p0;\n\tlet t0_value = /*data*/ ctx[0].value + \"\";\n\tlet t0;\n\tlet t1;\n\tlet p1;\n\tlet t2_value = /*data*/ ctx[0].label + \"\";\n\tlet t2;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tp0 = element(\"p\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tp1 = element(\"p\");\n\t\t\tt2 = text(t2_value);\n\t\t\tattr(p0, \"class\", \"value svelte-1lmgxnd\");\n\t\t\tattr(p1, \"class\", \"label svelte-1lmgxnd\");\n\t\t\tattr(div, \"class\", \"asset svelte-1lmgxnd\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, p0);\n\t\t\tappend(p0, t0);\n\t\t\tappend(div, t1);\n\t\t\tappend(div, p1);\n\t\t\tappend(p1, t2);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*data*/ 1 && t0_value !== (t0_value = /*data*/ ctx[0].value + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty & /*data*/ 1 && t2_value !== (t2_value = /*data*/ ctx[0].label + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_fragment$h(ctx) {\n\tlet if_block_anchor;\n\tlet if_block = /*data*/ ctx[0] && create_if_block$9(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*data*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$9(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$h($$self, $$props, $$invalidate) {\n\tlet { data = {\n\t\tlabel: '[[Unknown Label]]',\n\t\tvalue: '[[Unknown Value]]'\n\t} } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(0, data = $$props.data);\n\t};\n\n\treturn [data];\n}\n\nclass Asset extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$h, create_fragment$h, safe_not_equal, { data: 0 }, add_css$c);\n\t}\n}\n\n/* src/ui/components/Close.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$b(target) {\n\tappend_styles(target, \"svelte-1bils14\", \"button.svelte-1bils14{cursor:pointer;display:block;width:300px;height:65px;border-radius:12px;font-size:16px;font-weight:600;color:var(--button-text-color);background-color:var(--button-tertiary-color);border:none;box-shadow:none;margin:27px auto 0}\");\n}\n\nfunction create_fragment$g(ctx) {\n\tlet button;\n\tlet t_1_value = /*$t*/ ctx[0]('close', { default: 'Close' }) + \"\";\n\tlet t_1;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tt_1 = text(t_1_value);\n\t\t\tattr(button, \"class\", \"svelte-1bils14\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, t_1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*click_handler*/ ctx[3]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*$t*/ 1 && t_1_value !== (t_1_value = /*$t*/ ctx[0]('close', { default: 'Close' }) + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$g($$self, $$props, $$invalidate) {\n\tlet $t;\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(0, $t = value));\n\tconst dispatch = createEventDispatcher();\n\tconst click_handler = () => dispatch('complete');\n\treturn [$t, t, dispatch, click_handler];\n}\n\nclass Close extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$g, create_fragment$g, safe_not_equal, {}, add_css$b);\n\t}\n}\n\n/* src/ui/components/Link.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$a(target) {\n\tappend_styles(target, \"svelte-785ja0\", \".button.svelte-785ja0{--button-height:var(--space-2xl);cursor:pointer;display:flex;justify-content:center;align-items:center;gap:var(--space-2xs);height:var(--button-height);line-height:var(--button-height);text-decoration:none;text-align:center;border-radius:var(--border-radius-inner);font-size:var(--fs-1);font-weight:600;color:var(--button-color, var(--button-text-color));background:var(--button-background, var(--button-primary-background));border:none;box-shadow:var(--button-outline);flex:1}.button.svelte-785ja0:hover{background:var(--button-background-hover, var(--button-primary-background-hover));box-shadow:var(--button-outline-hover, var(--button-primary-outline-hover))}.button.svelte-785ja0:active{background:var(--button-background-active, var(--button-primary-background-active));box-shadow:var(--button-outline-active);color:var(--button-text-color-active)}.secondary.svelte-785ja0{--button-background:var(--button-secondary-background);--button-background-hover:var(--button-secondary-background-hover);--button-background-active:var(--button-secondary-background-active);--button-outline-hover:var(--button-secondary-outline-hover)}.outlined.svelte-785ja0{--button-background:transparent;--button-background-hover:transparent;--button-background-active:var(--button-outlined-background-active);--button-outline:var(--button-outlined-outline);--button-outline-hover:var(--button-outlined-outline-hover)}a.svelte-785ja0{align-self:stretch}\");\n}\n\n// (7:4) {#if icon}\nfunction create_if_block$8(ctx) {\n\tlet icon_1;\n\tlet current;\n\ticon_1 = new Icon({ props: { name: /*icon*/ ctx[3] } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(icon_1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(icon_1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon_1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon_1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(icon_1, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$f(ctx) {\n\tlet a;\n\tlet t0;\n\tlet span;\n\tlet current;\n\tlet if_block = /*icon*/ ctx[3] && create_if_block$8(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\ta = element(\"a\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tt0 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tspan.textContent = `${/*label*/ ctx[2]}`;\n\t\t\tattr(a, \"class\", \"\" + (null_to_empty(/*variant*/ ctx[5]) + \" svelte-785ja0\"));\n\t\t\tattr(a, \"href\", /*href*/ ctx[1]);\n\t\t\tattr(a, \"target\", /*target*/ ctx[4]);\n\t\t\tattr(a, \"rel\", \"noreferrer\");\n\t\t\ttoggle_class(a, \"button\", /*button*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, a, anchor);\n\t\t\tif (if_block) if_block.m(a, null);\n\t\t\tappend(a, t0);\n\t\t\tappend(a, span);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*icon*/ ctx[3]) if_block.p(ctx, dirty);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(a);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$f($$self, $$props, $$invalidate) {\n\tlet { data } = $$props;\n\tlet { button = true, href, label, icon, target, variant = 'outlined' } = data;\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(6, data = $$props.data);\n\t};\n\n\treturn [button, href, label, icon, target, variant, data];\n}\n\nclass Link extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$f, create_fragment$f, safe_not_equal, { data: 6 }, add_css$a);\n\t}\n}\n\nvar ErrorCorrectLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2,\n};\n\nvar Mode = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3,\n};\n\nclass QR8bitByte {\n    constructor(data) {\n        this.mode = Mode.MODE_8BIT_BYTE;\n        this.data = data;\n    }\n    getLength() {\n        return this.data.length;\n    }\n    write(buffer) {\n        for (let i = 0; i < this.data.length; i++) {\n            // not JIS ...\n            buffer.put(this.data.charCodeAt(i), 8);\n        }\n    }\n}\n\nclass QRBitBuffer {\n    constructor() {\n        this.buffer = [];\n        this.length = 0;\n    }\n    get(index) {\n        const bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) == 1;\n    }\n    put(num, length) {\n        for (let i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n        }\n    }\n    getLengthInBits() {\n        return this.length;\n    }\n    putBit(bit) {\n        const bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        }\n        this.length++;\n    }\n}\n\nconst QRMath = {\n    glog: function (n) {\n        if (n < 1) {\n            throw new Error('glog(' + n + ')');\n        }\n        return QRMath.LOG_TABLE[n];\n    },\n    gexp: function (n) {\n        while (n < 0) {\n            n += 255;\n        }\n        while (n >= 256) {\n            n -= 255;\n        }\n        return QRMath.EXP_TABLE[n];\n    },\n    EXP_TABLE: new Array(256),\n    LOG_TABLE: new Array(256),\n};\nfor (let i = 0; i < 8; i++) {\n    QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (let i = 8; i < 256; i++) {\n    QRMath.EXP_TABLE[i] =\n        QRMath.EXP_TABLE[i - 4] ^\n            QRMath.EXP_TABLE[i - 5] ^\n            QRMath.EXP_TABLE[i - 6] ^\n            QRMath.EXP_TABLE[i - 8];\n}\nfor (let i = 0; i < 255; i++) {\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\nclass QRPolynomial {\n    constructor(num, shift) {\n        if (num.length == undefined) {\n            throw new Error(num.length + '/' + shift);\n        }\n        let offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n            offset++;\n        }\n        this.num = new Array(num.length - offset + shift);\n        for (let i = 0; i < num.length - offset; i++) {\n            this.num[i] = num[i + offset];\n        }\n    }\n    get(index) {\n        return this.num[index];\n    }\n    getLength() {\n        return this.num.length;\n    }\n    multiply(e) {\n        const num = new Array(this.getLength() + e.getLength() - 1);\n        for (let i = 0; i < this.getLength(); i++) {\n            for (let j = 0; j < e.getLength(); j++) {\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n            }\n        }\n        return new QRPolynomial(num, 0);\n    }\n    mod(e) {\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n        const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n        const num = new Array(this.getLength());\n        for (let i = 0; i < this.getLength(); i++) {\n            num[i] = this.get(i);\n        }\n        for (let i = 0; i < e.getLength(); i++) {\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n        // recursive call\n        return new QRPolynomial(num, 0).mod(e);\n    }\n}\n\n// ErrorCorrectLevel\nclass QRRSBlock {\n    constructor(totalCount, dataCount) {\n        this.totalCount = totalCount;\n        this.dataCount = dataCount;\n    }\n    static getRSBlocks(typeNumber, errorCorrectLevel) {\n        const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n        if (rsBlock == undefined) {\n            throw new Error('bad rs block @ typeNumber:' +\n                typeNumber +\n                '/errorCorrectLevel:' +\n                errorCorrectLevel);\n        }\n        const length = rsBlock.length / 3;\n        const list = [];\n        for (let i = 0; i < length; i++) {\n            const count = rsBlock[i * 3 + 0];\n            const totalCount = rsBlock[i * 3 + 1];\n            const dataCount = rsBlock[i * 3 + 2];\n            for (let j = 0; j < count; j++) {\n                list.push(new QRRSBlock(totalCount, dataCount));\n            }\n        }\n        return list;\n    }\n    static getRsBlockTable(typeNumber, errorCorrectLevel) {\n        switch (errorCorrectLevel) {\n            case ErrorCorrectLevel.L:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n            case ErrorCorrectLevel.M:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n            case ErrorCorrectLevel.Q:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n            case ErrorCorrectLevel.H:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n            default:\n                return undefined;\n        }\n    }\n}\nQRRSBlock.RS_BLOCK_TABLE = [\n    // L\n    // M\n    // Q\n    // H\n    // 1\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n    // 2\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n    // 3\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n    // 4\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n    // 5\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n    // 6\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n    // 7\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n    // 8\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n    // 9\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n    // 10\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16],\n    // 11\n    [4, 101, 81],\n    [1, 80, 50, 4, 81, 51],\n    [4, 50, 22, 4, 51, 23],\n    [3, 36, 12, 8, 37, 13],\n    // 12\n    [2, 116, 92, 2, 117, 93],\n    [6, 58, 36, 2, 59, 37],\n    [4, 46, 20, 6, 47, 21],\n    [7, 42, 14, 4, 43, 15],\n    // 13\n    [4, 133, 107],\n    [8, 59, 37, 1, 60, 38],\n    [8, 44, 20, 4, 45, 21],\n    [12, 33, 11, 4, 34, 12],\n    // 14\n    [3, 145, 115, 1, 146, 116],\n    [4, 64, 40, 5, 65, 41],\n    [11, 36, 16, 5, 37, 17],\n    [11, 36, 12, 5, 37, 13],\n    // 15\n    [5, 109, 87, 1, 110, 88],\n    [5, 65, 41, 5, 66, 42],\n    [5, 54, 24, 7, 55, 25],\n    [11, 36, 12],\n    // 16\n    [5, 122, 98, 1, 123, 99],\n    [7, 73, 45, 3, 74, 46],\n    [15, 43, 19, 2, 44, 20],\n    [3, 45, 15, 13, 46, 16],\n    // 17\n    [1, 135, 107, 5, 136, 108],\n    [10, 74, 46, 1, 75, 47],\n    [1, 50, 22, 15, 51, 23],\n    [2, 42, 14, 17, 43, 15],\n    // 18\n    [5, 150, 120, 1, 151, 121],\n    [9, 69, 43, 4, 70, 44],\n    [17, 50, 22, 1, 51, 23],\n    [2, 42, 14, 19, 43, 15],\n    // 19\n    [3, 141, 113, 4, 142, 114],\n    [3, 70, 44, 11, 71, 45],\n    [17, 47, 21, 4, 48, 22],\n    [9, 39, 13, 16, 40, 14],\n    // 20\n    [3, 135, 107, 5, 136, 108],\n    [3, 67, 41, 13, 68, 42],\n    [15, 54, 24, 5, 55, 25],\n    [15, 43, 15, 10, 44, 16],\n    // 21\n    [4, 144, 116, 4, 145, 117],\n    [17, 68, 42],\n    [17, 50, 22, 6, 51, 23],\n    [19, 46, 16, 6, 47, 17],\n    // 22\n    [2, 139, 111, 7, 140, 112],\n    [17, 74, 46],\n    [7, 54, 24, 16, 55, 25],\n    [34, 37, 13],\n    // 23\n    [4, 151, 121, 5, 152, 122],\n    [4, 75, 47, 14, 76, 48],\n    [11, 54, 24, 14, 55, 25],\n    [16, 45, 15, 14, 46, 16],\n    // 24\n    [6, 147, 117, 4, 148, 118],\n    [6, 73, 45, 14, 74, 46],\n    [11, 54, 24, 16, 55, 25],\n    [30, 46, 16, 2, 47, 17],\n    // 25\n    [8, 132, 106, 4, 133, 107],\n    [8, 75, 47, 13, 76, 48],\n    [7, 54, 24, 22, 55, 25],\n    [22, 45, 15, 13, 46, 16],\n    // 26\n    [10, 142, 114, 2, 143, 115],\n    [19, 74, 46, 4, 75, 47],\n    [28, 50, 22, 6, 51, 23],\n    [33, 46, 16, 4, 47, 17],\n    // 27\n    [8, 152, 122, 4, 153, 123],\n    [22, 73, 45, 3, 74, 46],\n    [8, 53, 23, 26, 54, 24],\n    [12, 45, 15, 28, 46, 16],\n    // 28\n    [3, 147, 117, 10, 148, 118],\n    [3, 73, 45, 23, 74, 46],\n    [4, 54, 24, 31, 55, 25],\n    [11, 45, 15, 31, 46, 16],\n    // 29\n    [7, 146, 116, 7, 147, 117],\n    [21, 73, 45, 7, 74, 46],\n    [1, 53, 23, 37, 54, 24],\n    [19, 45, 15, 26, 46, 16],\n    // 30\n    [5, 145, 115, 10, 146, 116],\n    [19, 75, 47, 10, 76, 48],\n    [15, 54, 24, 25, 55, 25],\n    [23, 45, 15, 25, 46, 16],\n    // 31\n    [13, 145, 115, 3, 146, 116],\n    [2, 74, 46, 29, 75, 47],\n    [42, 54, 24, 1, 55, 25],\n    [23, 45, 15, 28, 46, 16],\n    // 32\n    [17, 145, 115],\n    [10, 74, 46, 23, 75, 47],\n    [10, 54, 24, 35, 55, 25],\n    [19, 45, 15, 35, 46, 16],\n    // 33\n    [17, 145, 115, 1, 146, 116],\n    [14, 74, 46, 21, 75, 47],\n    [29, 54, 24, 19, 55, 25],\n    [11, 45, 15, 46, 46, 16],\n    // 34\n    [13, 145, 115, 6, 146, 116],\n    [14, 74, 46, 23, 75, 47],\n    [44, 54, 24, 7, 55, 25],\n    [59, 46, 16, 1, 47, 17],\n    // 35\n    [12, 151, 121, 7, 152, 122],\n    [12, 75, 47, 26, 76, 48],\n    [39, 54, 24, 14, 55, 25],\n    [22, 45, 15, 41, 46, 16],\n    // 36\n    [6, 151, 121, 14, 152, 122],\n    [6, 75, 47, 34, 76, 48],\n    [46, 54, 24, 10, 55, 25],\n    [2, 45, 15, 64, 46, 16],\n    // 37\n    [17, 152, 122, 4, 153, 123],\n    [29, 74, 46, 14, 75, 47],\n    [49, 54, 24, 10, 55, 25],\n    [24, 45, 15, 46, 46, 16],\n    // 38\n    [4, 152, 122, 18, 153, 123],\n    [13, 74, 46, 32, 75, 47],\n    [48, 54, 24, 14, 55, 25],\n    [42, 45, 15, 32, 46, 16],\n    // 39\n    [20, 147, 117, 4, 148, 118],\n    [40, 75, 47, 7, 76, 48],\n    [43, 54, 24, 22, 55, 25],\n    [10, 45, 15, 67, 46, 16],\n    // 40\n    [19, 148, 118, 6, 149, 119],\n    [18, 75, 47, 31, 76, 48],\n    [34, 54, 24, 34, 55, 25],\n    [20, 45, 15, 61, 46, 16],\n];\n\nconst QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7,\n};\nconst QRUtil = {\n    PATTERN_POSITION_TABLE: [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170],\n    ],\n    G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n    getBCHTypeInfo: function (data) {\n        let d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15));\n        }\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n    getBCHTypeNumber: function (data) {\n        let d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18));\n        }\n        return (data << 12) | d;\n    },\n    getBCHDigit: function (data) {\n        let digit = 0;\n        while (data != 0) {\n            digit++;\n            data >>>= 1;\n        }\n        return digit;\n    },\n    getPatternPosition: function (typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n    getMask: function (maskPattern, i, j) {\n        switch (maskPattern) {\n            case QRMaskPattern.PATTERN000:\n                return (i + j) % 2 == 0;\n            case QRMaskPattern.PATTERN001:\n                return i % 2 == 0;\n            case QRMaskPattern.PATTERN010:\n                return j % 3 == 0;\n            case QRMaskPattern.PATTERN011:\n                return (i + j) % 3 == 0;\n            case QRMaskPattern.PATTERN100:\n                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n            case QRMaskPattern.PATTERN101:\n                return ((i * j) % 2) + ((i * j) % 3) == 0;\n            case QRMaskPattern.PATTERN110:\n                return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;\n            case QRMaskPattern.PATTERN111:\n                return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;\n            default:\n                throw new Error('bad maskPattern:' + maskPattern);\n        }\n    },\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\n        let a = new QRPolynomial([1], 0);\n        for (let i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n        }\n        return a;\n    },\n    getLengthInBits: function (mode, type) {\n        if (1 <= type && type < 10) {\n            // 1 - 9\n            switch (mode) {\n                case Mode.MODE_NUMBER:\n                    return 10;\n                case Mode.MODE_ALPHA_NUM:\n                    return 9;\n                case Mode.MODE_8BIT_BYTE:\n                    return 8;\n                case Mode.MODE_KANJI:\n                    return 8;\n                default:\n                    throw new Error('mode:' + mode);\n            }\n        }\n        else if (type < 27) {\n            // 10 - 26\n            switch (mode) {\n                case Mode.MODE_NUMBER:\n                    return 12;\n                case Mode.MODE_ALPHA_NUM:\n                    return 11;\n                case Mode.MODE_8BIT_BYTE:\n                    return 16;\n                case Mode.MODE_KANJI:\n                    return 10;\n                default:\n                    throw new Error('mode:' + mode);\n            }\n        }\n        else if (type < 41) {\n            // 27 - 40\n            switch (mode) {\n                case Mode.MODE_NUMBER:\n                    return 14;\n                case Mode.MODE_ALPHA_NUM:\n                    return 13;\n                case Mode.MODE_8BIT_BYTE:\n                    return 16;\n                case Mode.MODE_KANJI:\n                    return 12;\n                default:\n                    throw new Error('mode:' + mode);\n            }\n        }\n        else {\n            throw new Error('type:' + type);\n        }\n    },\n    getLostPoint: function (qrCode) {\n        const moduleCount = qrCode.getModuleCount();\n        let lostPoint = 0;\n        // LEVEL1\n        for (let row = 0; row < moduleCount; row++) {\n            for (let col = 0; col < moduleCount; col++) {\n                let sameCount = 0;\n                const dark = qrCode.isDark(row, col);\n                for (let r = -1; r <= 1; r++) {\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n                    for (let c = -1; c <= 1; c++) {\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n                if (sameCount > 5) {\n                    lostPoint += 3 + sameCount - 5;\n                }\n            }\n        }\n        // LEVEL2\n        for (let row = 0; row < moduleCount - 1; row++) {\n            for (let col = 0; col < moduleCount - 1; col++) {\n                let count = 0;\n                if (qrCode.isDark(row, col))\n                    count++;\n                if (qrCode.isDark(row + 1, col))\n                    count++;\n                if (qrCode.isDark(row, col + 1))\n                    count++;\n                if (qrCode.isDark(row + 1, col + 1))\n                    count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n        // LEVEL3\n        for (let row = 0; row < moduleCount; row++) {\n            for (let col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row, col + 1) &&\n                    qrCode.isDark(row, col + 2) &&\n                    qrCode.isDark(row, col + 3) &&\n                    qrCode.isDark(row, col + 4) &&\n                    !qrCode.isDark(row, col + 5) &&\n                    qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        for (let col = 0; col < moduleCount; col++) {\n            for (let row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row + 1, col) &&\n                    qrCode.isDark(row + 2, col) &&\n                    qrCode.isDark(row + 3, col) &&\n                    qrCode.isDark(row + 4, col) &&\n                    !qrCode.isDark(row + 5, col) &&\n                    qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        // LEVEL4\n        let darkCount = 0;\n        for (let col = 0; col < moduleCount; col++) {\n            for (let row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n        const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n    },\n};\n\nclass QRCode {\n    constructor(typeNumber, errorCorrectLevel) {\n        this.typeNumber = typeNumber;\n        this.errorCorrectLevel = errorCorrectLevel;\n        this.modules = null;\n        this.moduleCount = 0;\n        this.dataCache = null;\n        this.dataList = [];\n    }\n    addData(data) {\n        const newData = new QR8bitByte(data);\n        this.dataList.push(newData);\n        this.dataCache = null;\n    }\n    isDark(row, col) {\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n            throw new Error(row + ',' + col);\n        }\n        return this.modules[row][col];\n    }\n    getModuleCount() {\n        return this.moduleCount;\n    }\n    make() {\n        // Calculate automatically typeNumber if provided is < 1\n        if (this.typeNumber < 1) {\n            let typeNumber = 1;\n            for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n                const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n                const buffer = new QRBitBuffer();\n                let totalDataCount = 0;\n                for (let i = 0; i < rsBlocks.length; i++) {\n                    totalDataCount += rsBlocks[i].dataCount;\n                }\n                for (let i = 0; i < this.dataList.length; i++) {\n                    const data = this.dataList[i];\n                    buffer.put(data.mode, 4);\n                    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n                    data.write(buffer);\n                }\n                if (buffer.getLengthInBits() <= totalDataCount * 8)\n                    break;\n            }\n            this.typeNumber = typeNumber;\n        }\n        this.makeImpl(false, this.getBestMaskPattern());\n    }\n    makeImpl(test, maskPattern) {\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = new Array(this.moduleCount);\n        for (let row = 0; row < this.moduleCount; row++) {\n            this.modules[row] = new Array(this.moduleCount);\n            for (let col = 0; col < this.moduleCount; col++) {\n                this.modules[row][col] = null; //(col + row) % 3;\n            }\n        }\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n        if (this.typeNumber >= 7) {\n            this.setupTypeNumber(test);\n        }\n        if (this.dataCache == null) {\n            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n        this.mapData(this.dataCache, maskPattern);\n    }\n    setupPositionProbePattern(row, col) {\n        for (let r = -1; r <= 7; r++) {\n            if (row + r <= -1 || this.moduleCount <= row + r)\n                continue;\n            for (let c = -1; c <= 7; c++) {\n                if (col + c <= -1 || this.moduleCount <= col + c)\n                    continue;\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n                    (0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n                    (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                    this.modules[row + r][col + c] = true;\n                }\n                else {\n                    this.modules[row + r][col + c] = false;\n                }\n            }\n        }\n    }\n    getBestMaskPattern() {\n        let minLostPoint = 0;\n        let pattern = 0;\n        for (let i = 0; i < 8; i++) {\n            this.makeImpl(true, i);\n            const lostPoint = QRUtil.getLostPoint(this);\n            if (i == 0 || minLostPoint > lostPoint) {\n                minLostPoint = lostPoint;\n                pattern = i;\n            }\n        }\n        return pattern;\n    }\n    setupTimingPattern() {\n        for (let r = 8; r < this.moduleCount - 8; r++) {\n            if (this.modules[r][6] != null) {\n                continue;\n            }\n            this.modules[r][6] = r % 2 == 0;\n        }\n        for (let c = 8; c < this.moduleCount - 8; c++) {\n            if (this.modules[6][c] != null) {\n                continue;\n            }\n            this.modules[6][c] = c % 2 == 0;\n        }\n    }\n    setupPositionAdjustPattern() {\n        const pos = QRUtil.getPatternPosition(this.typeNumber);\n        for (let i = 0; i < pos.length; i++) {\n            for (let j = 0; j < pos.length; j++) {\n                const row = pos[i];\n                const col = pos[j];\n                if (this.modules[row][col] != null) {\n                    continue;\n                }\n                for (let r = -2; r <= 2; r++) {\n                    for (let c = -2; c <= 2; c++) {\n                        if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n                            this.modules[row + r][col + c] = true;\n                        }\n                        else {\n                            this.modules[row + r][col + c] = false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    setupTypeNumber(test) {\n        const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        for (let i = 0; i < 18; i++) {\n            const mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod;\n        }\n        for (let i = 0; i < 18; i++) {\n            const mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n        }\n    }\n    setupTypeInfo(test, maskPattern) {\n        const data = (this.errorCorrectLevel << 3) | maskPattern;\n        const bits = QRUtil.getBCHTypeInfo(data);\n        // vertical\n        for (let i = 0; i < 15; i++) {\n            const mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 6) {\n                this.modules[i][8] = mod;\n            }\n            else if (i < 8) {\n                this.modules[i + 1][8] = mod;\n            }\n            else {\n                this.modules[this.moduleCount - 15 + i][8] = mod;\n            }\n        }\n        // horizontal\n        for (let i = 0; i < 15; i++) {\n            const mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 8) {\n                this.modules[8][this.moduleCount - i - 1] = mod;\n            }\n            else if (i < 9) {\n                this.modules[8][15 - i - 1 + 1] = mod;\n            }\n            else {\n                this.modules[8][15 - i - 1] = mod;\n            }\n        }\n        // fixed module\n        this.modules[this.moduleCount - 8][8] = !test;\n    }\n    mapData(data, maskPattern) {\n        let inc = -1;\n        let row = this.moduleCount - 1;\n        let bitIndex = 7;\n        let byteIndex = 0;\n        for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n            if (col == 6)\n                col--;\n            for (;;) {\n                for (let c = 0; c < 2; c++) {\n                    if (this.modules[row][col - c] == null) {\n                        let dark = false;\n                        if (byteIndex < data.length) {\n                            dark = ((data[byteIndex] >>> bitIndex) & 1) == 1;\n                        }\n                        const mask = QRUtil.getMask(maskPattern, row, col - c);\n                        if (mask) {\n                            dark = !dark;\n                        }\n                        this.modules[row][col - c] = dark;\n                        bitIndex--;\n                        if (bitIndex == -1) {\n                            byteIndex++;\n                            bitIndex = 7;\n                        }\n                    }\n                }\n                row += inc;\n                if (row < 0 || this.moduleCount <= row) {\n                    row -= inc;\n                    inc = -inc;\n                    break;\n                }\n            }\n        }\n    }\n    static createData(typeNumber, errorCorrectLevel, dataList) {\n        const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n        const buffer = new QRBitBuffer();\n        for (let i = 0; i < dataList.length; i++) {\n            const data = dataList[i];\n            buffer.put(data.mode, 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n            data.write(buffer);\n        }\n        // calc num max data.\n        let totalDataCount = 0;\n        for (let i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n            throw new Error('code length overflow. (' +\n                buffer.getLengthInBits() +\n                '>' +\n                totalDataCount * 8 +\n                ')');\n        }\n        // end code\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n            buffer.put(0, 4);\n        }\n        // padding\n        while (buffer.getLengthInBits() % 8 != 0) {\n            buffer.putBit(false);\n        }\n        // padding\n        for (;;) {\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCode.PAD0, 8);\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCode.PAD1, 8);\n        }\n        return QRCode.createBytes(buffer, rsBlocks);\n    }\n    static createBytes(buffer, rsBlocks) {\n        let offset = 0;\n        let maxDcCount = 0;\n        let maxEcCount = 0;\n        const dcdata = new Array(rsBlocks.length);\n        const ecdata = new Array(rsBlocks.length);\n        for (let r = 0; r < rsBlocks.length; r++) {\n            const dcCount = rsBlocks[r].dataCount;\n            const ecCount = rsBlocks[r].totalCount - dcCount;\n            maxDcCount = Math.max(maxDcCount, dcCount);\n            maxEcCount = Math.max(maxEcCount, ecCount);\n            dcdata[r] = new Array(dcCount);\n            for (let i = 0; i < dcdata[r].length; i++) {\n                dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n            }\n            offset += dcCount;\n            const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n            const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n            const modPoly = rawPoly.mod(rsPoly);\n            ecdata[r] = new Array(rsPoly.getLength() - 1);\n            for (let i = 0; i < ecdata[r].length; i++) {\n                const modIndex = i + modPoly.getLength() - ecdata[r].length;\n                ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n            }\n        }\n        let totalCodeCount = 0;\n        for (let i = 0; i < rsBlocks.length; i++) {\n            totalCodeCount += rsBlocks[i].totalCount;\n        }\n        const data = new Array(totalCodeCount);\n        let index = 0;\n        for (let i = 0; i < maxDcCount; i++) {\n            for (let r = 0; r < rsBlocks.length; r++) {\n                if (i < dcdata[r].length) {\n                    data[index++] = dcdata[r][i];\n                }\n            }\n        }\n        for (let i = 0; i < maxEcCount; i++) {\n            for (let r = 0; r < rsBlocks.length; r++) {\n                if (i < ecdata[r].length) {\n                    data[index++] = ecdata[r][i];\n                }\n            }\n        }\n        return data;\n    }\n}\nQRCode.PAD0 = 0xec;\nQRCode.PAD1 = 0x11;\n\n/**\n * Generate QR SVG\n * @author Johan Nordberg <code@johan-nordberg.com>\n */\nfunction generate(text, level = 'L', version = -1) {\n    try {\n        const qr = new QRCode(version, ErrorCorrectLevel[level]);\n        const rects = [];\n        qr.addData(text);\n        qr.make();\n        const rows = qr.modules;\n        const size = rows.length;\n        for (const [y, row] of rows.entries()) {\n            let rect;\n            for (const [x, on] of row.entries()) {\n                if (on) {\n                    if (!rect)\n                        rect = { x, y, width: 0, height: 1 };\n                    rect.width++;\n                }\n                else {\n                    if (rect && rect.width > 0) {\n                        rects.push(rect);\n                    }\n                    rect = undefined;\n                }\n            }\n            if (rect && rect.width > 0) {\n                rects.push(rect);\n            }\n        }\n        const svg = [\n            `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" viewBox=\"0 0 ${size} ${size}\">`,\n        ];\n        for (const { x, y, width, height } of rects) {\n            svg.push(`<rect x=\"${x}\" y=\"${y}\" width=\"${width}\" height=\"${height}\" />`);\n        }\n        svg.push('</svg>');\n        return svg.join('');\n    }\n    catch (e) {\n        console.log('Could not render QR code: ', e);\n    }\n}\n\n/* src/ui/components/Qr.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$9(target) {\n\tappend_styles(target, \"svelte-vj0cjm\", \".wrapper.svelte-vj0cjm.svelte-vj0cjm{position:relative;display:grid;background:var(--body-background-color);border-radius:var(--space-s);padding:var(--space-m);box-shadow:var(--qr-border-color);margin-bottom:var(--space-xs)}.qr.svelte-vj0cjm.svelte-vj0cjm{display:flex}.qr.svelte-vj0cjm svg{border-radius:var(--space-2xs);padding:var(--space-xs);background:white;flex:1;width:100%}dialog.svelte-vj0cjm.svelte-vj0cjm{padding:0;border-radius:var(--space-2xs);border:none}dialog.svelte-vj0cjm .qr.svelte-vj0cjm{background-color:white;width:min(800px, 80vmin);border:none}.button-group.svelte-vj0cjm.svelte-vj0cjm{display:grid;grid-template-columns:1fr 1fr;justify-items:center;gap:var(--space-s);position:absolute;top:100%;width:100%;transform:translateY(-50%)}.button-group.svelte-vj0cjm button.svelte-vj0cjm{display:flex;align-items:center;gap:var(--space-xs);border:none;cursor:pointer;background:var(--body-background-color);color:var(--body-text-color);font-size:var(--fs-0)}@media(max-width: 340px){.button-group.svelte-vj0cjm button span.svelte-vj0cjm:last-of-type{display:none}}.icon.svelte-vj0cjm.svelte-vj0cjm{display:grid;place-content:center;grid-template-areas:'stack'}.icon.svelte-vj0cjm>.svelte-vj0cjm{grid-area:stack}.check.svelte-vj0cjm.svelte-vj0cjm{background:var(--body-background-color)}\");\n}\n\n// (60:0) {#if data}\nfunction create_if_block$7(ctx) {\n\tlet div4;\n\tlet t0;\n\tlet div3;\n\tlet t1;\n\tlet button;\n\tlet div1;\n\tlet div0;\n\tlet icon;\n\tlet t2;\n\tlet t3;\n\tlet div2;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block0 = /*$qrcode*/ ctx[3] && create_if_block_3$2(ctx);\n\tlet if_block1 = /*$qrcode*/ ctx[3] && create_if_block_2$4(ctx);\n\n\ticon = new Icon({\n\t\t\tprops: { name: \"copy\", size: \"var(--space-m)\" }\n\t\t});\n\n\tlet if_block2 = /*copied*/ ctx[2] && create_if_block_1$4();\n\n\treturn {\n\t\tc() {\n\t\t\tdiv4 = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tdiv3 = element(\"div\");\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt1 = space();\n\t\t\tbutton = element(\"button\");\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tt3 = space();\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv2.innerHTML = `<span class=\"svelte-vj0cjm\">Copy</span> <span class=\"svelte-vj0cjm\">to clipboard</span>`;\n\t\t\tattr(div0, \"class\", \"svelte-vj0cjm\");\n\t\t\tattr(div1, \"class\", \"icon svelte-vj0cjm\");\n\t\t\tattr(button, \"class\", \"copy svelte-vj0cjm\");\n\t\t\tattr(div3, \"class\", \"button-group svelte-vj0cjm\");\n\t\t\tattr(div4, \"class\", \"wrapper svelte-vj0cjm\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div4, anchor);\n\t\t\tif (if_block0) if_block0.m(div4, null);\n\t\t\tappend(div4, t0);\n\t\t\tappend(div4, div3);\n\t\t\tif (if_block1) if_block1.m(div3, null);\n\t\t\tappend(div3, t1);\n\t\t\tappend(div3, button);\n\t\t\tappend(button, div1);\n\t\t\tappend(div1, div0);\n\t\t\tmount_component(icon, div0, null);\n\t\t\tappend(div1, t2);\n\t\t\tif (if_block2) if_block2.m(div1, null);\n\t\t\tappend(button, t3);\n\t\t\tappend(button, div2);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*click_handler*/ ctx[11]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*$qrcode*/ ctx[3]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_3$2(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(div4, t0);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tif_block0.d(1);\n\t\t\t\tif_block0 = null;\n\t\t\t}\n\n\t\t\tif (/*$qrcode*/ ctx[3]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*$qrcode*/ 8) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_2$4(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(div3, t1);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*copied*/ ctx[2]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif (dirty & /*copied*/ 4) {\n\t\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block_1$4();\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\tif_block2.m(div1, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block2, 1, 1, () => {\n\t\t\t\t\tif_block2 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block1);\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\ttransition_in(if_block2);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block1);\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\ttransition_out(if_block2);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div4);\n\t\t\t}\n\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tdestroy_component(icon);\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (62:8) {#if $qrcode}\nfunction create_if_block_3$2(ctx) {\n\tlet div;\n\tlet t;\n\tlet dialog_1;\n\tlet button;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = space();\n\t\t\tdialog_1 = element(\"dialog\");\n\t\t\tbutton = element(\"button\");\n\t\t\tattr(div, \"class\", \"main qr svelte-vj0cjm\");\n\t\t\tattr(button, \"class\", \"qr svelte-vj0cjm\");\n\t\t\tattr(dialog_1, \"class\", \"svelte-vj0cjm\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tdiv.innerHTML = /*$qrcode*/ ctx[3];\n\t\t\tinsert(target, t, anchor);\n\t\t\tinsert(target, dialog_1, anchor);\n\t\t\tappend(dialog_1, button);\n\t\t\tbutton.innerHTML = /*$qrcode*/ ctx[3];\n\t\t\t/*dialog_1_binding*/ ctx[10](dialog_1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(button, \"click\", /*collapse*/ ctx[6]),\n\t\t\t\t\tlisten(dialog_1, \"click\", self(/*backgroundClose*/ ctx[7])),\n\t\t\t\t\tlisten(dialog_1, \"keydown\", stop_propagation(prevent_default(/*escapeClose*/ ctx[8])), true)\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$qrcode*/ 8) div.innerHTML = /*$qrcode*/ ctx[3];\t\t\tif (dirty & /*$qrcode*/ 8) button.innerHTML = /*$qrcode*/ ctx[3];\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t\tdetach(t);\n\t\t\t\tdetach(dialog_1);\n\t\t\t}\n\n\t\t\t/*dialog_1_binding*/ ctx[10](null);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (78:12) {#if $qrcode}\nfunction create_if_block_2$4(ctx) {\n\tlet button;\n\tlet icon;\n\tlet t0;\n\tlet div;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\ticon = new Icon({\n\t\t\tprops: { name: \"expand\", size: \"var(--space-m)\" }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tdiv.innerHTML = `<span class=\"svelte-vj0cjm\">Expand</span> <span class=\"svelte-vj0cjm\">QR code</span>`;\n\t\t\tattr(button, \"class\", \"expand svelte-vj0cjm\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tmount_component(icon, button, null);\n\t\t\tappend(button, t0);\n\t\t\tappend(button, div);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*toggleExpanded*/ ctx[5]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (91:20) {#if copied}\nfunction create_if_block_1$4(ctx) {\n\tlet div;\n\tlet icon;\n\tlet div_transition;\n\tlet current;\n\n\ticon = new Icon({\n\t\t\tprops: { name: \"check\", size: \"var(--space-m)\" }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tattr(div, \"class\", \"check svelte-vj0cjm\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(icon, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\n\t\t\tif (local) {\n\t\t\t\tadd_render_callback(() => {\n\t\t\t\t\tif (!current) return;\n\t\t\t\t\tif (!div_transition) div_transition = create_bidirectional_transition(div, fade, { duration: 180, easing: cubicInOut }, true);\n\t\t\t\t\tdiv_transition.run(1);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\n\t\t\tif (local) {\n\t\t\t\tif (!div_transition) div_transition = create_bidirectional_transition(div, fade, { duration: 180, easing: cubicInOut }, false);\n\t\t\t\tdiv_transition.run(0);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t\tif (detaching && div_transition) div_transition.end();\n\t\t}\n\t};\n}\n\nfunction create_fragment$e(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*data*/ ctx[0] && create_if_block$7(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*data*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*data*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$7(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$e($$self, $$props, $$invalidate) {\n\tlet $qrcode;\n\tlet { data = '' } = $$props;\n\tlet dialog;\n\tlet expanded = false;\n\tlet copied = false;\n\tconst qrcode = writable();\n\tcomponent_subscribe($$self, qrcode, value => $$invalidate(3, $qrcode = value));\n\n\tonMount(() => {\n\t\ttry {\n\t\t\tqrcode.set(generate(data));\n\t\t} catch(e) {\n\t\t\tconsole.error('Error rendering QR code', e);\n\t\t}\n\t});\n\n\tconst toggleExpanded = () => {\n\t\tif (expanded) {\n\t\t\tcollapse();\n\t\t} else {\n\t\t\texpanded = true;\n\t\t\tdialog.showModal();\n\t\t}\n\t};\n\n\tconst collapse = () => {\n\t\tdialog.close();\n\t\texpanded = false;\n\t};\n\n\t// When background is clicked outside of modal, close\n\tfunction backgroundClose(event) {\n\t\tvar rect = dialog.getBoundingClientRect();\n\t\tvar isInDialog = rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;\n\n\t\tif (!isInDialog) {\n\t\t\tcollapse();\n\t\t}\n\t}\n\n\t// When escape keypress is captured, close\n\tfunction escapeClose(event) {\n\t\tif (event.key === 'Escape') {\n\t\t\tcollapse();\n\t\t}\n\t}\n\n\t// Copy data to clipboard if supported. Requires a secure context e.g. https\n\tfunction copyToClipboard(data) {\n\t\tif (!navigator.clipboard) return;\n\t\tnavigator.clipboard.writeText(data);\n\t\t$$invalidate(2, copied = true);\n\t\tsetTimeout(() => $$invalidate(2, copied = false), 1200);\n\t}\n\n\tfunction dialog_1_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tdialog = $$value;\n\t\t\t$$invalidate(1, dialog);\n\t\t});\n\t}\n\n\tconst click_handler = () => copyToClipboard(data);\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(0, data = $$props.data);\n\t};\n\n\treturn [\n\t\tdata,\n\t\tdialog,\n\t\tcopied,\n\t\t$qrcode,\n\t\tqrcode,\n\t\ttoggleExpanded,\n\t\tcollapse,\n\t\tbackgroundClose,\n\t\tescapeClose,\n\t\tcopyToClipboard,\n\t\tdialog_1_binding,\n\t\tclick_handler\n\t];\n}\n\nclass Qr extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$e, create_fragment$e, safe_not_equal, { data: 0 }, add_css$9);\n\t}\n}\n\n/* src/ui/components/Textarea.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$8(target) {\n\tappend_styles(target, \"svelte-1gpx2bs\", \".wrapper.svelte-1gpx2bs{position:relative;display:flex;display:grid;background-color:var(--text-area-background);border-radius:var(--border-radius-inner);overflow:hidden}textarea.svelte-1gpx2bs{--rows:9;flex:1;color:var(--text-area-text-color);background-color:var(--text-area-background);border:none;font-size:var(--fs-0);font-weight:400;line-height:1.5;resize:none;opacity:0.75;height:calc(var(--fs-0) * 1.5 * var(--rows) - var(--fs-0) * 1.5 * 0.5);border-radius:inherit;padding-inline-start:var(--space-m);padding-block-start:var(--space-m)}.wrapper.svelte-1gpx2bs::before,.wrapper.svelte-1gpx2bs::after{content:\\\"\\\";display:block;position:absolute;z-index:2;width:100%;height:var(--space-l);background:linear-gradient(var(--deg), transparent, black 100%)}.wrapper.svelte-1gpx2bs::before{--deg:0;top:0;opacity:var(--top-shadow-opacity, 0)}.wrapper.svelte-1gpx2bs::after{--deg:180deg;bottom:0;opacity:var(--bottom-shadow-opacity, 0)}\");\n}\n\nfunction create_fragment$d(ctx) {\n\tlet div;\n\tlet textarea_1;\n\tlet textarea_1_value_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\ttextarea_1 = element(\"textarea\");\n\t\t\ttextarea_1.readOnly = true;\n\t\t\ttextarea_1.value = textarea_1_value_value = /*data*/ ctx[0].content;\n\t\t\tattr(textarea_1, \"class\", \"svelte-1gpx2bs\");\n\t\t\tattr(div, \"class\", \"wrapper svelte-1gpx2bs\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, textarea_1);\n\t\t\t/*textarea_1_binding*/ ctx[4](textarea_1);\n\t\t\t/*div_binding*/ ctx[5](div);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(textarea_1, \"scroll\", /*handleScroll*/ ctx[3]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*data*/ 1 && textarea_1_value_value !== (textarea_1_value_value = /*data*/ ctx[0].content)) {\n\t\t\t\ttextarea_1.value = textarea_1_value_value;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\t/*textarea_1_binding*/ ctx[4](null);\n\t\t\t/*div_binding*/ ctx[5](null);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nlet maxOpacity = 0.2;\n\nfunction instance$d($$self, $$props, $$invalidate) {\n\tlet { data = {} } = $$props;\n\tlet wrapper;\n\tlet textarea;\n\n\tfunction handleScroll(event) {\n\t\tlet scrollMax = event.target.scrollHeight - event.target.clientHeight;\n\t\tlet currentScroll = event.target.scrollTop / scrollMax;\n\t\tlet topShadowOpacity = currentScroll * maxOpacity;\n\t\tlet bottomShadowOpacity = (1 - currentScroll) * maxOpacity;\n\t\twrapper.style.setProperty('--top-shadow-opacity', topShadowOpacity);\n\t\twrapper.style.setProperty('--bottom-shadow-opacity', bottomShadowOpacity);\n\t}\n\n\tonMount(() => {\n\t\tlet startingOpacity = (1 - textarea.scrollTop / (textarea.scrollHeight - textarea.clientHeight)) * maxOpacity;\n\t\twrapper.style.setProperty('--bottom-shadow-opacity', startingOpacity);\n\t});\n\n\tfunction textarea_1_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\ttextarea = $$value;\n\t\t\t$$invalidate(2, textarea);\n\t\t});\n\t}\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\twrapper = $$value;\n\t\t\t$$invalidate(1, wrapper);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(0, data = $$props.data);\n\t};\n\n\treturn [data, wrapper, textarea, handleScroll, textarea_1_binding, div_binding];\n}\n\nclass Textarea extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$d, create_fragment$d, safe_not_equal, { data: 0 }, add_css$8);\n\t}\n}\n\n/* src/ui/Prompt.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$7(target) {\n\tappend_styles(target, \"svelte-1kd5uy1\", \".prompt.svelte-1kd5uy1{display:flex;flex-direction:column;gap:var(--space-m);gap:var(--space-l)}.text.svelte-1kd5uy1{display:flex;flex-direction:column;gap:var(--space-s);text-align:center}\");\n}\n\nfunction get_each_context$2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[6] = list[i];\n\treturn child_ctx;\n}\n\n// (104:8) <BodyTitle>\nfunction create_default_slot_1$5(ctx) {\n\tlet t_value = /*$prompt*/ ctx[0]?.args.title + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(t_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$prompt*/ 1 && t_value !== (t_value = /*$prompt*/ ctx[0]?.args.title + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (105:8) <BodyText>\nfunction create_default_slot$6(ctx) {\n\tlet t_value = /*$prompt*/ ctx[0]?.args.body + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(t_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$prompt*/ 1 && t_value !== (t_value = /*$prompt*/ ctx[0]?.args.body + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (107:4) {#each $elements as component}\nfunction create_each_block$2(ctx) {\n\tlet switch_instance;\n\tlet switch_instance_anchor;\n\tlet current;\n\tconst switch_instance_spread_levels = [/*component*/ ctx[6].props];\n\tvar switch_value = /*component*/ ctx[6].component;\n\n\tfunction switch_props(ctx, dirty) {\n\t\tlet switch_instance_props = {};\n\n\t\tif (dirty !== undefined && dirty & /*$elements*/ 2) {\n\t\t\tswitch_instance_props = get_spread_update(switch_instance_spread_levels, [get_spread_object(/*component*/ ctx[6].props)]);\n\t\t} else {\n\t\t\tfor (let i = 0; i < switch_instance_spread_levels.length; i += 1) {\n\t\t\t\tswitch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn { props: switch_instance_props };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = construct_svelte_component(switch_value, switch_props(ctx));\n\t\tswitch_instance.$on(\"complete\", /*complete_handler*/ ctx[4]);\n\t\tswitch_instance.$on(\"cancel\", /*cancel_handler*/ ctx[5]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tswitch_instance_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (switch_instance) mount_component(switch_instance, target, anchor);\n\t\t\tinsert(target, switch_instance_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$elements*/ 2 && switch_value !== (switch_value = /*component*/ ctx[6].component)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = construct_svelte_component(switch_value, switch_props(ctx, dirty));\n\t\t\t\t\tswitch_instance.$on(\"complete\", /*complete_handler*/ ctx[4]);\n\t\t\t\t\tswitch_instance.$on(\"cancel\", /*cancel_handler*/ ctx[5]);\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tconst switch_instance_changes = (dirty & /*$elements*/ 2)\n\t\t\t\t? get_spread_update(switch_instance_spread_levels, [get_spread_object(/*component*/ ctx[6].props)])\n\t\t\t\t: {};\n\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(switch_instance_anchor);\n\t\t\t}\n\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$c(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet bodytitle;\n\tlet t0;\n\tlet bodytext;\n\tlet t1;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$5] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tbodytext = new BodyText({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$6] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tlet each_value = ensure_array_like(/*$elements*/ ctx[1]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(bodytext.$$.fragment);\n\t\t\tt1 = space();\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div0, \"class\", \"text svelte-1kd5uy1\");\n\t\t\tattr(div1, \"class\", \"prompt svelte-1kd5uy1\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\t\t\tmount_component(bodytitle, div0, null);\n\t\t\tappend(div0, t0);\n\t\t\tmount_component(bodytext, div0, null);\n\t\t\tappend(div1, t1);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(div1, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $prompt*/ 513) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst bodytext_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $prompt*/ 513) {\n\t\t\t\tbodytext_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytext.$set(bodytext_changes);\n\n\t\t\tif (dirty & /*$elements, dispatch*/ 10) {\n\t\t\t\teach_value = ensure_array_like(/*$elements*/ ctx[1]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$2(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$2(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(div1, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(bodytext.$$.fragment, local);\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(bodytext.$$.fragment, local);\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div1);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle);\n\t\t\tdestroy_component(bodytext);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$c($$self, $$props, $$invalidate) {\n\tlet $prompt;\n\tlet $elements;\n\tcomponent_subscribe($$self, prompt, $$value => $$invalidate(0, $prompt = $$value));\n\n\tconst elements = derived(prompt, $prompt => {\n\t\tconst components = [];\n\n\t\tif ($prompt) {\n\t\t\t$prompt.args.elements.forEach(element => {\n\t\t\t\tswitch (element.type) {\n\t\t\t\t\tcase 'accept':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Accept,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'asset':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Asset,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'close':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Close,\n\t\t\t\t\t\t\t\tprops: { label: element.label }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Link,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'qr':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Qr,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'countdown':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Countdown,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'textarea':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Textarea,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'button':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcomponents.push({\n\t\t\t\t\t\t\t\tcomponent: Button,\n\t\t\t\t\t\t\t\tprops: { data: element.data }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthrow new Error(`Unknown element type: ${element.type}`);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn components;\n\t});\n\n\tcomponent_subscribe($$self, elements, value => $$invalidate(1, $elements = value));\n\tconst dispatch = createEventDispatcher();\n\tconst complete_handler = () => dispatch('complete');\n\tconst cancel_handler = () => dispatch('cancel');\n\treturn [$prompt, $elements, elements, dispatch, complete_handler, cancel_handler];\n}\n\nclass Prompt extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$c, create_fragment$c, safe_not_equal, {}, add_css$7);\n\t}\n}\n\nvar version = \"1.4.2\";\n\n/* src/ui/settings/About.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$6(target) {\n\tappend_styles(target, \"svelte-tj2pg7\", \"div.svelte-tj2pg7{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:var(--space-m)}svg.svelte-tj2pg7{height:auto;width:100%;max-width:200px}\");\n}\n\n// (30:4) {:else}\nfunction create_else_block$2(ctx) {\n\tlet svg;\n\tlet path0;\n\tlet path1;\n\tlet path2;\n\tlet path3;\n\tlet path4;\n\tlet path5;\n\tlet path6;\n\tlet path7;\n\tlet path8;\n\tlet path9;\n\tlet path10;\n\tlet path11;\n\n\treturn {\n\t\tc() {\n\t\t\tsvg = svg_element(\"svg\");\n\t\t\tpath0 = svg_element(\"path\");\n\t\t\tpath1 = svg_element(\"path\");\n\t\t\tpath2 = svg_element(\"path\");\n\t\t\tpath3 = svg_element(\"path\");\n\t\t\tpath4 = svg_element(\"path\");\n\t\t\tpath5 = svg_element(\"path\");\n\t\t\tpath6 = svg_element(\"path\");\n\t\t\tpath7 = svg_element(\"path\");\n\t\t\tpath8 = svg_element(\"path\");\n\t\t\tpath9 = svg_element(\"path\");\n\t\t\tpath10 = svg_element(\"path\");\n\t\t\tpath11 = svg_element(\"path\");\n\t\t\tattr(path0, \"d\", \"M273.403 84.085C273.403 83.4185 272.851 82.8783 272.171 82.8783H265.007C264.327 82.8783 263.775 83.4185 263.775 84.085V106.927C263.775 110.163 263.082 112.365 261.908 113.745C260.77 115.083 259.014 115.841 256.4 115.841C253.723 115.841 251.923 115.078 250.76 113.737C249.564 112.357 248.859 110.158 248.859 106.927V96.1519C248.859 95.4854 248.307 94.9452 247.627 94.9452H240.408C239.727 94.9452 239.175 95.4854 239.175 96.1519V106.927C239.175 110.16 238.474 112.36 237.286 113.74C236.131 115.08 234.345 115.841 231.689 115.841C229.131 115.841 227.36 115.114 226.172 113.816C225.018 112.514 224.315 110.304 224.315 106.927V84.085C224.315 83.4185 223.763 82.8783 223.082 82.8783H215.863C215.183 82.8783 214.631 83.4185 214.631 84.085V107.148C214.631 112.616 216.054 116.982 219.088 120.045C222.122 123.107 226.385 124.559 231.689 124.559C234.557 124.559 237.131 124.116 239.384 123.194L239.394 123.19C241.185 122.439 242.729 121.465 244.007 120.261C245.263 121.467 246.796 122.44 248.585 123.19L248.609 123.2C250.927 124.115 253.531 124.559 256.4 124.559C261.699 124.559 265.947 123.129 268.946 120.1C271.982 117.036 273.403 112.65 273.403 107.148V84.085Z\");\n\t\t\tattr(path0, \"fill\", \"#494E62\");\n\t\t\tattr(path1, \"d\", \"M326.457 84.085C326.457 83.4185 325.905 82.8783 325.224 82.8783H318.005C317.325 82.8783 316.773 83.4185 316.773 84.085V98.8619H299.136V84.085C299.136 83.4185 298.584 82.8783 297.904 82.8783H290.685C290.004 82.8783 289.452 83.4185 289.452 84.085V122.8C289.452 123.466 290.004 124.006 290.685 124.006H297.904C298.584 124.006 299.136 123.466 299.136 122.8V107.414H316.773V122.8C316.773 123.466 317.325 124.006 318.005 124.006H325.224C325.905 124.006 326.457 123.466 326.457 122.8V84.085Z\");\n\t\t\tattr(path1, \"fill\", \"#494E62\");\n\t\t\tattr(path2, \"fill-rule\", \"evenodd\");\n\t\t\tattr(path2, \"clip-rule\", \"evenodd\");\n\t\t\tattr(path2, \"d\", \"M378.176 124.006C378.857 124.006 379.408 123.466 379.408 122.8V101.341C379.408 97.4001 378.66 93.9713 377.103 91.1039C375.588 88.2098 373.417 86.0002 370.597 84.5155C367.796 83.0409 364.552 82.3252 360.906 82.3252C357.26 82.3252 354.016 83.0409 351.215 84.5155C348.395 86.0002 346.206 88.2088 344.655 91.1009L344.652 91.1063C343.133 93.9728 342.404 97.4004 342.404 101.341V122.8C342.404 123.466 342.955 124.006 343.636 124.006H350.744C351.425 124.006 351.977 123.466 351.977 122.8V114.051H369.724V122.8C369.724 123.466 370.276 124.006 370.957 124.006H378.176ZM367.395 93.4304L367.404 93.4391C368.88 94.9405 369.724 97.2793 369.724 100.677V105.609H351.977V100.677C351.977 97.2793 352.821 94.9405 354.297 93.4392L354.306 93.4303C355.798 91.882 357.923 91.0435 360.85 91.0435C363.778 91.0435 365.903 91.882 367.395 93.4304Z\");\n\t\t\tattr(path2, \"fill\", \"#494E62\");\n\t\t\tattr(path3, \"fill-rule\", \"evenodd\");\n\t\t\tattr(path3, \"clip-rule\", \"evenodd\");\n\t\t\tattr(path3, \"d\", \"M421.019 123.482C421.249 123.81 421.63 124.006 422.036 124.006H429.81C430.268 124.006 430.688 123.758 430.901 123.361C431.114 122.964 431.085 122.485 430.826 122.116L422.723 110.587C424.933 109.494 426.707 107.983 428.005 106.045C429.603 103.717 430.376 100.969 430.376 97.8563C430.376 94.8268 429.663 92.1432 428.187 89.8559C426.712 87.5705 424.59 85.837 421.877 84.6445C419.204 83.4531 416.099 82.8783 412.596 82.8783H396.603C395.923 82.8783 395.371 83.4185 395.371 84.085V122.8C395.371 123.466 395.923 124.006 396.603 124.006H403.822C404.503 124.006 405.055 123.466 405.055 122.8V112.724H412.596C412.917 112.724 413.212 112.72 413.475 112.711L421.019 123.482ZM418.638 93.0871C419.931 94.1409 420.637 95.6687 420.637 97.8563C420.637 100.039 419.933 101.592 418.631 102.686C417.309 103.76 415.252 104.393 412.263 104.393H405.055V91.3754H412.263C415.256 91.3754 417.315 92.0098 418.638 93.0871Z\");\n\t\t\tattr(path3, \"fill\", \"#494E62\");\n\t\t\tattr(path4, \"d\", \"M453.668 122.8V109.184H469.372C470.053 109.184 470.605 108.644 470.605 107.977V101.894C470.605 101.227 470.053 100.687 469.372 100.687H453.668V98.5753C453.668 95.9375 454.441 94.1359 455.807 92.9529C457.199 91.7469 459.374 91.0435 462.542 91.0435C465.829 91.0435 468.452 91.7903 470.494 93.201C470.805 93.416 471.2 93.478 471.565 93.3691C471.929 93.2601 472.221 92.9924 472.357 92.6438L474.634 86.7813C474.839 86.251 474.64 85.6517 474.155 85.3418C472.582 84.3375 470.769 83.5885 468.732 83.0814C466.697 82.5746 464.521 82.3252 462.209 82.3252C456.701 82.3252 452.209 83.729 448.887 86.6749C445.583 89.6004 443.984 93.6202 443.984 98.5753V122.8C443.984 123.466 444.536 124.006 445.217 124.006H452.436C453.116 124.006 453.668 123.466 453.668 122.8Z\");\n\t\t\tattr(path4, \"fill\", \"#494E62\");\n\t\t\tattr(path5, \"d\", \"M177.58 117.515C177.507 121.507 174.869 124.279 172.268 125.782L166.67 129.016C163.999 130.559 160.875 131.159 158.077 131.159C155.278 131.159 152.155 130.559 149.485 129.016L143.994 125.782V136.762C143.994 140.829 141.316 143.664 138.68 145.188L133.083 148.422C130.411 149.965 127.288 150.565 124.489 150.565C121.69 150.565 118.567 149.965 115.897 148.422L107.695 143.683L99.495 148.422C96.8235 149.965 93.7002 150.565 90.9014 150.565C88.1027 150.565 84.9808 149.965 82.3093 148.422L43.1243 125.782C40.523 124.279 37.8851 121.507 37.812 117.515L37.8105 117.269V131.648L37.812 131.895C37.8851 135.886 40.523 138.659 43.1243 140.161L82.3093 162.801C84.9808 164.344 88.1027 164.944 90.9014 164.944C93.7002 164.944 96.8235 164.344 99.495 162.801L107.695 158.063L115.897 162.801C118.567 164.344 121.69 164.944 124.489 164.944C127.288 164.944 130.411 164.344 133.083 162.801L138.68 159.567C141.316 158.044 143.994 155.209 143.994 151.142V140.161L149.485 143.396C152.155 144.939 155.278 145.538 158.077 145.538C160.875 145.538 163.999 144.939 166.67 143.396L172.268 140.161C174.869 138.659 177.507 135.886 177.58 131.895L177.58 117.515Z\");\n\t\t\tattr(path5, \"fill\", \"#F4FAF4\");\n\t\t\tattr(path6, \"d\", \"M37.8456 103.768C37.8224 103.982 37.8105 104.199 37.8105 104.419V117.268L37.812 117.515C37.8851 121.507 40.523 124.279 43.1243 125.782L82.3093 148.422C84.9808 149.964 88.1027 150.564 90.9014 150.564C93.7002 150.564 96.8235 149.964 99.495 148.422L107.695 143.683L115.897 148.422C118.567 149.964 121.69 150.564 124.489 150.564C127.288 150.564 130.411 149.964 133.083 148.422L138.68 145.187C141.316 143.664 143.994 140.829 143.994 136.762V125.782L149.484 129.016C152.155 130.559 155.278 131.159 158.077 131.159C160.875 131.159 163.999 130.559 166.67 129.016L172.268 125.782C174.869 124.279 177.507 121.507 177.58 117.515V103.136C177.506 107.127 174.869 109.899 172.268 111.402L166.67 114.636C163.999 116.179 160.875 116.779 158.077 116.779C155.278 116.779 152.155 116.179 149.484 114.636L143.887 111.402C143.797 111.35 143.707 111.296 143.617 111.241C143.86 112.035 143.997 112.892 143.997 113.813C143.997 114.082 143.985 114.346 143.962 114.604C143.983 114.807 143.994 115.012 143.994 115.219V122.382C143.994 126.449 141.316 129.284 138.68 130.808L133.083 134.042C130.411 135.585 127.288 136.184 124.489 136.184C121.69 136.184 118.567 135.585 115.897 134.042L107.695 129.303L99.495 134.042C96.8235 135.585 93.7002 136.184 90.9014 136.184C88.1027 136.184 84.9808 135.585 82.3093 134.042L43.1243 111.402C40.6627 109.98 38.1684 107.421 37.8456 103.768Z\");\n\t\t\tattr(path6, \"fill\", \"#B2F2E1\");\n\t\t\tattr(path7, \"d\", \"M105.024 64.9883C105.03 65.0464 105.036 65.1046 105.043 65.1627C105.324 67.5849 106.527 69.4925 108.024 70.9048C107.915 70.903 107.807 70.9021 107.699 70.9021C106.824 70.9021 105.918 70.9607 105.003 71.0884V65.4957C105.003 65.3248 105.01 65.1556 105.024 64.9883Z\");\n\t\t\tattr(path7, \"fill\", \"#B2F2E1\");\n\t\t\tattr(path8, \"d\", \"M48.7253 82.7478L43.1274 85.9821C40.6334 87.423 38.1038 90.037 37.837 93.7573C37.8195 93.932 37.8105 94.1145 37.8105 94.3053V102.889L37.812 103.135C37.8851 107.127 40.523 109.899 43.1243 111.402L82.3093 134.042C84.9808 135.585 88.1027 136.185 90.9014 136.185C93.7001 136.185 96.8235 135.585 99.495 134.042L107.695 129.304L115.897 134.042C118.567 135.585 121.69 136.185 124.489 136.185C127.288 136.185 130.411 135.585 133.083 134.042L138.68 130.808C141.316 129.284 143.994 126.45 143.994 122.382V115.219C143.994 115.012 143.983 114.807 143.962 114.605C143.985 114.346 143.997 114.082 143.997 113.813C143.997 112.892 143.86 112.035 143.617 111.241C143.707 111.296 143.797 111.35 143.887 111.402L149.484 114.636C152.155 116.179 155.278 116.779 158.077 116.779C160.875 116.779 163.999 116.179 166.67 114.636L172.268 111.402C174.869 109.899 177.507 107.127 177.58 103.135V94.6923C177.583 94.5981 177.584 94.5031 177.584 94.4075C177.584 94.3119 177.583 94.217 177.58 94.1228L177.581 75.2371C177.583 75.1592 177.584 75.0808 177.584 75.0019C177.584 70.9348 174.908 68.0999 172.271 66.5765L133.085 43.9366C130.415 42.3936 127.292 41.7939 124.493 41.7939C121.694 41.7939 118.571 42.3936 115.9 43.9366L110.303 47.1708C107.666 48.6943 104.989 51.5291 104.989 55.5963C104.989 55.788 104.995 55.9769 105.006 56.1631C105.004 56.2285 105.003 56.2944 105.003 56.3609V63.611C104.984 63.8988 104.981 64.1871 104.992 64.4752C104.999 64.7047 105.016 64.9341 105.043 65.163C105.324 67.5851 106.527 69.4928 108.024 70.9051C107.915 70.9033 107.807 70.9024 107.699 70.9024C104.9 70.9024 101.777 71.5021 99.1067 73.045L93.5087 76.2793C90.8719 77.8027 88.1951 80.6376 88.1951 84.7047C88.1951 84.9692 88.2065 85.2285 88.2284 85.4826C88.2236 85.5807 88.2212 85.6793 88.2212 85.7785V92.5656L88.2109 92.7314L88.2007 92.9128C88.1934 93.0894 88.1919 93.2661 88.1948 93.4428C88.2007 93.8112 88.2314 94.1794 88.2855 94.5454C88.3525 94.997 88.4513 95.4299 88.5777 95.8443L65.9101 82.7478C63.2396 81.2049 60.1164 80.6052 57.3177 80.6052C54.519 80.6052 51.3958 81.2049 48.7253 82.7478Z\");\n\t\t\tattr(path8, \"fill\", \"#7BE7CE\");\n\t\t\tattr(path9, \"d\", \"M130.088 49.1268C126.997 47.3406 121.984 47.3405 118.893 49.1268L113.295 52.3611C110.203 54.1473 110.203 57.0434 113.295 58.8296L151.801 81.0771C153.286 81.9349 154.12 83.0983 154.12 84.3114V85.0962C154.12 86.3092 153.286 87.4726 151.801 88.3304L146.882 91.1723C143.791 92.9586 143.791 95.8546 146.882 97.6409L152.48 100.875C155.572 102.661 160.584 102.661 163.676 100.875L169.274 97.6409C172.366 95.8546 172.366 92.9586 169.274 91.1723L164.355 88.3304C162.87 87.4726 162.036 86.3092 162.036 85.0962V84.3114C162.036 83.0983 162.87 81.9349 164.355 81.0771L169.274 78.2352C172.366 76.449 172.366 73.5529 169.274 71.7667L130.088 49.1268Z\");\n\t\t\tattr(path9, \"fill\", \"#494E62\");\n\t\t\tattr(path10, \"d\", \"M62.9133 87.938C59.8216 86.1518 54.8091 86.1518 51.7174 87.938L46.1195 91.1723C43.0279 92.9585 43.0279 95.8546 46.1195 97.6408L85.305 120.281C88.3967 122.067 93.4092 122.067 96.5009 120.281L107.697 113.812L62.9133 87.938Z\");\n\t\t\tattr(path10, \"fill\", \"#494E62\");\n\t\t\tattr(path11, \"d\", \"M128.449 104.502C128.449 105.715 129.283 106.878 130.768 107.736L135.686 110.578C138.778 112.364 138.778 115.26 135.686 117.046L130.088 120.281C126.997 122.067 121.984 122.067 118.893 120.281L107.697 113.812L118.213 107.736C119.698 106.878 120.532 105.715 120.532 104.502L120.532 103.717C120.532 102.504 119.698 101.341 118.213 100.483L96.5009 87.938C93.4092 86.1518 93.4092 83.2557 96.5009 81.4695L102.099 78.2352C105.19 76.449 110.203 76.449 113.295 78.2352L135.686 91.1723C138.778 92.9585 138.778 95.8546 135.686 97.6409L130.768 100.483C129.283 101.341 128.449 102.504 128.449 103.717L128.449 104.502Z\");\n\t\t\tattr(path11, \"fill\", \"#494E62\");\n\t\t\tattr(svg, \"width\", \"512\");\n\t\t\tattr(svg, \"height\", \"206\");\n\t\t\tattr(svg, \"viewBox\", \"0 0 512 206\");\n\t\t\tattr(svg, \"fill\", \"none\");\n\t\t\tattr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\t\tattr(svg, \"class\", \"svelte-tj2pg7\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, svg, anchor);\n\t\t\tappend(svg, path0);\n\t\t\tappend(svg, path1);\n\t\t\tappend(svg, path2);\n\t\t\tappend(svg, path3);\n\t\t\tappend(svg, path4);\n\t\t\tappend(svg, path5);\n\t\t\tappend(svg, path6);\n\t\t\tappend(svg, path7);\n\t\t\tappend(svg, path8);\n\t\t\tappend(svg, path9);\n\t\t\tappend(svg, path10);\n\t\t\tappend(svg, path11);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(svg);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (13:4) {#if theme === 'dark'}\nfunction create_if_block$6(ctx) {\n\tlet svg;\n\tlet path0;\n\tlet path1;\n\tlet path2;\n\tlet path3;\n\tlet path4;\n\tlet path5;\n\tlet path6;\n\tlet path7;\n\tlet path8;\n\tlet path9;\n\tlet path10;\n\tlet path11;\n\n\treturn {\n\t\tc() {\n\t\t\tsvg = svg_element(\"svg\");\n\t\t\tpath0 = svg_element(\"path\");\n\t\t\tpath1 = svg_element(\"path\");\n\t\t\tpath2 = svg_element(\"path\");\n\t\t\tpath3 = svg_element(\"path\");\n\t\t\tpath4 = svg_element(\"path\");\n\t\t\tpath5 = svg_element(\"path\");\n\t\t\tpath6 = svg_element(\"path\");\n\t\t\tpath7 = svg_element(\"path\");\n\t\t\tpath8 = svg_element(\"path\");\n\t\t\tpath9 = svg_element(\"path\");\n\t\t\tpath10 = svg_element(\"path\");\n\t\t\tpath11 = svg_element(\"path\");\n\t\t\tattr(path0, \"d\", \"M273.61 84.1001C273.61 83.4342 273.058 82.8944 272.378 82.8944H265.214C264.534 82.8944 263.982 83.4342 263.982 84.1001V106.924C263.982 110.157 263.289 112.358 262.115 113.737C260.978 115.074 259.221 115.831 256.607 115.831C253.93 115.831 252.13 115.069 250.967 113.728C249.771 112.35 249.066 110.153 249.066 106.924V96.1574C249.066 95.4915 248.514 94.9517 247.834 94.9517H240.615C239.934 94.9517 239.382 95.4915 239.382 96.1574V106.924C239.382 110.154 238.681 112.352 237.493 113.731C236.338 115.07 234.552 115.831 231.897 115.831C229.338 115.831 227.567 115.104 226.379 113.807C225.225 112.507 224.522 110.299 224.522 106.924V84.1001C224.522 83.4342 223.97 82.8944 223.289 82.8944H216.071C215.39 82.8944 214.838 83.4342 214.838 84.1001V107.145C214.838 112.609 216.261 116.971 219.295 120.031C222.329 123.091 226.593 124.542 231.897 124.542C234.764 124.542 237.338 124.099 239.591 123.178L239.601 123.174C241.392 122.423 242.936 121.451 244.214 120.248C245.47 121.452 247.003 122.424 248.792 123.174L248.816 123.184C251.134 124.098 253.738 124.542 256.607 124.542C261.906 124.542 266.154 123.113 269.153 120.086C272.189 117.025 273.61 112.643 273.61 107.145V84.1001Z\");\n\t\t\tattr(path0, \"fill\", \"white\");\n\t\t\tattr(path1, \"d\", \"M326.664 84.1001C326.664 83.4342 326.112 82.8944 325.431 82.8944H318.212C317.532 82.8944 316.98 83.4342 316.98 84.1001V98.8652H299.343V84.1001C299.343 83.4342 298.791 82.8944 298.111 82.8944H290.892C290.211 82.8944 289.659 83.4342 289.659 84.1001V122.784C289.659 123.45 290.211 123.99 290.892 123.99H298.111C298.791 123.99 299.343 123.45 299.343 122.784V107.411H316.98V122.784C316.98 123.45 317.532 123.99 318.212 123.99H325.431C326.112 123.99 326.664 123.45 326.664 122.784V84.1001Z\");\n\t\t\tattr(path1, \"fill\", \"white\");\n\t\t\tattr(path2, \"fill-rule\", \"evenodd\");\n\t\t\tattr(path2, \"clip-rule\", \"evenodd\");\n\t\t\tattr(path2, \"d\", \"M378.383 123.99C379.064 123.99 379.615 123.45 379.615 122.784V101.342C379.615 97.4046 378.867 93.9786 377.31 91.1134C375.795 88.2217 373.624 86.0139 370.804 84.5303C368.003 83.0569 364.759 82.3418 361.113 82.3418C357.467 82.3418 354.223 83.0569 351.422 84.5303C348.602 86.0138 346.413 88.2207 344.862 91.1105L344.859 91.1159C343.34 93.9801 342.611 97.4049 342.611 101.342V122.784C342.611 123.45 343.162 123.99 343.843 123.99H350.951C351.632 123.99 352.184 123.45 352.184 122.784V114.042H369.931V122.784C369.931 123.45 370.483 123.99 371.164 123.99H378.383ZM367.602 93.4381L367.611 93.4468C369.087 94.947 369.931 97.284 369.931 100.679V105.607H352.184V100.679C352.184 97.284 353.028 94.947 354.504 93.4469L354.513 93.438C356.005 91.891 358.13 91.0532 361.057 91.0532C363.985 91.0532 366.11 91.891 367.602 93.4381Z\");\n\t\t\tattr(path2, \"fill\", \"white\");\n\t\t\tattr(path3, \"fill-rule\", \"evenodd\");\n\t\t\tattr(path3, \"clip-rule\", \"evenodd\");\n\t\t\tattr(path3, \"d\", \"M421.226 123.466C421.456 123.794 421.837 123.99 422.243 123.99H430.017C430.475 123.99 430.895 123.741 431.108 123.345C431.321 122.949 431.292 122.469 431.033 122.1L422.93 110.581C425.14 109.488 426.914 107.979 428.212 106.043C429.81 103.717 430.583 100.971 430.583 97.8605C430.583 94.8334 429.87 92.152 428.394 89.8665C426.919 87.5829 424.797 85.8508 422.084 84.6593C419.411 83.4688 416.306 82.8944 412.803 82.8944H396.81C396.13 82.8944 395.578 83.4342 395.578 84.1001V122.784C395.578 123.45 396.13 123.99 396.81 123.99H404.029C404.71 123.99 405.262 123.45 405.262 122.784V112.716H412.803C413.124 112.716 413.419 112.712 413.682 112.703L421.226 123.466ZM418.845 93.0951C420.138 94.1481 420.844 95.6746 420.844 97.8605C420.844 100.042 420.14 101.594 418.838 102.686C417.516 103.76 415.459 104.391 412.47 104.391H405.262V91.3847H412.47C415.463 91.3847 417.522 92.0186 418.845 93.0951Z\");\n\t\t\tattr(path3, \"fill\", \"white\");\n\t\t\tattr(path4, \"d\", \"M453.875 122.784V109.179H469.579C470.26 109.179 470.812 108.639 470.812 107.973V101.895C470.812 101.229 470.26 100.689 469.579 100.689H453.875V98.5789C453.875 95.9432 454.648 94.1431 456.014 92.961C457.406 91.7559 459.581 91.0532 462.749 91.0532C466.036 91.0532 468.659 91.7993 470.701 93.2089C471.012 93.4237 471.408 93.4857 471.772 93.3768C472.136 93.268 472.428 93.0005 472.564 92.6522L474.841 86.7944C475.046 86.2644 474.847 85.6657 474.362 85.356C472.789 84.3525 470.976 83.6041 468.939 83.0974C466.904 82.5911 464.728 82.3418 462.416 82.3418C456.908 82.3418 452.417 83.7445 449.094 86.688C445.79 89.6112 444.191 93.6277 444.191 98.5789V122.784C444.191 123.45 444.743 123.99 445.424 123.99H452.643C453.323 123.99 453.875 123.45 453.875 122.784Z\");\n\t\t\tattr(path4, \"fill\", \"white\");\n\t\t\tattr(path5, \"d\", \"M177.787 117.503C177.714 121.492 175.076 124.262 172.475 125.763L166.877 128.995C164.206 130.537 161.082 131.136 158.284 131.136C155.485 131.136 152.362 130.537 149.692 128.995L144.201 125.763V136.735C144.201 140.799 141.523 143.631 138.887 145.154L133.29 148.385C130.618 149.927 127.495 150.526 124.696 150.526C121.897 150.526 118.774 149.927 116.104 148.385L107.902 143.651L99.702 148.385C97.0305 149.927 93.9072 150.526 91.1085 150.526C88.3098 150.526 85.1879 149.927 82.5164 148.385L43.3313 125.763C40.73 124.262 38.0922 121.492 38.019 117.503L38.0176 117.257V131.625L38.019 131.871C38.0922 135.86 40.73 138.63 43.3313 140.131L82.5164 162.753C85.1879 164.295 88.3098 164.894 91.1085 164.894C93.9072 164.894 97.0305 164.295 99.702 162.753L107.902 158.018L116.104 162.753C118.774 164.295 121.897 164.894 124.696 164.894C127.495 164.894 130.618 164.295 133.29 162.753L138.887 159.521C141.523 157.999 144.201 155.167 144.201 151.103V140.131L149.692 143.363C152.362 144.905 155.485 145.504 158.284 145.504C161.082 145.504 164.206 144.905 166.877 143.363L172.475 140.131C175.076 138.63 177.714 135.86 177.787 131.871L177.787 117.503Z\");\n\t\t\tattr(path5, \"fill\", \"#7BE7CE\");\n\t\t\tattr(path6, \"d\", \"M38.0526 103.767C38.0295 103.981 38.0176 104.198 38.0176 104.418V117.257L38.019 117.503C38.0922 121.492 40.73 124.262 43.3313 125.763L82.5164 148.385C85.1879 149.927 88.3097 150.526 91.1085 150.526C93.9072 150.526 97.0305 149.927 99.702 148.385L107.902 143.65L116.104 148.385C118.774 149.927 121.897 150.526 124.696 150.526C127.495 150.526 130.618 149.927 133.29 148.385L138.887 145.153C141.523 143.631 144.201 140.799 144.201 136.735V125.763L149.692 128.995C152.362 130.537 155.485 131.136 158.284 131.136C161.082 131.136 164.206 130.537 166.877 128.995L172.475 125.763C175.076 124.262 177.714 121.492 177.787 117.503V103.136C177.714 107.124 175.076 109.893 172.475 111.395L166.877 114.627C164.206 116.168 161.082 116.768 158.284 116.768C155.485 116.768 152.362 116.168 149.692 114.627L144.094 111.395C144.004 111.343 143.914 111.289 143.824 111.234C144.067 112.027 144.204 112.884 144.204 113.804C144.204 114.073 144.192 114.337 144.169 114.595C144.19 114.797 144.201 115.002 144.201 115.209V122.366C144.201 126.43 141.523 129.263 138.887 130.785L133.29 134.017C130.618 135.558 127.495 136.158 124.696 136.158C121.897 136.158 118.774 135.558 116.104 134.017L107.902 129.282L99.702 134.017C97.0305 135.558 93.9072 136.158 91.1085 136.158C88.3097 136.158 85.1879 135.558 82.5164 134.017L43.3313 111.395C40.8698 109.974 38.3755 107.417 38.0526 103.767Z\");\n\t\t\tattr(path6, \"fill\", \"#B2F2E1\");\n\t\t\tattr(path7, \"d\", \"M105.231 65.0186C105.237 65.0767 105.243 65.1348 105.25 65.1928C105.531 67.6131 106.734 69.5192 108.231 70.9303C108.122 70.9285 108.014 70.9276 107.906 70.9276C107.031 70.9276 106.125 70.9862 105.21 71.1138V65.5255C105.21 65.3548 105.217 65.1857 105.231 65.0186Z\");\n\t\t\tattr(path7, \"fill\", \"#B2F2E1\");\n\t\t\tattr(path8, \"d\", \"M48.9324 82.7639L43.3344 85.9955C40.8405 87.4353 38.3108 90.0472 38.044 93.7645C38.0265 93.939 38.0176 94.1214 38.0176 94.312V102.889L38.019 103.135C38.0922 107.124 40.73 109.894 43.3313 111.395L82.5164 134.017C85.1879 135.559 88.3097 136.158 91.1085 136.158C93.9072 136.158 97.0305 135.559 99.702 134.017L107.902 129.282L116.104 134.017C118.774 135.559 121.897 136.158 124.696 136.158C127.495 136.158 130.618 135.559 133.29 134.017L138.887 130.785C141.523 129.263 144.201 126.431 144.201 122.367V115.209C144.201 115.003 144.19 114.798 144.169 114.595C144.192 114.337 144.204 114.073 144.204 113.804C144.204 112.884 144.067 112.027 143.824 111.235C143.914 111.29 144.004 111.343 144.094 111.395L149.692 114.627C152.362 116.169 155.485 116.768 158.284 116.768C161.082 116.768 164.206 116.169 166.877 114.627L172.475 111.395C175.076 109.894 177.714 107.124 177.787 103.135V94.6988C177.79 94.6046 177.791 94.5098 177.791 94.4142C177.791 94.3187 177.79 94.2239 177.787 94.1297L177.788 75.2591C177.79 75.1813 177.791 75.103 177.791 75.0242C177.791 70.9603 175.115 68.1277 172.478 66.6055L133.292 43.9837C130.622 42.442 127.499 41.8428 124.7 41.8428C121.901 41.8428 118.778 42.442 116.107 43.9837L110.51 47.2154C107.873 48.7376 105.196 51.5702 105.196 55.6341C105.196 55.8256 105.202 56.0144 105.214 56.2005C105.211 56.2658 105.21 56.3317 105.21 56.3981V63.6424C105.191 63.9299 105.188 64.218 105.199 64.5058C105.206 64.7352 105.223 64.9644 105.25 65.1931C105.531 67.6133 106.734 69.5194 108.231 70.9306C108.122 70.9288 108.014 70.9279 107.906 70.9279C105.107 70.9279 101.984 71.5271 99.3137 73.0688L93.7158 76.3005C91.0789 77.8227 88.4022 80.6553 88.4022 84.7192C88.4022 84.9835 88.4135 85.2426 88.4354 85.4964C88.4306 85.5945 88.4282 85.693 88.4282 85.7922V92.5738L88.4179 92.7394L88.4077 92.9207C88.4004 93.0971 88.3989 93.2737 88.4019 93.4503C88.4077 93.8184 88.4384 94.1863 88.4925 94.552C88.5595 95.0033 88.6583 95.4358 88.7848 95.8499L66.1171 82.7639C63.4466 81.2222 60.3234 80.623 57.5247 80.623C54.726 80.623 51.6029 81.2222 48.9324 82.7639Z\");\n\t\t\tattr(path8, \"fill\", \"#F4FAF4\");\n\t\t\tattr(path9, \"d\", \"M130.295 49.1697C127.204 47.3849 122.191 47.3849 119.1 49.1697L113.502 52.4013C110.41 54.1862 110.41 57.0799 113.502 58.8647L152.008 81.0944C153.493 81.9515 154.327 83.114 154.327 84.3261V85.1102C154.327 86.3223 153.493 87.4848 152.008 88.3419L147.089 91.1815C143.998 92.9663 143.998 95.8601 147.089 97.6449L152.687 100.877C155.779 102.661 160.791 102.661 163.883 100.877L169.481 97.6449C172.573 95.8601 172.573 92.9663 169.481 91.1815L164.562 88.3419C163.077 87.4848 162.243 86.3224 162.243 85.1102V84.3261C162.243 83.114 163.077 81.9515 164.562 81.0944L169.481 78.2548C172.573 76.47 172.573 73.5762 169.481 71.7914L130.295 49.1697Z\");\n\t\t\tattr(path9, \"fill\", \"#494E62\");\n\t\t\tattr(path10, \"d\", \"M63.1203 87.9498C60.0287 86.165 55.0161 86.165 51.9245 87.9498L46.3265 91.1815C43.2349 92.9663 43.2349 95.8601 46.3265 97.6449L85.512 120.267C88.6037 122.051 93.6162 122.051 96.7079 120.267L107.904 113.803L63.1203 87.9498Z\");\n\t\t\tattr(path10, \"fill\", \"#494E62\");\n\t\t\tattr(path11, \"d\", \"M128.656 104.5C128.656 105.712 129.49 106.875 130.975 107.732L135.893 110.572C138.985 112.356 138.985 115.25 135.893 117.035L130.295 120.267C127.204 122.051 122.191 122.051 119.1 120.267L107.904 113.803L118.42 107.732C119.905 106.875 120.739 105.712 120.739 104.5L120.739 103.716C120.739 102.504 119.905 101.342 118.42 100.485L96.7079 87.9498C93.6162 86.165 93.6162 83.2713 96.7079 81.4865L102.306 78.2548C105.397 76.47 110.41 76.47 113.502 78.2548L135.893 91.1815C138.985 92.9663 138.985 95.8601 135.893 97.6449L130.975 100.485C129.49 101.342 128.656 102.504 128.656 103.716L128.656 104.5Z\");\n\t\t\tattr(path11, \"fill\", \"#494E62\");\n\t\t\tattr(svg, \"width\", \"513\");\n\t\t\tattr(svg, \"height\", \"206\");\n\t\t\tattr(svg, \"viewBox\", \"0 0 513 206\");\n\t\t\tattr(svg, \"fill\", \"none\");\n\t\t\tattr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\t\tattr(svg, \"class\", \"svelte-tj2pg7\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, svg, anchor);\n\t\t\tappend(svg, path0);\n\t\t\tappend(svg, path1);\n\t\t\tappend(svg, path2);\n\t\t\tappend(svg, path3);\n\t\t\tappend(svg, path4);\n\t\t\tappend(svg, path5);\n\t\t\tappend(svg, path6);\n\t\t\tappend(svg, path7);\n\t\t\tappend(svg, path8);\n\t\t\tappend(svg, path9);\n\t\t\tappend(svg, path10);\n\t\t\tappend(svg, path11);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(svg);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (48:4) <BodyTitle>\nfunction create_default_slot_1$4(ctx) {\n\tlet t_1_value = /*$t*/ ctx[1]('settings.about.version', { version }) + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tt_1 = text(t_1_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t_1, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 2 && t_1_value !== (t_1_value = /*$t*/ ctx[1]('settings.about.version', { version }) + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (49:4) <BodyText>\nfunction create_default_slot$5(ctx) {\n\tlet t_1_value = /*$t*/ ctx[1]('settings.about.author') + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tt_1 = text(t_1_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t_1, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 2 && t_1_value !== (t_1_value = /*$t*/ ctx[1]('settings.about.author') + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t_1);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_fragment$b(ctx) {\n\tlet div;\n\tlet t0;\n\tlet bodytitle;\n\tlet t1;\n\tlet bodytext;\n\tlet t2;\n\tlet link;\n\tlet current;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*theme*/ ctx[0] === 'dark') return create_if_block$6;\n\t\treturn create_else_block$2;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block = current_block_type(ctx);\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$4] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tbodytext = new BodyText({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$5] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tlink = new Link({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tbutton: true,\n\t\t\t\t\tvariant: 'primary',\n\t\t\t\t\tlabel: /*$t*/ ctx[1]('settings.about.link'),\n\t\t\t\t\thref: 'https://wharfkit.com',\n\t\t\t\t\ttarget: '_blank'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif_block.c();\n\t\t\tt0 = space();\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(bodytext.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(link.$$.fragment);\n\t\t\tattr(div, \"class\", \"svelte-tj2pg7\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tif_block.m(div, null);\n\t\t\tappend(div, t0);\n\t\t\tmount_component(bodytitle, div, null);\n\t\t\tappend(div, t1);\n\t\t\tmount_component(bodytext, div, null);\n\t\t\tappend(div, t2);\n\t\t\tmount_component(link, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (current_block_type !== (current_block_type = select_block_type(ctx))) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div, t0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $t*/ 10) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst bodytext_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $t*/ 10) {\n\t\t\t\tbodytext_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytext.$set(bodytext_changes);\n\t\t\tconst link_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 2) link_changes.data = {\n\t\t\t\tbutton: true,\n\t\t\t\tvariant: 'primary',\n\t\t\t\tlabel: /*$t*/ ctx[1]('settings.about.link'),\n\t\t\t\thref: 'https://wharfkit.com',\n\t\t\t\ttarget: '_blank'\n\t\t\t};\n\n\t\t\tlink.$set(link_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(bodytext.$$.fragment, local);\n\t\t\ttransition_in(link.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(bodytext.$$.fragment, local);\n\t\t\ttransition_out(link.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif_block.d();\n\t\t\tdestroy_component(bodytitle);\n\t\t\tdestroy_component(bodytext);\n\t\t\tdestroy_component(link);\n\t\t}\n\t};\n}\n\nfunction instance$b($$self, $$props, $$invalidate) {\n\tlet theme;\n\tlet $t;\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(1, $t = value));\n\t$$invalidate(0, { theme } = get_store_value(settings$5), theme);\n\treturn [theme, $t, t];\n}\n\nclass About extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$b, create_fragment$b, safe_not_equal, {}, add_css$6);\n\t}\n}\n\nvar en$1 = \"English\";\nvar ko$1 = \"한국어\";\nvar zh = \"中文\";\nvar tr$1 = \"Türkçe\";\nvar lang = {\n\ten: en$1,\n\tko: ko$1,\n\tzh: zh,\n\t\"zh-Hans\": \"中文简体\",\n\t\"zh-Hant\": \"中文繁体\",\n\ttr: tr$1\n};\n\n/* src/ui/components/ListOption.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$5(target) {\n\tappend_styles(target, \"svelte-yv3ifw\", \"label.svelte-yv3ifw{flex:1;height:100%;display:flex;align-items:center;justify-content:space-between;cursor:pointer;padding-inline:var(--space-s)}\");\n}\n\n// (17:8) {#if checked}\nfunction create_if_block$5(ctx) {\n\tlet div;\n\tlet icon;\n\tlet current;\n\ticon = new Icon({ props: { name: 'check' } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(icon.$$.fragment);\n\t\t\tattr(div, \"class\", \"trailing\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(icon, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_component(icon);\n\t\t}\n\t};\n}\n\n// (12:10)          \nfunction fallback_block$1(ctx) {\n\tlet input;\n\tlet t0;\n\tlet t1;\n\tlet t2;\n\tlet if_block_anchor;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block = /*checked*/ ctx[2] && create_if_block$5();\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tt0 = space();\n\t\t\tt1 = text(/*label*/ ctx[6]);\n\t\t\tt2 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t\tattr(input, \"type\", \"radio\");\n\t\t\tattr(input, \"name\", /*name*/ ctx[0]);\n\t\t\tinput.value = /*value*/ ctx[1];\n\t\t\tinput.checked = /*checked*/ ctx[2];\n\t\t\tinput.hidden = /*hidden*/ ctx[5];\n\t\t\tattr(input, \"group\", /*group*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(input, \"change\", function () {\n\t\t\t\t\tif (is_function(/*onChange*/ ctx[4])) /*onChange*/ ctx[4].apply(this, arguments);\n\t\t\t\t});\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (!current || dirty & /*name*/ 1) {\n\t\t\t\tattr(input, \"name\", /*name*/ ctx[0]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*value*/ 2) {\n\t\t\t\tinput.value = /*value*/ ctx[1];\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*checked*/ 4) {\n\t\t\t\tinput.checked = /*checked*/ ctx[2];\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*hidden*/ 32) {\n\t\t\t\tinput.hidden = /*hidden*/ ctx[5];\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*group*/ 8) {\n\t\t\t\tattr(input, \"group\", /*group*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*label*/ 64) set_data(t1, /*label*/ ctx[6]);\n\n\t\t\tif (/*checked*/ ctx[2]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif (dirty & /*checked*/ 4) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$5();\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(input);\n\t\t\t\tdetach(t0);\n\t\t\t\tdetach(t1);\n\t\t\t\tdetach(t2);\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$a(ctx) {\n\tlet label_1;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[8].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[7], null);\n\tconst default_slot_or_fallback = default_slot || fallback_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tlabel_1 = element(\"label\");\n\t\t\tif (default_slot_or_fallback) default_slot_or_fallback.c();\n\t\t\tattr(label_1, \"class\", \"svelte-yv3ifw\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, label_1, anchor);\n\n\t\t\tif (default_slot_or_fallback) {\n\t\t\t\tdefault_slot_or_fallback.m(label_1, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 128)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[7],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[7])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[7], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (default_slot_or_fallback && default_slot_or_fallback.p && (!current || dirty & /*checked, label, name, value, hidden, group, onChange*/ 127)) {\n\t\t\t\t\tdefault_slot_or_fallback.p(ctx, !current ? -1 : dirty);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot_or_fallback, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot_or_fallback, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(label_1);\n\t\t\t}\n\n\t\t\tif (default_slot_or_fallback) default_slot_or_fallback.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$a($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { name } = $$props;\n\tlet { value } = $$props;\n\tlet { checked } = $$props;\n\tlet { group } = $$props;\n\tlet { onChange } = $$props;\n\tlet { hidden } = $$props;\n\tlet { label } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t\tif ('checked' in $$props) $$invalidate(2, checked = $$props.checked);\n\t\tif ('group' in $$props) $$invalidate(3, group = $$props.group);\n\t\tif ('onChange' in $$props) $$invalidate(4, onChange = $$props.onChange);\n\t\tif ('hidden' in $$props) $$invalidate(5, hidden = $$props.hidden);\n\t\tif ('label' in $$props) $$invalidate(6, label = $$props.label);\n\t\tif ('$$scope' in $$props) $$invalidate(7, $$scope = $$props.$$scope);\n\t};\n\n\treturn [name, value, checked, group, onChange, hidden, label, $$scope, slots];\n}\n\nclass ListOption extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$a,\n\t\t\tcreate_fragment$a,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tname: 0,\n\t\t\t\tvalue: 1,\n\t\t\t\tchecked: 2,\n\t\t\t\tgroup: 3,\n\t\t\t\tonChange: 4,\n\t\t\t\thidden: 5,\n\t\t\t\tlabel: 6\n\t\t\t},\n\t\t\tadd_css$5\n\t\t);\n\t}\n}\n\n/* src/ui/settings/Selector.svelte generated by Svelte v4.2.0 */\n\nfunction get_each_context$1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[6] = list[i];\n\treturn child_ctx;\n}\n\n// (15:8) <ListItem>\nfunction create_default_slot_1$3(ctx) {\n\tlet listoption;\n\tlet updating_group;\n\tlet t;\n\tlet current;\n\n\tfunction func() {\n\t\treturn /*func*/ ctx[4](/*option*/ ctx[6]);\n\t}\n\n\tfunction listoption_group_binding(value) {\n\t\t/*listoption_group_binding*/ ctx[5](value);\n\t}\n\n\tlet listoption_props = {\n\t\tlabel: /*option*/ ctx[6].label,\n\t\tname: /*setting*/ ctx[0],\n\t\tvalue: /*option*/ ctx[6].value,\n\t\tchecked: /*$settings*/ ctx[3][/*setting*/ ctx[0]] === /*option*/ ctx[6].value,\n\t\tonChange: func,\n\t\thidden: true\n\t};\n\n\tif (/*$settings*/ ctx[3][/*setting*/ ctx[0]] !== void 0) {\n\t\tlistoption_props.group = /*$settings*/ ctx[3][/*setting*/ ctx[0]];\n\t}\n\n\tlistoption = new ListOption({ props: listoption_props });\n\tbinding_callbacks.push(() => bind(listoption, 'group', listoption_group_binding));\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listoption.$$.fragment);\n\t\t\tt = space();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listoption, target, anchor);\n\t\t\tinsert(target, t, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst listoption_changes = {};\n\t\t\tif (dirty & /*options*/ 2) listoption_changes.label = /*option*/ ctx[6].label;\n\t\t\tif (dirty & /*setting*/ 1) listoption_changes.name = /*setting*/ ctx[0];\n\t\t\tif (dirty & /*options*/ 2) listoption_changes.value = /*option*/ ctx[6].value;\n\t\t\tif (dirty & /*$settings, setting, options*/ 11) listoption_changes.checked = /*$settings*/ ctx[3][/*setting*/ ctx[0]] === /*option*/ ctx[6].value;\n\t\t\tif (dirty & /*onChange, options*/ 6) listoption_changes.onChange = func;\n\n\t\t\tif (!updating_group && dirty & /*$settings, setting*/ 9) {\n\t\t\t\tupdating_group = true;\n\t\t\t\tlistoption_changes.group = /*$settings*/ ctx[3][/*setting*/ ctx[0]];\n\t\t\t\tadd_flush_callback(() => updating_group = false);\n\t\t\t}\n\n\t\t\tlistoption.$set(listoption_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listoption.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listoption.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\n\t\t\tdestroy_component(listoption, detaching);\n\t\t}\n\t};\n}\n\n// (14:4) {#each options as option}\nfunction create_each_block$1(ctx) {\n\tlet listitem;\n\tlet current;\n\n\tlistitem = new ListItem({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$3] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listitem.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listitem, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst listitem_changes = {};\n\n\t\t\tif (dirty & /*$$scope, options, setting, $settings, onChange*/ 527) {\n\t\t\t\tlistitem_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlistitem.$set(listitem_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listitem.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listitem.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(listitem, detaching);\n\t\t}\n\t};\n}\n\n// (13:0) <List>\nfunction create_default_slot$4(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = ensure_array_like(/*options*/ ctx[1]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*options, setting, $settings, onChange*/ 15) {\n\t\t\t\teach_value = ensure_array_like(/*options*/ ctx[1]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$1(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$1(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(each_1_anchor);\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$9(ctx) {\n\tlet list;\n\tlet current;\n\n\tlist = new List({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$4] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(list.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(list, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst list_changes = {};\n\n\t\t\tif (dirty & /*$$scope, options, setting, $settings, onChange*/ 527) {\n\t\t\t\tlist_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlist.$set(list_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(list.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(list.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(list, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$9($$self, $$props, $$invalidate) {\n\tlet $settings;\n\tcomponent_subscribe($$self, settings$5, $$value => $$invalidate(3, $settings = $$value));\n\tlet { setting } = $$props;\n\tlet { options } = $$props;\n\n\tlet { onChange = value => {\n\t\tset_store_value(settings$5, $settings[setting] = value, $settings);\n\t} } = $$props;\n\n\tconst func = option => onChange(option.value);\n\n\tfunction listoption_group_binding(value) {\n\t\tif ($$self.$$.not_equal($settings[setting], value)) {\n\t\t\t$settings[setting] = value;\n\t\t\tsettings$5.set($settings);\n\t\t}\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('setting' in $$props) $$invalidate(0, setting = $$props.setting);\n\t\tif ('options' in $$props) $$invalidate(1, options = $$props.options);\n\t\tif ('onChange' in $$props) $$invalidate(2, onChange = $$props.onChange);\n\t};\n\n\treturn [setting, options, onChange, $settings, func, listoption_group_binding];\n}\n\nclass Selector extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$9, create_fragment$9, safe_not_equal, { setting: 0, options: 1, onChange: 2 });\n\t}\n}\n\n/* src/ui/Settings.svelte generated by Svelte v4.2.0 */\n\nfunction create_if_block_4$1(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[4],\n\t\t\t\t$$slots: { default: [create_default_slot_4] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 16) transition_changes.direction = /*$transitionDirection*/ ctx[4];\n\n\t\t\tif (dirty & /*$$scope, $t, $settings*/ 524353) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (79:12) <List>\nfunction create_default_slot_5(ctx) {\n\tlet listitem0;\n\tlet t0;\n\tlet listitem1;\n\tlet t1;\n\tlet listitem2;\n\tlet t2;\n\tlet listitem3;\n\tlet t3;\n\tlet listitem4;\n\tlet current;\n\n\tlistitem0 = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*$t*/ ctx[0](`settings.theme.title`),\n\t\t\t\tonClick: /*func*/ ctx[11],\n\t\t\t\tleadingIcon: \"theme\",\n\t\t\t\tvalue: /*$settings*/ ctx[6].theme\n\t\t\t\t? /*$t*/ ctx[0](`settings.theme.${/*$settings*/ ctx[6].theme}`)\n\t\t\t\t: /*$t*/ ctx[0]('settings.theme.automatic')\n\t\t\t}\n\t\t});\n\n\tlistitem1 = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*$t*/ ctx[0](`settings.language.title`),\n\t\t\t\tonClick: /*func_1*/ ctx[12],\n\t\t\t\tleadingIcon: \"globe\",\n\t\t\t\tvalue: lang[/*$settings*/ ctx[6].language]\n\t\t\t}\n\t\t});\n\n\tlistitem2 = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*$t*/ ctx[0](`settings.animations.title`),\n\t\t\t\tonClick: /*func_2*/ ctx[13],\n\t\t\t\tleadingIcon: \"waves\",\n\t\t\t\tvalue: /*$settings*/ ctx[6].animations\n\t\t\t\t? /*$t*/ ctx[0](`settings.animations.enabled`)\n\t\t\t\t: /*$t*/ ctx[0]('settings.animations.disabled')\n\t\t\t}\n\t\t});\n\n\tlistitem3 = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*$t*/ ctx[0]('settings.about.title'),\n\t\t\t\tonClick: /*func_3*/ ctx[14],\n\t\t\t\tleadingIcon: \"info\"\n\t\t\t}\n\t\t});\n\n\tlistitem4 = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*$t*/ ctx[0]('settings.github'),\n\t\t\t\tlink: \"https://www.github.com/wharfkit\",\n\t\t\t\tleadingIcon: \"github\",\n\t\t\t\ttrailingIcon: \"external-link\"\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listitem0.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(listitem1.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(listitem2.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(listitem3.$$.fragment);\n\t\t\tt3 = space();\n\t\t\tcreate_component(listitem4.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listitem0, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(listitem1, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(listitem2, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(listitem3, target, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t\tmount_component(listitem4, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst listitem0_changes = {};\n\t\t\tif (dirty & /*$t*/ 1) listitem0_changes.label = /*$t*/ ctx[0](`settings.theme.title`);\n\n\t\t\tif (dirty & /*$settings, $t*/ 65) listitem0_changes.value = /*$settings*/ ctx[6].theme\n\t\t\t? /*$t*/ ctx[0](`settings.theme.${/*$settings*/ ctx[6].theme}`)\n\t\t\t: /*$t*/ ctx[0]('settings.theme.automatic');\n\n\t\t\tlistitem0.$set(listitem0_changes);\n\t\t\tconst listitem1_changes = {};\n\t\t\tif (dirty & /*$t*/ 1) listitem1_changes.label = /*$t*/ ctx[0](`settings.language.title`);\n\t\t\tif (dirty & /*$settings*/ 64) listitem1_changes.value = lang[/*$settings*/ ctx[6].language];\n\t\t\tlistitem1.$set(listitem1_changes);\n\t\t\tconst listitem2_changes = {};\n\t\t\tif (dirty & /*$t*/ 1) listitem2_changes.label = /*$t*/ ctx[0](`settings.animations.title`);\n\n\t\t\tif (dirty & /*$settings, $t*/ 65) listitem2_changes.value = /*$settings*/ ctx[6].animations\n\t\t\t? /*$t*/ ctx[0](`settings.animations.enabled`)\n\t\t\t: /*$t*/ ctx[0]('settings.animations.disabled');\n\n\t\t\tlistitem2.$set(listitem2_changes);\n\t\t\tconst listitem3_changes = {};\n\t\t\tif (dirty & /*$t*/ 1) listitem3_changes.label = /*$t*/ ctx[0]('settings.about.title');\n\t\t\tlistitem3.$set(listitem3_changes);\n\t\t\tconst listitem4_changes = {};\n\t\t\tif (dirty & /*$t*/ 1) listitem4_changes.label = /*$t*/ ctx[0]('settings.github');\n\t\t\tlistitem4.$set(listitem4_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listitem0.$$.fragment, local);\n\t\t\ttransition_in(listitem1.$$.fragment, local);\n\t\t\ttransition_in(listitem2.$$.fragment, local);\n\t\t\ttransition_in(listitem3.$$.fragment, local);\n\t\t\ttransition_in(listitem4.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listitem0.$$.fragment, local);\n\t\t\ttransition_out(listitem1.$$.fragment, local);\n\t\t\ttransition_out(listitem2.$$.fragment, local);\n\t\t\ttransition_out(listitem3.$$.fragment, local);\n\t\t\ttransition_out(listitem4.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t0);\n\t\t\t\tdetach(t1);\n\t\t\t\tdetach(t2);\n\t\t\t\tdetach(t3);\n\t\t\t}\n\n\t\t\tdestroy_component(listitem0, detaching);\n\t\t\tdestroy_component(listitem1, detaching);\n\t\t\tdestroy_component(listitem2, detaching);\n\t\t\tdestroy_component(listitem3, detaching);\n\t\t\tdestroy_component(listitem4, detaching);\n\t\t}\n\t};\n}\n\n// (78:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_4(ctx) {\n\tlet list;\n\tlet current;\n\n\tlist = new List({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_5] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(list.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(list, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst list_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $t, $settings*/ 524353) {\n\t\t\t\tlist_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlist.$set(list_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(list.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(list.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(list, detaching);\n\t\t}\n\t};\n}\n\n// (132:52) \nfunction create_if_block_3$1(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[4],\n\t\t\t\t$$slots: { default: [create_default_slot_3] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 16) transition_changes.direction = /*$transitionDirection*/ ctx[4];\n\n\t\t\tif (dirty & /*$$scope, animationOptions*/ 524296) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (124:50) \nfunction create_if_block_2$3(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[4],\n\t\t\t\t$$slots: { default: [create_default_slot_2] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 16) transition_changes.direction = /*$transitionDirection*/ ctx[4];\n\n\t\t\tif (dirty & /*$$scope, languageOptions*/ 524292) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (120:47) \nfunction create_if_block_1$3(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[4],\n\t\t\t\t$$slots: { default: [create_default_slot_1$2] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 16) transition_changes.direction = /*$transitionDirection*/ ctx[4];\n\n\t\t\tif (dirty & /*$$scope, themeOptions*/ 524290) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (116:4) {#if $settingsRouter.path === 'about'}\nfunction create_if_block$4(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[4],\n\t\t\t\t$$slots: { default: [create_default_slot$3] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 16) transition_changes.direction = /*$transitionDirection*/ ctx[4];\n\n\t\t\tif (dirty & /*$$scope*/ 524288) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (133:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_3(ctx) {\n\tlet selector;\n\tlet current;\n\n\tselector = new Selector({\n\t\t\tprops: {\n\t\t\t\tsetting: \"animations\",\n\t\t\t\toptions: /*animationOptions*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(selector.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(selector, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst selector_changes = {};\n\t\t\tif (dirty & /*animationOptions*/ 8) selector_changes.options = /*animationOptions*/ ctx[3];\n\t\t\tselector.$set(selector_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(selector.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(selector.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(selector, detaching);\n\t\t}\n\t};\n}\n\n// (125:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_2(ctx) {\n\tlet selector;\n\tlet current;\n\n\tselector = new Selector({\n\t\t\tprops: {\n\t\t\t\tsetting: \"language\",\n\t\t\t\toptions: /*languageOptions*/ ctx[2],\n\t\t\t\tonChange: /*func_4*/ ctx[15]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(selector.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(selector, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst selector_changes = {};\n\t\t\tif (dirty & /*languageOptions*/ 4) selector_changes.options = /*languageOptions*/ ctx[2];\n\t\t\tselector.$set(selector_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(selector.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(selector.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(selector, detaching);\n\t\t}\n\t};\n}\n\n// (121:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_1$2(ctx) {\n\tlet selector;\n\tlet current;\n\n\tselector = new Selector({\n\t\t\tprops: {\n\t\t\t\tsetting: \"theme\",\n\t\t\t\toptions: /*themeOptions*/ ctx[1]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(selector.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(selector, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst selector_changes = {};\n\t\t\tif (dirty & /*themeOptions*/ 2) selector_changes.options = /*themeOptions*/ ctx[1];\n\t\t\tselector.$set(selector_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(selector.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(selector.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(selector, detaching);\n\t\t}\n\t};\n}\n\n// (117:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot$3(ctx) {\n\tlet about;\n\tlet current;\n\tabout = new About({});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(about.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(about, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(about.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(about.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(about, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$8(ctx) {\n\tlet div;\n\tlet t_1;\n\tlet current_block_type_index;\n\tlet if_block1;\n\tlet current;\n\tlet if_block0 = !/*$settingsRouter*/ ctx[5].path && create_if_block_4$1(ctx);\n\tconst if_block_creators = [create_if_block$4, create_if_block_1$3, create_if_block_2$3, create_if_block_3$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*$settingsRouter*/ ctx[5].path === 'about') return 0;\n\t\tif (/*$settingsRouter*/ ctx[5].path === 'theme') return 1;\n\t\tif (/*$settingsRouter*/ ctx[5].path === 'language') return 2;\n\t\tif (/*$settingsRouter*/ ctx[5].path === 'animations') return 3;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type(ctx))) {\n\t\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt_1 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tattr(div, \"class\", \"settings-menu\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tif (if_block0) if_block0.m(div, null);\n\t\t\tappend(div, t_1);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (!/*$settingsRouter*/ ctx[5].path) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*$settingsRouter*/ 32) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_4$1(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(div, t_1);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block1 = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block1) {\n\t\t\t\t\t\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block1.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(div, null);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tif (if_block0) if_block0.d();\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction instance$8($$self, $$props, $$invalidate) {\n\tlet animationOptions;\n\tlet languageOptions;\n\tlet themeOptions;\n\tlet $t;\n\tlet $props;\n\tlet $transitionDirection;\n\tlet $settingsRouter;\n\tlet $settings;\n\tcomponent_subscribe($$self, props, $$value => $$invalidate(16, $props = $$value));\n\tcomponent_subscribe($$self, transitionDirection, $$value => $$invalidate(4, $transitionDirection = $$value));\n\tcomponent_subscribe($$self, settings$5, $$value => $$invalidate(6, $settings = $$value));\n\tconst settingsRouter = initRouter();\n\tcomponent_subscribe($$self, settingsRouter, value => $$invalidate(5, $settingsRouter = value));\n\tconst { t, setLocale } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(0, $t = value));\n\n\tfunction closeSettings() {\n\t\tset_store_value(transitionDirection, $transitionDirection = 'ltr', $transitionDirection);\n\t\trouter.back();\n\t\tbackAction.set(undefined);\n\t}\n\n\tfunction navigateTo(path) {\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t\tsettingsRouter.push(path);\n\t\tset_store_value(props, $props.subtitle = $t(`settings.${path}.title`), $props);\n\n\t\tbackAction.set(() => {\n\t\t\tset_store_value(transitionDirection, $transitionDirection = 'ltr', $transitionDirection);\n\t\t\tsettingsRouter.back();\n\t\t\tbackAction.set(closeSettings);\n\t\t\tset_store_value(props, $props.subtitle = undefined, $props);\n\t\t});\n\t}\n\n\tonMount(() => {\n\t\tbackAction.set(closeSettings);\n\t\tset_store_value(props, $props.title = $t('settings.title'), $props);\n\t\tset_store_value(props, $props.subtitle = undefined, $props);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t});\n\n\tasync function changeLanguage(locale) {\n\t\tconst success = await setLocale(locale);\n\n\t\tif (success) {\n\t\t\tsettings$5.set({ ...get_store_value(settings$5), language: locale });\n\n\t\t\t// Update the header immediately\n\t\t\tset_store_value(props, $props.title = $t('settings.title'), $props);\n\n\t\t\tset_store_value(props, $props.subtitle = $t('settings.language.title'), $props);\n\t\t}\n\t}\n\n\tconst func = () => navigateTo('theme');\n\tconst func_1 = () => navigateTo('language');\n\tconst func_2 = () => navigateTo('animations');\n\tconst func_3 = () => navigateTo('about');\n\tconst func_4 = locale => changeLanguage(locale);\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*$t*/ 1) {\n\t\t\t$$invalidate(3, animationOptions = [\n\t\t\t\t{\n\t\t\t\t\tlabel: $t('settings.animations.enabled'),\n\t\t\t\t\tvalue: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $t('settings.animations.disabled'),\n\t\t\t\t\tvalue: false\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*$t*/ 1) {\n\t\t\t$$invalidate(1, themeOptions = [\n\t\t\t\t{\n\t\t\t\t\tlabel: $t('settings.theme.automatic'),\n\t\t\t\t\tvalue: undefined\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $t('settings.theme.light'),\n\t\t\t\t\tvalue: 'light'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $t('settings.theme.dark'),\n\t\t\t\t\tvalue: 'dark'\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\t};\n\n\t$$invalidate(2, languageOptions = Object.keys(lang).map(lang$1 => ({ label: lang[lang$1], value: lang$1 })));\n\n\treturn [\n\t\t$t,\n\t\tthemeOptions,\n\t\tlanguageOptions,\n\t\tanimationOptions,\n\t\t$transitionDirection,\n\t\t$settingsRouter,\n\t\t$settings,\n\t\tsettingsRouter,\n\t\tt,\n\t\tnavigateTo,\n\t\tchangeLanguage,\n\t\tfunc,\n\t\tfunc_1,\n\t\tfunc_2,\n\t\tfunc_3,\n\t\tfunc_4\n\t];\n}\n\nclass Settings extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$8, create_fragment$8, safe_not_equal, {});\n\t}\n}\n\n/* src/ui/Transact.svelte generated by Svelte v4.2.0 */\n\nfunction create_fragment$7(ctx) {\n\tlet countdown;\n\tlet current;\n\n\tcountdown = new Countdown({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tlabel: /*$t*/ ctx[0]('transact.processing', { default: 'Performing transaction...' })\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(countdown.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(countdown, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst countdown_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 1) countdown_changes.data = {\n\t\t\t\tlabel: /*$t*/ ctx[0]('transact.processing', { default: 'Performing transaction...' })\n\t\t\t};\n\n\t\t\tcountdown.$set(countdown_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(countdown.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(countdown.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(countdown, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$7($$self, $$props, $$invalidate) {\n\tlet $t;\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(0, $t = value));\n\tcreateEventDispatcher();\n\n\treturn [$t, t];\n}\n\nclass Transact extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$7, create_fragment$7, safe_not_equal, {});\n\t}\n}\n\n/* src/ui/createAccount/AccountPlugin.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$4(target) {\n\tappend_styles(target, \"svelte-1d8fcdl\", \"section.svelte-1d8fcdl{display:flex;flex-direction:column;gap:var(--space-s)}\");\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[4] = list[i];\n\treturn child_ctx;\n}\n\n// (11:0) {#if plugins}\nfunction create_if_block$3(ctx) {\n\tlet section;\n\tlet bodytitle;\n\tlet t;\n\tlet list;\n\tlet current;\n\n\tbodytitle = new BodyTitle({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot_1$1] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tlist = new List({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot$2] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tcreate_component(bodytitle.$$.fragment);\n\t\t\tt = space();\n\t\t\tcreate_component(list.$$.fragment);\n\t\t\tattr(section, \"class\", \"svelte-1d8fcdl\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tmount_component(bodytitle, section, null);\n\t\t\tappend(section, t);\n\t\t\tmount_component(list, section, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst bodytitle_changes = {};\n\n\t\t\tif (dirty & /*$$scope, title*/ 130) {\n\t\t\t\tbodytitle_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tbodytitle.$set(bodytitle_changes);\n\t\t\tconst list_changes = {};\n\n\t\t\tif (dirty & /*$$scope, plugins*/ 129) {\n\t\t\t\tlist_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tlist.$set(list_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(bodytitle.$$.fragment, local);\n\t\t\ttransition_in(list.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(bodytitle.$$.fragment, local);\n\t\t\ttransition_out(list.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(section);\n\t\t\t}\n\n\t\t\tdestroy_component(bodytitle);\n\t\t\tdestroy_component(list);\n\t\t}\n\t};\n}\n\n// (13:8) <BodyTitle>\nfunction create_default_slot_1$1(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(/*title*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 2) set_data(t, /*title*/ ctx[1]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (15:12) {#each plugins as plugin}\nfunction create_each_block(ctx) {\n\tlet listitem;\n\tlet current;\n\n\tfunction func() {\n\t\treturn /*func*/ ctx[3](/*plugin*/ ctx[4]);\n\t}\n\n\tlistitem = new ListItem({\n\t\t\tprops: {\n\t\t\t\tlabel: /*plugin*/ ctx[4].name,\n\t\t\t\tonClick: func,\n\t\t\t\tleadingIcon: \"wharf\",\n\t\t\t\tlogo: getThemedLogo(/*plugin*/ ctx[4].metadata)\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(listitem.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(listitem, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst listitem_changes = {};\n\t\t\tif (dirty & /*plugins*/ 1) listitem_changes.label = /*plugin*/ ctx[4].name;\n\t\t\tif (dirty & /*plugins*/ 1) listitem_changes.onClick = func;\n\t\t\tif (dirty & /*plugins*/ 1) listitem_changes.logo = getThemedLogo(/*plugin*/ ctx[4].metadata);\n\t\t\tlistitem.$set(listitem_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(listitem.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(listitem.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(listitem, detaching);\n\t\t}\n\t};\n}\n\n// (14:8) <List>\nfunction create_default_slot$2(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = ensure_array_like(/*plugins*/ ctx[0]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*plugins, dispatch*/ 5) {\n\t\t\t\teach_value = ensure_array_like(/*plugins*/ ctx[0]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(each_1_anchor);\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$6(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*plugins*/ ctx[0] && create_if_block$3(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*plugins*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*plugins*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$3(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$6($$self, $$props, $$invalidate) {\n\tlet { plugins } = $$props;\n\tlet { title } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tconst func = plugin => dispatch('select', plugin.id);\n\n\t$$self.$$set = $$props => {\n\t\tif ('plugins' in $$props) $$invalidate(0, plugins = $$props.plugins);\n\t\tif ('title' in $$props) $$invalidate(1, title = $$props.title);\n\t};\n\n\treturn [plugins, title, dispatch, func];\n}\n\nclass AccountPlugin extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$6, create_fragment$6, safe_not_equal, { plugins: 0, title: 1 }, add_css$4);\n\t}\n}\n\n/* src/ui/CreateAccount.svelte generated by Svelte v4.2.0 */\n\nfunction create_else_block_1$1(ctx) {\n\tlet p;\n\tlet t_1_value = /*$t*/ ctx[2]('loading', { default: 'Loading...' }) + \"\";\n\tlet t_1;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tt_1 = text(t_1_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t_1);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$t*/ 4 && t_1_value !== (t_1_value = /*$t*/ ctx[2]('loading', { default: 'Loading...' }) + \"\")) set_data(t_1, t_1_value);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (123:0) {#if $props && $accountCreationContext}\nfunction create_if_block$2(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block_1$2, create_if_block_2$2, create_else_block$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type_1(ctx, dirty) {\n\t\tif (/*$step*/ ctx[5] === /*Steps*/ ctx[0].selectPlugin) return 0;\n\t\tif (/*$step*/ ctx[5] === /*Steps*/ ctx[0].selectChain && /*$chains*/ ctx[6]) return 1;\n\t\treturn 2;\n\t}\n\n\tcurrent_block_type_index = select_block_type_1(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type_1(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\n// (144:4) {:else}\nfunction create_else_block$1(ctx) {\n\tlet countdown;\n\tlet current;\n\n\tcountdown = new Countdown({\n\t\t\tprops: {\n\t\t\t\tdata: {\n\t\t\t\t\tlabel: /*$t*/ ctx[2]('accountCreation.countdown', { default: 'Creating Account' })\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(countdown.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(countdown, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst countdown_changes = {};\n\n\t\t\tif (dirty & /*$t*/ 4) countdown_changes.data = {\n\t\t\t\tlabel: /*$t*/ ctx[2]('accountCreation.countdown', { default: 'Creating Account' })\n\t\t\t};\n\n\t\t\tcountdown.$set(countdown_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(countdown.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(countdown.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(countdown, detaching);\n\t\t}\n\t};\n}\n\n// (134:53) \nfunction create_if_block_2$2(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[1],\n\t\t\t\t$$slots: { default: [create_default_slot_1] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 2) transition_changes.direction = /*$transitionDirection*/ ctx[1];\n\n\t\t\tif (dirty & /*$$scope, $chains, $t*/ 4194372) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (124:4) {#if $step === Steps.selectPlugin}\nfunction create_if_block_1$2(ctx) {\n\tlet transition;\n\tlet current;\n\n\ttransition = new Transition({\n\t\t\tprops: {\n\t\t\t\tdirection: /*$transitionDirection*/ ctx[1],\n\t\t\t\t$$slots: { default: [create_default_slot$1] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transition.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transition, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst transition_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 2) transition_changes.direction = /*$transitionDirection*/ ctx[1];\n\n\t\t\tif (dirty & /*$$scope, $accountCreationContext, $t*/ 4194324) {\n\t\t\t\ttransition_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttransition.$set(transition_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transition.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transition.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transition, detaching);\n\t\t}\n\t};\n}\n\n// (135:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot_1(ctx) {\n\tlet blockchain;\n\tlet current;\n\n\tblockchain = new Blockchain({\n\t\t\tprops: {\n\t\t\t\tchains: /*$chains*/ ctx[6],\n\t\t\t\ttitle: /*$t*/ ctx[2]('accountCreation.select.chain', { default: 'Select a Blockchain' })\n\t\t\t}\n\t\t});\n\n\tblockchain.$on(\"select\", /*selectChain*/ ctx[11]);\n\tblockchain.$on(\"cancel\", /*unselectChain*/ ctx[12]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(blockchain.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(blockchain, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst blockchain_changes = {};\n\t\t\tif (dirty & /*$chains*/ 64) blockchain_changes.chains = /*$chains*/ ctx[6];\n\t\t\tif (dirty & /*$t*/ 4) blockchain_changes.title = /*$t*/ ctx[2]('accountCreation.select.chain', { default: 'Select a Blockchain' });\n\t\t\tblockchain.$set(blockchain_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(blockchain.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(blockchain.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(blockchain, detaching);\n\t\t}\n\t};\n}\n\n// (125:8) <Transition direction={$transitionDirection}>\nfunction create_default_slot$1(ctx) {\n\tlet accountplugin;\n\tlet current;\n\n\taccountplugin = new AccountPlugin({\n\t\t\tprops: {\n\t\t\t\tplugins: /*$accountCreationContext*/ ctx[4].accountCreationPlugins,\n\t\t\t\ttitle: /*$t*/ ctx[2]('accountCreation.select.plugin', { default: 'Select a Service Provider' })\n\t\t\t}\n\t\t});\n\n\taccountplugin.$on(\"select\", /*selectPlugin*/ ctx[10]);\n\taccountplugin.$on(\"cancel\", /*cancel*/ ctx[13]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(accountplugin.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(accountplugin, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst accountplugin_changes = {};\n\t\t\tif (dirty & /*$accountCreationContext*/ 16) accountplugin_changes.plugins = /*$accountCreationContext*/ ctx[4].accountCreationPlugins;\n\t\t\tif (dirty & /*$t*/ 4) accountplugin_changes.title = /*$t*/ ctx[2]('accountCreation.select.plugin', { default: 'Select a Service Provider' });\n\t\t\taccountplugin.$set(accountplugin_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(accountplugin.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(accountplugin.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(accountplugin, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$5(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block$2, create_else_block_1$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*$props*/ ctx[3] && /*$accountCreationContext*/ ctx[4]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n\tlet $transitionDirection;\n\tlet $backAction;\n\tlet $accountCreationResponse;\n\tlet $t;\n\tlet $props;\n\tlet $accountCreationContext;\n\tlet $step;\n\tlet $chains;\n\tcomponent_subscribe($$self, transitionDirection, $$value => $$invalidate(1, $transitionDirection = $$value));\n\tcomponent_subscribe($$self, backAction, $$value => $$invalidate(15, $backAction = $$value));\n\tcomponent_subscribe($$self, accountCreationResponse, $$value => $$invalidate(16, $accountCreationResponse = $$value));\n\tcomponent_subscribe($$self, props, $$value => $$invalidate(3, $props = $$value));\n\tcomponent_subscribe($$self, accountCreationContext, $$value => $$invalidate(4, $accountCreationContext = $$value));\n\tconst { t } = getContext('i18n');\n\tcomponent_subscribe($$self, t, value => $$invalidate(2, $t = value));\n\tlet completed = false;\n\tconst dispatch = createEventDispatcher();\n\tvar Steps;\n\n\t(function (Steps) {\n\t\tSteps[\"done\"] = \"done\";\n\t\tSteps[\"selectPlugin\"] = \"selectPlugin\";\n\t\tSteps[\"selectChain\"] = \"selectChain\";\n\t})(Steps || (Steps = {}));\n\n\tconst accountPlugin = derived([accountCreationContext, accountCreationResponse], ([$currentContext, $currentResponse]) => {\n\t\tif (!$currentContext || !$currentResponse) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst plugin = $currentContext.accountCreationPlugins.find(plugin => plugin.id === $currentResponse.pluginId);\n\n\t\t// If the new plugin only supports one chain, set it as the current\n\t\tif (!$currentResponse.chain && plugin?.config.supportedChains?.length === 1) {\n\t\t\t$currentResponse.chain = plugin.config.supportedChains[0].id;\n\t\t}\n\n\t\treturn plugin;\n\t});\n\n\tlet chains = derived([accountCreationContext, accountPlugin], ([$currentContext, $currentAccountPlugin]) => {\n\t\tif ($currentContext && $currentAccountPlugin) {\n\t\t\t// If the selected plugin has an array of supported chains, filter the list of chains\n\t\t\tif ($currentAccountPlugin.config.supportedChains) {\n\t\t\t\tif ($currentContext.chains) {\n\t\t\t\t\treturn $currentContext.chains.filter(chain => {\n\t\t\t\t\t\treturn (// If the chain is in the list of supported chains\n\t\t\t\t\t\t$currentAccountPlugin.config.supportedChains?.find(c => c.id.equals(chain.id)));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ($currentContext) {\n\t\t\treturn $currentContext.chains;\n\t\t}\n\n\t\treturn [];\n\t});\n\n\tcomponent_subscribe($$self, chains, value => $$invalidate(6, $chains = value));\n\n\tconst accountCreationContextUnsubscribe = accountCreationContext.subscribe(currentContext => {\n\t\tif (currentContext) {\n\t\t\t// If an appName is specified, use it\n\t\t\tset_store_value(\n\t\t\t\tprops,\n\t\t\t\t$props.subtitle = $t('login.title-app', {\n\t\t\t\t\tappName: currentContext.appName,\n\t\t\t\t\tdefault: 'Login to {{appName}}'\n\t\t\t\t}),\n\t\t\t\t$props\n\t\t\t);\n\n\t\t\t// If only one account creation plugin is available, set it on the response\n\t\t\tif (currentContext.accountCreationPlugins.length === 1) {\n\t\t\t\tset_store_value(accountCreationResponse, $accountCreationResponse.pluginId = currentContext.accountCreationPlugins[0].id, $accountCreationResponse);\n\t\t\t}\n\n\t\t\t// If only one chain is available, set it on the response\n\t\t\tif (currentContext.chain) {\n\t\t\t\tset_store_value(accountCreationResponse, $accountCreationResponse.chain = currentContext.chain.id, $accountCreationResponse);\n\t\t\t} else if (currentContext.chains && currentContext.chains.length === 1) {\n\t\t\t\tset_store_value(accountCreationResponse, $accountCreationResponse.chain = currentContext.chains[0].id, $accountCreationResponse);\n\t\t\t}\n\t\t}\n\t});\n\n\tonMount(() => {\n\t\t// TODO: add translation strings\n\t\tset_store_value(props, $props.title = $t('accountCreation.title', { default: 'Create Account' }), $props);\n\t});\n\n\tonDestroy(accountCreationContextUnsubscribe);\n\n\tconst complete = () => {\n\t\tif (!completed) {\n\t\t\tcompleted = true;\n\n\t\t\t// For cases, where no UI interactions are needed,we are giving the UI a chance to set the state before completing\n\t\t\tsetTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tdispatch('complete', $accountCreationResponse);\n\t\t\t\t\tbackAction.set(undefined);\n\t\t\t\t},\n\t\t\t\t100\n\t\t\t);\n\t\t}\n\t};\n\n\tconst step = derived([accountCreationContext, accountCreationResponse, accountPlugin, chains], ([$context, $currentResponse, $currentAccountPlugin, $chains]) => {\n\t\tif (!$currentAccountPlugin && $context?.uiRequirements.requiresPluginSelect) {\n\t\t\treturn Steps.selectPlugin;\n\t\t}\n\n\t\tlet requiresChainSelect = $currentAccountPlugin?.config.requiresChainSelect;\n\n\t\t// If requiresChainSelect is specified as false, never present the chain selection UI, in all other cases, use the context\n\t\tif (requiresChainSelect !== false) {\n\t\t\trequiresChainSelect = $context?.uiRequirements.requiresChainSelect;\n\t\t}\n\n\t\tif (!$currentResponse.chain && requiresChainSelect) {\n\t\t\treturn Steps.selectChain;\n\t\t}\n\n\t\t// Return response to kit for the account creation\n\t\tcomplete();\n\t});\n\n\tcomponent_subscribe($$self, step, value => $$invalidate(5, $step = value));\n\n\t// TODO: Define the type for this event prop\n\tconst selectPlugin = e => {\n\t\tset_store_value(accountCreationResponse, $accountCreationResponse.pluginId = e.detail, $accountCreationResponse);\n\t\tset_store_value(backAction, $backAction = unselectPlugin, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t};\n\n\tconst unselectPlugin = e => {\n\t\tset_store_value(accountCreationResponse, $accountCreationResponse.pluginId = undefined, $accountCreationResponse);\n\t\tset_store_value(backAction, $backAction = undefined, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'ltr', $transitionDirection);\n\t};\n\n\tconst selectChain = e => {\n\t\tset_store_value(accountCreationResponse, $accountCreationResponse.chain = e.detail, $accountCreationResponse);\n\t\tset_store_value(backAction, $backAction = unselectChain, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t};\n\n\tconst unselectChain = e => {\n\t\tset_store_value(accountCreationResponse, $accountCreationResponse.chain = undefined, $accountCreationResponse);\n\t\tset_store_value(backAction, $backAction = unselectPlugin, $backAction);\n\t\tset_store_value(transitionDirection, $transitionDirection = 'ltr', $transitionDirection);\n\t};\n\n\tconst cancel = () => {\n\t\tdispatch('cancel');\n\t};\n\n\treturn [\n\t\tSteps,\n\t\t$transitionDirection,\n\t\t$t,\n\t\t$props,\n\t\t$accountCreationContext,\n\t\t$step,\n\t\t$chains,\n\t\tt,\n\t\tchains,\n\t\tstep,\n\t\tselectPlugin,\n\t\tselectChain,\n\t\tunselectChain,\n\t\tcancel\n\t];\n}\n\nclass CreateAccount extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$5, create_fragment$5, safe_not_equal, {});\n\t}\n}\n\n/* src/ui/components/HeaderButton.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$3(target) {\n\tappend_styles(target, \"svelte-mttle8\", \"button.svelte-mttle8.svelte-mttle8{--button-size:46px;--button-size:var(--space-2xl);position:relative;isolation:isolate;background:var(--header-button-background);border:1px solid var(--header-button-outline);border:none;box-shadow:inset 0 0 0 1px var(--header-button-outline);border-radius:var(--border-radius-inner);cursor:pointer;width:var(--button-size);height:var(--button-size);display:grid;place-content:center;color:var(--header-text-color);transition:transform 80ms ease}button.svelte-mttle8.svelte-mttle8:active{transform:scale(95%);transform-origin:center}@media(hover: hover){button.svelte-mttle8:hover .background.svelte-mttle8{opacity:1}}.background.svelte-mttle8.svelte-mttle8{position:absolute;border-radius:var(--border-radius-inner);inset:0;opacity:0;z-index:-1;transition:opacity 80ms ease;background:var(--header-button-outline)}.visually-hidden.svelte-mttle8.svelte-mttle8{border:0;clip:rect(0 0 0 0);height:auto;margin:0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}\");\n}\n\nfunction create_fragment$4(ctx) {\n\tlet button;\n\tlet span0;\n\tlet t0;\n\tlet icon_1;\n\tlet t1;\n\tlet span1;\n\tlet t2;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\ticon_1 = new Icon({ props: { name: /*icon*/ ctx[1] } });\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tspan0 = element(\"span\");\n\t\t\tt0 = space();\n\t\t\tcreate_component(icon_1.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tspan1 = element(\"span\");\n\t\t\tt2 = text(/*icon*/ ctx[1]);\n\t\t\tattr(span0, \"class\", \"background svelte-mttle8\");\n\t\t\tattr(span1, \"class\", \"label visually-hidden svelte-mttle8\");\n\t\t\tattr(button, \"class\", \"svelte-mttle8\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, span0);\n\t\t\tappend(button, t0);\n\t\t\tmount_component(icon_1, button, null);\n\t\t\tappend(button, t1);\n\t\t\tappend(button, span1);\n\t\t\tappend(span1, t2);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", function () {\n\t\t\t\t\tif (is_function(/*onClick*/ ctx[0])) /*onClick*/ ctx[0].apply(this, arguments);\n\t\t\t\t});\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\t\t\tconst icon_1_changes = {};\n\t\t\tif (dirty & /*icon*/ 2) icon_1_changes.name = /*icon*/ ctx[1];\n\t\t\ticon_1.$set(icon_1_changes);\n\t\t\tif (!current || dirty & /*icon*/ 2) set_data(t2, /*icon*/ ctx[1]);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(icon_1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(icon_1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tdestroy_component(icon_1);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n\tlet { onClick } = $$props;\n\tlet { icon } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('onClick' in $$props) $$invalidate(0, onClick = $$props.onClick);\n\t\tif ('icon' in $$props) $$invalidate(1, icon = $$props.icon);\n\t};\n\n\treturn [onClick, icon];\n}\n\nclass HeaderButton extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$4, create_fragment$4, safe_not_equal, { onClick: 0, icon: 1 }, add_css$3);\n\t}\n}\n\n/* src/ui/components/HeaderWaves.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-ajt3u\", \".wrapper.svelte-ajt3u{transform-origin:top;overflow:hidden;position:relative;height:var(--container-height);background-color:var(--header-background-color)}.clipped.svelte-ajt3u{clip-path:url(#wave-clip)}.container.svelte-ajt3u{position:absolute;left:0;bottom:0;width:200%;height:100%;transform-origin:bottom}@keyframes svelte-ajt3u-wave-slide{from{transform:translate(0)}to{transform:translate(-50%)}}.wave.svelte-ajt3u{position:absolute;bottom:-2px;opacity:0.9999;transform-origin:bottom}.wave.foreground.svelte-ajt3u{--swell:var(--foreground-swell);--swell-speed:var(--foreground-swell-speed);--swell-delay:var(--foreground-delay)}.wave.midground.svelte-ajt3u{--swell:var(--midground-swell);--swell-speed:var(--midground-swell-speed);--swell-delay:var(--midground-delay)}.wave.background.svelte-ajt3u{--swell:var(--background-swell);--swell-speed:var(--background-swell-speed);--swell-delay:var(--background-delay)}@keyframes svelte-ajt3u-wave-swell{from{transform:scaleY(1)}to{transform:scaleY(var(--swell))}}\");\n}\n\nfunction create_fragment$3(ctx) {\n\tlet div3;\n\tlet svg0;\n\tlet defs;\n\tlet clipPath;\n\tlet path;\n\tlet t0;\n\tlet div0;\n\tlet svg1;\n\tlet rect0;\n\tlet t1;\n\tlet div1;\n\tlet svg2;\n\tlet rect1;\n\tlet t2;\n\tlet div2;\n\tlet svg3;\n\tlet rect2;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv3 = element(\"div\");\n\t\t\tsvg0 = svg_element(\"svg\");\n\t\t\tdefs = svg_element(\"defs\");\n\t\t\tclipPath = svg_element(\"clipPath\");\n\t\t\tpath = svg_element(\"path\");\n\t\t\tt0 = space();\n\t\t\tdiv0 = element(\"div\");\n\t\t\tsvg1 = svg_element(\"svg\");\n\t\t\trect0 = svg_element(\"rect\");\n\t\t\tt1 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tsvg2 = svg_element(\"svg\");\n\t\t\trect1 = svg_element(\"rect\");\n\t\t\tt2 = space();\n\t\t\tdiv2 = element(\"div\");\n\t\t\tsvg3 = svg_element(\"svg\");\n\t\t\trect2 = svg_element(\"rect\");\n\t\t\tattr(path, \"d\", \"M 0 300 V 100 Q 100 0 200 100 Q 300 200 400 100 Q 500 0 600 100 Q 700 200 800 100 V 300\");\n\t\t\tattr(clipPath, \"id\", \"wave-clip\");\n\t\t\tattr(svg0, \"height\", \"0\");\n\t\t\tattr(svg0, \"width\", \"0\");\n\t\t\tattr(rect0, \"class\", \"clipped svelte-ajt3u\");\n\t\t\tattr(rect0, \"height\", \"100%\");\n\t\t\tattr(rect0, \"width\", \"100%\");\n\t\t\tattr(rect0, \"fill\", backgroundFill);\n\t\t\tattr(svg1, \"class\", \"wave background svelte-ajt3u\");\n\t\t\tattr(svg1, \"width\", \"100%\");\n\t\t\tattr(svg1, \"height\", \"\" + (bgHeight + \"%\"));\n\t\t\tattr(svg1, \"viewBox\", \"0 0 800 300\");\n\t\t\tattr(svg1, \"preserveAspectRatio\", \"none\");\n\t\t\tattr(div0, \"class\", \"container background svelte-ajt3u\");\n\t\t\tattr(rect1, \"class\", \"clipped svelte-ajt3u\");\n\t\t\tattr(rect1, \"width\", \"100%\");\n\t\t\tattr(rect1, \"height\", \"100%\");\n\t\t\tattr(rect1, \"fill\", midgroundFill);\n\t\t\tattr(svg2, \"class\", \"wave midground svelte-ajt3u\");\n\t\t\tattr(svg2, \"width\", \"100%\");\n\t\t\tattr(svg2, \"height\", \"\" + (mgHeight + \"%\"));\n\t\t\tattr(svg2, \"viewBox\", \"0 0 800 300\");\n\t\t\tattr(svg2, \"preserveAspectRatio\", \"none\");\n\t\t\tattr(div1, \"class\", \"container midground svelte-ajt3u\");\n\t\t\tattr(rect2, \"class\", \"clipped svelte-ajt3u\");\n\t\t\tattr(rect2, \"width\", \"100%\");\n\t\t\tattr(rect2, \"height\", \"100%\");\n\t\t\tattr(rect2, \"fill\", foregroundFill);\n\t\t\tattr(svg3, \"class\", \"wave foreground svelte-ajt3u\");\n\t\t\tattr(svg3, \"width\", \"100%\");\n\t\t\tattr(svg3, \"height\", \"\" + (fgHeight + \"%\"));\n\t\t\tattr(svg3, \"viewBox\", \"0 0 800 300\");\n\t\t\tattr(svg3, \"preserveAspectRatio\", \"none\");\n\t\t\tattr(div2, \"class\", \"container foreground svelte-ajt3u\");\n\t\t\tattr(div3, \"class\", \"wrapper svelte-ajt3u\");\n\t\t\tset_style(div3, \"--frequency\", frequency + \"ms\");\n\t\t\tset_style(div3, \"--foreground-speed\", fgFrequency + \"ms\");\n\t\t\tset_style(div3, \"--midground-speed\", mgFrequency + \"ms\");\n\t\t\tset_style(div3, \"--background-speed\", bgFrequency + \"ms\");\n\t\t\tset_style(div3, \"--container-height\", containerHeight + \"px\");\n\t\t\tset_style(div3, \"--motion\", motion);\n\t\t\tset_style(div3, \"--foreground-swell\", fgSwell);\n\t\t\tset_style(div3, \"--midground-swell\", mgSwell);\n\t\t\tset_style(div3, \"--background-swell\", bgSwell);\n\t\t\tset_style(div3, \"--foreground-swell-speed\", fgSwellSpeed + \"ms\");\n\t\t\tset_style(div3, \"--midground-swell-speed\", mgSwellSpeed + \"ms\");\n\t\t\tset_style(div3, \"--background-swell-speed\", bgSwellSpeed + \"ms\");\n\t\t\tset_style(div3, \"--foreground-delay\", fgSwellDelay + \"ms\");\n\t\t\tset_style(div3, \"--midground-delay\", mgSwellDelay + \"ms\");\n\t\t\tset_style(div3, \"--background-delay\", bgSwellDelay + \"ms\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div3, anchor);\n\t\t\tappend(div3, svg0);\n\t\t\tappend(svg0, defs);\n\t\t\tappend(defs, clipPath);\n\t\t\tappend(clipPath, path);\n\t\t\tappend(div3, t0);\n\t\t\tappend(div3, div0);\n\t\t\tappend(div0, svg1);\n\t\t\tappend(svg1, rect0);\n\t\t\tappend(div3, t1);\n\t\t\tappend(div3, div1);\n\t\t\tappend(div1, svg2);\n\t\t\tappend(svg2, rect1);\n\t\t\tappend(div3, t2);\n\t\t\tappend(div3, div2);\n\t\t\tappend(div2, svg3);\n\t\t\tappend(svg3, rect2);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div3);\n\t\t\t}\n\t\t}\n\t};\n}\n\nlet motion = 'linear';\nlet frequency = 7000;\nlet fgFrequency = 10000;\nlet mgFrequency = 9500;\nlet bgFrequency = 8600;\nlet containerHeight = 25;\nlet fgHeight = 50;\nlet mgHeight = 75;\nlet bgHeight = 100;\nlet fgSwell = 1.2;\nlet mgSwell = 1.4;\nlet bgSwell = 1.3;\nlet fgSwellSpeed = 3100;\nlet mgSwellSpeed = 2300;\nlet bgSwellSpeed = 1000;\nlet fgSwellDelay = 9000;\nlet mgSwellDelay = 7900;\nlet bgSwellDelay = 9100;\nconst foregroundFill = 'var(--wave-foreground-color)';\nconst midgroundFill = 'var(--wave-midground-color)';\nconst backgroundFill = 'var(--wave-background-color)';\n\nfunction instance$3($$self) {\n\treturn [];\n}\n\nclass HeaderWaves extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, {}, add_css$2);\n\t}\n}\n\n/* src/ui/components/Header.svelte generated by Svelte v4.2.0 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-j6z3r6\", \".modal-header.svelte-j6z3r6.svelte-j6z3r6{box-sizing:border-box;min-height:var(--header-height);color:var(--header-text-color);background:var(--header-background-color);display:grid;grid-template-columns:1fr auto 1fr;gap:var(--space-s);padding:var(--space-m)}.modal-header.svelte-j6z3r6 .slot.svelte-j6z3r6{display:flex;align-items:center}.modal-header.svelte-j6z3r6 .center.svelte-j6z3r6{flex-direction:column;justify-content:space-around;text-align:center}.modal-header.svelte-j6z3r6 .right.svelte-j6z3r6{justify-content:flex-end}.modal-header.svelte-j6z3r6 .svelte-j6z3r6:is(h2, p){color:var(--header-text-color);margin:0;line-height:1.1em}.modal-header.svelte-j6z3r6 h2.svelte-j6z3r6{font-size:var(--fs-3);font-weight:700}.modal-header.svelte-j6z3r6 p.svelte-j6z3r6{font-size:var(--fs-0)}\");\n}\n\nconst get_right_slot_changes = dirty => ({});\nconst get_right_slot_context = ctx => ({});\nconst get_center_slot_changes = dirty => ({});\nconst get_center_slot_context = ctx => ({});\nconst get_left_slot_changes = dirty => ({});\nconst get_left_slot_context = ctx => ({});\n\n// (15:37) \nfunction create_if_block_2$1(ctx) {\n\tlet headerbutton;\n\tlet current;\n\n\theaderbutton = new HeaderButton({\n\t\t\tprops: {\n\t\t\t\ticon: \"settings\",\n\t\t\t\tonClick: /*func*/ ctx[8]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(headerbutton.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(headerbutton, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst headerbutton_changes = {};\n\t\t\tif (dirty & /*$transitionDirection*/ 16) headerbutton_changes.onClick = /*func*/ ctx[8];\n\t\t\theaderbutton.$set(headerbutton_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(headerbutton.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(headerbutton.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(headerbutton, detaching);\n\t\t}\n\t};\n}\n\n// (13:12) {#if $backAction}\nfunction create_if_block_1$1(ctx) {\n\tlet headerbutton;\n\tlet current;\n\n\theaderbutton = new HeaderButton({\n\t\t\tprops: {\n\t\t\t\ticon: \"chevron-left\",\n\t\t\t\tonClick: /*$backAction*/ ctx[2]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(headerbutton.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(headerbutton, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst headerbutton_changes = {};\n\t\t\tif (dirty & /*$backAction*/ 4) headerbutton_changes.onClick = /*$backAction*/ ctx[2];\n\t\t\theaderbutton.$set(headerbutton_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(headerbutton.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(headerbutton.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(headerbutton, detaching);\n\t\t}\n\t};\n}\n\n// (12:26)              \nfunction fallback_block_2(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block_1$1, create_if_block_2$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*$backAction*/ ctx[2]) return 0;\n\t\tif (/*$allowSettings*/ ctx[3]) return 1;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type(ctx))) {\n\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block) {\n\t\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = null;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (29:12) {#if subtitle}\nfunction create_if_block$1(ctx) {\n\tlet p;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tt = text(/*subtitle*/ ctx[1]);\n\t\t\tattr(p, \"class\", \"svelte-j6z3r6\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*subtitle*/ 2) set_data(t, /*subtitle*/ ctx[1]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (27:28)              \nfunction fallback_block_1(ctx) {\n\tlet h2;\n\tlet t0;\n\tlet t1;\n\tlet if_block_anchor;\n\tlet if_block = /*subtitle*/ ctx[1] && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\th2 = element(\"h2\");\n\t\t\tt0 = text(/*title*/ ctx[0]);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t\tattr(h2, \"class\", \"svelte-j6z3r6\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h2, anchor);\n\t\t\tappend(h2, t0);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 1) set_data(t0, /*title*/ ctx[0]);\n\n\t\t\tif (/*subtitle*/ ctx[1]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$1(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(h2);\n\t\t\t\tdetach(t1);\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t}\n\t};\n}\n\n// (35:27)              \nfunction fallback_block(ctx) {\n\tlet headerbutton;\n\tlet current;\n\n\theaderbutton = new HeaderButton({\n\t\t\tprops: {\n\t\t\t\ticon: \"close\",\n\t\t\t\tonClick: /*func_1*/ ctx[9]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(headerbutton.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(headerbutton, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(headerbutton.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(headerbutton.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(headerbutton, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$2(ctx) {\n\tlet div3;\n\tlet div0;\n\tlet t0;\n\tlet div1;\n\tlet t1;\n\tlet div2;\n\tlet t2;\n\tlet headerwaves;\n\tlet current;\n\tconst left_slot_template = /*#slots*/ ctx[7].left;\n\tconst left_slot = create_slot(left_slot_template, ctx, /*$$scope*/ ctx[6], get_left_slot_context);\n\tconst left_slot_or_fallback = left_slot || fallback_block_2(ctx);\n\tconst center_slot_template = /*#slots*/ ctx[7].center;\n\tconst center_slot = create_slot(center_slot_template, ctx, /*$$scope*/ ctx[6], get_center_slot_context);\n\tconst center_slot_or_fallback = center_slot || fallback_block_1(ctx);\n\tconst right_slot_template = /*#slots*/ ctx[7].right;\n\tconst right_slot = create_slot(right_slot_template, ctx, /*$$scope*/ ctx[6], get_right_slot_context);\n\tconst right_slot_or_fallback = right_slot || fallback_block(ctx);\n\theaderwaves = new HeaderWaves({});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv3 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tif (left_slot_or_fallback) left_slot_or_fallback.c();\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tif (center_slot_or_fallback) center_slot_or_fallback.c();\n\t\t\tt1 = space();\n\t\t\tdiv2 = element(\"div\");\n\t\t\tif (right_slot_or_fallback) right_slot_or_fallback.c();\n\t\t\tt2 = space();\n\t\t\tcreate_component(headerwaves.$$.fragment);\n\t\t\tattr(div0, \"class\", \"slot left svelte-j6z3r6\");\n\t\t\tattr(div1, \"class\", \"slot center svelte-j6z3r6\");\n\t\t\tattr(div2, \"class\", \"slot right svelte-j6z3r6\");\n\t\t\tattr(div3, \"class\", \"modal-header svelte-j6z3r6\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div3, anchor);\n\t\t\tappend(div3, div0);\n\n\t\t\tif (left_slot_or_fallback) {\n\t\t\t\tleft_slot_or_fallback.m(div0, null);\n\t\t\t}\n\n\t\t\tappend(div3, t0);\n\t\t\tappend(div3, div1);\n\n\t\t\tif (center_slot_or_fallback) {\n\t\t\t\tcenter_slot_or_fallback.m(div1, null);\n\t\t\t}\n\n\t\t\tappend(div3, t1);\n\t\t\tappend(div3, div2);\n\n\t\t\tif (right_slot_or_fallback) {\n\t\t\t\tright_slot_or_fallback.m(div2, null);\n\t\t\t}\n\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(headerwaves, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (left_slot) {\n\t\t\t\tif (left_slot.p && (!current || dirty & /*$$scope*/ 64)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tleft_slot,\n\t\t\t\t\t\tleft_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[6],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[6])\n\t\t\t\t\t\t: get_slot_changes(left_slot_template, /*$$scope*/ ctx[6], dirty, get_left_slot_changes),\n\t\t\t\t\t\tget_left_slot_context\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left_slot_or_fallback && left_slot_or_fallback.p && (!current || dirty & /*$backAction, $transitionDirection, $allowSettings*/ 28)) {\n\t\t\t\t\tleft_slot_or_fallback.p(ctx, !current ? -1 : dirty);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (center_slot) {\n\t\t\t\tif (center_slot.p && (!current || dirty & /*$$scope*/ 64)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tcenter_slot,\n\t\t\t\t\t\tcenter_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[6],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[6])\n\t\t\t\t\t\t: get_slot_changes(center_slot_template, /*$$scope*/ ctx[6], dirty, get_center_slot_changes),\n\t\t\t\t\t\tget_center_slot_context\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (center_slot_or_fallback && center_slot_or_fallback.p && (!current || dirty & /*subtitle, title*/ 3)) {\n\t\t\t\t\tcenter_slot_or_fallback.p(ctx, !current ? -1 : dirty);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (right_slot) {\n\t\t\t\tif (right_slot.p && (!current || dirty & /*$$scope*/ 64)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tright_slot,\n\t\t\t\t\t\tright_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[6],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[6])\n\t\t\t\t\t\t: get_slot_changes(right_slot_template, /*$$scope*/ ctx[6], dirty, get_right_slot_changes),\n\t\t\t\t\t\tget_right_slot_context\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(left_slot_or_fallback, local);\n\t\t\ttransition_in(center_slot_or_fallback, local);\n\t\t\ttransition_in(right_slot_or_fallback, local);\n\t\t\ttransition_in(headerwaves.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(left_slot_or_fallback, local);\n\t\t\ttransition_out(center_slot_or_fallback, local);\n\t\t\ttransition_out(right_slot_or_fallback, local);\n\t\t\ttransition_out(headerwaves.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div3);\n\t\t\t\tdetach(t2);\n\t\t\t}\n\n\t\t\tif (left_slot_or_fallback) left_slot_or_fallback.d(detaching);\n\t\t\tif (center_slot_or_fallback) center_slot_or_fallback.d(detaching);\n\t\t\tif (right_slot_or_fallback) right_slot_or_fallback.d(detaching);\n\t\t\tdestroy_component(headerwaves, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\tlet $backAction;\n\tlet $allowSettings;\n\tlet $transitionDirection;\n\tcomponent_subscribe($$self, backAction, $$value => $$invalidate(2, $backAction = $$value));\n\tcomponent_subscribe($$self, allowSettings, $$value => $$invalidate(3, $allowSettings = $$value));\n\tcomponent_subscribe($$self, transitionDirection, $$value => $$invalidate(4, $transitionDirection = $$value));\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { title } = $$props;\n\tlet { subtitle } = $$props;\n\tconst dispatch = createEventDispatcher();\n\n\tconst func = () => {\n\t\trouter.push('settings');\n\t\tset_store_value(transitionDirection, $transitionDirection = 'rtl', $transitionDirection);\n\t};\n\n\tconst func_1 = () => dispatch('cancel');\n\n\t$$self.$$set = $$props => {\n\t\tif ('title' in $$props) $$invalidate(0, title = $$props.title);\n\t\tif ('subtitle' in $$props) $$invalidate(1, subtitle = $$props.subtitle);\n\t\tif ('$$scope' in $$props) $$invalidate(6, $$scope = $$props.$$scope);\n\t};\n\n\treturn [\n\t\ttitle,\n\t\tsubtitle,\n\t\t$backAction,\n\t\t$allowSettings,\n\t\t$transitionDirection,\n\t\tdispatch,\n\t\t$$scope,\n\t\tslots,\n\t\tfunc,\n\t\tfunc_1\n\t];\n}\n\nclass Header extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { title: 0, subtitle: 1 }, add_css$1);\n\t}\n}\n\n/* src/ui/components/Modal.svelte generated by Svelte v4.2.0 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-1ime0ob\", \":host dialog.svelte-1ime0ob{color-scheme:light;--body-background-color:white;--body-text-color:var(--color-primary-700);--body-text-color-variant:var(--color-neutral-700);--header-background-color:var(--color-primary-700);--header-text-color:var(--color-primary-50);--header-button-background:var(--header-background-color);--header-button-outline:var(--color-primary-900);--button-text-color:var(--wharf-blue);--button-text-color-active:var(--wharf-blue);--button-outline-active:inset 0 0 0 2px var(--button-text-color);--button-primary-background:var(--color-secondary-200);--button-primary-background-hover:var(--color-secondary-200);--button-primary-background-active:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),\\n      var(--color-secondary-200);--button-primary-outline-hover:inset 0 0 0 1px #00000030,\\n      inset 0 0 0 1px var(--color-secondary-200);--button-secondary-background:var(--color-custom-1);--button-secondary-background-hover:var(--color-custom-1);--button-secondary-background-active:var(--color-secondary-200);--button-secondary-outline-hover:inset 0 0 0 1px #00000020,\\n      inset 0 0 0 1px var(--color-secondary-200);--button-outlined-background-active:var(--color-secondary-200);--button-outlined-outline:inset 0 0 0 1px var(--color-secondary-200);--button-outlined-outline-hover:inset 0 0 0 1px #00000020,\\n      inset 0 0 0 1px var(--color-secondary-200);--input-placeholder-color:var(--color-neutral-500);--input-background-focus:var(--color-neutral-100);--input-border-color:#00000030;--input-border-color-hover:var(--color-custom-5);--input-border-color-focus:var(--wharf-blue);--qr-border-color:inset 0 0 0 1px rgba(0 0 0 / 0.3), inset 0 0 0 1px var(--seafoam-mint);--checkbox-stroke:var(--wharf-blue);--checkbox-fill:var(--reef-turquoise);--error-color:var(--color-error-1);--list-item-background-color-hover:var(--color-custom-9);--list-item-text-color-hover:var(--color-secondary-500);--list-divider-color:#00000010;--text-area-background:var(--swell-mist);--text-area-text-color:#242424;--loading-circle-color:var(--reef-turquoise);--loading-circle-track-color:rgba(0 0 0 / 0.05);--wave-foreground-color:var(--body-background-color);--wave-midground-color:var(--seafoam-mint);--wave-background-color:var(--reef-turquoise)}:host dialog[data-theme=dark].svelte-1ime0ob{color-scheme:dark;--body-background-color:var(--color-primary-990);--body-text-color:white;--body-text-color-variant:var(--color-neutral-300);--header-background-color:var(--color-primary-700);--header-text-color:var(--color-primary-50);--header-button-background:var(--header-background-color);--header-button-outline:var(--color-primary-900);--button-text-color:var(--body-text-color);--button-text-color-active:var(--reef-turquoise);--button-outline-active:inset 0 0 0 2px var(--reef-turquoise);--button-primary-background:var(--color-secondary-500);--button-primary-background-hover:var(--color-secondary-500);--button-primary-background-active:var(--color-custom-2);--button-primary-outline-hover:inset 0 0 0 1px white;--button-secondary-background:var(--color-primary-800);--button-secondary-background-hover:var(--color-primary-800);--button-secondary-background-active:var(--color-primary-900);--button-secondary-outline-hover:inset 0 0 0 1px #ffffff30;--button-outlined-background-active:var(--color-primary-900);--button-outlined-outline:inset 0 0 0 1px #00000030;--button-outlined-outline-hover:inset 0 0 0 1px #ffffff30;--input-placeholder-color:#ffffff75;--input-background-focus:var(--color-custom-4);--input-border-color:#ffffff30;--input-border-color-hover:var(--color-custom-6);--input-border-color-focus:var(--reef-turquoise);--qr-border-color:inset 0 0 0 1px rgba(0 0 0 / 0.3);--checkbox-stroke:var(--reef-turquoise);--checkbox-fill:var(--color-custom-3);--error-color:var(--color-error-3);--list-item-background-color-hover:var(--color-custom-8);--list-item-text-color-hover:var(--color-secondary-400);--list-divider-color:#ffffff10;--text-area-background:var(--color-primary-900);--text-area-text-color:#ffffff;--loading-circle-color:var(--seafoam-mint);--loading-circle-track-color:rgba(0 0 0 / 0.05);--wave-foreground-color:var(--body-background-color);--wave-midground-color:#2f3445;--wave-background-color:#3e4356}@media(prefers-color-scheme: dark){:host dialog.svelte-1ime0ob{color-scheme:dark;--body-background-color:var(--color-primary-990);--body-text-color:white;--body-text-color-variant:var(--color-neutral-300);--header-background-color:var(--color-primary-700);--header-text-color:var(--color-primary-50);--header-button-background:var(--header-background-color);--header-button-outline:var(--color-primary-900);--button-text-color:var(--body-text-color);--button-text-color-active:var(--reef-turquoise);--button-outline-active:inset 0 0 0 2px var(--reef-turquoise);--button-primary-background:var(--color-secondary-500);--button-primary-background-hover:var(--color-secondary-500);--button-primary-background-active:var(--color-custom-2);--button-primary-outline-hover:inset 0 0 0 1px white;--button-secondary-background:var(--color-primary-800);--button-secondary-background-hover:var(--color-primary-800);--button-secondary-background-active:var(--color-primary-900);--button-secondary-outline-hover:inset 0 0 0 1px #ffffff30;--button-outlined-background-active:var(--color-primary-900);--button-outlined-outline:inset 0 0 0 1px #00000030;--button-outlined-outline-hover:inset 0 0 0 1px #ffffff30;--input-placeholder-color:#ffffff75;--input-background-focus:var(--color-custom-4);--input-border-color:#ffffff30;--input-border-color-hover:var(--color-custom-6);--input-border-color-focus:var(--reef-turquoise);--qr-border-color:inset 0 0 0 1px rgba(0 0 0 / 0.3);--checkbox-stroke:var(--reef-turquoise);--checkbox-fill:var(--color-custom-3);--error-color:var(--color-error-3);--list-item-background-color-hover:var(--color-custom-8);--list-item-text-color-hover:var(--color-secondary-400);--list-divider-color:#ffffff10;--text-area-background:var(--color-primary-900);--text-area-text-color:#ffffff;--loading-circle-color:var(--seafoam-mint);--loading-circle-track-color:rgba(0 0 0 / 0.05);--wave-foreground-color:var(--body-background-color);--wave-midground-color:#2f3445;--wave-background-color:#3e4356}:host dialog[data-theme=light].svelte-1ime0ob{color-scheme:light;--body-background-color:white;--body-text-color:var(--color-primary-700);--body-text-color-variant:var(--color-neutral-700);--header-background-color:var(--color-primary-700);--header-text-color:var(--color-primary-50);--header-button-background:var(--header-background-color);--header-button-outline:var(--color-primary-900);--button-text-color:var(--wharf-blue);--button-text-color-active:var(--wharf-blue);--button-outline-active:inset 0 0 0 2px var(--button-text-color);--button-primary-background:var(--color-secondary-200);--button-primary-background-hover:var(--color-secondary-200);--button-primary-background-active:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),\\n        var(--color-secondary-200);--button-primary-outline-hover:inset 0 0 0 1px #00000030,\\n        inset 0 0 0 1px var(--color-secondary-200);--button-secondary-background:var(--color-custom-1);--button-secondary-background-hover:var(--color-custom-1);--button-secondary-background-active:var(--color-secondary-200);--button-secondary-outline-hover:inset 0 0 0 1px #00000020,\\n        inset 0 0 0 1px var(--color-secondary-200);--button-outlined-background-active:var(--color-secondary-200);--button-outlined-outline:inset 0 0 0 1px var(--color-secondary-200);--button-outlined-outline-hover:inset 0 0 0 1px #00000020,\\n        inset 0 0 0 1px var(--color-secondary-200);--input-placeholder-color:var(--color-neutral-500);--input-background-focus:var(--color-neutral-100);--input-border-color:#00000030;--input-border-color-hover:var(--color-custom-5);--input-border-color-focus:var(--wharf-blue);--qr-border-color:inset 0 0 0 1px rgba(0 0 0 / 0.3), inset 0 0 0 1px var(--seafoam-mint);--checkbox-stroke:var(--wharf-blue);--checkbox-fill:var(--reef-turquoise);--error-color:var(--color-error-1);--list-item-background-color-hover:var(--color-custom-9);--list-item-text-color-hover:var(--color-secondary-500);--list-divider-color:#00000010;--text-area-background:var(--swell-mist);--text-area-text-color:#242424;--loading-circle-color:var(--reef-turquoise);--loading-circle-track-color:rgba(0 0 0 / 0.05);--wave-foreground-color:var(--body-background-color);--wave-midground-color:var(--seafoam-mint);--wave-background-color:var(--reef-turquoise)}}:host dialog.svelte-1ime0ob{--wharf-blue:var(--color-primary-700);--reef-turquoise:var(--color-secondary-300);--seafoam-mint:var(--color-secondary-200);--swell-mist:var(--color-accent-50);--color-primary-50:#f6f7f9;--color-primary-100:#ededf1;--color-primary-200:#d6d8e1;--color-primary-300:#b3b8c6;--color-primary-400:#8991a7;--color-primary-500:#6b738c;--color-primary-600:#565c73;--color-primary-700:#494e62;--color-primary-800:#3c4050;--color-primary-900:#363944;--color-primary-990:#252835;--color-secondary-50:#f1fcf9;--color-secondary-100:#cef9ed;--color-secondary-200:#b2f2e1;--color-secondary-300:#7be7ce;--color-secondary-400:#35ccae;--color-secondary-500:#1cb095;--color-secondary-600:#148d79;--color-secondary-700:#147163;--color-secondary-800:#155a51;--color-secondary-900:#164b43;--color-accent-50:#f4faf4;--color-accent-100:#e4f4e5;--color-accent-200:#cae8cc;--color-accent-300:#a1d4a3;--color-accent-400:#70b874;--color-accent-500:#4c9b51;--color-accent-600:#3a7f3e;--color-accent-700:#306534;--color-accent-800:#2a512d;--color-accent-900:#244326;--color-neutral-100:#f7f7f7;--color-neutral-200:#e3e3e3;--color-neutral-300:#c8c8c8;--color-neutral-400:#a4a4a4;--color-neutral-500:#818181;--color-neutral-600:#666666;--color-neutral-700:#515151;--color-neutral-800:#434343;--color-neutral-900:#383838;--color-custom-1:#f3f8f3;--color-custom-2:#415e60;--color-custom-3:#344b4d;--color-custom-4:#3d435a;--color-custom-5:#8ec2b4;--color-custom-6:#777b8b;--color-custom-7:#35ccae10;--color-custom-8:#575c6e;--color-custom-9:#f4f5f7;--color-error-1:#cd3939;--color-error-2:#ff5454;--color-error-3:#ffacac;font-family:system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Oxygen, Ubuntu, Cantarell, \\\"Open Sans\\\", \\\"Helvetica Neue\\\", sans-serif;--measure:35ch;--fs-0:calc(var(--fs-2) * 0.75);--fs-1:calc(var(--fs-2) * 0.875);--fs-2:var(--wharfkit-font-base, 1rem);--fs-3:calc(var(--fs-2) * 1.25);--ratio:1.5;--space-4xs:calc(var(--space-3xs) / var(--ratio));--space-3xs:calc(var(--space-2xs) / var(--ratio));--space-2xs:calc(var(--space-xs) / var(--ratio));--space-xs:calc(var(--space-s) / var(--ratio));--space-s:calc(var(--space-m) / var(--ratio));--space-m:var(--wharfkit-space-base, 1rem);--space-l:calc(var(--space-m) * var(--ratio));--space-xl:calc(var(--space-l) * var(--ratio));--space-2xl:calc(var(--space-xl) * var(--ratio));--space-3xl:calc(var(--space-2xl) * var(--ratio));--space-4xl:calc(var(--space-3xl) * var(--ratio));--space-5xl:calc(var(--space-4xl) * var(--ratio));--space-6xl:calc(var(--space-5xl) * var(--ratio));--space-7xl:calc(var(--space-6xl) * var(--ratio));--space-8xl:calc(var(--space-7xl) * var(--ratio));--space-9xl:calc(var(--space-8xl) * var(--ratio));--border-radius-outer:1.5rem;--border-radius-inner:0.75rem;--header-height:var(--space-3xl)}.svelte-1ime0ob{box-sizing:border-box}.svelte-1ime0ob::selection{color:var(--wharf-blue);background-color:var(--seafoam-mint)}dialog.svelte-1ime0ob{--margin-top:var(--space-xl);font-family:system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Oxygen, Ubuntu, Cantarell, \\\"Open Sans\\\", \\\"Helvetica Neue\\\", sans-serif;margin-bottom:0;margin-top:var(--margin-top);margin-inline:auto;border:none !important;border-radius:var(--border-radius-outer);padding:0;width:min(var(--space-7xl), 100vw - var(--space-m));box-shadow:0px 4px 154px rgba(0, 0, 0, 0.35);background:none}dialog.svelte-1ime0ob::backdrop{background:rgba(0, 0, 0, 0.75)}.modal-content.svelte-1ime0ob{--max-modal-content-height:calc(\\n      100svh - var(--header-height) - var(--margin-top) - var(--margin-top)\\n  );padding:var(--space-m);padding-bottom:var(--space-l);background-color:var(--body-background-color);overflow:hidden;overflow-y:scroll;max-height:var(--max-modal-content-height);scrollbar-gutter:stable both-edges;scrollbar-color:var(--header-background-color)}.modal-content.svelte-1ime0ob::-webkit-scrollbar{width:2px;background-color:var(--body-background-color)}.modal-content.svelte-1ime0ob::-webkit-scrollbar-thumb{background:var(--header-background-color)}\");\n}\n\nfunction create_fragment$1(ctx) {\n\tlet dialog_1;\n\tlet header;\n\tlet t;\n\tlet div;\n\tlet dialog_1_data_theme_value;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\theader = new Header({\n\t\t\tprops: {\n\t\t\t\ttitle: /*$props*/ ctx[2].title,\n\t\t\t\tsubtitle: /*$props*/ ctx[2].subtitle\n\t\t\t}\n\t\t});\n\n\theader.$on(\"cancel\", /*cancelRequest*/ ctx[3]);\n\tconst default_slot_template = /*#slots*/ ctx[6].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdialog_1 = element(\"dialog\");\n\t\t\tcreate_component(header.$$.fragment);\n\t\t\tt = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(div, \"class\", \"modal-content svelte-1ime0ob\");\n\t\t\tattr(dialog_1, \"data-theme\", dialog_1_data_theme_value = /*$settings*/ ctx[1].theme);\n\t\t\tattr(dialog_1, \"class\", \"svelte-1ime0ob\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, dialog_1, anchor);\n\t\t\tmount_component(header, dialog_1, null);\n\t\t\tappend(dialog_1, t);\n\t\t\tappend(dialog_1, div);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(div, null);\n\t\t\t}\n\n\t\t\t/*dialog_1_binding*/ ctx[7](dialog_1);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(dialog_1, \"mousedown\", self(prevent_default(/*backgroundClose*/ ctx[4])), { passive: false, capture: true });\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst header_changes = {};\n\t\t\tif (dirty & /*$props*/ 4) header_changes.title = /*$props*/ ctx[2].title;\n\t\t\tif (dirty & /*$props*/ 4) header_changes.subtitle = /*$props*/ ctx[2].subtitle;\n\t\t\theader.$set(header_changes);\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 32)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[5],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[5])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[5], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*$settings*/ 2 && dialog_1_data_theme_value !== (dialog_1_data_theme_value = /*$settings*/ ctx[1].theme)) {\n\t\t\t\tattr(dialog_1, \"data-theme\", dialog_1_data_theme_value);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(header.$$.fragment, local);\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(header.$$.fragment, local);\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(dialog_1);\n\t\t\t}\n\n\t\t\tdestroy_component(header);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t\t/*dialog_1_binding*/ ctx[7](null);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\tlet $cancelablePromises;\n\tlet $settings;\n\tlet $props;\n\tcomponent_subscribe($$self, cancelablePromises, $$value => $$invalidate(8, $cancelablePromises = $$value));\n\tcomponent_subscribe($$self, settings$5, $$value => $$invalidate(1, $settings = $$value));\n\tcomponent_subscribe($$self, props, $$value => $$invalidate(2, $props = $$value));\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet dialog;\n\n\t// Control the dialog element display based on state.active\n\tconst unsubscribe = active.subscribe(current => {\n\t\tif (dialog) {\n\t\t\tif (current && !dialog.open) {\n\t\t\t\tdialog.showModal();\n\t\t\t} else if (!current && dialog.open) {\n\t\t\t\tdialog.close();\n\t\t\t\tresetState();\n\t\t\t}\n\t\t}\n\t});\n\n\tonDestroy(unsubscribe);\n\n\t// Perform work required to cancel request\n\tfunction cancelRequest() {\n\t\t// Cancel any pending promises\n\t\t$cancelablePromises.map(f => f('Modal closed', true));\n\n\t\t// Update state to close the modal\n\t\tactive.set(false);\n\t}\n\n\t// When background is clicked outside of modal, close\n\tfunction backgroundClose(event) {\n\t\tvar rect = dialog.getBoundingClientRect();\n\t\tvar isInDialog = rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;\n\n\t\tif (!isInDialog) {\n\t\t\tcancelRequest();\n\t\t}\n\t}\n\n\t// When escape keypress is captured, close\n\tdocument.addEventListener('keydown', event => {\n\t\tif (event.key === 'Escape' && dialog.open) {\n\t\t\tcancelRequest();\n\t\t}\n\t});\n\n\tfunction dialog_1_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tdialog = $$value;\n\t\t\t$$invalidate(0, dialog);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('$$scope' in $$props) $$invalidate(5, $$scope = $$props.$$scope);\n\t};\n\n\treturn [\n\t\tdialog,\n\t\t$settings,\n\t\t$props,\n\t\tcancelRequest,\n\t\tbackgroundClose,\n\t\t$$scope,\n\t\tslots,\n\t\tdialog_1_binding\n\t];\n}\n\nclass Modal extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, {}, add_css);\n\t}\n}\n\n/* src/ui/App.svelte generated by Svelte v4.2.0 */\n\nfunction create_else_block_1(ctx) {\n\tlet p;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tp.textContent = \"Modal inactive\";\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(p);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (53:4) {#if $active}\nfunction create_if_block(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\n\tconst if_block_creators = [\n\t\tcreate_if_block_1,\n\t\tcreate_if_block_2,\n\t\tcreate_if_block_3,\n\t\tcreate_if_block_4,\n\t\tcreate_if_block_5,\n\t\tcreate_if_block_6,\n\t\tcreate_else_block\n\t];\n\n\tconst if_blocks = [];\n\n\tfunction select_block_type_1(ctx, dirty) {\n\t\tif (/*$errorDetails*/ ctx[2]) return 0;\n\t\tif (/*$prompt*/ ctx[0]) return 1;\n\t\tif (/*$router*/ ctx[3].path === 'login') return 2;\n\t\tif (/*$router*/ ctx[3].path === 'transact') return 3;\n\t\tif (/*$router*/ ctx[3].path === 'settings') return 4;\n\t\tif (/*$router*/ ctx[3].path === 'create-account') return 5;\n\t\treturn 6;\n\t}\n\n\tcurrent_block_type_index = select_block_type_1(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type_1(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\n// (66:8) {:else}\nfunction create_else_block(ctx) {\n\tlet countdown;\n\tlet current;\n\tcountdown = new Countdown({});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(countdown.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(countdown, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(countdown.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(countdown.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(countdown, detaching);\n\t\t}\n\t};\n}\n\n// (64:52) \nfunction create_if_block_6(ctx) {\n\tlet createaccount;\n\tlet current;\n\tcreateaccount = new CreateAccount({});\n\tcreateaccount.$on(\"cancel\", /*cancel*/ ctx[4]);\n\tcreateaccount.$on(\"complete\", /*complete*/ ctx[5]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(createaccount.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(createaccount, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(createaccount.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(createaccount.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(createaccount, detaching);\n\t\t}\n\t};\n}\n\n// (62:46) \nfunction create_if_block_5(ctx) {\n\tlet settings;\n\tlet current;\n\tsettings = new Settings({});\n\tsettings.$on(\"cancel\", /*cancel*/ ctx[4]);\n\tsettings.$on(\"complete\", /*complete*/ ctx[5]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(settings.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(settings, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(settings.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(settings.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(settings, detaching);\n\t\t}\n\t};\n}\n\n// (60:46) \nfunction create_if_block_4(ctx) {\n\tlet transact;\n\tlet current;\n\ttransact = new Transact({});\n\ttransact.$on(\"cancel\", /*cancel*/ ctx[4]);\n\ttransact.$on(\"complete\", /*complete*/ ctx[5]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(transact.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(transact, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(transact.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(transact.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(transact, detaching);\n\t\t}\n\t};\n}\n\n// (58:43) \nfunction create_if_block_3(ctx) {\n\tlet login;\n\tlet current;\n\tlogin = new Login({});\n\tlogin.$on(\"cancel\", /*cancel*/ ctx[4]);\n\tlogin.$on(\"complete\", /*complete*/ ctx[5]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(login.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(login, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(login.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(login.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(login, detaching);\n\t\t}\n\t};\n}\n\n// (56:26) \nfunction create_if_block_2(ctx) {\n\tlet prompt_1;\n\tlet current;\n\tprompt_1 = new Prompt({});\n\tprompt_1.$on(\"cancel\", /*cancel*/ ctx[4]);\n\tprompt_1.$on(\"complete\", /*complete*/ ctx[5]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(prompt_1.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(prompt_1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(prompt_1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(prompt_1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(prompt_1, detaching);\n\t\t}\n\t};\n}\n\n// (54:8) {#if $errorDetails}\nfunction create_if_block_1(ctx) {\n\tlet error;\n\tlet current;\n\terror = new Error$1({});\n\terror.$on(\"cancel\", /*cancel*/ ctx[4]);\n\terror.$on(\"complete\", /*complete*/ ctx[5]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(error.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(error, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(error.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(error.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(error, detaching);\n\t\t}\n\t};\n}\n\n// (52:0) <Modal>\nfunction create_default_slot(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block, create_else_block_1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*$active*/ ctx[1]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(if_block_anchor);\n\t\t\t}\n\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet modal;\n\tlet current;\n\n\tmodal = new Modal({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(modal.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(modal, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst modal_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $errorDetails, $prompt, $router, $active*/ 1039) {\n\t\t\t\tmodal_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tmodal.$set(modal_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(modal.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(modal.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(modal, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $prompt;\n\tlet $accountCreationPromise;\n\tlet $loginPromise;\n\tlet $active;\n\tlet $errorDetails;\n\tlet $router;\n\tcomponent_subscribe($$self, prompt, $$value => $$invalidate(0, $prompt = $$value));\n\tcomponent_subscribe($$self, accountCreationPromise, $$value => $$invalidate(7, $accountCreationPromise = $$value));\n\tcomponent_subscribe($$self, loginPromise, $$value => $$invalidate(8, $loginPromise = $$value));\n\tcomponent_subscribe($$self, active, $$value => $$invalidate(1, $active = $$value));\n\tcomponent_subscribe($$self, errorDetails, $$value => $$invalidate(2, $errorDetails = $$value));\n\tcomponent_subscribe($$self, router, $$value => $$invalidate(3, $router = $$value));\n\tlet { i18n } = $$props;\n\tsetContext('i18n', i18n);\n\n\tfunction cancel({ detail }) {\n\t\t// Reject any promises that are waiting for a response\n\t\tif ($loginPromise) {\n\t\t\t$loginPromise.reject(detail);\n\t\t}\n\n\t\tif ($prompt) {\n\t\t\t$prompt.reject(detail);\n\t\t\tprompt.reset();\n\t\t}\n\n\t\trouter.back();\n\t}\n\n\tfunction complete({ detail }) {\n\t\t// Reject any promises that are waiting for a response\n\t\tif ($loginPromise) {\n\t\t\t$loginPromise.resolve(detail);\n\t\t}\n\n\t\tif ($accountCreationPromise) {\n\t\t\t$accountCreationPromise.resolve(detail);\n\t\t}\n\n\t\tif ($prompt) {\n\t\t\t$prompt.resolve(detail);\n\t\t\tprompt.reset();\n\t\t\trouter.back();\n\t\t}\n\t}\n\n\tconst unsubscribe = router.subscribe(current => {\n\t\tif (current && current.path === 'login') {\n\t\t\tallowSettings.set(true);\n\t\t} else {\n\t\t\tallowSettings.set(false);\n\t\t}\n\t});\n\n\tonDestroy(unsubscribe);\n\n\t$$self.$$set = $$props => {\n\t\tif ('i18n' in $$props) $$invalidate(6, i18n = $$props.i18n);\n\t};\n\n\treturn [$prompt, $active, $errorDetails, $router, cancel, complete, i18n];\n}\n\nclass App extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { i18n: 6 });\n\t}\n}\n\nvar H$1=Object.defineProperty,q=Object.defineProperties;var B$1=Object.getOwnPropertyDescriptors;var S$1=Object.getOwnPropertySymbols;var A$1=Object.prototype.hasOwnProperty,N$1=Object.prototype.propertyIsEnumerable;var j$1=(o,t,e)=>t in o?H$1(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,n$1=(o,t)=>{for(var e in t||(t={}))A$1.call(t,e)&&j$1(o,e,t[e]);if(S$1)for(var e of S$1(t))N$1.call(t,e)&&j$1(o,e,t[e]);return o},u$2=(o,t)=>q(o,B$1(t));var T$1=(o,t)=>{var e={};for(var a in o)A$1.call(o,a)&&t.indexOf(a)<0&&(e[a]=o[a]);if(o!=null&&S$1)for(var a of S$1(o))t.indexOf(a)<0&&N$1.call(o,a)&&(e[a]=o[a]);return e};var C$1=[\"error\",\"warn\",\"debug\"],z$1=({logger:o=console,level:t=C$1[1],prefix:e=\"[i18n]: \"})=>C$1.reduce((a,r,s)=>u$2(n$1({},a),{[r]:i=>C$1.indexOf(t)>=s&&o[r](`${e}${i}`)}),{}),d$1=z$1({}),V$1=o=>{d$1=o;};var F$1=l=>{var c=l,{parser:o,key:t,params:e,translations:a,locale:r,fallbackLocale:s}=c,i=T$1(c,[\"parser\",\"key\",\"params\",\"translations\",\"locale\",\"fallbackLocale\"]);if(!t)return d$1.warn(`No translation key provided ('${r}' locale). Skipping translation...`),\"\";if(!r)return d$1.warn(`No locale provided for '${t}' key. Skipping translation...`),\"\";let f=(a[r]||{})[t];return s&&f===void 0&&(f=(a[s]||{})[t]),i.hasOwnProperty(\"fallbackValue\")&&f===void 0?i.fallbackValue:o.parse(f,e,r,t)},h$1=(...o)=>o.length?o.filter(t=>!!t).map(t=>{let e=`${t}`.toLowerCase();try{let[a]=Intl.Collator.supportedLocalesOf(t);if(!a)throw new Error;e=a;}catch(a){d$1.warn(`'${t}' locale is non-standard.`);}return e}):[],x$1=(o,t,e)=>Object.keys(o||{}).reduce((a,r)=>{let s=o[r],i=e?`${e}.${r}`:`${r}`;return t&&Array.isArray(s)?u$2(n$1({},a),{[i]:s.map(l=>x$1(l,t))}):s&&typeof s==\"object\"?n$1(n$1({},a),x$1(s,t,i)):u$2(n$1({},a),{[i]:s})},{}),G$1=o=>o.reduce((t,{key:e,data:a,locale:r})=>{if(!a)return t;let[s]=h$1(r),i=u$2(n$1({},t[s]||{}),{[e]:a});return u$2(n$1({},t),{[s]:i})},{}),E$1=async o=>{try{let t=await Promise.all(o.map(r=>{var s=r,{loader:e}=s,a=T$1(s,[\"loader\"]);return new Promise(async i=>{let l;try{l=await e();}catch(c){d$1.error(`Failed to load translation. Verify your '${a.locale}' > '${a.key}' Loader.`),d$1.error(c);}i(u$2(n$1({loader:e},a),{data:l}));})}));return G$1(t)}catch(t){d$1.error(t);}return {}},W$1=o=>t=>{try{if(typeof t==\"string\")return t===o;if(typeof t==\"object\")return t.test(o)}catch(e){d$1.error(\"Invalid route config!\");}return !1},O$1=(o,t)=>{let e=!0;try{e=Object.keys(o).filter(a=>o[a]!==void 0).every(a=>o[a]===t[a]);}catch(a){}return e};var D$2=1e3*60*60*24,K=class{constructor(t){this.cachedAt=0;this.loadedKeys={};this.currentRoute=writable();this.config=writable();this.isLoading=writable(!1);this.promises=new Set;this.loading={subscribe:this.isLoading.subscribe,toPromise:(t,e)=>{let{fallbackLocale:a}=get_store_value(this.config),r=Array.from(this.promises).filter(s=>{let i=O$1({locale:h$1(t)[0],route:e},s);return a&&(i=i||O$1({locale:h$1(a)[0],route:e},s)),i}).map(({promise:s})=>s);return Promise.all(r)},get:()=>get_store_value(this.isLoading)};this.privateRawTranslations=writable({});this.rawTranslations={subscribe:this.privateRawTranslations.subscribe,get:()=>get_store_value(this.rawTranslations)};this.privateTranslations=writable({});this.translations={subscribe:this.privateTranslations.subscribe,get:()=>get_store_value(this.translations)};this.locales=u$2(n$1({},derived([this.config,this.privateTranslations],([t,e])=>{if(!t)return [];let{loaders:a=[]}=t,r=a.map(({locale:i})=>i),s=Object.keys(e).map(i=>i);return Array.from(new Set([...h$1(...r),...h$1(...s)]))},[])),{get:()=>get_store_value(this.locales)});this.internalLocale=writable();this.loaderTrigger=derived([this.internalLocale,this.currentRoute],([t,e],a)=>{var r,s;t!==void 0&&e!==void 0&&!(t===((r=get_store_value(this.loaderTrigger))==null?void 0:r[0])&&e===((s=get_store_value(this.loaderTrigger))==null?void 0:s[1]))&&(d$1.debug(\"Triggering translation load...\"),a([t,e]));},[]);this.localeHelper=writable();this.locale={subscribe:this.localeHelper.subscribe,forceSet:this.localeHelper.set,set:this.internalLocale.set,update:this.internalLocale.update,get:()=>get_store_value(this.locale)};this.initialized=derived([this.locale,this.currentRoute,this.privateTranslations],([t,e,a],r)=>{get_store_value(this.initialized)||r(t!==void 0&&e!==void 0&&!!Object.keys(a).length);});this.translation=derived([this.privateTranslations,this.locale,this.isLoading],([t,e,a],r)=>{let s=t[e];s&&Object.keys(s).length&&!a&&r(s);},{});this.t=u$2(n$1({},derived([this.config,this.translation],r=>{var[s]=r,i=s,{parser:t,fallbackLocale:e}=i,a=T$1(i,[\"parser\",\"fallbackLocale\"]);return (l,...c)=>F$1(n$1({parser:t,key:l,params:c,translations:this.translations.get(),locale:this.locale.get(),fallbackLocale:e},a.hasOwnProperty(\"fallbackValue\")?{fallbackValue:a.fallbackValue}:{}))})),{get:(t,...e)=>get_store_value(this.t)(t,...e)});this.l=u$2(n$1({},derived([this.config,this.translations],s=>{var[i,...l]=s,c=i,{parser:t,fallbackLocale:e}=c,a=T$1(c,[\"parser\",\"fallbackLocale\"]),[r]=l;return (f,b,...R)=>F$1(n$1({parser:t,key:b,params:R,translations:r,locale:f,fallbackLocale:e},a.hasOwnProperty(\"fallbackValue\")?{fallbackValue:a.fallbackValue}:{}))})),{get:(t,e,...a)=>get_store_value(this.l)(t,e,...a)});this.getLocale=t=>{let{fallbackLocale:e}=get_store_value(this.config)||{},a=t||e;if(!a)return;let r=this.locales.get();return r.find(i=>h$1(a).includes(i))||r.find(i=>h$1(e).includes(i))};this.setLocale=t=>{if(t&&t!==get_store_value(this.internalLocale))return d$1.debug(`Setting '${t}' locale.`),this.internalLocale.set(t),this.loading.toPromise(t,get_store_value(this.currentRoute))};this.setRoute=t=>{if(t!==get_store_value(this.currentRoute)){d$1.debug(`Setting '${t}' route.`),this.currentRoute.set(t);let e=get_store_value(this.internalLocale);return this.loading.toPromise(e,t)}};this.loadConfig=async t=>{await this.configLoader(t);};this.getTranslationProps=async(t=this.locale.get(),e=get_store_value(this.currentRoute))=>{let a=get_store_value(this.config);if(!a||!t)return [];let r=this.translations.get(),{loaders:s,fallbackLocale:i=\"\",cache:l=D$2}=a||{},c=Number.isNaN(+l)?D$2:+l;this.cachedAt?Date.now()>c+this.cachedAt&&(d$1.debug(\"Refreshing cache.\"),this.loadedKeys={},this.cachedAt=0):(d$1.debug(\"Setting cache timestamp.\"),this.cachedAt=Date.now());let[f,b]=h$1(t,i),R=r[f],I=r[b],k=(s||[]).map($=>{var L=$,{locale:p}=L,y=T$1(L,[\"locale\"]);return u$2(n$1({},y),{locale:h$1(p)[0]})}).filter(({routes:p})=>!p||(p||[]).some(W$1(e))).filter(({key:p,locale:y})=>y===f&&(!R||!(this.loadedKeys[f]||[]).includes(p))||i&&y===b&&(!I||!(this.loadedKeys[b]||[]).includes(p)));if(k.length){this.isLoading.set(!0),d$1.debug(\"Fetching translations...\");let p=await E$1(k);this.isLoading.set(!1);let y=Object.keys(p).reduce((L,P)=>u$2(n$1({},L),{[P]:Object.keys(p[P])}),{}),$=k.filter(({key:L,locale:P})=>(y[P]||[]).some(w=>`${w}`.startsWith(L))).reduce((L,{key:P,locale:w})=>u$2(n$1({},L),{[w]:[...L[w]||[],P]}),{});return [p,$]}return []};this.addTranslations=(t,e)=>{if(!t)return;let a=get_store_value(this.config),{preprocess:r}=a||{};d$1.debug(\"Adding translations...\");let s=Object.keys(t||{});this.privateRawTranslations.update(i=>s.reduce((l,c)=>u$2(n$1({},l),{[c]:n$1(n$1({},l[c]||{}),t[c])}),i)),this.privateTranslations.update(i=>s.reduce((l,c)=>{let f=!0,b=t[c];return typeof r==\"function\"&&(b=r(b)),(typeof r==\"function\"||r===\"none\")&&(f=!1),u$2(n$1({},l),{[c]:n$1(n$1({},l[c]||{}),f?x$1(b,r===\"preserveArrays\"):b)})},i)),s.forEach(i=>{let l=Object.keys(t[i]).map(c=>`${c}`.split(\".\")[0]);e&&(l=e[i]),this.loadedKeys[i]=Array.from(new Set([...this.loadedKeys[i]||[],...l||[]]));});};this.loader=async([t,e])=>{let a=this.getLocale(t)||void 0;d$1.debug(`Adding loader promise for '${a}' locale and '${e}' route.`);let r=(async()=>{let s=await this.getTranslationProps(a,e);s.length&&this.addTranslations(...s);})();this.promises.add({locale:a,route:e,promise:r}),r.then(()=>{a&&this.locale.get()!==a&&this.locale.forceSet(a);});};this.loadTranslations=(t,e=get_store_value(this.currentRoute)||\"\")=>{let a=this.getLocale(t);if(a)return this.setRoute(e),this.setLocale(a),this.loading.toPromise(a,e)};this.loaderTrigger.subscribe(this.loader),this.isLoading.subscribe(async e=>{e&&this.promises.size&&(await this.loading.toPromise(),this.promises.clear(),d$1.debug(\"Loader promises have been purged.\"));}),t&&this.loadConfig(t);}async configLoader(t){if(!t)return d$1.error(\"No config provided!\");let l=t,{initLocale:e,fallbackLocale:a,translations:r,log:s}=l,i=T$1(l,[\"initLocale\",\"fallbackLocale\",\"translations\",\"log\"]);s&&V$1(z$1(s)),[e]=h$1(e),[a]=h$1(a),d$1.debug(\"Setting config.\"),this.config.set(n$1({initLocale:e,fallbackLocale:a,translations:r},i)),r&&this.addTranslations(r),e&&await this.loadTranslations(e);}};\n\nvar R=Object.defineProperty,A=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var x=Object.getOwnPropertySymbols;var C=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var p$1=(t,e,r)=>e in t?R(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,u$1=(t,e)=>{for(var r in e||(e={}))C.call(e,r)&&p$1(t,r,e[r]);if(x)for(var r of x(e))O.call(e,r)&&p$1(t,r,e[r]);return t},T=(t,e)=>A(t,E(e));var c=(t,e)=>{var r={};for(var i in t)C.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(t!=null&&x)for(var i of x(t))e.indexOf(i)<0&&O.call(t,i)&&(r[i]=t[i]);return r};var j=(t,e)=>{for(var r in e)R(t,r,{get:e[r],enumerable:!0});};var h={};j(h,{ago:()=>Q,currency:()=>W,date:()=>G,eq:()=>$,gt:()=>L,gte:()=>z,lt:()=>V,lte:()=>v,ne:()=>S,number:()=>B});var g=(t,e)=>{let{modifierDefaults:r}=e||{},{[t]:i}=r||{};return i||{}};var $=({value:t,options:e=[],defaultValue:r=\"\"})=>(e.find(({key:i})=>`${i}`.toLowerCase()===`${t}`.toLowerCase())||{}).value||r,S=({value:t,options:e=[],defaultValue:r=\"\"})=>(e.find(({key:i})=>`${i}`.toLowerCase()!==`${t}`.toLowerCase())||{}).value||r,V=({value:t,options:e=[],defaultValue:r=\"\"})=>(e.sort((o,n)=>+o.key-+n.key).find(({key:o})=>+t<+o)||{}).value||r,L=({value:t,options:e=[],defaultValue:r=\"\"})=>(e.sort((o,n)=>+n.key-+o.key).find(({key:o})=>+t>+o)||{}).value||r,v=({value:t,options:e=[],defaultValue:r=\"\"})=>$({value:t,options:e,defaultValue:V({value:t,options:e,defaultValue:r})}),z=({value:t,options:e=[],defaultValue:r=\"\"})=>$({value:t,options:e,defaultValue:L({value:t,options:e,defaultValue:r})}),B=({value:t,props:e,defaultValue:r=\"\",locale:i=\"\",parserOptions:o})=>{if(!i)return \"\";let s=g(\"number\",o),{maximumFractionDigits:n}=s,m=c(s,[\"maximumFractionDigits\"]),d=(e==null?void 0:e.number)||{},{maximumFractionDigits:f=n||2}=d,a=c(d,[\"maximumFractionDigits\"]);return new Intl.NumberFormat(i,u$1(T(u$1({},m),{maximumFractionDigits:f}),a)).format(+t||+r)},G=({value:t,props:e,defaultValue:r=\"\",locale:i=\"\",parserOptions:o})=>{if(!i)return \"\";let n=c(g(\"date\",o),[]),m=c((e==null?void 0:e.date)||{},[]);return new Intl.DateTimeFormat(i,u$1(u$1({},n),m)).format(+t||+r)},D$1=[{key:\"second\",multiplier:1e3},{key:\"minute\",multiplier:60},{key:\"hour\",multiplier:60},{key:\"day\",multiplier:24},{key:\"week\",multiplier:7},{key:\"month\",multiplier:13/3},{key:\"year\",multiplier:12}],N=(t=\"\",e=\"\")=>new RegExp(`^${t}s?$`).test(e),H=t=>D$1.indexOf(D$1.find(({key:e})=>N(e,t))),J=(t,e)=>D$1.reduce(([r,i],{key:o,multiplier:n},m)=>{if(N(i,e))return [r,i];if(!i||m===H(i)+1){let f=Math.round(r/n);if(!i||Math.abs(f)>=1||e!==\"auto\")return [f,o]}return [r,i]},[t,\"\"]),Q=({value:t,defaultValue:e=\"\",locale:r=\"\",props:i,parserOptions:o})=>{if(!r)return \"\";let k=g(\"ago\",o),{format:n,numeric:m}=k,f=c(k,[\"format\",\"numeric\"]),y=(i==null?void 0:i.ago)||{},{format:a=n||\"auto\",numeric:s=m||\"auto\"}=y,d=c(y,[\"format\",\"numeric\"]),M=+t||+e,l=J(M,a);return new Intl.RelativeTimeFormat(r,u$1(T(u$1({},f),{numeric:s}),d)).format(...l)},W=({value:t,defaultValue:e=\"\",locale:r=\"\",props:i,parserOptions:o})=>{if(!r)return \"\";let M=g(\"currency\",o),{ratio:n,currency:m}=M,f=c(M,[\"ratio\",\"currency\"]),l=(i==null?void 0:i.currency)||{},{ratio:a=n||1,currency:s=m}=l,d=c(l,[\"ratio\",\"currency\"]);return new Intl.NumberFormat(r,u$1(T(u$1({},f),{style:\"currency\",currency:s}),d)).format(a*(t||e))};var X=t=>typeof t==\"string\"&&/{{(?:(?!{{|}}).)+}}/.test(t),F=t=>typeof t==\"string\"?t.replace(/\\\\(?=:|;|{|})/g,\"\"):t,Y=({value:t,props:e,payload:r,parserOptions:i,locale:o})=>`${t}`.replace(/{{\\s*(?:(?!{{|}}).)+\\s*}}/g,n=>{let m=F(`${n.match(/(?!{|\\s).+?(?!\\\\[:;]).(?=\\s*(?:[:;]|}}$))/)}`),f=r==null?void 0:r[m],[,a=\"\"]=n.match(/.+?(?!\\\\;).;\\s*default\\s*:\\s*([^\\s:;].+?(?:\\\\[:;]|[^;}])*)(?=\\s*(?:;|}}$))/i)||[];a=a||(r==null?void 0:r.default)||\"\";let[,s=\"\"]=n.match(/{{\\s*(?:[^;]|(?:\\\\;))+\\s*(?:(?!\\\\:).[:])\\s*(?!\\s)((?:\\\\;|[^;])+?)(?=\\s*(?:[;]|}}$))/i)||[];if(f===void 0&&s!==\"ne\")return a;let d=!!s,{customModifiers:M}=i||{},l=u$1(u$1({},h),M||{});s=Object.keys(l).includes(s)?s:\"eq\";let k=l[s],y=(n.match(/[^\\s:;{](?:[^;]|\\\\[;])+[^:;}]/gi)||[]).reduce((b,I,q)=>{if(q>0){let P=F(`${I.match(/(?:(?:\\\\:)|[^:])+/)}`.trim()),w=`${I.match(/(?:(?:\\\\:)|[^:])+$/)}`.trimStart();if(P&&P!==\"default\"&&w)return [...b,{key:P,value:w}]}return b},[]);return !d&&!y.length?f:k({value:f,options:y,props:e,defaultValue:a,locale:o,parserOptions:i})}),U=({value:t,props:e,payload:r,parserOptions:i,locale:o})=>{if(X(t)){let n=Y({value:t,payload:r,props:e,parserOptions:i,locale:o});return U({value:n,payload:r,props:e,parserOptions:i,locale:o})}else return F(t)},Z=t=>({parse:(e,[r,i],o,n)=>(r!=null&&r.default&&e===void 0&&(e=r.default),e===void 0&&(e=n),U({value:e,payload:r,props:i,parserOptions:t,locale:o}))}),rt=Z;\n\nvar n=Object.defineProperty,M=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var f=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var i=(r,o,e)=>o in r?n(r,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[o]=e,p=(r,o)=>{for(var e in o||(o={}))f.call(o,e)&&i(r,e,o[e]);if(s)for(var e of s(o))P.call(o,e)&&i(r,e,o[e]);return r},d=(r,o)=>M(r,u(o));var l=(r,o)=>{var e={};for(var a in r)f.call(r,a)&&o.indexOf(a)<0&&(e[a]=r[a]);if(r!=null&&s)for(var a of s(r))o.indexOf(a)<0&&P.call(r,a)&&(e[a]=r[a]);return e};var m=e=>{var a=e,{parserOptions:r={}}=a,o=l(a,[\"parserOptions\"]);return d(p({},o),{parser:rt(r)})},t=class extends K{constructor(e){super(e&&m(e));this.loadConfig=e=>super.configLoader(m(e));}},D=t;\n\nvar accept$4 = \"Accept\";\nvar cancel$4 = \"Cancel\";\nvar close$4 = \"Close\";\nvar decline$4 = \"Decline\";\nvar error$4 = {\n\ttitle: \"Error\",\n\tsubtitle: \"An Error happened.\"\n};\nvar loading$4 = \"Loading…\";\nvar login$4 = {\n\tcomplete: \"Awaiting response from your wallet.\",\n\tenter: {\n\t\taccount: \"Enter account name\",\n\t\tlookup: \"Lookup Account\",\n\t\tnot_found: \"Unable to find account\"\n\t},\n\tselect: {\n\t\taccount: \"Select an available account\",\n\t\tblockchain: \"Select which blockchain to login with\",\n\t\twallet: \"Connect your wallet to login\",\n\t\tno_accounts: \"No accounts found\",\n\t\tno_match: \"No accounts found matching {{publicKey}}\"\n\t},\n\ttitle: \"Login\",\n\t\"title-app\": \"{{appName}}\"\n};\nvar transact$4 = {\n\ttitle: \"Transact\",\n\tsubtitle: \" \",\n\tprocessing: \"Processing transaction…\",\n\tsigning: \"Signing transaction\",\n\tsigned: \"Transaction signed\",\n\tbroadcasting: \"Broadcasting transaction\",\n\tbroadcasted: \"Transaction sent\"\n};\nvar settings$4 = {\n\ttitle: \"Settings\",\n\tlanguage: {\n\t\ttitle: \"Language\"\n\t},\n\ttheme: {\n\t\ttitle: \"Theme\",\n\t\tautomatic: \"Automatic\",\n\t\tlight: \"Light\",\n\t\tdark: \"Dark\"\n\t},\n\tanimations: {\n\t\ttitle: \"Animations\",\n\t\tenabled: \"Enabled\",\n\t\tdisabled: \"Disabled\"\n\t},\n\tgithub: \"Report an issue on Github\",\n\tabout: {\n\t\ttitle: \"About\",\n\t\tversion: \"Version {{version}}\",\n\t\tauthor: \"An open source SDK for Antelope-based blockchains created by Greymass and made possible through funding by the Antelope Coalition (EOS, Telos, UX, and WAX).\",\n\t\tlink: \"Read more about Wharf\"\n\t}\n};\nvar en = {\n\taccept: accept$4,\n\tcancel: cancel$4,\n\tclose: close$4,\n\tdecline: decline$4,\n\terror: error$4,\n\tloading: loading$4,\n\tlogin: login$4,\n\ttransact: transact$4,\n\tsettings: settings$4\n};\n\nvar accept$3 = \"받아들이다\";\nvar cancel$3 = \"취소\";\nvar close$3 = \"닫다\";\nvar decline$3 = \"거절하다\";\nvar error$3 = {\n\ttitle: \"오류\",\n\tsubtitle: \"오류가 발생했습니다.\"\n};\nvar loading$3 = \"로드...\";\nvar login$3 = {\n\tcomplete: \"\",\n\tenter: {\n\t\taccount: \"Enter account name\",\n\t\tlookup: \"Lookup Account\",\n\t\tnot_found: \"Unable to find account\"\n\t},\n\tselect: {\n\t\taccount: \"계정 선택\",\n\t\tblockchain: \"블록체인 선택\",\n\t\twallet: \"지갑 선택\",\n\t\tno_match: \"{{publicKey}}와 일치하는 계정을 찾을 수 없습니다.\"\n\t},\n\ttitle: \"로그인\",\n\t\"title-app\": \"{{appName}}에 로그인\"\n};\nvar transact$3 = {\n\ttitle: \"거래하다\",\n\tsubtitle: \" \",\n\tprocessing: \"Performing transaction...\",\n\tsigning: \"서명 트랜잭션\",\n\tsigned: \"트랜잭션 서명\",\n\tbroadcasting: \"방송 거래\",\n\tbroadcasted: \"거래 방송\"\n};\nvar settings$3 = {\n\ttitle: \"설정\",\n\tlanguage: {\n\t\ttitle: \"언어\"\n\t},\n\ttheme: {\n\t\ttitle: \"테마\",\n\t\tautomatic: \"자동\",\n\t\tlight: \"밝은 테마\",\n\t\tdark: \"어두운 테마\"\n\t},\n\tanimations: {\n\t\ttitle: \"애니메이션\",\n\t\tenabled: \"활성화\",\n\t\tdisabled: \"비활성화\"\n\t},\n\tgithub: \"Github에서 문제 보고\",\n\tabout: {\n\t\ttitle: \"정보\",\n\t\tversion: \"{{version}} 버전\",\n\t\tauthor: \"\",\n\t\tlink: \"부두에 대해 자세히 알아보기\"\n\t}\n};\nvar ko = {\n\taccept: accept$3,\n\tcancel: cancel$3,\n\tclose: close$3,\n\tdecline: decline$3,\n\terror: error$3,\n\tloading: loading$3,\n\tlogin: login$3,\n\ttransact: transact$3,\n\tsettings: settings$3\n};\n\nvar accept$2 = \"接受\";\nvar cancel$2 = \"取消\";\nvar close$2 = \"关闭\";\nvar decline$2 = \"下降\";\nvar error$2 = {\n\ttitle: \"错误\",\n\tsubtitle: \"发生错误。\"\n};\nvar loading$2 = \"加载中。。。\";\nvar login$2 = {\n\tcomplete: \"\",\n\tenter: {\n\t\taccount: \"Enter account name\",\n\t\tlookup: \"Lookup Account\",\n\t\tnot_found: \"Unable to find account\"\n\t},\n\tselect: {\n\t\taccount: \"选择一个帐户\",\n\t\tblockchain: \"选择一个区块链\",\n\t\twallet: \"选择一个钱包\",\n\t\tno_match: \"未找到与 {{publicKey}} 匹配的帐户。\"\n\t},\n\ttitle: \"登陆\",\n\t\"title-app\": \"登陆到 {{appName}}\"\n};\nvar transact$2 = {\n\ttitle: \"办理\",\n\tsubtitle: \" \",\n\tprocessing: \"Performing transaction...\",\n\tsigning: \"签署交易\",\n\tsigned: \"交易已签署\",\n\tbroadcasting: \"广播交易\",\n\tbroadcasted: \"交易广播\"\n};\nvar settings$2 = {\n\ttitle: \"设置\",\n\tlanguage: {\n\t\ttitle: \"语言\"\n\t},\n\ttheme: {\n\t\ttitle: \"主题\",\n\t\tautomatic: \"自动\",\n\t\tlight: \"浅色\",\n\t\tdark: \"深色\"\n\t},\n\tanimations: {\n\t\ttitle: \"动画\",\n\t\tenabled: \"启用\",\n\t\tdisabled: \"禁用\"\n\t},\n\tgithub: \"在 Github 上报告问题\",\n\tabout: {\n\t\ttitle: \"关于\",\n\t\tversion: \"版本 {{version}}\",\n\t\tauthor: \"\",\n\t\tlink: \"阅读更多关于码头的信息\"\n\t}\n};\nvar zh_hans = {\n\taccept: accept$2,\n\tcancel: cancel$2,\n\tclose: close$2,\n\tdecline: decline$2,\n\terror: error$2,\n\tloading: loading$2,\n\tlogin: login$2,\n\ttransact: transact$2,\n\tsettings: settings$2\n};\n\nvar accept$1 = \"接受\";\nvar cancel$1 = \"取消\";\nvar close$1 = \"關閉\";\nvar decline$1 = \"下降\";\nvar error$1 = {\n\ttitle: \"錯誤\",\n\tsubtitle: \"發生錯誤。\"\n};\nvar loading$1 = \"裝載。。。\";\nvar login$1 = {\n\tcomplete: \"\",\n\tenter: {\n\t\taccount: \"Enter account name\",\n\t\tlookup: \"Lookup Account\",\n\t\tnot_found: \"Unable to find account\"\n\t},\n\tselect: {\n\t\taccount: \"選擇一個帳戶\",\n\t\tblockchain: \"選擇一個區塊鏈\",\n\t\twallet: \"選擇一個錢包\",\n\t\tno_match: \"未找到與 {{publicKey}} 匹配的帳戶。\"\n\t},\n\ttitle: \"登錄\",\n\t\"title-app\": \"登錄到 {{appName}}\"\n};\nvar transact$1 = {\n\ttitle: \"辦理\",\n\tsubtitle: \"\",\n\tprocessing: \"Performing transaction...\",\n\tsigning: \"簽署交易\",\n\tsigned: \"交易已簽署\",\n\tbroadcasting: \"廣播交易\",\n\tbroadcasted: \"交易廣播\"\n};\nvar settings$1 = {\n\ttitle: \"設置\",\n\tlanguage: {\n\t\ttitle: \"語言\"\n\t},\n\ttheme: {\n\t\ttitle: \"主題\",\n\t\tautomatic: \"自動\",\n\t\tlight: \"光\",\n\t\tdark: \"暗\"\n\t},\n\tanimations: {\n\t\ttitle: \"動畫\",\n\t\tenabled: \"啟用\",\n\t\tdisabled: \"殘\"\n\t},\n\tgithub: \"在 Github 上報告問題\",\n\tabout: {\n\t\ttitle: \"關於\",\n\t\tversion: \"版本 {{version}}\",\n\t\tauthor: \"\",\n\t\tlink: \"閱讀更多關於碼頭的資訊\"\n\t}\n};\nvar zh_hant = {\n\taccept: accept$1,\n\tcancel: cancel$1,\n\tclose: close$1,\n\tdecline: decline$1,\n\terror: error$1,\n\tloading: loading$1,\n\tlogin: login$1,\n\ttransact: transact$1,\n\tsettings: settings$1\n};\n\nvar accept = \"Kabul Et\";\nvar cancel = \"İptal\";\nvar close = \"Kapat\";\nvar decline = \"Reddet\";\nvar error = {\n\ttitle: \"Hata\",\n\tsubtitle: \"Bir Hata meydana geldi.\"\n};\nvar loading = \"Yükleniyor...\";\nvar login = {\n\tcomplete: \"Cüzdanınızdan yanıt bekleniyor.\",\n\tenter: {\n\t\taccount: \"Hesap adını girin\",\n\t\tlookup: \"Hesap Ara\",\n\t\tnot_found: \"Hesap bulunamadı\"\n\t},\n\tselect: {\n\t\taccount: \"Mevcut bir hesap seçin\",\n\t\tblockchain: \"Hangi blockchain ile giriş yapılacağını seçin\",\n\t\twallet: \"Cüzdanınızı bağlayarak giriş yapın\",\n\t\tno_match: \"{{publicKey}} ile eşleşen hesap bulunamadı\"\n\t},\n\ttitle: \"Giriş\",\n\t\"title-app\": \"{{appName}}\"\n};\nvar transact = {\n\ttitle: \"İşlem\",\n\tsubtitle: \" \",\n\tprocessing: \"İşlem yapılıyor...\",\n\tsigning: \"İşlem imzalanıyor\",\n\tsigned: \"İşlem imzalandı\",\n\tbroadcasting: \"İşlem yayınlanıyor\",\n\tbroadcasted: \"İşlem gönderildi\"\n};\nvar settings = {\n\ttitle: \"Ayarlar\",\n\tlanguage: {\n\t\ttitle: \"Dil\"\n\t},\n\ttheme: {\n\t\ttitle: \"Tema\",\n\t\tautomatic: \"Otomatik\",\n\t\tlight: \"Açık\",\n\t\tdark: \"Koyu\"\n\t},\n\tanimations: {\n\t\ttitle: \"Animasyonlar\",\n\t\tenabled: \"Etkin\",\n\t\tdisabled: \"Devre Dışı\"\n\t},\n\tgithub: \"Github üzerinde bir sorun bildir\",\n\tabout: {\n\t\ttitle: \"Hakkında\",\n\t\tversion: \"Sürüm {{version}}\",\n\t\tauthor: \"Greymass tarafından oluşturulan ve Antelope tabanlı blockchain'ler için bir açık kaynak SDK olan Wharf'ı, Antelope Koalisyonu (EOS, Telos, UX ve WAX) tarafından finanse edilerek mümkün kılınmıştır.\",\n\t\tlink: \"Wharf hakkında daha fazla bilgi edinin\"\n\t}\n};\nvar tr = {\n\taccept: accept,\n\tcancel: cancel,\n\tclose: close,\n\tdecline: decline,\n\terror: error,\n\tloading: loading,\n\tlogin: login,\n\ttransact: transact,\n\tsettings: settings\n};\n\nconst translations = {\n    en: { ...lang, ...en },\n    ko: { ...lang, ...ko },\n    'zh-Hans': { ...lang, ...zh_hans },\n    'zh-Hant': { ...lang, ...zh_hant },\n    tr: { ...lang, ...tr },\n};\nconst ZH_LANGUAGE_MAPPINGS = {\n    zh: 'zh-Hans',\n    'zh-cn': 'zh-Hans',\n    'zh-sg': 'zh-Hans',\n    'zh-hans': 'zh-Hans',\n    'zh-tw': 'zh-Hant',\n    'zh-hk': 'zh-Hant',\n    'zh-hant': 'zh-Hant',\n};\nconst config = {\n    initLocale: 'en',\n    translations,\n};\nconst makeLocalization = (options = {}) => {\n    const params = {\n        ...config,\n        ...options,\n    };\n    return new D(params);\n};\nfunction mapChineseLanguage(lang) {\n    if (!lang)\n        return 'zh-Hans';\n    const lowerLang = lang.toLowerCase().trim();\n    return ZH_LANGUAGE_MAPPINGS[lowerLang] || 'zh-Hans';\n}\nnew D(config);\n\nconst defaultWebRendererOptions = {\n    id: 'wharfkit-web-ui',\n    minimal: false,\n};\nconst getNavigatorLanguage = () => {\n    const lang = navigator.languages && navigator.languages.length\n        ? navigator.languages[0]\n        : navigator.language || 'en';\n    let mainLang = lang.split('-')[0];\n    if ('zh' === mainLang) {\n        mainLang = mapChineseLanguage(lang);\n    }\n    return mainLang;\n};\nclass WebRenderer extends AbstractUserInterface {\n    constructor(options = defaultWebRendererOptions) {\n        super();\n        this.elementId = 'wharfkit-web-ui';\n        this.initialized = false;\n        this.logging = false;\n        this.minimal = false;\n        // Add every cancelable promise to the list of cancelable promises\n        this.addCancelablePromise = (promise) => cancelablePromises.update((current) => [...current, promise]);\n        this.options = options;\n        if (typeof document !== 'undefined') {\n            this.initialize();\n        }\n    }\n    initialize() {\n        // Prevent multiple initializations\n        if (this.initialized) {\n            return;\n        }\n        const { options } = this;\n        // Create the dialog element and its shadow root\n        this.element = document.createElement('div');\n        this.elementId = options.id || defaultWebRendererOptions.id;\n        this.element.id = this.elementId;\n        this.shadow = this.element.attachShadow({ mode: 'closed' });\n        // Load translations for the current locale\n        this.i18n = makeLocalization();\n        let lang = getNavigatorLanguage();\n        this.minimal = options.minimal || false;\n        const settingsLanguage = get_store_value(settings$5).language;\n        if (settingsLanguage) {\n            lang = settingsLanguage;\n        }\n        if (options.logging !== undefined) {\n            this.logging = options.logging;\n        }\n        this.log(`Setting language to ${lang}`);\n        settings$5.update((current) => ({ ...current, language: lang }));\n        this.i18n.loadTranslations(lang);\n        if (document.readyState === 'complete' || document.readyState === 'interactive') {\n            // Document is ready, append element\n            this.appendDialogElement();\n        }\n        else {\n            // Add listener to append to body\n            document.addEventListener('DOMContentLoaded', () => this.appendDialogElement());\n        }\n        this.initialized = true;\n    }\n    appendDialogElement() {\n        const existing = document.getElementById(this.elementId);\n        if (!this.element || !this.shadow) {\n            throw new Error('The WebRenderer is not initialized. Call the initialize method first.');\n        }\n        if (!existing) {\n            document.body.append(this.element);\n            document.removeEventListener('DOMContentLoaded', () => this.appendDialogElement());\n            new App({\n                target: this.shadow,\n                props: {\n                    i18n: this.i18n,\n                },\n            });\n        }\n    }\n    log(...args) {\n        if (this.logging) {\n            // eslint-disable-next-line no-console\n            console.log('WebRenderer, LOG:', ...args);\n        }\n    }\n    async login(context) {\n        this.log('login', context);\n        prompt.set(undefined);\n        router.push('login');\n        const promise = cancelable(new Promise((resolve, reject) => loginPromise.set({\n            reject,\n            resolve,\n        })));\n        this.addCancelablePromise(promise.cancel);\n        loginContext.set(context);\n        await promise;\n        if (this.minimal) {\n            active.set(false);\n        }\n        return promise;\n    }\n    async onError(error) {\n        // Determine if this was a silent/cancelable error\n        const isCancelable = error instanceof Canceled;\n        const isSilent = isCancelable && error.silent === true;\n        this.log('onError', {\n            isCancelable,\n            isSilent,\n            error,\n        });\n        // If it was, don't display the error\n        if (isSilent) {\n            return;\n        }\n        if (this.minimal) {\n            active.set(false);\n        }\n        else {\n            // Make sure the dialog is active\n            active.set(true);\n            // Set the error state\n            errorDetails.set(String(error));\n            // Push the new path to the router\n            router.push('error');\n        }\n    }\n    async onAccountCreate(context) {\n        this.log('onAccountCreate', context);\n        // Make sure the dialog is active\n        active.set(true);\n        // Push the new path to the router\n        router.push('create-account');\n        const promise = cancelable(new Promise((resolve, reject) => accountCreationPromise.set({\n            reject,\n            resolve,\n        })));\n        this.addCancelablePromise(promise.cancel);\n        accountCreationContext.set(context);\n        return promise;\n    }\n    async onAccountCreateComplete() {\n        this.log('onAccountCreateComplete');\n        // Close the dialog once the login completes\n        active.set(false);\n        // Reset all data in the state\n        resetState();\n    }\n    async onLogin() {\n        this.log('onLogin');\n        // Make sure the dialog is active\n        active.set(true);\n        // Set the title/subtitle to match the login state\n        props.update((current) => ({\n            ...current,\n            title: this.i18n.t.get('login.title', { default: 'Login' }),\n            subtitle: '',\n        }));\n        // Push the new path to the router\n        router.push('login');\n    }\n    async onLoginComplete() {\n        this.log('onLoginResult');\n        // Close the dialog once the login completes\n        active.set(false);\n        // Reset all data in the state\n        resetState();\n    }\n    async onTransact() {\n        this.log('onTransact');\n        // Make sure the dialog is active\n        if (!this.minimal) {\n            active.set(true);\n        }\n        // Set the title/subtitle to match the transact state\n        props.update((c) => ({\n            ...c,\n            title: this.i18n.t.get('transact.title', { default: 'Transact' }),\n            subtitle: '',\n        }));\n        // Push the new path to the router\n        router.push('transact');\n    }\n    async onTransactComplete() {\n        this.log('onTransactResult');\n        // Reset all data in the state\n        resetState();\n        // Close the dialog once the transact completes\n        active.set(false);\n    }\n    async onSign() {\n        this.log('onSign');\n    }\n    async onSignComplete() {\n        this.log('onSignComplete');\n    }\n    async onBroadcast() {\n        this.log('onBroadcast');\n    }\n    async onBroadcastComplete() {\n        this.log('onBroadcastComplete');\n    }\n    prompt(args) {\n        this.log('prompt', args);\n        // Make sure the dialog is active\n        if (!this.minimal || (this.minimal && !args.optional)) {\n            active.set(true);\n            // Push the new path to the router\n            router.push('prompt');\n        }\n        // Setup the promise to return to the session kit\n        const promise = cancelable(new Promise((resolve, reject) => {\n            prompt.set({\n                args,\n                resolve,\n                reject,\n            });\n        }), (canceled) => {\n            throw canceled;\n        });\n        // Save a copy of the promise to reference if canceled\n        this.addCancelablePromise(promise.cancel);\n        // Return the promise to the session kit\n        return promise;\n    }\n    status(message) {\n        // Make sure the dialog is active\n        if (!this.minimal) {\n            active.set(true);\n        }\n        // Update the subtitle to match the message\n        props.update((current) => ({\n            ...current,\n            subtitle: message,\n        }));\n    }\n    // Map the UserInterface translate call to our i18n instance\n    translate(key, options, namespace) {\n        if (namespace) {\n            return this.i18n.t.get(`${namespace}.${key}`, options);\n        }\n        return this.i18n.t.get(key, options);\n    }\n    addTranslations(translations) {\n        const normalizedTranslations = {};\n        const seenLanguages = new Set();\n        for (const [lang, data] of Object.entries(translations)) {\n            if (!lang) {\n                this.log(`Skipping invalid language: empty or null`);\n                continue;\n            }\n            let normalizedLang = lang;\n            if (lang.startsWith('zh')) {\n                normalizedLang = mapChineseLanguage(lang);\n            }\n            if (!seenLanguages.has(normalizedLang)) {\n                normalizedTranslations[normalizedLang] = data;\n                seenLanguages.add(normalizedLang);\n            }\n            else {\n                this.log(`Skipping duplicate language: ${lang} (normalized to ${normalizedLang})`);\n            }\n        }\n        this.i18n.addTranslations(normalizedTranslations);\n    }\n}\nWebRenderer.version = '1.4.2'; // replaced by build script\n\nexport { WebRenderer, WebRenderer as default, defaultWebRendererOptions };\n//# sourceMappingURL=web-renderer.m.js.map\n"],"names":["brorandModule","rand","generate","n","i","require$$0","l","inherits_browserModule","require$$1","utils","p","c","m","d","common","update","t","s","x","z","require$$2","W","require$$3","f","g","h","zh","require$$4","A","B","C","D","E","j","T","K","hash","key","init","module","BN","base","Buffer","size","toString","q","self","comb10MulTo","N","prime","mont","u","this","encode","cachedProperty","zero","curve","v","obj","h2","x2","curves","hmac","ec","getPublic","sign","verify","signature","Signature","require$$5","require$$6","s2","Q","e","eddsa","S","R","elliptic","b","__decorate","P","error","rank","flush","assign","c2","truncate","sha256","sha512","ripemd160","KeyType","bn","Asset","types","lookup","value","instance","version","numTypes","name","ABI","Struct","type","Variant","Symbol","Base58","ErrorCode","DecodingError","decode","PermissionLevel","Action","TransactionExtension","TransactionHeader","Transaction","SignedTransaction","CompressionType","PackedTransaction","TransactionReceipt","Weight","KeyWeight","PermissionLevelWeight","WaitWeight","Authority","wait","Serializer","text","AccountLinkedAction","AccountPermission","AccountResourceLimit","AccountTotalResources","AccountSelfDelegatedBandwidth","AccountRefundRequest","AccountVoterInfo","AccountRexInfoMaturities","AccountRexInfo","GetRawAbiResponse","AccountObject","AccountByAuthorizersRow","AccountsByAuthorizers","GetBlockResponseTransactionReceipt","GetBlockResponse","GetBlockInfoResponse","ActiveScheduleProducerAuthority","ActiveScheduleProducer","ActiveSchedule","BlockStateHeader","GetBlockHeaderStateResponse","GetInfoResponse","GetTableByScopeResponseRow","GetTableByScopeResponse","OrderedActionsResult","GetActionsResponse","TransactionTrace","Trx","TransactionInfo","GetTransactionResponse","GetKeyAccountsResponse","GetCodeResponse","GetControlledAccountsResponse","GetCurrencyStatsItemResponse","GetTransactionStatusResponse","ProducerAuthority","Producer","ProducerSchedule","GetProducerScheduleResponse","ProtocolFeature","GetProtocolFeaturesResponse","HandshakeMessage","ChainSizeMessage","GoAwayMessage","TimeMessage","NoticeMessage","RequestMessage","SyncRequestMessage","NewProducersEntry","NewProducers","BlockExtension","HeaderExtension","TrxVariant","FullTransactionReceipt","BlockHeader","SignedBlock","NetMessage","promise","cancel","cancelable","ExplorerDefinition","Logo","TokenIdentifier","TokenMeta","TokenBalance","TelosAccountVoterInfo","API","TelosAccountObject","WAXAccountVoterInfo","WAXAccountObject","Chains","ChainName","ChainId","ChainAlias","ChainIdVariant","AccountName","PermissionName","IdentityV2","IdentityV3","RequestVariantV2","RequestVariantV3","RequestFlags","InfoPair","RequestDataV2","RequestDataV3","RequestSignature","IdentityProof","now","pair","_1","LoginHookTypes","zlib","TransactHookTypes","lang","WalletPluginMetadata","AccountCreationPluginMetadata","data","translations","element","props","detach","config","create_fragment","append_styles","ctx","$$props","subscribe","run","dispatch","loading","direction","Steps","chain","$prompt","plugin","$chains","settings","transact","login","$","L","M"],"mappings":"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AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAClD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACnD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IACnD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA;AAGpD,MAAI,KAAK;AAAA,IACP;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACnD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAA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,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;;;IAIN,KAAK;AAAA,MACH,KAAK;AAAA,MACL,QAAQ;AAAA,QACN;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UA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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}