{"version":3,"mappings":"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CR,mBAAsBA,GACtB,iBAAoBA,EACpB+/B,EAAW54B,aAAayR,EAAK5Y,GAC7B+/B,EAAWh5B,gBAAgB6R,GACjC,MACF,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACH,MAAQ5Y,GACR,mBAAsBA,GACtB,iBAAoBA,IACnB46C,MAAM56C,IACP,GAAKA,EACD+/B,EAAW54B,aAAayR,EAAK5Y,GAC7B+/B,EAAWh5B,gBAAgB6R,GAC/B,MACF,IAAK,UACL,IAAK,QACH,MAAQ5Y,GACR,mBAAsBA,GACtB,iBAAoBA,GACpB46C,MAAM56C,GACF+/B,EAAWh5B,gBAAgB6R,GAC3BmnB,EAAW54B,aAAayR,EAAK5Y,GACjC,MACF,IAAK,UACHuc,GAA0B,eAAgBwjB,GAC1CxjB,GAA0B,SAAUwjB,GACpCx5B,EAAqBw5B,EAAY,UAAW//B,GAC5C,MACF,IAAK,eACHqH,EACE04B,EACA,+BACA,gBACA//B,GAEF,MACF,IAAK,eACHqH,EACE04B,EACA,+BACA,gBACA//B,GAEF,MACF,IAAK,YACHqH,EACE04B,EACA,+BACA,aACA//B,GAEF,MACF,IAAK,YACHqH,EACE04B,EACA,+BACA,aACA//B,GAEF,MACF,IAAK,aACHqH,EACE04B,EACA,+BACA,cACA//B,GAEF,MACF,IAAK,YACHqH,EACE04B,EACA,+BACA,aACA//B,GAEF,MACF,IAAK,UACHqH,EACE04B,EACA,uCACA,WACA//B,GAEF,MACF,IAAK,UACHqH,EACE04B,EACA,uCACA,WACA//B,GAEF,MACF,IAAK,WACHqH,EACE04B,EACA,uCACA,YACA//B,GAEF,MACF,IAAK,KACHuG,EAAqBw5B,EAAY,KAAM//B,GACvC,MACF,IAAK,YACL,IAAK,cACH,MACF,WAEM,EAAI4Y,EAAIniB,SACT,MAAQmiB,EAAI,IAAM,MAAQA,EAAI,IAC9B,MAAQA,EAAI,IAAM,MAAQA,EAAI,KAG7BrS,EAAqBw5B,EADtBnnB,EAAMiiC,GAAQhwC,IAAI+N,IAAQA,EACa5Y,GAEhD,CACA,SAASwgC,GAAuBT,EAAYziC,EAAKsb,EAAK5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","names":["schedulerModule","exports","push","heap","node","index","length","a","parentIndex","parent","compare","peek","pop","first","last","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","advanceTimers","currentTime","timer","timerQueue","callback","startTime","expirationTime","taskQueue","handleTimeout","isHostTimeoutScheduled","isHostCallbackScheduled","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","shouldYieldToHost","needsPaint","unstable_now","frameInterval","performWorkUntilDeadline","hasMoreWork","localClearTimeout","taskTimeoutID","isPerformingWork","previousPriorityLevel","currentPriorityLevel","currentTask","priorityLevel","continuationCallback","ms","localSetTimeout","performance","now","localPerformance","localDate","Date","initialTime","taskIdCounter","setTimeout","clearTimeout","localSetImmediate","setImmediate","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","task","unstable_forceFrameRate","fps","console","error","Math","floor","unstable_getCurrentPriorityLevel","unstable_next","eventHandler","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","unstable_shouldYield","unstable_wrapCallback","parentPriorityLevel","apply","this","arguments","formatProdErrorMessage","code","url","encodeURIComponent","i","isValidContainer","nodeType","getNearestMountedFiber","fiber","nearestMounted","alternate","return","flags","tag","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","Error","findCurrentHostFiberImpl","child","sibling","getIteratorFn","maybeIterable","MAYBE_ITERATOR_SYMBOL","getComponentNameFromType","type","$$typeof","REACT_CLIENT_REFERENCE","displayName","name","REACT_FRAGMENT_TYPE","REACT_PROFILER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_ACTIVITY_TYPE","REACT_PORTAL_TYPE","REACT_CONTEXT_TYPE","REACT_CONSUMER_TYPE","_context","REACT_FORWARD_REF_TYPE","innerType","render","REACT_MEMO_TYPE","REACT_LAZY_TYPE","_payload","_init","x","createCursor","defaultValue","current","cursor","valueStack","value","pushHostContainer","nextRootInstance","rootInstanceStackCursor","contextFiberStackCursor","contextStackCursor","documentElement","namespaceURI","getOwnHostContext","tagName","getChildHostContextProd","popHostContainer","pushHostContext","hostTransitionProviderCursor","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","sharedNotPendingObject","setIsStrictModeForDevtools","newIsStrictMode","log$1","unstable_setDisableYieldValue","injectedHook","setStrictMode","rendererID","err","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","rootHasPendingCommit","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","claimNextTransitionLane","nextTransitionLane","claimNextRetryLane","nextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","clz32","entanglements","markRootEntangled","rootEntangledLanes","index$6","getBumpedLaneForHydrationByLane","lanesToEventPriority","resolveUpdatePriority","updatePriority","ReactDOMSharedInternals","p","window","event","getEventPriority","detachDeletedInstance","internalInstanceKey","internalPropsKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","getClosestInstanceFromNode","targetNode","targetInst","parentNode","internalContainerInstanceKey","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","internalRootNodeResourcesKey","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","internalHoistableMarker","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","registrationNameDependencies","allNativeEvents","add","setValueForAttribute","attributeName","hasOwnProperty","call","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","test","removeAttribute","prefix$8","toLowerCase","slice","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","describeBuiltInComponentFrame","prefix","match","stack","trim","suffix","indexOf","describeNativeComponentFrame","fn","construct","reentry","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","Object","defineProperty","prototype","set","Reflect","control","x$9","x$10","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","getStackByFiberInDevAndProd","workInProgress","info","message","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","document","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotes","escapeSelectorAttributeValueInsideDoubleQuotesRegex","ch","charCodeAt","toString","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","isArrayImpl","textContent","setTextContent","text","firstChild","lastChild","nodeValue","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","unitlessNumbers","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","sanitizeURL","isJavaScriptProtocol","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreStateOfTarget","internalInstance","props","querySelectorAll","otherNode","form","otherProps","batchedUpdates$1","isInsideEventHandler","restoreTarget","restoreQueue","flushSyncWork$1","getListener","getData","fallbackText","start","end","startValue","startText","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","assign","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","modifierStateGetter","keyArg","getModifierState","modifierKeyToProp","getEventModifierState","isFallbackCompositionEnd","domEventName","END_KEYCODES","getDataFromCustomEvent","detail","data","isTextInputElement","supportedInputTypes","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","SyntheticEvent","listeners","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","stopWatchingForValueChange","activeElement$1","detachEvent","handlePropertyChange","activeElementInst$1","propertyName","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","shallowEqual","objA","objB","objectIs","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","location","href","hasSelectionCapabilities","contentEditable","constructSelectEvent","mouseDown","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","lastSelection","activeElementInst","makePrefixMap","styleProp","eventName","prefixes","getVendorPrefixedEventName","prefixedEventNames","vendorPrefixes","prefixMap","registerSimpleEvent","topLevelEventsToReactNames","createCapturedValueAtFiber","source","existing","CapturedStacks","finishQueueingConcurrentUpdates","endIndex","concurrentQueuesIndex","concurrentlyUpdatedLanes","concurrentQueues","queue","update","pending","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","FiberNode","pendingProps","key","mode","elementType","refCleanup","ref","updateQueue","memoizedProps","subtreeFlags","deletions","createFiberImplClass","shouldConstruct","Component","isReactComponent","createWorkInProgress","firstContext","resetWorkInProgress","createFiberFromTypeAndProps","owner","fiberTag","hostContext","itemProp","precedence","rel","onLoad","onError","async","src","isHostHoistableType","createFiberFromFragment","REACT_PROVIDER_TYPE","elements","createFiberFromText","content","createFiberFromPortal","portal","pendingChildren","implementation","pushTreeFork","totalChildren","forkStack","forkStackIndex","treeForkCount","treeForkProvider","pushTreeId","idStack","idStackIndex","treeContextId","treeContextOverflow","treeContextProvider","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","throwOnHydrationMismatch","queueHydrationError","HydrationMismatchException","prepareToHydrateHostInstance","instance","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","hydrationParentFiber","rootOrSingletonContext","popHydrationState","JSCompiler_temp","shouldSetTextContent","nextHydratableInstance","getNextHydratable","isSingletonScope","previousHydratableOnEnteringScopedSingleton","resetHydrationState","upgradeHydrationErrorsToRecoverable","queuedErrors","hydrationErrors","workInProgressRootRecoverableErrors","pushProvider","providerFiber","nextValue","valueCursor","popProvider","scheduleContextWorkOnParentPath","propagationRoot","propagateContextChanges","contexts","forcePropagateEntireTree","list","nextFiber","dependency","propagateParentContextChanges","isInsidePropagationBailout","currentParent","checkIfContextChanged","currentDependencies","memoizedValue","prepareToReadContext","currentlyRenderingFiber$1","lastContextDependency","readContext","readContextForConsumer","readContextDuringReconciliation","consumer","createCache","controller","AbortControllerLocal","refCount","releaseCache","cache","scheduleCallback$2","NormalPriority","abort","pingEngtangledActionScope","currentEntangledPendingCount","currentEntangledListeners","currentEntangledActionThenable","status","currentEntangledLane","peekCacheFromPool","cacheResumedFromPreviousRender","resumedCache","workInProgressRoot","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","CacheContext","isThenableResolved","thenable","noop$3","trackUsedThenable","thenableState","then","checkIfUseWrappedInAsyncCatch","reason","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","SuspenseException","getSuspendedThenable","rejectedReason","SuspenseActionException","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","cloneUpdateQueue","createUpdate","payload","enqueueUpdate","executionContext","entangleTransitions","queueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","suspendIfUpdateReadFromEntangledAsyncAction","didReadFromEntangledAsyncAction","processUpdateQueue","workInProgress$jscomp$0","instance$jscomp$0","hasForceUpdate","pendingQueue","lastPendingUpdate","firstPendingUpdate","newState","isHiddenUpdate","workInProgressRootRenderLanes","workInProgressRootSkippedLanes","callCallback","commitCallbacks","pushHiddenContext","prevEntangledRenderLanesCursor","entangledRenderLanes","currentTreeHiddenStackCursor","baseLanes","reuseHiddenContextOnStack","popHiddenContext","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","currentlyRenderingFiber","ReactSharedInternals","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","shouldDoubleInvokeUserFnsInHooksDEV","didScheduleRenderPhaseUpdateDuringThisPass","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","thenableIndexCounter$1","thenableState$1","didReceiveUpdate","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","localIdCounter","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","String","useMemoCache","size","map","array","Array","REACT_MEMO_CACHE_SENTINEL","basicStateReducer","state","action","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$32","revertLane","hasEagerState","eagerState","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffectImpl","subscribeToStore","bind","pushSimpleEffect","destroy","resource","updateStoreInstance","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","isRenderPhaseUpdate","actionNode","isTransition","listener","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","S","handleActionReturnValue","onActionError","error$38","nextState","onActionSuccess","notifyActionListeners","actionStateReducer","oldState","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionStateActionEffect","rerenderActionState","create","createDeps","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","mountEffect","updateEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","updateImperativeHandle","concat","mountDebugValue","updateCallback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","result","thenableWithOverride","dispatchSetStateInternal","resolve","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$41","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","requestTransitionLane","unwrapThenable","thenableIndexCounter","coerceRef","throwOnInvalidObjectType","returnFiber","newChild","REACT_LEGACY_ELEMENT_TYPE","join","resolveLazy","lazyType","init","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","updateElement","updateFragment","updatePortal","fragment","createChild","REACT_ELEMENT_TYPE","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","forEach","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","suspenseHandlerStackCursor","shellBoundary","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","isSuspenseInstanceFallback","revealOrder","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","classComponentUpdater","enqueueReplaceState","resolveClassComponentProps","baseProps","defaultProps","propName$73","defaultOnUncaughtError","reportGlobalError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$74","logCaughtError","boundary","onCaughtError","errorBoundary","e$75","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","Set","reconcileChildren","nextChildren","mountChildFibers","reconcileChildFibers","updateForwardRef","propsWithoutRef","bailoutOnAlreadyFinishedWork","updateMemoComponent","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","markRef","replayFunctionComponent","updateClassComponent","emptyContextObject","contextType","updater","_reactInternals","refs","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","treeContext","overflow","retryLane","fallback","mountWorkInProgressOffscreenFiber","SUSPENDED_MARKER","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","SelectiveHydrationException","renderDidSuspendDelayIfPossible","primaryChildren","offscreenProps","_pendingMarkers","_retryCache","_transitions","scheduleSuspenseWorkOnFiber","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","isDehydrated","getResource","getOwnerDocumentFromRootContainer","createElement","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","crossOrigin","title","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","markUpdate","preloadResourceAndSuspendIfNeeded","loading","preloadResource","noopSuspenseyCommitThenable","SuspenseyCommitException","scheduleRetryEffect","retryQueue","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$113","bubbleProperties","completedWork","didBailout","newChildLanes","child$114","completeWork","pendingContext","createElementNS","innerHTML","removeChild","is","appendChild","autoFocus","createTextNode","cache$127","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","destroy_","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$143","commitHostMount","focus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$205","propKey$221","propKey$226","propKey$231","setPropOnCustomElement","propKey$236","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","_reactRootContainer","insertOrAppendPlacementNode","commitHostSingletonAcquisition","singleton","attributes","removeAttributeNode","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$142","commitSuspenseHydrationCallbacks","readyState","removeEventListener","addEventListener","_reactRetry","registerSuspenseInstanceRetry","retryDehydratedSuspenseBoundary","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","prevHostParent","hostParent","prevHostParentIsContainer","hostParentIsContainer","releaseSingletonInstance","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","PossiblyWeakSet","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","commitReconciliationEffects","hoistableRoot","currentHoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","property","httpEquiv","charSet","mountHoistable","acquireResource","needsFormReset","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","wasHidden","prevOffscreenSubtreeIsHidden","recursivelyTraverseDisappearLayoutEffects","display","hostParentFiber","parent$144","parent$146","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","recursivelyAccumulateSuspenseyCommit","suspenseyCommitFlag","accumulateSuspenseyCommitOnFiber","suspendedState","media","matchMedia","matches","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","nextEffect","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","suspenseHandler","workInProgressSuspendedReason","cancelPendingCommit","prepareFreshStack","markRootSuspended","workInProgressRootInterleavedUpdatedLanes","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","workInProgressTransitions","workInProgressRootIsPrerendering","thrownValue","workInProgressThrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrentByScheduler","thrownValue$169","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","workInProgressRootConcurrentErrors","wasRootDehydrated","workInProgressRootDidAttachPingListener","workInProgressRootDidSkipSuspendedSiblings","timeoutHandle","scheduleTimeout","commitRootWhenReady","workInProgressRootDidIncludeRecursiveRenderUpdate","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","workInProgressRootPingedLanes","expirationTimes","index$4","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$2","DefaultAsyncDispatcher","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$167","performUnitOfWork","shouldYield","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","flushPendingEffects","pendingEffectsStatus","finishedLanes","remainingLanes","previouslyPendingLanes","index$5","hiddenUpdatesForLane","markRootFinished","pendingFinishedWork","pendingEffectsRoot","pendingEffectsLanes","pendingEffectsRemainingLanes","pendingPassiveTransitions","pendingRecoverableErrors","callbackNode","callbackPriority","scheduleCallback$3","NormalPriority$1","flushPassiveEffects","eventsEnabled","_enabled","selection","rangeCount","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","focusedElem","selectionRange","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","flushMutationEffects","flushLayoutEffects","flushSpawnedWork","rootMutationHasEffect","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","min","win","start$jscomp$0","end$jscomp$0","extend","startMarker","endMarker","range","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","rootHasLayoutEffect","requestPaint","releaseRootPooledCache","onCommitFiberRoot","onRecoverableError","recoverableError","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","PossiblyWeakMap","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","lastScheduledRoot","firstScheduledRoot","mightHavePendingSyncWork","didScheduleMicrotask","scheduleMicrotask","ImmediatePriority","processRootScheduleInImmediateTask","processRootScheduleInMicrotask","syncTransitionLanes","isFlushingWork","didPerformSomeWork","root$174","performSyncWorkOnRoot","currentEventTransitionLane","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$3","cancelCallback$1","UserBlockingPriority","IdlePriority","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","rootContainerElement","listeningMarker","nonDelegatedEvents","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","dispatchEvent","passiveBrowserEventsSupported","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","SyntheticKeyboardEvent","SyntheticFocusEvent","button","SyntheticMouseEvent","SyntheticDragEvent","SyntheticTouchEvent","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","SyntheticAnimationEvent","TRANSITION_END","SyntheticTransitionEvent","SyntheticUIEvent","SyntheticWheelEvent","SyntheticClipboardEvent","SyntheticPointerEvent","SyntheticToggleEvent","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","currentReplayingEvent","relatedTarget","fromElement","parentWindow","toElement","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","isInputEventSupported","handleEventFunc","skipSelectionChangeEvent","fallbackData","canUseCompositionEvent","eventType","isComposing","useFallbackCompositionData","locale","SyntheticCompositionEvent","canUseTextInputEvent","which","hasSpaceKeypress","SPACEBAR_CHAR","getNativeBeforeInputChars","ctrlKey","altKey","metaKey","char","fromCharCode","getFallbackBeforeInputChars","maybeTargetInst","formAction","method","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","normalizeMarkupForTextOrAttribute","markup","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","aliases","endsWith","hasSrc","hasSrcSet","propValue$188","parentNamespace","dangerouslySetInnerHTML","handleErrorInNextTick","parentInstance","suspenseInstance","possiblePreambleContribution","depth","nextNode","nextNode$jscomp$0","targetInstance","previousSibling","rootContainerInstance","getRootNode","preconnectAs","globalDocument","limitedEscapedHref","preconnectsSet","currentProps","preloadProps","styles$244","resource$245","as","integrity","hrefLang","referrerPolicy","getScriptKey","rawProps","getScriptSelectorFromKey","styleProps","insertStylesheet","instance$250","adoptPreloadPropsForScript","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","identifierPrefix","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","pointerId","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","getCurrentPriorityLevel","LowPriority","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","hasScheduledReplayAttempt","scheduleCallbackIfUnblocked","unblocked","Scheduler","scheduleReplayQueueIfNeeded","formReplayingQueue","lastScheduledReplayQueue","submitterOrAction","formInst","unblock","queuedExplicitHydrationTargets","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","require$$0","React","require$$1","ReactDOM","require$$2","Symbol","for","iterator","isArray","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","log","LN2","randomKey","random","RegExp","canUseDOM","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","isTrusted","UIEventInterface","view","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","buttons","movementX","movementY","dataTransfer","animationName","elapsedTime","pseudoElement","clipboardData","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","Alt","Control","Meta","Shift","repeat","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","touches","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","documentMode","color","date","datetime","email","month","number","password","search","tel","time","week","JSCompiler_inline_result$jscomp$282","isSupported$jscomp$inline_417","element$jscomp$inline_418","oninput","y","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","animation","transition","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","simpleEventPluginEvents","WeakMap","AbortController","signal","aborted","Consumer","Provider","_currentValue2","_threadCount","prevOnStartTransitionFinish","entangledListeners","entangleAsyncAction","globalClientIdCounter","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useFormState","useActionState","useOptimistic","useCacheRefresh","initialArg","booleanOrThenable","enqueueSetState","enqueueForceUpdate","reportError","ErrorEvent","process","emit","WeakSet","getCacheForType","resourceType","cacheForType","Infinity","i$jscomp$inline_1528","eventName$jscomp$inline_1529","toUpperCase","localPromise","queueMicrotask","previousDispatcher","d","f","previousWasRendering","wasRendering","r","D","C","L","preloadSelector","imageSrcSet","imageSizes","m","X","scripts","link","M","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1785","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$0","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2256","bundleType","rendererPackageName","currentDispatcherRef","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2257","isDisabled","supportsFiber","inject","reactDomClient_production","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","formatDynamicDecimals","maxDecimals","minDecimals","num","parseFloat","abs","pow","toExponential","formatted","toFixed","decimalIndex","currentDecimals","number1","number2","_a","neg","ind","testZero","substring","pad","compliment","res","addCore","s","l","dec","ld","parseInt","parts","parts1","parts2","length1","length2","sum","carry","n","roundOff","input","RoundingModes","HALF_EVEN","UNNECESSARY","partInt","partDec","substr","greaterThanFive","increment","rem","part","pre","DOWN","FLOOR","CEILING","UP","five","HALF_DOWN","HALF_UP","reverse","stripTrailingZero","isNegative","multiply","negative","decimalLength1","decimalLength2","decimalLength","decimal","positionVector","currentPosition","j","divide","dividend","divisor","precission","pt_dvsr","pt_dvnd","loc","prec","dl","quotent","dvnd","qt","subtract","negate","modulus","validate","sign","oparand","compareTo","_b","localeCompare","divCeil","den","v","div","zero","BN","one","mod","gt","sub","UInt128","from","intToBigDecimal","bigDecimal","SendOfferModal","isOpen","onClose","nft","session","isConnected","account","useWallet","settings","useDisplaySettings","showSuccess","showError","useNotifications","offerType","setOfferType","waxAmount","setWaxAmount","customMemo","setCustomMemo","userNFTs","setUserNFTs","selectedNFTs","setSelectedNFTs","isLoading","setIsLoading","loadingInventory","setLoadingInventory","isPixalHolder","setIsPixalHolder","response","fetch","json","checkPixalHolder","formattedNFTs","asset","rawImage","img","image","rawVideo","video","imageUrl","videoUrl","startsWith","API_ENDPOINTS","IPFS","GATEWAYS","asset_id","collection","collection_name","template_mint","max_supply","template","loadUserNFTs","jsx","className","jsxs","viewBox","fill","stroke","x1","y1","x2","y2","MediaRenderer","alt","enableAnimations","enableAnimatedNFTs","price","cx","cy","rx","ry","points","htmlFor","onChange","placeholder","userNft","handleNFTSelection","assetId","filter","rows","memo","actions","authorization","actor","permission","to","quantity","buyer","recipient","seller","asset_ids","maker_marketplace","transact","handleSendWaxOffer","sender","sender_asset_ids","recipient_asset_ids","handleSendNFTOffer","Fragment","sanitizeHtml","html","tempDiv","sanitizeElement","ALLOWED_TAGS","textNode","replaceChild","allowedAttrs","ALLOWED_ATTRIBUTES","attr","formatSafeMarkdown","escapeHtml","normalizeIPFSUrl","getIPFSGatewayUrl","hash","gateways","getCollectionTier","collectionName","COLLECTION_TIERS","getTierBadgeConfig","tier","platinum","icon","label","partner","gold","silver","bronze","calculateAmount","frac","weight","calcPowerupFee","utilizationIncrease","max_price","min_price","fee","startUtilization","utilization","endUtilization","adjusted_utilization","newExponent","exponent","priceFunction","coefficient","startU","endU","priceIntegralDelta","toPrecision","predictResourceAmounts","cpuFrac","netFrac","cpuState","netState","cpuAmount","netAmount","cpuFee","netFee","App","monitoringService","trackEvent","timestamp","userAgent","navigator","viewport","innerWidth","innerHeight","accessibilityService","initialize","preferences","getPreferences","pushNotificationService","success","supported","getPermissionState","warn","MarketplaceConfigService","preloadConfiguration","ErrorBoundary","WalletProvider","TokenBalanceProvider","DisplaySettingsProvider","NotificationProvider","Router","basename","AppContent","WatchlistAlertChecker","PriceAlertManager","NotificationContainer","ConfirmDialog","ChatWidget","PWAInstallBanner","OfflineIndicator","TransactionNotifications","jsxRuntimeModule","jsxProd","config","maybeKey","reactJsxRuntime_production","checkDCE","clientModule","WalletContext","createContext","_ErrorMessageService","getMessage","MESSAGES","createMessage","formatError","fallbackMessage","errorName","NETWORK_ERROR","TIMEOUT_ERROR","TRANSACTION_REJECTED","INSUFFICIENT_BALANCE","NFT_NOT_FOUND","LOAD_FAILED","API_ERROR","hostname","UNKNOWN_ERROR","logError","additionalInfo","__vitePreload","loggingService","__VITE_PRELOAD__","errorInstance","__publicField","WALLET_CONNECTION_FAILED","WALLET_DISCONNECTED","TRANSACTION_FAILED","INVALID_INPUT","REQUIRED_FIELD","COLLECTION_NOT_FOUND","PURCHASE_FAILED","LISTING_FAILED","ErrorMessageService","formatWAXPrice","showCurrency","numPrice","formatNumber","LogLevel","DEBUG","INFO","WARN","ERROR","logger","logLevel","isDevelopment","createLogEntry","level","toISOString","shouldLog","storeLog","entry","logs","maxLogs","formatMessage","levelName","debug","metadata","reportingPromises","sendToErrorReportingAPI","sendToLocalStorage","sendToConsole","allSettled","reportingError","errorReport","userId","getUserId","sessionId","getSessionId","buildVersion","getBuildVersion","environment","getEnvironment","headers","Authorization","getAuthToken","JSON","stringify","ok","statusText","sendToFallbackErrorService","errorData","Sentry","captureException","extra","fallbackError","storageKey","maxStoredErrors","storedErrors","localStorage","getItem","parse","parseError","setItem","storageError","group","groupEnd","sessionStorage","getLogs","clearLogs","exportLogs","WAXROCK_TYPES","PARTNER_COLLECTIONS","TOKEN_CONTRACTS","PIXAL_TEMPLATE_ID","ATOMIC_ASSETS","WAX_CHAIN","EOSRIO","WAXSWEDEN","GREYMASS","EOSPHERE","ALOHAEOS","PINK","CRYPTOLIONS","FALLBACK_ENDPOINTS","HYPERION_ENDPOINTS","HIVEBP","LIGHT_API","SPECIALIZED","ALCOR","DAPPLICA","NEFTY","AVATAR","DICEBEAR","HYPERION","COINGECKO_API","EXCHANGE_RATE_API","SOCIAL","TWITTER_INTENT","FACEBOOK_SHARE","REDDIT_SUBMIT","TELEGRAM_SHARE","DISCORD","ATOMICHUB_EXPLORER","BLOKS_EXPLORER","PIXEL_JOURNEY","MAIN_SITE","DOCS","LOGO","DEFAULT_IMAGE","LEADERBOARD","CRAFTING_DOCS","DICEBEAR_API","GOOGLE_FONTS","WAX_WALLET","isValidWaxRock","waxRock","getWaxRockTypes","getPartnerCollections","configCache","partnerCollections","lastFetch","CACHE_DURATION","apiService","api","collections","getPartnerCollectionsSync","getTokenContracts","tokenContracts","contracts","getTokenContractsSync","getPixalTemplateId","isPixalPFP","templateId","generateFiltersFromAssets","assets","filters","attributeCounts","traits","traitKey","traitValue","filterKey","dataKey","dataValue","collectionFilter","schema","schemaFilter","minOccurrences","max","sort","all","clearCache","currencyService","bitcoin","usd","ethereum","USD","EUR","DKK","AED","INR","RUB","CNY","JPY","getExchangeRates","exchangeRates","lastFetchTime","EXCHANGE_API","Accept","rates","FALLBACK_RATES","cryptoResponse","CRYPTO_API","cryptoData","cryptoRates","FALLBACK_CRYPTO","cryptoError","convertUSDToCurrency","usdAmount","targetCurrency","btcAmount","ethAmount","rate","convertedAmount","round","convertWaxToCurrency","priceService","priceService$1","usdString","convertWaxToUSDAsync","formatCurrencyAmount","amount","currency","getCurrencySymbol","BTC","ETH","fetchPrices","waxPriceUSD","wpixalPriceUSD","waxResponse","wpixalResponse","pxjResponses","COINGECKO_WAX_API","GECKOTERMINAL_WPIXAL_API","GECKOTERMINAL_PXJ_POOLS","waxPriceFromAPI","waxData","wax","wpixalPriceFromAPI","wpixalData","quote_token_price_usd","pxjPriceFromAPI","pxjData","quoteTokenPrice","FALLBACK_WAX_PRICE","FALLBACK_WPIXAL_PRICE","pxjPriceUSD","FALLBACK_PXJ_PRICE","wpixalPriceWAX","waxApi","wpixalApi","pxjPools","fallbackWaxPrice","fallbackWpixalPrice","fallbackPxjPrice","getWaxPriceUSD","getWpixalPriceWAX","getWpixalPriceUSD","getPxjPriceUSD","convertWaxToUSD","usdValue","convertWaxToCurrencyAsync","convertWpixalToWAX","wpixalAmount","convertWpixalToUSD","convertPxjToUSD","pxjAmount","convertPxjToWAX","convertWaxWithDisplaySettings","selectedCurrency","storageService","isStorageAvailable","storage","removeItem","isLocalStorageAvailable","isSessionStorageAvailable","useSessionStorage","fallbackStorage","removed","clear","getJSON","item","setJSON","jsonString","getStorageStats","getStorageSize","used","total","available","isQuotaExceeded","stats","localStorageUsage","sessionStorageUsage","cleanup","keyPatterns","cleaned","storages","keysToRemove","pattern","cartService","loadCart","cart","saveCart","cartSize","notifyListeners","addListener","removeListener","addToCart","findIndex","cartItem","addedAt","isAvailable","sale_id","removeFromCart","initialLength","isInCart","some","getCart","getCartCount","clearCart","cleanupUnavailableItems","calculateTotals","availableItems","totalWAXValue","totalWAX","totalUSD","itemCount","checkAvailability","saleIds","Boolean","atomicMarketAPI","fetchWithRetry","activeSaleIds","sale","toggleSelection","find","selectAll","deselectAll","getSelectedItems","getSelectedCount","removeSelectedItems","isSelected","DisplaySettingsContext","setSettings","showOtherCollections","showWhitelistedOnly","showExplicitContent","blockNSFW","blockAI","showChatButton","autoPlayVideos","muteVideos","showVideoControls","showPricesInUSD","showRarityRankings","contextValue","updateSetting","newSettings","generateSessionId","lastActivity","pageViews","initializeMonitoring","startPerformanceObserver","setupErrorHandlers","startFlushTimer","trackPageLoadPerformance","hidden","setupUserInteractionTracking","PerformanceObserver","getEntries","entryType","trackNavigationTiming","observe","entryTypes","trackResourceTiming","trackPerformanceMetric","processingStart","filename","lineno","colno","formId","formClass","setInterval","flushMetrics","flushInterval","setUserId","properties","isEnabled","userEvent","addToBatch","maxStoredMetrics","metric","performanceMetrics","trackAPICall","endpoint","duration","retryCount","apiMetric","apiMetrics","stackTrace","errorReports","errorMessage","timing","navigation","pageLoadTime","loadEventEnd","navigationStart","domContentLoadedTime","domContentLoadedEventEnd","firstByteTime","responseStart","domInteractiveTime","domInteractive","navigationType","redirectCount","domainLookupEnd","domainLookupStart","connectEnd","connectStart","responseEnd","requestStart","domComplete","domContentLoadedEventStart","initiatorType","transferSize","getSessionSummary","getPerformanceMetrics","getAPIMetrics","getErrorReports","errors","existingData","recentData","enable","disable","isMonitoringEnabled","setBatchSize","batchSize","batch","pendingBatches","processBatch","scheduleBatchProcessing","batchTimeout","processAllPendingBatches","batchData","batchId","generateBatchId","processedAt","existingBatches","recentBatches","batches","setFlushInterval","interval","exportData","clearAllData","CacheService","defaultTTL","maxSize","cleanupInterval","startCleanup","cleanupTimer","keysToDelete","entries","ttl","getOrFetch","fetchFn","cached","setMany","getMany","getStats","validEntries","expiredEntries","values","totalEntries","hitRate","clearInterval","cacheService","assetCache","collectionCache","userCache","apiEndpointManager","initializeEndpointGroups","startHealthChecks","endpointGroups","currentIndex","fallbackStrategy","healthCheckInterval","HEALTH_CHECK_INTERVAL","endpoints","healthStatus","lastHealthCheck","consecutiveFailures","averageResponseTime","maxRetries","getBestEndpoint","groupName","healthyEndpoints","ep","degradedEndpoints","selectEndpoint","strategy","reportFailure","endpointUrl","MAX_CONSECUTIVE_FAILURES","reportSuccess","responseTime","getEndpoints","getCurrentIndex","setCurrentIndex","performHealthCheck","healthCheckTimers","healthCheckPromises","timeoutId","HEALTH_CHECK_TIMEOUT","getHealthStatus","healthy","degraded","unhealthy","atomicEndpoints","waxChainEndpoints","hyperionEndpoints","lastUpdated","currentEndpointIndex","currentWaxChainIndex","currentHyperionIndex","initializeHealthConfigs","waxChainAPI","atomicAssetsAPI","getCurrentAtomicEndpoint","bestEndpoint","getHealthyEndpoints","healthyEndpoint","getFromCache","setCache","DEFAULT_CACHE_TTL","reportEndpointHealth","urlObj","URL","baseUrl","protocol","host","getCacheStats","assetStats","collectionStats","userStats","generalStats","warmupCache","warmupTasks","topCollections","approvedCollections","getCollectionStats","getMarketStats","getUserInventoryOverview","prefetchData","prefetchTasks","currentPage","getPxApprovedListings","userAccount","getUserInventoryOptimized","page","recentCollections","invalidateCache","getAdaptiveLimit","requestedLimit","storedLimit","adaptiveLimits","updateAdaptiveLimit","limit","currentLimit","newLimit","fetchAlcorAPI","retries","lastError","healthConfigs","getValidatedEndpoints","path","validator","atomicData","chainData","head_block_num","healthData","health","getCircuitBreakerKey","isCircuitBreakerOpen","circuitBreakerState","lastFailure","CIRCUIT_BREAKER_TIMEOUT","recordCircuitBreakerFailure","failures","CIRCUIT_BREAKER_THRESHOLD","recordCircuitBreakerSuccess","updateEndpointHealth","endpointKey","endpointHealth","isHealthy","lastCheck","isEndpointHealthy","healthCheckUrl","AbortSignal","currentHealth","healthCheckIntervalId","updateEosNationEndpoints","stopHealthChecks","enableHealthChecks","eosNationEndpoints","EOS_NATION_UPDATE_INTERVAL","report","parseEosNationEndpoints","atomic_https","api_https2","hyperion_https","endpointStr","obj","api_url","urlMatch","staticEndpoints","combined","classifyError","calculateDelay","attempt","errorType","jitter","baseDelay","MAX_TIMEOUT","jitterAmount","circuitKey","timeoutMs","fetchOptions","healthyWaxEndpoints","waxEndpointsToTry","endpointIndex","currentUrl","endpointSuccess","healthyAtomicEndpoints","endpointsToTry","formatSaleData","getAssetImage","getAssetVideo","formatPrice","schema_name","fromEntries","immutable_data","token_precision","token_symbol","getCheapestPixals","adaptiveLimit","getWaxRockPixals","MarketplaceConfigService2","waxRockTypes","allWaxRockSales","waxRockType","fallbackUrl","WaxRock","validWaxRockTypes","lowerValue","uniqueSales","self","listing_price","startIndex","paginatedResults","getPixelIngredients","safeLimit","getBundleListings","getFriedFactoryNFTs","getCryptoMuffinsNFTs","getAkufishheadsNFTs","getPartnerListings","collectionQuery","getAHVerifiedListings","getAllWaxListings","getRecentSales","getSales","params","order","template_id","symbol","after","query_total","getCollections","whitelistOnly","author","singleCollection","URLSearchParams","append","collectionPromises","COLLECTION_WHITELIST","results","col","allow_notify","authorized_accounts","notify_accounts","market_fee","created_at_time","created_at_block","getCollectionDetails","cacheKey","getCollectionSchemas","getCollectionTemplates","schemaName","getCollectionAssets","getAssetDetails","getCollectionBurns","getCollectionTransfers","getCollectionVolumeGraph","days","hiveBPAPI","getCollectionMarketCap","getSimilarCollections","getCollectionAnalytics","getHiveBPMarketCap","marketcap","getHiveBPVolumeDays","volume","getHiveBPFloorPrice","floor_price","getEnhancedCollectionStats","marketCap","volume24h","volume7d","floorPrice","templates","getCollectionTopSales","getCollectionFloorPrice","getCollectionHolders","getNFTTradingStats","salesResponse","salesData","dailyVolume","dailySales","reduce","listingsResponse","listingsData","activeListings","query_time","totalTransactions","averagePrice","getTopCollectionsByVolume","collectionsResponse","collectionsData","volume_24h","sales_24h","sales","assets_count","getRecentNFTTrades","asset_name","updated_at_time","getUserInventory","getUserInventoryPaginated","hasMore","getUserInventoryAll","getUserInventoryByCollection","getUserInventoryBySchema","tableUrl","scope","table","totalAssets","schemas","collectionsArray","schema_counts","fallbackResponse","useCache","cacheTTL","getUserInventoryBatch","maxBatches","delayMs","onProgress","allAssets","currentBatch","batchSuccess","retryAttempt","adaptiveDelay","retryDelay","ceil","willRetry","errorMsg","isCriticalError","partialSuccess","executeBatchOperation","items","batchProcessor","stopOnCriticalError","chunkArray","batchIndex","batchResults","completed","chunkSize","chunks","getUserInventoryWithFilter","getUserInventoryEnhanced","burned","getUserInventoryByTemplate","getUserInventoryWaxRocks","pixalTemplateId","getWaxChainInfo","getWaxAccountInfo","accountName","account_name","getWaxCurrencyBalance","contract","balances","balance","getLightApiBalances","waxLightAPI","getLightApiAccountInfo","getAlcorTokenPrice","tokenId","alcorAPI","system_price","usd_price","decimals","getAlcorMarkets","getMarketplaceConfig","supportedTokens","precision","getAlcorSwapQuote","getPXJPrice","priceData","calculatePortfolioValue","totalValue","getMarketplaceNFTs","getAssetOffers","offer","buyoffer_id","getAssetsBatch","assetIds","chunk","idsParam","ids","getTemplatesBatch","templateIds","allTemplates","getAssetCountsBatch","counts","promises","queryParams","getOffers","getPrices","getTransfers","recipient_name","getCollectionMarketStats","market_contract","suggested_median","suggested_average","getTemplateStats","getHyperionTransactionHistory","skip","hyperionUrl","transactions","actionData","act","transactionType","transaction_id","trx_id","block_time","action_name","getAccountTransfers","transfers","block_num","fetchTransfersFromWaxChainAPI","pos","action_trace","getUserTransactions","allTransactions","hyperionTransactions","formattedHyperionTransactions","tx","salesUrl","dataLength","marketplaceTransactions","priceAmount","formattedPrice","transfersUrl","transfersResponse","transfersData","nftTransfers","transfer","tx_id","transfer_id","tokenTransfers","formattedTokenTransfers","uniqueTransactions","merged","sortedTransactions","getTime","unique","getUserStats","joinDate","accountInfo","created","accountError","assetsUrl","assetsResponse","assetsData","nftsOwned","totalSales","totalEarned","purchasesUrl","purchasesResponse","purchasesData","totalPurchases","totalSpent","favoriteCollections","nftsListed","getCollectionPriceHistory","timeframe","fetchPriceHistoryFromAlcor","close","basePrice","priceHistory","getAuctionBids","auctionId","getAuctions","hide_empty_auctions","collection_blacklist","seller_blacklist","auction","assetName","tokenSymbol","tokenPrecision","auction_id","end_time","current_bid","bidder","getAuction","getUSDPrice","waxRpcCall","getPowerupState","getChainInfo","getRWAXTransfers","toRwaxResponse","fromRwaxResponse","allTransfers","uniqueTransfers","uniqueKey","txid","hasMoreAssets","hasMoreData","deduplicatedTransfers","timeA","timeB","badgeService","description","borderColor","requirements","rarity","waxrock","ingredients","checkUserBadges","forceRefresh","badgeCache","expiresAt","inventory","pxjBalance","tradingStats","getPXJBalance","getTradingStats","badges","journeyAssets","pixalPfpOwned","waxrockOwned","ingredientsOwned","tradingVolume","accountAge","pixalPfpCount","BADGE_DEFINITIONS","unlockedAt","progress","required","percentage","waxrockCount","wpixalBalance","kingBalance","getTokenBalance","checkEarlyAdopterStatus","tokens","pxjToken","token","tokenRow","balanceStr","firstAction","actionDate","getBadgeDefinition","badgeId","getAllBadgeDefinitions","hasUserBadge","badge","getUserBadgeStats","getBadgeStatistics","badgesByType","badgesByRarity","recentBadges","progressBadges","totalBadges","clearBadgeCache","getBadgeProgress","getAllBadgeDefinitionsWithProgress","userBadges","earnedBadgeIds","userBadge","earned","balanceService","getWaxBalance","balanceCache","lightApiBalances","waxBalance","formattedBalance","isCached","NotificationContext","notifications","setNotifications","confirmResolveRef","confirmDialog","setConfirmDialog","soundEnabled","setSoundEnabled","saved","maxNotifications","addNotification","notification","newNotification","updated","removeNotification","resolveConfirm","clearAllNotifications","showWarning","showInfo","confirm","confirmText","cancelText","toggleSound","ShoppingCart","login","purchaseNFT","batchPurchaseNFTs","cartItems","setCartItems","totals","setTotals","selectedItems","setSelectedItems","itemsPerTx","setItemsPerTx","useBatchPurchase","setUseBatchPurchase","loadCartData","newTotals","totalsError","handleCartChange","handleRemoveItem","newSet","unavailableItems","role","handleToggleSelection","selectedItemsList","successCount","failedItems","batchPurchases","saleId","getDefaultPreferences","detectSystemPreferences","reducedMotion","highContrast","largeText","screenReader","keyboardNavigation","isInitialized","loadPreferences","setupMediaQueryListeners","setupKeyboardNavigation","applyAccessibilitySettings","setupFocusManagement","systemPreferences","systemPrefs","detectScreenReader","speechSynthesis","reducedMotionMQ","updatePreference","mediaQueryListeners","highContrastMQ","keyboardNavigationActive","classList","remove","announceToScreenReader","getElementDescription","savePreferences","preference","allPreferences","setAriaLabel","setAriaDescribedBy","describedById","setAriaExpanded","expanded","setAriaSelected","setAriaChecked","setAriaHidden","focusElement","focusStack","restoreFocus","lastFocused","trapFocus","focusableElements","getFocusableElements","el","trapFocusElements","tabIndex","originalTabIndex","firstElement","lastElement","releaseFocusTrap","focusableSelectors","offsetParent","announcement","ariaLabel","registerKeyboardShortcut","matchesShortcut","shortcut","modifiers","ctrl","meta","calculateLuminance","g","rNorm","gNorm","bNorm","rLinear","gLinear","bLinear","calculateContrastRatio","color1","color2","rgb1","hexToRgb","rgb2","lum1","lum2","checkColorContrast","foreground","background","hex","meetsContrastRequirements","AA","normal","large","AAA","suggestAccessibleColors","suggestions","fgRgb","bgRgb","adjustment","newFg","adjustBrightness","ratio","rgb","factor","adjust","newR","newG","newB","padStart","parsed","mq","AccessibilitySettings","setPreferences","currentPrefs","firstButton","handlePreferenceChange","newPreferences","preferenceNames","handleClose","onKeyDown","strokeLinecap","strokeLinejoin","strokeWidth","defaults","Navigation","logout","isMobileMenuOpen","setIsMobileMenuOpen","isScrolled","setIsScrolled","cartCount","setCartCount","isCartOpen","setIsCartOpen","isWalletDropdownOpen","setIsWalletDropdownOpen","isAccessibilitySettingsOpen","setIsAccessibilitySettingsOpen","isDarkMode","setIsDarkMode","userSettings","darkMode","setWaxBalance","setUserBadges","lastBalanceUpdate","setLastBalanceUpdate","isDisplayOptionsExpanded","setIsDisplayOptionsExpanded","isMoreDropdownOpen","setIsMoreDropdownOpen","isBadgeCategoryExpanded","setIsBadgeCategoryExpanded","walletDropdownRef","moreDropdownRef","handleScroll","scrollY","toggleDarkMode","newDarkMode","initialSettings","emailNotifications","priceAlerts","marketingEmails","language","updateCartCount","toggleMobileMenu","closeMobileMenu","closeWalletDropdown","fetchWaxBalance","badgeResult","handleClickOutside","Link","alignItems","justifyContent","padding","fontSize","flexDirection","gap","badgeDef","isEarned","borderRadius","border","opacity","fontWeight","open","onMouseEnter","onMouseLeave","flexWrap","fontStyle","marginTop","LandingPage","serviceWorkerReady","subscribed","checkSupport","permissionState","Notification","registerServiceWorker","checkExistingSubscription","swFile","serviceWorkerRegistration","serviceWorker","register","ready","handleServiceWorkerMessage","pushSubscription","pushManager","getSubscription","validateSubscription","requestPermission","previousPermission","unsubscribe","subscribeOptions","userVisibleOnly","applicationServerKey","vapidPublicKey","urlBase64ToUint8Array","subscriptionData","p256dh","arrayBufferToBase64","getKey","auth","subscriptionTime","sendSubscriptionToServer","removeSubscriptionFromServer","showLocalNotification","requireInteraction","silent","onclose","base64String","base64","rawData","atob","outputArray","Uint8Array","buffer","bytes","binary","byteLength","btoa","getNotificationPreferences","stored","auctionUpdates","newListings","marketTrends","systemNotifications","subscription","valid","subscriptionId","isSubscribed","setVapidKey","testNotification","sendPriceAlert","currentPrice","targetPrice","sendTransactionNotification","transactionId","watchlistService","browser","sound","loadFromStorage","startPriceMonitoring","requestNotificationPermission","watchlist","STORAGE_KEY","ALERTS_KEY","NOTIFICATIONS_KEY","storageKeys","saveToStorage","watchlistSize","alertsCount","addToWatchlist","watchlistItem","alertType","lastPrice","removeFromWatchlist","getWatchlist","isInWatchlist","setPriceAlert","alert","lastTriggered","removePriceAlert","getPriceAlert","updateNotificationSettings","getNotificationSettings","isEndpointDisabled","failure","endpointFailures","DISABLE_DURATION","recordEndpointFailure","FAILURE_WINDOW","MAX_FAILURES","recordEndpointSuccess","notifyEndpointsDisabled","lastNotification","CustomEvent","disabledEndpoints","k","retryTime","getEndpointStatus","disabledUntil","priceCheckInterval","checkPriceAlerts","stopPriceMonitoring","every","disabledCount","pricePromises","fetchCurrentPrice","priceChange","enabled","checkAlertCondition","nftName","priceCache","getCurrentPrice","fetchAtomicHubPrice","fetchNeftyBlocksPrice","fetchTemplateFloorPrice","w","failureCount","assetUrl","assetResponse","assetData","floorUrl","floorResponse","floorData","shouldTrigger","changePercent","direction","triggerAlert","playNotificationSound","audio","Audio","play","getWatchlistStats","totalItems","activeAlerts","priceChanges","change","averagePriceChange","clearWatchlist","exportWatchlist","exportedAt","importWatchlist","mantisa","getPrettyValue","digits","separator","charAt","len","PowerUpStateResource","Struct","super","default_block_cpu_limit","UInt64","default_block_net_limit","allocated","Number","weight_ratio","dividing","target_weight_ratio","reserved","utilization_increase","base","multiplier","price_function","new_exponent","util_weight","price_integral_delta","start_utilization","end_utilization","Asset","fromUnits","units","subtracting","start_u","end_u","Int64","adding","lt","determine_adjusted_utilization","decay_secs","utilization_timestamp","ts","TimePointSec","toMilliseconds","toNumber","delta","exp","__decorate","field","PowerUpStateResourceCPU","per_day","us_per_day","usage","us","frac_by_us","frac_by_ms","price_per","price_per_us","price_per_ms","ms_per_day","virtual_block_cpu_limit","weight_to_us","multiplying","BNPrecision","us_to_weight","converted","cpu","fromFloat","min_payment","PowerUpStateResourceNET","bytes_per_day","frac_by_bytes","frac_by_kb","kilobytes","price_per_byte","price_per_kb","kb_per_day","virtual_block_net_limit","weight_to_bytes","bytes_to_weight","net","PowerUpState","PowerUpAPI","get_state","v1","chain","get_table_rows","Connector","ExchangeState","RAMState","quote","get_input","RAMAPI","REXState","total_lent","total_lendable","lent","unlent","total_unlent","rex","total_rex","exchange","lendable","cpu_price_per_ms","cpu_price_per_us","net_price_per_kb","net_price_per_byte","unit","unitPrice","total_rent","REXAPI","Resources","sampleAccount","powerup","ram","APIClient","FetchProvider","getSampledUsage","get_account","cpu_limit","mul","byte","net_limit","cpu_weight","net_weight","__className","Powerup","Name","UInt32","Buyrambytes","ChainFeatures","defaultTranslations","en","checking","cost","resolving","ko","chains","aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906","features","BuyRAM","PowerUp","TransactPluginAutoCorrect","AbstractTransactPlugin","translations","iterations","ui","addHook","TransactHookTypes","beforeSign","request","run","t","getTranslate","checkingPromise","prompt","default","client","permissionLevel","correctedPromise","correct","modified","race","resolved","compute_transaction","transaction","exception","processed","except","getException","net_usage","needed","billed","billable","needs","buyram","details","cpu_usage","newAction","Action","signer","payer","receiver","newRequest","prependAction","net_frac","cpu_frac","max_payment","modifiedRequest","ram_needed","ram_quota","ram_usage","ramAction","ramPrice","transactionService","executeTransaction","generateTransactionId","wharfKitService","getAccountName","emitEvent","updateTransactionStatus","performTransaction","blockNum","cpuUsage","netUsage","skipConfirmation","waitForConfirmation","retryTransaction","retryTimeouts","newTransactionId","newTransaction","cancelTransaction","getTransaction","getTransactionsByAccount","getTransactionsByType","getPendingTransactions","clearOldTransactions","clearListeners","_timeout","txResult","cpu_usage_us","net_usage_words","_transactionId","WharfKitService","initializeSessionKit","restoreSession","appName","WebRenderer","walletPlugins","WalletPluginAnchor","WalletPluginCloudWallet","WalletPluginWombat","transactPlugins","sessionKit","SessionKit","restored","restore","currentSession","isLoggedIn","getSession","getActor","getPermission","safeGetActor","safeGetPermission","actionsCount","broadcast","expireSeconds","intended_delphi_median","taker_marketplace","purchases","totalPrice","purchase","transferTokens","tokenContract","buildTokenTransferActions","bulkTransferNFT","executeCraftingTransaction","craftingData","craftId","craft_green","craft_orange","craft_purple","craft_amber","craft_chartreuse","craft_violet","craft_teal","craft_vermillion","craft_magenta","recipe","individualPxjCost","pxjCost","booster","craftAssetIds","ingredient","ingredientAssets","assetsPerCraft","craft_id","user_name","getWalletContext","getTransactionHistory","transferNFT","marketContract","buildPurchaseActions","craftingResult","getAPIClient","controls","loop","autoPlay","processUrl","processedVideoUrl","processedImageUrl","getPlaceholderSrc","finalImageUrl","poster","shareImageGenerator","backgroundColor","textColor","accentColor","generateAchievementShareImage","legendaryCount","username","defaultConfig","topBadges","rarityOrder","legendary","epic","rare","svg","rarityColor","toLocaleDateString","generateInventoryShareImage","topItems","downloadImage","dataUrl","download","click","convertToPNG","svgDataUrl","Image","canvas","ctx","getContext","drawImage","toDataURL","downloadShareImage","ShareModal","shareUrl","defaultShareText","copied","setCopied","shareText","setShareText","generatingImage","setGeneratingImage","getRandomizedShareText","messages","currentRandomText","setCurrentRandomText","finalDefaultText","finalShareUrl","copyToClipboard","clipboard","writeText","readOnly","hashtags","twitterUrl","facebookUrl","redditUrl","telegramUrl","emailUrl","imageDataUrl","pngDataUrl","convertShareImageToPNG","chatService","blacklistedAccounts","bannedWords","trustedDomains","maxMessageLength","minTimeBetweenMessages","calculateMessageCost","isSponsored","characterCount","hasPixalPFP","checkPixalPFPOwnership","sponsoredCost","SPONSORED_COST_PIXAL_HOLDER","SPONSORED_COST_NON_HOLDER","baseCost","characterCost","totalCost","discount","BASE_COST_PIXAL_HOLDER","BASE_COST_NON_HOLDER","characterMultiplier","MIN_MESSAGE_COST","maxCostForHolders","sendMessage","collectionTag","validateMessageForSending","finalCost","userLastMessageTime","transferAction","PXJ_CONTRACT","CHAT_ACCOUNT","PXJ_SYMBOL","updateRateLimit","messageCache","messageLength","getMessages","parseTransferToMessage","applyFilters","isMessageBlockedByModeration","messageType","collectionMatch","errorObj","minPxjAmount","maxPxjAmount","hideSpam","isSpamMessage","showOnlySponsored","moderationSettings","word","userMessages","userRateLimit","blacklistAccount","unblacklistAccount","getUserAvatar","pixalAssets","lowerMessage","bannedWord","lastMessageTime","timeDiff","verifyLinksInMessage","urls","domain","trustedDomain","updateModerationSettings","getModerationSettings","span","ListingChatModal","messagesEndRef","setMessages","newMessage","setNewMessage","isSending","setIsSending","costInfo","setCostInfo","showPriceInfo","setShowPriceInfo","listingTag","scrollToBottom","scrollIntoView","behavior","loadMessages","refresh","listingMessages","updateCostInfo","messageWithTags","txId","debounceTimer","handleEscape","toLocaleString","maxLength","getIPFSUrl","getAssetImageUrl","imgData","getAssetVideoUrl","videoData","getTemplateImageUrl","getTemplateVideoUrl","getSaleAssetImageUrl","getSaleAssetVideoUrl","NFTDetailsModal","usdPrice","navigate","useNavigate","localUsdPrice","setLocalUsdPrice","setIsInCart","setIsInWatchlist","showShareModal","setShowShareModal","showSendOfferModal","setShowSendOfferModal","showChatModal","setShowChatModal","setSession","setCollectionStats","recentActivity","setRecentActivity","setPriceHistory","initSession","fetchCollectionStats","fetchRecentActivity","fetchPriceHistory","avgPrice","recentSales","activities","history","checkStatus","updateCartStatus","unsubscribeWatchlist","handleAssetClick","point","maxPrice","minPrice","priceRange","activity","priceValue","marginRight","origin","NFTComparison","initialNFTs","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearching","setIsSearching","comparisonMetrics","setComparisonMetrics","showPrice","showRarity","showAttributes","showCollection","showSeller","getRarityColor","getAttributeValue","query","pixelJourney","friedFactory","cryptoMuffins","filtered","searchNFTs","addNFTToComparison","toggleMetric","removeNFTFromComparison","allAttributes","getAllAttributes","SocialShare","shareMessages","getRandomShareText","randomIndex","setDefaultShareText","currentPath","pathname","subject","ErrorMessage","onRetry","showRetry","errorConfig","isRetrying","finalConfig","displayTitle","displayMessage","actionText","reload","SEARCH_HISTORY_KEY","AdvancedSearch","onSearchChange","showFilters","onFilterChange","showSuggestions","setShowSuggestions","searchHistory","setSearchHistory","setFilters","rarities","sortBy","showAdvancedFilters","setShowAdvancedFilters","searchInputRef","suggestionsRef","selectedSuggestionIndex","setSelectedSuggestionIndex","savedHistory","saveToHistory","term","newHistory","clearHistory","handleSearchChange","handleSearchSubmit","blur","handleSuggestionClick","suggestion","handleKeyDown","allSuggestions","handleFilterChange","newFilters","updatedFilters","onFocus","actualIndex","resetFilters","Marketplace","filteredNfts","setFilteredNfts","setLoading","activeCategory","setActiveCategory","usdPrices","setUsdPrices","selectedNft","setSelectedNft","isModalOpen","setIsModalOpen","setCurrentPage","totalPages","setTotalPages","allNfts","setAllNfts","isFilterSidebarOpen","setIsFilterSidebarOpen","setPriceRange","selectedSchemas","setSelectedSchemas","setSortBy","dateRange","setDateRange","searchSuggestions","setSearchSuggestions","availableCollections","setAvailableCollections","availableSchemas","setAvailableSchemas","selectedCollections","setSelectedCollections","selectedAttributes","setSelectedAttributes","availableAttributes","setAvailableAttributes","collapsedSections","setCollapsedSections","watchlistItems","setWatchlistItems","loadMoreLoading","setLoadMoreLoading","isComparisonOpen","setIsComparisonOpen","shareNft","setShareNft","isShareModalOpen","setIsShareModalOpen","offerNft","setOfferNft","isOfferModalOpen","setIsOfferModalOpen","chatNft","setChatNft","isChatModalOpen","setIsChatModalOpen","openDropdowns","setOpenDropdowns","zoomedImage","setZoomedImage","showImageZoom","setShowImageZoom","toggleDropdown","closeAllDropdowns","handleMediaZoom","mediaUrl","mediaType","processedUrl","loadMarketplaceData","category","loadAvailableSchemas","schemaNames","loadUsdPrices","nfts","prices","nftsNeedingPrices","generateSearchSuggestions","queryLower","suggestionList","handleAdvancedFilterChange","updateCartItems","updateWatchlistItems","handleLoadMore","closeFilterSidebar","handleSchemaToggle","newSchemas","newCollapsed","handleCollectionToggle","newSelected","handleAttributeToggle","attributeType","attributeValue","currentValues","newValues","toggleSectionCollapse","sectionName","filteredAndSortedNfts","searchLower","selectedValues","nftAttribute","attributeMap","availableValues","filteredValues","filteredSchemas","allSchemas","applyAdvancedFilters","priceA","priceB","handlePurchase","handleSellerClick","handleCollectionClick","handleSelectItem","handleSelectAll","handleBulkAddToCart","_","Rewards","ListingModal","onSuccess","bundleNfts","setPrice","isBundle","setIsBundle","bundleName","setBundleName","isListing","setIsListing","waxCurrency","mint_number","bundleNft","onSubmit","priceFloat","priceString","settlement_symbol","TransferModal","setRecipient","setMemo","isTransferring","setIsTransferring","validateWaxAccount","BurnModal","setConfirmText","isBurning","setIsBurning","setStep","requiredConfirmText","resetModal","asset_owner","autoComplete","BulkListingModal","listingPrices","setListingPrices","bulkPrice","setBulkPrice","listingProgress","setListingProgress","priceSuggestions","setPriceSuggestions","loadingSuggestions","setLoadingSuggestions","handlePriceChange","fetchPriceSuggestions","collectionGroups","groups","collectionEntries","successfulCollections","collectionNFTs","primaryError","applyDefaultPricing","isValidApiResponse","sortedPrices","q1Index","q3Index","iqr","lowerBound","upperBound","filteredPrices","medianPrice","suggestedPrice","confidence","sampleSize","sortedNfts","sorted","getTotalValue","invalidPrices","completedBatches","newPrices","BulkTransferModal","transferProgress","setTransferProgress","acc","recipientTrimmed","nftCount","DistributeModal","distributions","setDistributions","bulkAddresses","setBulkAddresses","isDistributing","setIsDistributing","distributeProgress","setDistributeProgress","sortedDistributions","validDistributions","dist","readyToDistribute","addresses","addressList","addr","handleBulkAddressesChange","handleRecipientChange","invalidDistributions","totalTransfers","completedTransfers","BulkBurnModal","burnProgress","setBurnProgress","waxrockPixals","burnableNfts","waxrockNames","INGREDIENT_TEMPLATES","pxj","wuf","pxjUpgrade","CRAFTING_RECIPES","resultTemplateId","getTemplateById","inventoryService","fetchInventory","inventoryMap","fetchBalances","wufBalance","pxjBalances","wufBalances","emptyBalances","getIngredientQuantity","inv","getIngredientAssetIds","canCraftRecipe","getMaxCraftableQuantity","maxFromIngredients","possibleFromThisIngredient","maxFromPxj","updateInventoryAfterCraft","usedIngredients","pxjSpent","startBackgroundInventoryLoad","isBackgroundLoading","lastUpdate","virtualLibraryTimestamp","VIRTUAL_LIBRARY_CACHE_DURATION","promise","loadFullInventoryInBackground","backgroundLoadingPromises","convertNFTAssetToInventoryNFT","allNFTs","convertedAssets","virtualLibrary","getInventoryPage","virtualData","totalCount","isBackgroundLoadingInProgress","getVirtualLibraryStats","clearVirtualLibrary","getCachedInventory","getCachedBalances","CraftingModal","activeTab","setActiveTab","selectedRecipe","setSelectedRecipe","craftingQueue","setCraftingQueue","isProcessing","setIsProcessing","setInventory","setBalances","craftQuantity","setCraftQuantity","maxCraftable","setMaxCraftable","loadInventoryData","inventoryData","balanceData","getInventoryQuantity","calculateMaxCraftable","sortedInventory","templateA","templateB","typeA","typeB","canCraft","pxjNeeded","handleUpgrade","createPortal","ing","idx","existingIndex","newQueue","removeFromQueue","recipeId","queueItem","canProceed","neededQuantity","craftError","offerService","placeBuyOffer","offerAmount","offerFloat","atomicMarketContract","transactionResult","getBuyOffersForAsset","getUserBuyOffers","cancelBuyOffer","offerId","offer_id","acceptBuyOffer","declineBuyOffer","getOfferStateText","ViewOffersModal","offers","setOffers","acceptingOffer","setAcceptingOffer","loadOffers","offersData","sortedOffers","formatTimeAgo","offerTime","diffMs","diffHours","diffDays","diffMinutes","handleAcceptOffer","NeftyBlendService","recyclePixal","blockInfo","getBlockInfo","expiration","getExpirationTime","ref_block_num","ref_block_prefix","max_net_usage_words","max_cpu_usage_ms","delay_sec","context_free_actions","BLEND_CONTRACT","RECYCLE_COST","ATOMIC_ASSETS_CONTRACT","claimer","blend_id","RECYCLE_BLEND_ID","transferred_assets","own_assets","transaction_extensions","unpackPixelIngredientPack","PACK_RECIPE_ID","unpackGenericPack","GENERIC_PACK_BLEND_ID","waxEndpoints","chainInfo","headBlockId","head_block_id","refBlockNum","last_irreversible_block_num","blockIdBytes","endpointError","executeRecycle","wallet","blendId","recycleCost","walletActor","executeUnpack","isPackNFT","templateName","hasPackKeyword","keyword","isNeftyBlocksPack","PACK_TEMPLATE_ID","getPackType","unpackPixelPack","unpackPixelPacksBulk","isPixelPack","UnpackModal","walletSession","onUnpackComplete","isUnpacking","setIsUnpacking","packNFTs","canUnpack","walletState","setWalletState","BulkAuctionModal","walletContext","startingPrice","setStartingPrice","durationWeeks","setDurationWeeks","durationDays","setDurationDays","durationHours","setDurationHours","durationMinutes","setDurationMinutes","auctionMemo","setAuctionMemo","isSubmitting","setIsSubmitting","calculateTotalDuration","updateDurationComponent","component","clampedValue","getMaxValue","formatDurationDisplay","totalDurationSeconds","startingBidAmount","starting_bid","durationDisplay","rwaxService","getFeeTokens","WAX_API_BASE","alcorTokenIds","alcorRates","fetchAlcorTokenRates","feeTokens","feeMatch","waxValue","calculateLiveWaxValue","exchange_rate","exchangeRate","feeAmount","wax_value","tokenIds","getAssetPoolInfo","lower_bound","upper_bound","key_type","issuedTokens","issued_tokens","getTokenizedAssets","attributeFilters","recent","order_by","search_type","offer_type","verified","favorites","user","only","rwax_contract","rwax_symbol","ATOMIC_API_BASE","mint","collectionImage","verification","blacklisted","transferable","burnable","mutableData","immutableData","rarityScore","attributesFloor","rwax","tokenName","redeemAmount","getAssetWPIXALAmount","requestBody","index_position","show_payer","table_key","getUserPixalAssets","imageSources","mutable_data","executeTokenization","feeToken","wharfkit","fee_currency","executeRedemption","redeemer","TokenizeFeeModal","setFeeTokens","selectedFeeToken","setSelectedFeeToken","loadFeeTokens","waxToken","stakingService","stakeNFTsPixelJourney","farmName","FARMS_CONTRACT","farmname","assets_to_stake","executeTransactionWithRetry","farm_name","asset_count","gas_used","unstakeNFTsPixelJourney","stakeNFTsBatch","successful_transactions","failed_transactions","total_gas_used","createBatches","MAX_BATCH_SIZE","batchResult","total_assets","successful","failed","unstakeNFTsBatch","claimAllRewards","getStakingInfo","stakedResponse","userStakeData","stakedAssets","staked_assets","pendingRewards","pending_rewards","stakedNfts","stake_time","rewards_per_hour","rewards","reward","totalStakingPower","estimatedDailyRewards","WUF_CONTRACT","staked_nfts","total_staking_power","estimated_daily_rewards","stakeTokens","PXJ_FARM_NAME","TOKEN_FARMS_CONTRACT","unstakeTokens","claimTokenFarmRewards","getTokenFarmInfo","farmData","creator","time_created","staking_token","incentive_count","total_staked","vesting_time","last_update_time","getTokenStakingInfo","stakerData","staked_amount","last_claim_time","calculateOptimalStakingStrategy","stakingInfo","stakedAssetIds","availableResponse","availableData","availableNfts","calculateRewardsPerHour","templateRewards","getTemplateRewards","recommendedStakes","rarityMultiplier","getRarityMultiplier","getTemplateRarity","dailyReturn","expected_daily_return","calculateStakingPriority","totalExpectedReturn","stake","recommended_stakes","total_expected_daily_return","optimization_tips","generateOptimizationTips","available_nfts","RETRY_ATTEMPTS","RETRY_DELAY","hourly_rewards","tips","rarityCount","ProgressiveImage","isLoaded","setIsLoaded","isError","setIsError","isInView","setIsInView","imgRef","videoRef","getLoadingPlaceholder","getErrorPlaceholder","observer","IntersectionObserver","isIntersecting","disconnect","rootMargin","currentRef","handleLoad","handleError","objectFit","onLoadedData","NFTCard","dropdownOpen","onNFTClick","onCollectionClick","onSchemaClick","onToggleSelection","onDropdownToggle","onListingOpen","onTransferOpen","onBurnOpen","onAuctionOpen","onRecyclePixal","onCraftingOpen","onViewOffers","onUnpackPixelPack","onStakeOpen","onTokenizePixal","onImageZoom","isDropdownOpen","isPixal","isIngredient","isWaxRockPixal","Inventory","listingModalOpen","setListingModalOpen","transferModalOpen","setTransferModalOpen","burnModalOpen","setBurnModalOpen","showBulkListingModal","setShowBulkListingModal","showBulkTransferModal","setShowBulkTransferModal","showBulkDistributeModal","setShowBulkDistributeModal","showBulkBurnModal","setShowBulkBurnModal","showUnpackModal","setShowUnpackModal","showBulkAuctionModal","setShowBulkAuctionModal","showAuctionModal","setShowAuctionModal","actionNFT","setActionNFT","isMultiSelectMode","setIsMultiSelectMode","setDropdownOpen","craftingModalOpen","setCraftingModalOpen","craftingIngredient","setCraftingIngredient","viewOffersModalOpen","setViewOffersModalOpen","offersNFT","setOffersNFT","tokenizeModalOpen","setTokenizeModalOpen","tokenizeNFT","setTokenizeNFT","debouncedSearchTerm","setDebouncedSearchTerm","setFilter","selectedCollection","setSelectedCollection","selectedSchema","setSelectedSchema","selectedTemplate","setSelectedTemplate","sortOrder","setSortOrder","collectionSearchTerm","setHasMore","loadingMore","setLoadingMore","loadingAll","setLoadingAll","ITEMS_PER_PAGE","loadInventory","apiOptions","apiResponse","itemsReceived","totalAvailable","inventoryNFTs","loadMoreItems","loadAllItems","currentInventoryLength","startPage","allNewItems","hasMoreItems","totalRequests","requestPromises","requestPages","requestPromise","pages","currentItems","responses","batchHasItems","newInventory","previousCount","newCount","addedCount","closest","adjustDropdownPosition","dropdown","rect","getBoundingClientRect","viewportWidth","handleNFTClick","handleSchemaClick","toggleItemSelection","handleBulkUnpackPixelPacks","pixelPackNFTs","filteredInventory","matchesSearch","matchesFilter","filteredCount","goToNextPage","goToPrevPage","allIds","stakeableNFTs","nonStakeableCount","pixelPackCount","handleRecyclePixal","handleCraftingOpen","handleViewOffers","handleUnpackPixelPack","handleStakeOpen","handleTokenizePixal","pixals","boxShadow","onMouseOver","transform","onMouseOut","marginLeft","TruncatedText","isExpanded","setIsExpanded","truncatedText","ipfsRateLimiter","requestImage","queuedRequest","requestQueue","processQueue","activeRequests","MAX_CONCURRENT_REQUESTS","REQUEST_TIMEOUT","timeSinceLastRequest","lastRequestTime","MIN_REQUEST_INTERVAL","processRequest","finally","gateway","selectBestGateway","makeRequest","updateGatewayStats","extractGateway","MAX_RETRIES","finalError","originalUrl","extractIPFSHash","_url","availableGateways","gatewayStats","isBlocked","blockUntil","errorCount","statsA","statsB","requestCount","lastRequest","errorRate","GATEWAY_COOLDOWN","getStatus","queueLength","imageService","generateFallbackSVG","displayText","getDefaultText","getIconForType","iconSize","loadImage","fallbackUsed","imageCache","existingPromise","loadingPromises","loadingPromise","performImageLoad","isIPFSUrl","rateLimitedUrl","addToCache","fallbackSrc","MAX_CACHE_SIZE","firstKey","preloadImages","getOptimizedImageUrl","optimizeIPFSUrl","FallbackImage","imageSrc","setImageSrc","loadResult","setLoadResult","loadingRef","combinedStyle","combinedClassName","position","zIndex","borderTop","NFTImage","CollectionImage","TokenImage","TIER_OPTIONS","costFormatted","benefits","CollectionTierModal","selectedTier","setSelectedTier","setCollectionName","userBalance","setUserBalance","balanceLoading","setBalanceLoading","fetchUserBalance","selectedTierData","affordable","canAfford","benefit","Collections","setCollections","setError","showTierModal","setShowTierModal","displayedCount","setDisplayedCount","showTierPerks","setShowTierPerks","totalFetched","setTotalFetched","pxApprovedProjects","setPxApprovedProjects","fetchPxApprovedImages","currentProjects","projectsNeedingImages","project","collectionData","updatedProjectsWithImages","prevProjects","up","fetchMarketDataForCollections","updatedCollections","collectionIndex","floorPriceData","marketStats","market_cap","loading_market_data","fetchCollections","mappedCollections","filteredCollections","filteredPxApproved","displayedCollections","hasMoreCollections","newCollections","pixeljourney","quickLinks","ownerMessage","discordUrl","learnAboutGrid","friedfactory","crptomuffins","akufishheads","pantheon","pocketsizedp","nimasodyssey","QuickLinks","tierInfo","badgeConfig","hasQuickLinks","marginBottom","gridTemplateColumns","margin","lineHeight","isMinimized","setIsMinimized","unreadCount","setUnreadCount","lastReadTimestamp","setLastReadTimestamp","setIsSponsored","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","showSponsoredInfo","setShowSponsoredInfo","showEmojiPicker","setShowEmojiPicker","refreshIntervalRef","messageInputRef","insertFormatting","textarea","selectedText","beforeText","afterText","newCursorPos","setSelectionRange","renderMessageContent","unreadMessages","msg","latestMessage","chatFilters","fetchedMessages","calculateCost","messageToSend","formatTimestamp","diffMins","formatPxjAmount","getMessageTypeClass","emoji","insertEmoji","onKeyPress","ImageZoom","imageName","CollectionDetail","useParams","setCollection","setSchemas","setTemplates","analytics","setAnalytics","volumePeriod","setVolumePeriod","volumeData","setVolumeData","loadingVolume","setLoadingVolume","marketCapCurrency","setMarketCapCurrency","waxToUsdRate","setWaxToUsdRate","holders","setHolders","holdersPage","setHoldersPage","loadingMoreHolders","setLoadingMoreHolders","hasMoreHolders","setHasMoreHolders","topSales","setTopSales","displayedSales","setDisplayedSales","salesPage","setSalesPage","salesPerPage","hasMoreSales","setHasMoreSales","similarCollections","setSimilarCollections","atomicMarketStats","setAtomicMarketStats","filteredTemplates","matchesSchema","nameA","nameB","issued_supply","fetchVolumeData","numUsers","usdMarketCap","waxMarketCap","numAssets","handleVolumePeriodChange","periods","nextPeriod","newVolumeValue","loadCollectionData","collectionInfo","schemasData","templatesData","analyticsData","enhancedStats","similarData","holdersData","processedMarketStats","combinedAnalytics","validPrices","loadTemplates","newDisplayedSales","getImageUrl","imgPath","formatSaleDate","dateString","year","day","renderMediaElement","getVideoUrl","getTemplateImage","xmlns","minimumFractionDigits","maximumFractionDigits","holder","nextPage","newHolders","similar","format","TemplateDetail","setTemplate","setSchema","setAssets","assetsLoading","setAssetsLoading","loadTemplateData","templateData","schemaData","loadAssets","formatDate","renderAttributeValue","minted_at_time","AssetDetail","setAsset","listing","setListing","listingLoading","setListingLoading","setUsdPrice","loadAssetData","checkListingStatus","marketplaceData","saleData","nftAsset","waxPriceResponse","waxPriceData","strValue","transferred_at_time","burned_by_account","burned_at_time","backed_tokens","ListingDetail","isDetailsModalOpen","setIsDetailsModalOpen","saleState","setSaleState","loadListingData","waxPrice","TransactionDetails","setTransaction","setBlockInfo","fetchTransactionDetails","parsedTransaction","trx","receipt","traces","listing_price_to_assert","blockResponse","block_num_or_id","blockData","block_id","producer","transaction_count","handleUserClick","trace","StakingModal","setAmount","resourceName","actionName","stake_net_quantity","stake_cpu_quantity","unstake_net_quantity","unstake_cpu_quantity","RAMModal","setRamPrice","userRamBytes","setUserRamBytes","isLoadingData","setIsLoadingData","fetchRAMData","ramMarketResponse","ramMarketData","ramMarket","ramSupply","accountResponse","accountData","inputLabel","inputPlaceholder","quant","TokenTransferModal","recipients","setRecipients","isBulkTransfer","setIsBulkTransfer","validateAmount","numValue","maxBalance","getAmountPerRecipient","getTokenPrecision","decimalPart","invalidRecipients","formattedAmountPerRecipient","recipientAccount","formattedAmount","successMessage","parsedRecipients","rec","balanceAmount","PortfolioAnalytics","portfolioMetrics","setPortfolioMetrics","collectionPerformance","setCollectionPerformance","insights","setInsights","timeSeriesData","setTimeSeriesData","selectedTimeframe","setSelectedTimeframe","selectedView","setSelectedView","generateTimeSeriesData","metrics","targetDate","setDate","getDate","targetTimestamp","relevantTransactions","valueAtDate","investedAtDate","totalInvested","invested","calculatePortfolioMetrics","purchaseTransaction","investedAmount","profitLoss","profitLossPercentage","sortedByPerformance","bestPerforming","worstPerforming","averageHoldingTime","totalNFTs","uniqueCollections","bestPerformingCollection","worstPerformingCollection","generateInsights","newInsights","bestCollection","largestCollection","formatWAX","formatPercentage","investedY","strokeDasharray","insight","defaultTxSettings","waxToCpuFrac","cpuAllocation","waxToNetFrac","estimateCpuWithElasticLimit","block_cpu_limit","base_limit","elastic_multiplier","cpuMicroseconds","cpuMs","PxBadges","setBadges","collapsedCategories","setCollapsedCategories","badgeStats","setBadgeStats","loadUserBadges","categories","allBadgeDefinitions","categoryMap","holdings","ownership","trading","social","achievement","special","earnedBadge","cat","achievementSeries","series","pixalCollectorBadges","steps","waxrockCollectorBadges","earnedCount","isCollapsed","categoryId","toggleCategory","rarityClass","getRarityClass","TokenBalanceContext","setLightApiBalances","setLastFetchTime","shouldFetch","refreshBalances","lightApiResponse","newBalances","tokenCount","exactMatch","useTokenBalance","alcorService","getAllTokens","tokensCache","tokensCacheExpiry","ALCOR_API_BASE","logo","WAX_TOKEN_ID","WAX_SYMBOL","WAX_CONTRACT","WPIXAL_TOKEN_ID","WPIXAL_SYMBOL","WPIXAL_CONTRACT","getSwapQuoteForPair","inputToken","outputToken","tradeType","slippageTolerance","token_id","swaps","swap","input_amount","maxSent","output_amount","output","minReceived","price_impact","priceImpact","minimum_received","route","poolId","pool_id","token_in","token_out","amount_in","amount_out","input_token","output_token","getExactOutputQuote","getSwapQuote","getExchangeRate","approximateWpixal","executeSwap","maxWaxInput","executeSwapForPair","inputAmount","outputAmount","calculateOutputAmount","slippage","calculateInputAmount","formatTokenId","parseSwapMemo","pools","minOut","poolIds","checkLiquidity","estimateWaxNeeded","getAlcorIconUrl","getTokenEmoji","WAX","WPIXAL","PXJ","KING","WAXUSDC","WAXWBTC","WUF","LSWAX","BRWL","TLM","WOMBAT","TACO","SHING","YEET","DMT","FGL","SOREN","TokenIcon","iconUrl","fallbackEmoji","imageError","setImageError","favoredTokenConfigs","EXCLUDED_CONTRACTS","shouldExcludeToken","DEFAULT_AVAILABLE_TOKENS","TokenDropdown","selectedToken","onTokenSelect","availableTokens","filterByAvailable","setIsOpen","setTokens","alcorTokens","setAlcorTokens","dropdownRef","loadAlcorTokens","fallbackTokens","getTokenConfig","favoredToken","alcorToken","loadTokenBalances","defaultTokens","tokenOptions","tokensToProcess","processedTokens","tokenKey","selectedTokenData","selectedTokenConfig","handleTokenSelect","SwapInterface","isModal","initialSellAmount","initialBuyAmount","sellAmount","setSellAmount","buyAmount","setBuyAmount","sellToken","setSellToken","buyToken","setBuyToken","quoteData","setQuoteData","setSlippage","showSlippageSettings","setShowSlippageSettings","isCalculating","setIsCalculating","lastInputField","setLastInputField","getTokenInfo","getNumericBalance","numericPart","calculateSwapAmount","inputTokenInfo","outputTokenInfo","handleSellAmountChange","handleBuyAmountChange","getQuote","handleSliderChange","tempToken","tempAmount","expectedOutput","sellTokenInfo","buyTokenInfo","swapTransaction","UserProfile","setTransactions","collectionAvatars","setCollectionAvatars","setUserStats","setAccountData","resourceData","setResourceData","tokenBalances","setTokenBalances","selectedTokens","setSelectedTokens","bulkSellLoading","setBulkSellLoading","lastTransactionDate","setLastTransactionDate","transactionFilter","setTransactionFilter","customDateRange","setCustomDateRange","searchQuery","setSearchQuery","transactionsPerPage","isExporting","setIsExporting","isLoadingTransactions","setIsLoadingTransactions","transactionError","setTransactionError","exportError","setExportError","stakingModal","setStakingModal","ramModal","setRAMModal","tokenTransferModal","setTokenTransferModal","accountToBoost","setAccountToBoost","setCpuAllocation","powerupAmount","setPowerupAmount","txIsLoading","setTxIsLoading","getResources","setResources","resourcesAreLoading","setResourcesAreLoading","targetAccount","total_resources","self_delegated_bandwidth","refund_request","voter_info","useGetAccountResources","powerupState","setPowerupState","powerupStateIsLoading","setPowerupStateIsLoading","powerupStateData","assumed_stake_weight","initial_weight_ratio","initial_timestamp","target_timestamp","powerup_days","min_powerup_fee","useGetPowerupState","setChainInfo","chainInfoIsLoading","setChainInfoIsLoading","chainInfoData","server_version","chain_id","last_irreversible_block_id","head_block_time","head_block_producer","block_net_limit","server_version_string","fork_db_head_block_num","fork_db_head_block_id","useGetChainInfo","loadTransactions","testAccount","realTransactions","typedTransactions","apiServiceAvailable","getUserTransactionsType","loadUserStats","realStats","fetchCollectionAvatars","fetchAccountData","fetchLastTransactionDate","TOP_TOKENS","fetchTokenBalancesFallback","validTopTokens","balanceWithValue","fetchUserBadges","fetchTokenBalances","balancesWithValues","validBalances","aIsTop","bIsTop","loadUserData","initializeData","calculateResourceUsage","currentUsed","openStakingModal","openRAMModal","closeTokenTransferModal","handleResourceSuccess","avatars","filteredTransactions","matchesAssetName","matchesCollection","matchesTxId","matchesFrom","matchesTo","txDate","startDate","endDate","setHours","daysAgo","comparison","paginatedTransactions","exportTransactions","mimeType","csvRows","blob","Blob","createObjectURL","revokeObjectURL","last_code_update","reputation","tierStatus","nextElementSibling","newSortBy","newSortOrder","hour","minute","pageNum","maxWax","newAmount","percent","setRefresh","maxPayment","setShowTxModal","setTxModalText","wharfSession","submitPowerupTx","allTokenKeys","totalPxjReceived","swapResults","swapQuote","from_token","from_contract","to_token","to_contract","pxjReceived","successfulSwaps","failedSwaps","openTokenTransferModal","UserProfileLookup","paramAccount","searchParams","useSearchParams","profileData","setProfileData","setAccountInfo","selectedNFT","setSelectedNFT","pixalFilters","setPixalFilters","Body","Eyes","Head","Mouth","PixelPet","Background","availableTraits","setAvailableTraits","contractBalances","balancesWithValue","calculateTokenValue","loadUserProfile","pixalNFTs","trait","availableTraitsObj","fetchWaxAccountInfo","firstTx","getAccountCreationDate","isVerified","calculateTotalValue","rareAssets","SEST","collectionFloorPrice","nftValue","getFilteredNFTs","handlePageChange","scrollTo","filteredNFTs","paginatedNFTs","getPaginatedNFTs","getTotalPages","permissions","pause","Packs","packs","setPacks","hasMoreNFTs","setHasMoreNFTs","apiPage","setApiPage","loadPacks","filteredPacks","pack","paginatedPacks","Watchlist","showAddAlert","setShowAddAlert","alertPrice","setAlertPrice","setAlertType","loadWatchlist","getPriceChangeIcon","addPriceAlert","Footer","links","ActivityStats","setRecentSales","setMarketStats","nftTradingStats","setNftTradingStats","recentTrades","setRecentTrades","setTopCollections","refreshing","setRefreshing","loadActivityData","loadStatsData","statsPromises","marketData","latestData","latestResult","total_sales","total_volume","active_listings","nftStats","topCollectionsData","topCollectionsByVolume","trade","handleRefresh","handleSaleClick","handleTradeClick","auctionService","subscriptions","startPolling","subs","stopPolling","isPolling","pollInterval","pollAuctionUpdates","POLL_INTERVAL","auctionIds","clearExpiredCache","fetchAuctionUpdates","subscribers","updates","requestResetTime","auctionCache","MAX_REQUESTS_PER_MINUTE","REQUEST_DELAY","current_bidder","getAuctionStatus","bid_count","last_bid_time","endTime","auctionResponse","fetchAuctionBidHistory","bids","bid_amount","bid","getTimeRemaining","hours","minutes","seconds","isExpired","formatTimeRemaining","isEndingSoon","Auctions","auctions","setAuctions","hideEmptyAuctions","setHideEmptyAuctions","showCreateModal","setShowCreateModal","showBidModal","setShowBidModal","selectedAuction","setSelectedAuction","bidAmount","setBidAmount","isPlacingBid","setIsPlacingBid","isCreatingAuction","setIsCreatingAuction","selectedAssets","setSelectedAssets","userAssets","setUserAssets","isLoadingAssets","setIsLoadingAssets","getSortField","getSortOrder","loadAuctions","formattedAuctions","collection_info","itemsPerPage","loadMoreAuctions","resetAndLoadAuctions","loadCollections","filteredAuctions","unsubscribeFunctions","prevAuctions","prevAuction","loadUserAssets","handlePlaceBid","handleViewDetails","bidFloat","currentBidAmount","hasExistingBids","bidString","toggleAssetSelection","AuctionDetail","setAuction","loadAuction","timeRemaining","isEnded","bidAmountInt","Learn","activeSection","setActiveSection","guides","guide","JourneyMap","sections","section","NFTStakingModal","batchProgress","setBatchProgress","transactionResults","setTransactionResults","fetchAssets","contractResponse","handleAssetToggle","failCount","selectedAssetsCount","getTokenIcon","PIXAL","TokenStakingModal","farmInfo","setFarmInfo","userStakeInfo","setUserStakeInfo","fetchData","farm","userStake","balanceResponse","formatTokenAmount","remaining","getActionButtonText","getTemplateEstimatedValue","Common","Uncommon","Rare","Epic","Legendary","getTemplateMarketPrice","listings","QuickBuyModal","market_price","available_for_sale","Staking","nftTemplates","setNftTemplates","setRewards","nftLoading","setNftLoading","setTotalStakingPower","stakingModalOpen","setStakingModalOpen","quickBuyModalOpen","setQuickBuyModalOpen","selectedBuyTemplate","setSelectedBuyTemplate","simulationMode","setSimulationMode","tokenStakeInfo","setTokenStakeInfo","tokenFarmInfo","setTokenFarmInfo","tokenStakingModalOpen","setTokenStakingModalOpen","tokenStakingAction","setTokenStakingAction","tokenLoading","setTokenLoading","userPxjBalance","setUserPxjBalance","defaultTemplates","owned_count","staked_count","estimated_value","apr","fetchNFTTemplates","apiService2","templatesResponse","countsResult","validTemplates","baseReward","apiError","fetchRewards","rewardsData","updatedTemplates","lastClaimTime","elapsedHours","calculatedRewards","stakedPxjRewards","stakedWufRewards","fetchTokenStakingData","openTokenStakingModal","openQuickBuyModal","closeQuickBuyModal","totalPower","claimedAmount","backgroundImage","openNFTStakingModal","attributeService","getAttributeFilters","extractAttributesFromNFTs","valueMap","stringValue","currentCount","numMinted","maxSupply","formatAttributesForQuery","attributePairs","parseAttributeQuery","attributeString","pair","decodedValue","decodeURIComponent","TokenizeFromInventoryModal","setTotalAssets","selectedCount","allAssetIds","newSelection","AssetDetailModal","onRedeem","showRedeemSection","setShowRedeemSection","formattedKey","displayValue","descriptionItem","RWAXLiveTransactions","setLastUpdate","setPage","fetchTransactions","newTransactions","formatTime","getTransactionLabel","sender_name","PIXAL_ATTRIBUTES","PixalAttributeFilter","onFiltersChange","initialFilters","filterState","setFilterState","newFilterState","handleValueToggle","clearAllFilters","clearedState","totalSelected","getFilteredValues","RWax","tokenizedAssets","setTokenizedAssets","showTokenizeModal","setShowTokenizeModal","showRedeemModal","setShowRedeemModal","showInventoryModal","setShowInventoryModal","showAssetDetailModal","setShowAssetDetailModal","showWaxRedeemModal","setShowWaxRedeemModal","selectedAsset","setSelectedAsset","selectedDetailAsset","setSelectedDetailAsset","waxRedeemStep","setWaxRedeemStep","showWpixalPurchaseModal","setShowWpixalPurchaseModal","wpixalToPurchase","setWpixalToPurchase","setWpixalPriceWAX","setWpixalPriceUSD","setWaxPriceUSD","showPriceAlertModal","setShowPriceAlertModal","alertAsset","alertPercentage","setAlertPercentage","shareAsset","setShareAsset","showWpixalAlertModal","setShowWpixalAlertModal","wpixalAlertPrice","setWpixalAlertPrice","assetsPage","setAssetsPage","setHasMoreAssets","loadingMoreAssets","setLoadingMoreAssets","setAttributeFilters","selectedAttributeFilters","setSelectedAttributeFilters","setWatchlist","setPriceAlerts","filteredAssets","loadTokenizedAssets","loadMoreAssets","handleSortChange","handleAttributeFiltersChange","formattedFilters","loadPriceData","wpixalWAX","wpixalUSD","waxUSD","loadWaxBalance","priceInterval","closeWaxRedeemModal","handleViewAssetDetail","toggleFilterSidebar","isTokenizedAsset","savedWatchlist","watchlistArray","handleSetPriceAlert","alertData","originalPrice","createdAt","newPriceAlerts","alertsArray","currentAsset","savedAlerts","textDecoration","selectedAssetsList","defaultFeeToken","handleAssetSelection","handleImageZoom","handleRedeem","handleWaxRedeem","newWatchlist","handleToggleWatchlist","handleShareAsset","userWaxAmount","requiredWaxAmount","redeemTransaction","PxCrafting","pxjPrice","setPxjPrice","wufPrice","setWufPrice","governance","collectibles","overviewIngredients","calculateROI","craftingCost","dailyEarnings","roiDays","profitMargin","ingTemplate","templatesByType","pixelpack","openCraftingModal","getIngredientImage","isVideoFormat","roi","resultTemplate","ingIndex","typeTemplates","featuredTokensService","calculateDuration","MIN_AMOUNT","MAX_AMOUNT","MIN_DAYS","MAX_DAYS","calculateRequiredAmount","generatePromoMemo","payment","usedLength","websiteUrl","maxDescLength","parseMemo","website","getFeaturedTokens","FEATURE_ACCOUNT","promos","isActive","paidAmount","validatePayment","FeaturedTokens","featuredTokens","setFeaturedTokens","showPromoModal","setShowPromoModal","promoForm","setPromoForm","loadFeaturedTokens","handleAmountChange","validation","PxSwap","PriceAlertNotification","isVisible","setIsVisible","isClosing","setIsClosing","showTimer","autoCloseTimer","toLocaleTimeString","alerts","setAlerts","handlePriceAlert","removeAlert","audioContextRef","soundsRef","createTone","audioContext","frequency","sampleRate","frameCount","createBuffer","channelData","getChannelData","sin","PI","asin","envelope","createBufferSource","connect","destination","AudioContext","webkitAudioContext","sounds","warning","initAudio","latestNotification","notificationElement","handleRemoveNotification","handleCancel","newRetryCount","hasError","isMaxRetries","handleRetry","APIErrorBoundary","finalDelay","lastRetryTime","errorCategory","canRetry","handleReset","lastCheckKey","lastCheckTime","recentAlerts","triggeredAt","usePWA","installPrompt","setInstallPrompt","isInstallable","setIsInstallable","isInstalled","setIsInstalled","isOnline","setIsOnline","onLine","isStandalone","setIsStandalone","isStandaloneMode","standalone","referrer","checkStandalone","handleBeforeInstallPrompt","handleAppInstalled","handleOnline","handleOffline","mediaQuery","handleDisplayModeChange","showInstallPrompt","outcome","userChoice","dismissInstallPrompt","fillOpacity","processedTransactions","setProcessedTransactions","activeTransactions","completedTransactions","getWalletTransaction","cancelWalletTransaction","pollIntervals","updateTransaction","newActiveTransactions","pollTransactionStatus","txData","existingInterval","startTransaction","active","clearCompleted","getActiveCount","getCompletedCount","hasFailedTransactions","useTransactionManager","autoHide","getTransactionTypeLabel","getNotificationIcon","diffSecs","animationDuration","useLocation","onPageChange","pushState","Routes","Route","getElementById","StrictMode"],"ignoreList":[0,1,2,4,5,12,13,14,41],"sources":["../../../node_modules/scheduler/index.js","../../../node_modules/scheduler/cjs/scheduler.production.js","../../../node_modules/react-dom/cjs/react-dom-client.production.js","../../../src/utils/formatUtils.ts","../../../node_modules/js-big-decimal/dist/esm/big-decimal.js","../../../node_modules/@wharfkit/resources/lib/wharfkit-resources.m.js","../../../src/components/SendOfferModal.tsx","../../../src/utils/sanitize.ts","../../../src/utils/ipfsUtils.ts","../../../src/config/collectionTiers.ts","../../../src/powerup_functions.js","../../../src/App.tsx","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react/cjs/react-jsx-runtime.production.js","../../../node_modules/react-dom/client.js","../../../src/contexts/WalletContextDefinition.ts","../../../src/hooks/useWallet.ts","../../../src/services/errorMessageService.ts","../../../src/services/loggingService.ts","../../../src/config/marketplaceConfig.ts","../../../src/services/currencyService.ts","../../../src/services/priceService.ts","../../../src/services/storageService.ts","../../../src/services/cartService.ts","../../../src/contexts/DisplaySettingsContext.tsx","../../../src/hooks/useDisplaySettings.ts","../../../src/services/monitoringService.ts","../../../src/services/cacheService.ts","../../../src/services/apiEndpointManager.ts","../../../src/services/api.ts","../../../src/services/badgeService.ts","../../../src/services/balanceService.ts","../../../src/contexts/NotificationContext.tsx","../../../src/hooks/useNotifications.ts","../../../src/components/ShoppingCart.tsx","../../../src/services/accessibilityService.ts","../../../src/components/AccessibilitySettings.tsx","../../../src/components/Navigation.tsx","../../../src/components/LandingPage.tsx","../../../src/services/pushNotificationService.ts","../../../src/services/watchlistService.ts","../../../node_modules/@wharfkit/transact-plugin-autocorrect/lib/transact-plugin-autocorrect.m.js","../../../src/services/transactionService.ts","../../../src/services/wharfkit.ts","../../../src/services/transactionBuilders.ts","../../../src/components/MediaRenderer.tsx","../../../src/utils/shareImageGenerator.ts","../../../src/components/ShareModal.tsx","../../../src/services/chatService.ts","../../../src/components/ListingChatModal.tsx","../../../src/utils/mediaUtils.ts","../../../src/components/NFTDetailsModal.tsx","../../../src/components/NFTComparison.tsx","../../../src/components/SocialShare.tsx","../../../src/components/ErrorMessage.tsx","../../../src/components/AdvancedSearch.tsx","../../../src/components/Marketplace.tsx","../../../src/components/Rewards.tsx","../../../src/components/ListingModal.tsx","../../../src/components/TransferModal.tsx","../../../src/components/BurnModal.tsx","../../../src/components/BulkListingModal.tsx","../../../src/components/BulkTransferModal.tsx","../../../src/components/DistributeModal.tsx","../../../src/components/BulkBurnModal.tsx","../../../src/data/ingredients.ts","../../../src/services/inventoryService.ts","../../../src/components/CraftingModal.tsx","../../../src/services/offerService.ts","../../../src/components/ViewOffersModal.tsx","../../../src/services/neftyBlendService.ts","../../../src/components/UnpackModal.tsx","../../../src/contexts/WalletContext.tsx","../../../src/components/BulkAuctionModal.tsx","../../../src/services/rwaxService.ts","../../../src/components/TokenizeFeeModal.tsx","../../../src/services/stakingService.ts","../../../src/components/ProgressiveImage.tsx","../../../src/components/Inventory.tsx","../../../src/components/TruncatedText.tsx","../../../src/services/ipfsRateLimiter.ts","../../../src/services/imageService.ts","../../../src/components/FallbackImage.tsx","../../../src/components/CollectionTierModal.tsx","../../../src/components/Collections.tsx","../../../src/components/QuickLinks.tsx","../../../src/components/ChatWidget.tsx","../../../src/components/ImageZoom.tsx","../../../src/components/CollectionDetail.tsx","../../../src/components/TemplateDetail.tsx","../../../src/components/AssetDetail.tsx","../../../src/components/ListingDetail.tsx","../../../src/components/TransactionDetails.tsx","../../../src/components/StakingModal.tsx","../../../src/components/RAMModal.tsx","../../../src/components/TokenTransferModal.tsx","../../../src/components/PortfolioAnalytics.tsx","../../../src/components/PxBadges.tsx","../../../src/contexts/TokenBalanceContext.tsx","../../../src/services/alcorService.ts","../../../src/utils/tokenIconUtils.ts","../../../src/components/TokenIcon.tsx","../../../src/components/TokenDropdown.tsx","../../../src/components/SwapInterface.tsx","../../../src/components/UserProfile.tsx","../../../src/components/CustomHooks/useGetAccountResources.js","../../../src/components/CustomHooks/useGetPowerupState.js","../../../src/components/CustomHooks/useGetChainInfo.js","../../../src/components/UserProfileLookup.tsx","../../../src/components/Packs.tsx","../../../src/components/Watchlist.tsx","../../../src/components/Footer.tsx","../../../src/components/ActivityStats.tsx","../../../src/services/auctionService.ts","../../../src/components/Auctions.tsx","../../../src/components/AuctionDetail.tsx","../../../src/components/Learn.tsx","../../../src/components/JourneyMap.tsx","../../../src/components/NFTStakingModal.tsx","../../../src/components/TokenStakingModal.tsx","../../../src/components/Staking.tsx","../../../src/services/attributeService.ts","../../../src/components/TokenizeFromInventoryModal.tsx","../../../src/components/AssetDetailModal.tsx","../../../src/components/RWAXLiveTransactions.tsx","../../../src/components/PixalAttributeFilter.tsx","../../../src/components/RWax.tsx","../../../src/components/PxCrafting.tsx","../../../src/services/featuredTokensService.ts","../../../src/components/FeaturedTokens.tsx","../../../src/components/PxSwap.tsx","../../../src/components/PriceAlertNotification.tsx","../../../src/components/NotificationContainer.tsx","../../../src/components/ConfirmDialog.tsx","../../../src/components/ErrorBoundary.tsx","../../../src/components/APIErrorBoundary.tsx","../../../src/components/WatchlistAlertChecker.tsx","../../../src/hooks/usePWA.ts","../../../src/components/PWAInstallBanner.tsx","../../../src/components/OfflineIndicator.tsx","../../../src/components/TransactionNotifications.tsx","../../../src/hooks/useTransactionManager.ts","../../../src/main.tsx"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$0 = parentA.child; child$0; ) {\n        if (child$0 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$0 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$0 = child$0.sibling;\n      }\n      if (!didFindChild) {\n        for (child$0 = parentB.child; child$0; ) {\n          if (child$0 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$0 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$0 = child$0.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar assign = Object.assign,\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nvar REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.view_transition\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  switch (nextRootInstance.nodeType) {\n    case 9:\n    case 11:\n      fiber = (fiber = nextRootInstance.documentElement)\n        ? (fiber = fiber.namespaceURI)\n          ? getOwnHostContext(fiber)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = nextRootInstance.tagName),\n        (nextRootInstance = nextRootInstance.namespaceURI))\n      )\n        (nextRootInstance = getOwnHostContext(nextRootInstance)),\n          (fiber = getChildHostContextProd(nextRootInstance, fiber));\n      else\n        switch (fiber) {\n          case \"svg\":\n            fiber = 1;\n            break;\n          case \"math\":\n            fiber = 2;\n            break;\n          default:\n            fiber = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, fiber);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 256,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n      return 128;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194048;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes, rootHasPendingCommit) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes;\n  root = root.warmLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : rootHasPendingCommit ||\n              ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\n              0 !== rootHasPendingCommit &&\n                (nextLanes = getHighestPriorityLanes(rootHasPendingCommit)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : rootHasPendingCommit ||\n            ((rootHasPendingCommit = pendingLanes & ~root),\n            0 !== rootHasPendingCommit &&\n              (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (rootHasPendingCommit = wipLanes & -wipLanes),\n        suspendedLanes >= rootHasPendingCommit ||\n          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n    case 64:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$5 = 31 - clz32(remainingLanes),\n      lane = 1 << index$5;\n    entanglements[index$5] = 0;\n    expirationTimes[index$5] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$5];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$5] = null, index$5 = 0;\n        index$5 < hiddenUpdatesForLane.length;\n        index$5++\n      ) {\n        var update = hiddenUpdatesForLane[index$5];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194090);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$6 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$6;\n    (lane & entangledLanes) | (root[index$6] & entangledLanes) &&\n      (root[index$6] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydrationByLane(lane) {\n  switch (lane) {\n    case 2:\n      lane = 1;\n      break;\n    case 8:\n      lane = 4;\n      break;\n    case 32:\n      lane = 16;\n      break;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      lane = 128;\n      break;\n    case 268435456:\n      lane = 134217728;\n      break;\n    default:\n      lane = 0;\n  }\n  return lane;\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$8 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$9) {\n                control = x$9;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$10) {\n              control = x$10;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return describeNativeComponentFrame(fiber.type, !1);\n    case 11:\n      return describeNativeComponentFrame(fiber.type.render, !1);\n    case 1:\n      return describeNativeComponentFrame(fiber.type, !0);\n    case 31:\n      return describeBuiltInComponentFrame(\"Activity\");\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$282;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_417 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_417) {\n      var element$jscomp$inline_418 = document.createElement(\"div\");\n      element$jscomp$inline_418.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_417 =\n        \"function\" === typeof element$jscomp$inline_418.oninput;\n    }\n    JSCompiler_inline_result$jscomp$282 = isSupported$jscomp$inline_417;\n  } else JSCompiler_inline_result$jscomp$282 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$282 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nsimpleEventPluginEvents.push(\"scrollEnd\");\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  return 3 === sourceFiber.tag\n    ? ((parent = sourceFiber.stateNode),\n      isHidden &&\n        null !== update &&\n        ((isHidden = 31 - clz32(lane)),\n        (sourceFiber = parent.hiddenUpdates),\n        (alternate = sourceFiber[isHidden]),\n        null === alternate\n          ? (sourceFiber[isHidden] = [update])\n          : alternate.push(update),\n        (update.lane = lane | 536870912)),\n      parent)\n    : null;\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {};\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 65011712;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 65011714;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_ACTIVITY_TYPE:\n        return (\n          (type = createFiberImplClass(31, pendingProps, key, mode)),\n          (type.elementType = REACT_ACTIVITY_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      case 27:\n      case 3:\n        rootOrSingletonContext = !0;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var tag = fiber.tag,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\n    if ((JSCompiler_temp = 5 === tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (tag = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === tag) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            tag--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              tag++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    27 === tag\n      ? ((tag = nextHydratableInstance),\n        isSingletonScope(fiber.type)\n          ? ((fiber = previousHydratableOnEnteringScopedSingleton),\n            (previousHydratableOnEnteringScopedSingleton = null),\n            (nextHydratableInstance = fiber))\n          : (nextHydratableInstance = tag))\n      : (nextHydratableInstance = hydrationParentFiber\n          ? getNextHydratable(fiber.stateNode.nextSibling)\n          : null);\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction upgradeHydrationErrorsToRecoverable() {\n  var queuedErrors = hydrationErrors;\n  null !== queuedErrors &&\n    (null === workInProgressRootRecoverableErrors\n      ? (workInProgressRootRecoverableErrors = queuedErrors)\n      : workInProgressRootRecoverableErrors.push.apply(\n          workInProgressRootRecoverableErrors,\n          queuedErrors\n        ),\n    (hydrationErrors = null));\n  return queuedErrors;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber$1 = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber$1 = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber$1, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  SuspenseActionException = Error(formatProdErrorMessage(542)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw (\n        ((thenableState = thenable.reason),\n        checkIfUseWrappedInAsyncCatch(thenableState),\n        thenableState)\n      );\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw (\n            ((thenableState = thenable.reason),\n            checkIfUseWrappedInAsyncCatch(thenableState),\n            thenableState)\n          );\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction checkIfUseWrappedInAsyncCatch(rejectedReason) {\n  if (\n    rejectedReason === SuspenseException ||\n    rejectedReason === SuspenseActionException\n  )\n    throw Error(formatProdErrorMessage(483));\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nvar currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter$1 = 0,\n  thenableState$1 = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter$1 = 0;\n  thenableState$1 = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\n    thenableIndexCounter$1 = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter$1 = localIdCounter = 0;\n  thenableState$1 = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nfunction createFunctionComponentUpdateQueue() {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n}\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  thenable = trackUsedThenable(thenableState$1, thenable, index);\n  index = currentlyRenderingFiber;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$32 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$32 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$32 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$32 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  var create = subscribeToStore.bind(null, fiber, hook, subscribe);\n  updateEffectImpl(2048, 8, create, [subscribe]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 124) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$38) {\n      onActionError(actionQueue, node, error$38);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  if (\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n  )\n    try {\n      var state = useThenable(currentStateHook);\n    } catch (x) {\n      if (x === SuspenseException) throw SuspenseActionException;\n      throw x;\n    }\n  else state = currentStateHook;\n  currentStateHook = updateWorkInProgressHook();\n  var actionQueue = currentStateHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== currentStateHook.memoizedState &&\n    ((currentlyRenderingFiber.flags |= 2048),\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      actionStateActionEffect.bind(null, actionQueue, action),\n      null\n    ));\n  return [state, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushSimpleEffect(tag, inst, create, createDeps) {\n  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };\n  inst = currentlyRenderingFiber.updateQueue;\n  null === inst &&\n    ((inst = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = inst));\n  create = inst.lastEffect;\n  null === create\n    ? (inst.lastEffect = tag.next = tag)\n    : ((createDeps = create.next),\n      (create.next = tag),\n      (tag.next = createDeps),\n      (inst.lastEffect = tag));\n  return tag;\n}\nfunction createEffectInstance() {\n  return { destroy: void 0, resource: void 0 };\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\n  var hook = mountWorkInProgressHook();\n  createDeps = void 0 === createDeps ? null : createDeps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushSimpleEffect(\n    1 | hookFlags,\n    createEffectInstance(),\n    create,\n    createDeps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\n    : ((currentlyRenderingFiber.flags |= fiberFlags),\n      (hook.memoizedState = pushSimpleEffect(\n        1 | hookFlags,\n        inst,\n        create,\n        deps\n      )));\n}\nfunction mountEffect(create, createDeps) {\n  mountEffectImpl(8390656, 8, create, createDeps);\n}\nfunction updateEffect(create, createDeps) {\n  updateEffectImpl(2048, 8, create, createDeps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$41 = enqueueUpdate(provider, fiber, lane);\n        null !== root$41 &&\n          (scheduleUpdateOnFiber(root$41, provider, lane),\n          entangleTransitions(root$41, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (null !== alternate && alternate === currentlyRenderingFiber)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194048)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n    readContext: readContext,\n    use: use,\n    useCallback: throwInvalidHookError,\n    useContext: throwInvalidHookError,\n    useEffect: throwInvalidHookError,\n    useImperativeHandle: throwInvalidHookError,\n    useLayoutEffect: throwInvalidHookError,\n    useInsertionEffect: throwInvalidHookError,\n    useMemo: throwInvalidHookError,\n    useReducer: throwInvalidHookError,\n    useRef: throwInvalidHookError,\n    useState: throwInvalidHookError,\n    useDebugValue: throwInvalidHookError,\n    useDeferredValue: throwInvalidHookError,\n    useTransition: throwInvalidHookError,\n    useSyncExternalStore: throwInvalidHookError,\n    useId: throwInvalidHookError,\n    useHostTransitionStatus: throwInvalidHookError,\n    useFormState: throwInvalidHookError,\n    useActionState: throwInvalidHookError,\n    useOptimistic: throwInvalidHookError,\n    useMemoCache: throwInvalidHookError,\n    useCacheRefresh: throwInvalidHookError\n  },\n  HooksDispatcherOnMount = {\n    readContext: readContext,\n    use: use,\n    useCallback: function (callback, deps) {\n      mountWorkInProgressHook().memoizedState = [\n        callback,\n        void 0 === deps ? null : deps\n      ];\n      return callback;\n    },\n    useContext: readContext,\n    useEffect: mountEffect,\n    useImperativeHandle: function (ref, create, deps) {\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      mountEffectImpl(\n        4194308,\n        4,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    },\n    useLayoutEffect: function (create, deps) {\n      return mountEffectImpl(4194308, 4, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      mountEffectImpl(4, 2, create, deps);\n    },\n    useMemo: function (nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var nextValue = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [nextValue, deps];\n      return nextValue;\n    },\n    useReducer: function (reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      if (void 0 !== init) {\n        var initialState = init(initialArg);\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            init(initialArg);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      } else initialState = initialArg;\n      hook.memoizedState = hook.baseState = initialState;\n      reducer = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = reducer;\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\n        null,\n        currentlyRenderingFiber,\n        reducer\n      );\n      return [hook.memoizedState, reducer];\n    },\n    useRef: function (initialValue) {\n      var hook = mountWorkInProgressHook();\n      initialValue = { current: initialValue };\n      return (hook.memoizedState = initialValue);\n    },\n    useState: function (initialState) {\n      initialState = mountStateImpl(initialState);\n      var queue = initialState.queue,\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\n      queue.dispatch = dispatch;\n      return [initialState.memoizedState, dispatch];\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = mountWorkInProgressHook();\n      return mountDeferredValueImpl(hook, value, initialValue);\n    },\n    useTransition: function () {\n      var stateHook = mountStateImpl(!1);\n      stateHook = startTransition.bind(\n        null,\n        currentlyRenderingFiber,\n        stateHook.queue,\n        !0,\n        !1\n      );\n      mountWorkInProgressHook().memoizedState = stateHook;\n      return [!1, stateHook];\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber,\n        hook = mountWorkInProgressHook();\n      if (isHydrating) {\n        if (void 0 === getServerSnapshot)\n          throw Error(formatProdErrorMessage(407));\n        getServerSnapshot = getServerSnapshot();\n      } else {\n        getServerSnapshot = getSnapshot();\n        if (null === workInProgressRoot)\n          throw Error(formatProdErrorMessage(349));\n        0 !== (workInProgressRootRenderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n      }\n      hook.memoizedState = getServerSnapshot;\n      var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n        subscribe\n      ]);\n      fiber.flags |= 2048;\n      pushSimpleEffect(\n        9,\n        createEffectInstance(),\n        updateStoreInstance.bind(\n          null,\n          fiber,\n          inst,\n          getServerSnapshot,\n          getSnapshot\n        ),\n        null\n      );\n      return getServerSnapshot;\n    },\n    useId: function () {\n      var hook = mountWorkInProgressHook(),\n        identifierPrefix = workInProgressRoot.identifierPrefix;\n      if (isHydrating) {\n        var JSCompiler_inline_result = treeContextOverflow;\n        var idWithLeadingBit = treeContextId;\n        JSCompiler_inline_result =\n          (\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n          ).toString(32) + JSCompiler_inline_result;\n        identifierPrefix =\n          \"\\u00ab\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n        JSCompiler_inline_result = localIdCounter++;\n        0 < JSCompiler_inline_result &&\n          (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n        identifierPrefix += \"\\u00bb\";\n      } else\n        (JSCompiler_inline_result = globalClientIdCounter++),\n          (identifierPrefix =\n            \"\\u00ab\" +\n            identifierPrefix +\n            \"r\" +\n            JSCompiler_inline_result.toString(32) +\n            \"\\u00bb\");\n      return (hook.memoizedState = identifierPrefix);\n    },\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: mountActionState,\n    useActionState: mountActionState,\n    useOptimistic: function (passthrough) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = hook.baseState = passthrough;\n      var queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: null,\n        lastRenderedState: null\n      };\n      hook.queue = queue;\n      hook = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !0,\n        queue\n      );\n      queue.dispatch = hook;\n      return [passthrough, hook];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: function () {\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n        null,\n        currentlyRenderingFiber\n      ));\n    }\n  },\n  HooksDispatcherOnUpdate = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: updateReducer,\n    useRef: updateRef,\n    useState: function () {\n      return updateReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return updateDeferredValueImpl(\n        hook,\n        currentHook.memoizedState,\n        value,\n        initialValue\n      );\n    },\n    useTransition: function () {\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: updateActionState,\n    useActionState: updateActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  HooksDispatcherOnRerender = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: rerenderReducer,\n    useRef: updateRef,\n    useState: function () {\n      return rerenderReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return null === currentHook\n        ? mountDeferredValueImpl(hook, value, initialValue)\n        : updateDeferredValueImpl(\n            hook,\n            currentHook.memoizedState,\n            value,\n            initialValue\n          );\n    },\n    useTransition: function () {\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: rerenderActionState,\n    useActionState: rerenderActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      if (null !== currentHook)\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n      hook.baseState = passthrough;\n      return [passthrough, hook.queue.dispatch];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  thenableState = null,\n  thenableIndexCounter = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 67108866), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 67108866;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 67108866);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException || x === SuspenseActionException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state ||\n          \"$?\" === state.data ||\n          isSuspenseInstanceFallback(state))\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$73 in Component)\n      void 0 === newProps[propName$73] &&\n        (newProps[propName$73] = Component[propName$73]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$74) {\n    setTimeout(function () {\n      throw e$74;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$75) {\n    setTimeout(function () {\n      throw e$75;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    prevState = null !== current ? current.memoizedState : null;\n  if (\"hidden\" === nextProps.mode) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (prevState = 0; null !== nextChildren; )\n          (prevState =\n            prevState | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = prevState & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 4194816);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 4194816;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0,\n  hydrationErrors: null\n};\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912,\n                hydrationErrors: null\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          isSuspenseInstanceFallback(nextInstance)\n            ? (workInProgress.lanes = 32)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      isSuspenseInstanceFallback(nextInstance))\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (\n        null !== JSCompiler_temp &&\n        ((nextProps = renderLanes & -renderLanes),\n        (nextProps =\n          0 !== (nextProps & 42)\n            ? 1\n            : getBumpedLaneForHydrationByLane(nextProps)),\n        (nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps),\n        0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n      )\n        throw (\n          ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n          enqueueConcurrentRenderForLane(current, nextProps),\n          scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n          SelectiveHydrationException)\n        );\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 192),\n          (workInProgress.child = current.child),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 65011712),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  offscreenProps = createFiberImplClass(22, offscreenProps, null, mode);\n  offscreenProps.lanes = 0;\n  offscreenProps.stateNode = {\n    _visibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null\n  };\n  return offscreenProps;\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        lazyComponent = workInProgress.pendingProps;\n        var prevState = workInProgress.memoizedState;\n        init = prevState.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        lazyComponent = nextState.cache;\n        pushProvider(workInProgress, CacheContext, lazyComponent);\n        lazyComponent !== prevState.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        lazyComponent = nextState.element;\n        if (prevState.isDehydrated)\n          if (\n            ((prevState = {\n              element: lazyComponent,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = prevState),\n            (workInProgress.memoizedState = prevState),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else if (lazyComponent !== init) {\n            init = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(init);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else {\n            current = workInProgress.stateNode.containerInfo;\n            switch (current.nodeType) {\n              case 9:\n                current = current.body;\n                break;\n              default:\n                current =\n                  \"HTML\" === current.nodeName\n                    ? current.ownerDocument.body\n                    : current;\n            }\n            nextHydratableInstance = getNextHydratable(current.firstChild);\n            hydrationParentFiber = workInProgress;\n            isHydrating = !0;\n            hydrationErrors = null;\n            rootOrSingletonContext = !0;\n            renderLanes = mountChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            );\n            for (workInProgress.child = renderLanes; renderLanes; )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n          }\n        else {\n          resetHydrationState();\n          if (lazyComponent === init) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(\n            current,\n            workInProgress,\n            lazyComponent,\n            renderLanes\n          );\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (init = nextHydratableInstance),\n          isSingletonScope(workInProgress.type)\n            ? ((previousHydratableOnEnteringScopedSingleton = init),\n              (nextHydratableInstance = getNextHydratable(\n                lazyComponent.firstChild\n              )))\n            : (nextHydratableInstance = init)),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        markRef(current, workInProgress),\n        null === current && (workInProgress.flags |= 4194304),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      prevState = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = prevState.children;\n      shouldSetTextContent(init, prevState)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 31:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        (renderLanes = workInProgress.mode),\n        (lazyComponent = {\n          mode: lazyComponent.mode,\n          children: lazyComponent.children\n        }),\n        null === current\n          ? ((renderLanes = mountWorkInProgressOffscreenFiber(\n              lazyComponent,\n              renderLanes\n            )),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes))\n          : ((renderLanes = createWorkInProgress(current.child, lazyComponent)),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes)),\n        workInProgress\n      );\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (prevState = createCache()),\n              (init.pooledCache = prevState),\n              prevState.refCount++,\n              null !== prevState && (init.pooledCacheLanes |= renderLanes),\n              (init = prevState)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (prevState = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = prevState.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194048) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$113 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$113 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$113\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$113.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags & 65011712),\n        (subtreeFlags |= child$114.flags & 65011712),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  else\n    for (child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags),\n        (subtreeFlags |= child$114.flags),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 31:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            upgradeHydrationErrorsToRecoverable());\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          (type = upgradeHydrationErrorsToRecoverable()),\n            null !== current &&\n              null !== current.memoizedState &&\n              (current.memoizedState.hydrationErrors = type),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$127 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$127 = newProps.memoizedState.cachePool.pool);\n        cache$127 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$127 = type.rendering;\n      if (null === cache$127)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$127 = findFirstSuspended(current);\n              if (null !== cache$127) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$127.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$127)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$127.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$127.sibling = workInProgress.child),\n            (workInProgress.child = cache$127))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$127)\n              : (workInProgress.child = cache$127),\n            (type.last = cache$127));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n    case 30:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,\n              destroy_ = destroy;\n            try {\n              destroy_();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = current.stateNode;\n          break;\n        case 30:\n          instanceToUse = current.stateNode;\n          break;\n        default:\n          instanceToUse = current.stateNode;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$143) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$143);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    (27 === fiber.tag && isSingletonScope(fiber.type)) ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\n\n    ) {\n      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? (9 === parent.nodeType\n            ? parent.body\n            : \"HTML\" === parent.nodeName\n              ? parent.ownerDocument.body\n              : parent\n          ).insertBefore(node, before)\n        : ((before =\n            9 === parent.nodeType\n              ? parent.body\n              : \"HTML\" === parent.nodeName\n                ? parent.ownerDocument.body\n                : parent),\n          before.appendChild(node),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (\n    4 !== tag &&\n    (27 === tag &&\n      isSingletonScope(node.type) &&\n      ((parent = node.stateNode), (before = null)),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (\n    4 !== tag &&\n    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nfunction commitHostSingletonAcquisition(finishedWork) {\n  var singleton = finishedWork.stateNode,\n    props = finishedWork.memoizedProps;\n  try {\n    for (\n      var type = finishedWork.type, attributes = singleton.attributes;\n      attributes.length;\n\n    )\n      singleton.removeAttributeNode(attributes[0]);\n    setInitialProperties(singleton, type, props);\n    singleton[internalInstanceKey] = finishedWork;\n    singleton[internalPropsKey] = props;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1024) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$142) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$142\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (\n        flags & 64 &&\n        ((finishedRoot = finishedWork.updateQueue), null !== finishedRoot)\n      ) {\n        current = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              current = finishedWork.child.stateNode;\n              break;\n            case 1:\n              current = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(finishedRoot, current);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 27:\n      null === current &&\n        flags & 4 &&\n        commitHostSingletonAcquisition(finishedWork);\n    case 26:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      flags & 64 &&\n        ((finishedRoot = finishedWork.memoizedState),\n        null !== finishedRoot &&\n          ((finishedRoot = finishedRoot.dehydrated),\n          null !== finishedRoot &&\n            ((finishedWork = retryDehydratedSuspenseBoundary.bind(\n              null,\n              finishedWork\n            )),\n            registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\n      break;\n    case 22:\n      flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!flags) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        prevProps = offscreenSubtreeIsHidden;\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = flags;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevProps;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      break;\n    case 30:\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      isSingletonScope(deletedFiber.type) &&\n        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      releaseSingletonInstance(deletedFiber.stateNode);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (9 === hostParent.nodeType\n              ? hostParent.body\n              : \"HTML\" === hostParent.nodeName\n                ? hostParent.ownerDocument.body\n                : hostParent\n            ).removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((finishedRoot = hostParent),\n            clearSuspenseBoundary(\n              9 === finishedRoot.nodeType\n                ? finishedRoot.body\n                : \"HTML\" === finishedRoot.nodeName\n                  ? finishedRoot.ownerDocument.body\n                  : finishedRoot,\n              deletedFiber.stateNode\n            ),\n            retryIfBlockedOn(finishedRoot))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n            if (isSingletonScope(parent.type)) {\n              hostParent = parent.stateNode;\n              hostParentIsContainer = !1;\n              break a;\n            }\n            break;\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href || \"\" === current.href\n                              ? null\n                              : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      null !== current &&\n        flags & 4 &&\n        commitHostUpdate(\n          finishedWork,\n          finishedWork.memoizedProps,\n          current.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      hoistableRoot = null !== finishedWork.memoizedState;\n      var wasHidden = null !== current && null !== current.memoizedState,\n        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 8192)\n        a: for (\n          root = finishedWork.stateNode,\n            root._visibility = hoistableRoot\n              ? root._visibility & -2\n              : root._visibility | 1,\n            hoistableRoot &&\n              (null === current ||\n                wasHidden ||\n                offscreenSubtreeIsHidden ||\n                offscreenSubtreeWasHidden ||\n                recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n            current = null,\n            root = finishedWork;\n          ;\n\n        ) {\n          if (5 === root.tag || 26 === root.tag) {\n            if (null === current) {\n              wasHidden = current = root;\n              try {\n                if (((currentResource = wasHidden.stateNode), hoistableRoot))\n                  (maybeNodes = currentResource.style),\n                    \"function\" === typeof maybeNodes.setProperty\n                      ? maybeNodes.setProperty(\"display\", \"none\", \"important\")\n                      : (maybeNodes.display = \"none\");\n                else {\n                  i = wasHidden.stateNode;\n                  var styleProp = wasHidden.memoizedProps.style,\n                    display =\n                      void 0 !== styleProp &&\n                      null !== styleProp &&\n                      styleProp.hasOwnProperty(\"display\")\n                        ? styleProp.display\n                        : null;\n                  i.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              wasHidden = root;\n              try {\n                wasHidden.stateNode.nodeValue = hoistableRoot\n                  ? \"\"\n                  : wasHidden.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 30:\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      for (\n        var hostParentFiber, parentFiber = finishedWork.return;\n        null !== parentFiber;\n\n      ) {\n        if (isHostParent(parentFiber)) {\n          hostParentFiber = parentFiber;\n          break;\n        }\n        parentFiber = parentFiber.return;\n      }\n      if (null == hostParentFiber) throw Error(formatProdErrorMessage(160));\n      switch (hostParentFiber.tag) {\n        case 27:\n          var parent = hostParentFiber.stateNode,\n            before = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before, parent);\n          break;\n        case 5:\n          var parent$144 = hostParentFiber.stateNode;\n          hostParentFiber.flags & 32 &&\n            (setTextContent(parent$144, \"\"), (hostParentFiber.flags &= -33));\n          var before$145 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before$145, parent$144);\n          break;\n        case 3:\n        case 4:\n          var parent$146 = hostParentFiber.stateNode.containerInfo,\n            before$147 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNodeIntoContainer(\n            finishedWork,\n            before$147,\n            parent$146\n          );\n          break;\n        default:\n          throw Error(formatProdErrorMessage(161));\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 27:\n        releaseSingletonInstance(finishedWork.stateNode);\n      case 26:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 30:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 27:\n        commitHostSingletonAcquisition(finishedWork);\n      case 26:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 30:\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 1:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 13:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      id = finishedWork.alternate;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 && commitOffscreenPassiveMountEffects(id, finishedWork);\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 2\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 2 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 2 &&\n          ((i._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  pendingEffectsStatus = 0,\n  pendingEffectsRoot = null,\n  pendingFinishedWork = null,\n  pendingEffectsLanes = 0,\n  pendingEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  pendingRecoverableErrors = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 124) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                (null === workInProgressRootRecoverableErrors\n                  ? (workInProgressRootRecoverableErrors = renderWasConcurrent)\n                  : workInProgressRootRecoverableErrors.push.apply(\n                      workInProgressRootRecoverableErrors,\n                      renderWasConcurrent\n                    ));\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        renderWasConcurrent = exitStatus;\n        switch (renderWasConcurrent) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194048) !== lanes) break;\n          case 6:\n            markRootSuspended(\n              shouldTimeSlice,\n              lanes,\n              workInProgressDeferredLane,\n              !workInProgressRootDidSkipSuspendedSiblings\n            );\n            break a;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        if (\n          (lanes & 62914560) === lanes &&\n          ((exitStatus = globalMostRecentFallbackTime + 300 - now()),\n          10 < exitStatus)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              renderWasConcurrent,\n              2,\n              -0,\n              0\n            ),\n            exitStatus\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          renderWasConcurrent,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  exitStatus,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  root.timeoutHandle = -1;\n  suspendedCommitReason = finishedWork.subtreeFlags;\n  if (\n    suspendedCommitReason & 8192 ||\n    16785408 === (suspendedCommitReason & 16785408)\n  )\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (suspendedCommitReason = waitForCommitToBeReady()),\n      null !== suspendedCommitReason)\n    ) {\n      root.cancelPendingCommit = suspendedCommitReason(\n        commitRoot.bind(\n          null,\n          root,\n          finishedWork,\n          lanes,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          exitStatus,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    finishedWork,\n    lanes,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$4 = 31 - clz32(lanes),\n      lane = 1 << index$4;\n    didAttemptEntireTree[index$4] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber$1 = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState = null),\n        (thenableIndexCounter = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$2 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$2;\n      lanes |= root[index$2];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException || thrownValue === SuspenseActionException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194048) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 9:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$167) {\n      handleThrow(root, thrownValue$167);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n          case 9:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              (2 !== workInProgressSuspendedReason &&\n                9 !== workInProgressSuspendedReason) ||\n                workInProgressRoot !== root ||\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrentByScheduler();\n      break;\n    } catch (thrownValue$169) {\n      handleThrow(root, thrownValue$169);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrentByScheduler() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState = null;\n  thenableIndexCounter = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason ||\n        9 === suspendedReason ||\n        3 === suspendedReason ||\n        6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  finishedWork,\n  lanes,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  root.cancelPendingCommit = null;\n  do flushPendingEffects();\n  while (0 !== pendingEffectsStatus);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  if (null !== finishedWork) {\n    if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n    didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;\n    didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\n    markRootFinished(\n      root,\n      lanes,\n      didIncludeRenderPhaseUpdate,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    );\n    root === workInProgressRoot &&\n      ((workInProgress = workInProgressRoot = null),\n      (workInProgressRootRenderLanes = 0));\n    pendingFinishedWork = finishedWork;\n    pendingEffectsRoot = root;\n    pendingEffectsLanes = lanes;\n    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\n    pendingPassiveTransitions = transitions;\n    pendingRecoverableErrors = recoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? ((root.callbackNode = null),\n        (root.callbackPriority = 0),\n        scheduleCallback$1(NormalPriority$1, function () {\n          flushPassiveEffects(!0);\n          return null;\n        }))\n      : ((root.callbackNode = null), (root.callbackPriority = 0));\n    recoverableErrors = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\n      recoverableErrors = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      transitions = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      spawnedLane = executionContext;\n      executionContext |= 4;\n      try {\n        commitBeforeMutationEffects(root, finishedWork, lanes);\n      } finally {\n        (executionContext = spawnedLane),\n          (ReactDOMSharedInternals.p = transitions),\n          (ReactSharedInternals.T = recoverableErrors);\n      }\n    }\n    pendingEffectsStatus = 1;\n    flushMutationEffects();\n    flushLayoutEffects();\n    flushSpawnedWork();\n  }\n}\nfunction flushMutationEffects() {\n  if (1 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {\n      rootMutationHasEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitMutationEffectsOnFiber(finishedWork, root);\n        var priorSelectionInformation = selectionInformation,\n          curFocusedElem = getActiveElementDeep(root.containerInfo),\n          priorFocusedElem = priorSelectionInformation.focusedElem,\n          priorSelectionRange = priorSelectionInformation.selectionRange;\n        if (\n          curFocusedElem !== priorFocusedElem &&\n          priorFocusedElem &&\n          priorFocusedElem.ownerDocument &&\n          containsNode(\n            priorFocusedElem.ownerDocument.documentElement,\n            priorFocusedElem\n          )\n        ) {\n          if (\n            null !== priorSelectionRange &&\n            hasSelectionCapabilities(priorFocusedElem)\n          ) {\n            var start = priorSelectionRange.start,\n              end = priorSelectionRange.end;\n            void 0 === end && (end = start);\n            if (\"selectionStart\" in priorFocusedElem)\n              (priorFocusedElem.selectionStart = start),\n                (priorFocusedElem.selectionEnd = Math.min(\n                  end,\n                  priorFocusedElem.value.length\n                ));\n            else {\n              var doc = priorFocusedElem.ownerDocument || document,\n                win = (doc && doc.defaultView) || window;\n              if (win.getSelection) {\n                var selection = win.getSelection(),\n                  length = priorFocusedElem.textContent.length,\n                  start$jscomp$0 = Math.min(priorSelectionRange.start, length),\n                  end$jscomp$0 =\n                    void 0 === priorSelectionRange.end\n                      ? start$jscomp$0\n                      : Math.min(priorSelectionRange.end, length);\n                !selection.extend &&\n                  start$jscomp$0 > end$jscomp$0 &&\n                  ((curFocusedElem = end$jscomp$0),\n                  (end$jscomp$0 = start$jscomp$0),\n                  (start$jscomp$0 = curFocusedElem));\n                var startMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    start$jscomp$0\n                  ),\n                  endMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    end$jscomp$0\n                  );\n                if (\n                  startMarker &&\n                  endMarker &&\n                  (1 !== selection.rangeCount ||\n                    selection.anchorNode !== startMarker.node ||\n                    selection.anchorOffset !== startMarker.offset ||\n                    selection.focusNode !== endMarker.node ||\n                    selection.focusOffset !== endMarker.offset)\n                ) {\n                  var range = doc.createRange();\n                  range.setStart(startMarker.node, startMarker.offset);\n                  selection.removeAllRanges();\n                  start$jscomp$0 > end$jscomp$0\n                    ? (selection.addRange(range),\n                      selection.extend(endMarker.node, endMarker.offset))\n                    : (range.setEnd(endMarker.node, endMarker.offset),\n                      selection.addRange(range));\n                }\n              }\n            }\n          }\n          doc = [];\n          for (\n            selection = priorFocusedElem;\n            (selection = selection.parentNode);\n\n          )\n            1 === selection.nodeType &&\n              doc.push({\n                element: selection,\n                left: selection.scrollLeft,\n                top: selection.scrollTop\n              });\n          \"function\" === typeof priorFocusedElem.focus &&\n            priorFocusedElem.focus();\n          for (\n            priorFocusedElem = 0;\n            priorFocusedElem < doc.length;\n            priorFocusedElem++\n          ) {\n            var info = doc[priorFocusedElem];\n            info.element.scrollLeft = info.left;\n            info.element.scrollTop = info.top;\n          }\n        }\n        _enabled = !!eventsEnabled;\n        selectionInformation = eventsEnabled = null;\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootMutationHasEffect);\n      }\n    }\n    root.current = finishedWork;\n    pendingEffectsStatus = 2;\n  }\n}\nfunction flushLayoutEffects() {\n  if (2 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\n    if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\n      rootHasLayoutEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork);\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootHasLayoutEffect);\n      }\n    }\n    pendingEffectsStatus = 3;\n  }\n}\nfunction flushSpawnedWork() {\n  if (4 === pendingEffectsStatus || 3 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    requestPaint();\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      lanes = pendingEffectsLanes,\n      recoverableErrors = pendingRecoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? (pendingEffectsStatus = 5)\n      : ((pendingEffectsStatus = 0),\n        (pendingFinishedWork = pendingEffectsRoot = null),\n        releaseRootPooledCache(root, root.pendingLanes));\n    var remainingLanes = root.pendingLanes;\n    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n    lanesToEventPriority(lanes);\n    finishedWork = finishedWork.stateNode;\n    if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n      try {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          finishedWork,\n          void 0,\n          128 === (finishedWork.current.flags & 128)\n        );\n      } catch (err) {}\n    if (null !== recoverableErrors) {\n      finishedWork = ReactSharedInternals.T;\n      remainingLanes = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      ReactSharedInternals.T = null;\n      try {\n        for (\n          var onRecoverableError = root.onRecoverableError, i = 0;\n          i < recoverableErrors.length;\n          i++\n        ) {\n          var recoverableError = recoverableErrors[i];\n          onRecoverableError(recoverableError.value, {\n            componentStack: recoverableError.stack\n          });\n        }\n      } finally {\n        (ReactSharedInternals.T = finishedWork),\n          (ReactDOMSharedInternals.p = remainingLanes);\n      }\n    }\n    0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\n    ensureRootIsScheduled(root);\n    remainingLanes = root.pendingLanes;\n    0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\n      ? root === rootWithNestedUpdates\n        ? nestedUpdateCount++\n        : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n      : (nestedUpdateCount = 0);\n    flushSyncWorkAcrossRoots_impl(0, !1);\n  }\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPendingEffects(wasDelayedCommit) {\n  flushMutationEffects();\n  flushLayoutEffects();\n  flushSpawnedWork();\n  return flushPassiveEffects(wasDelayedCommit);\n}\nfunction flushPassiveEffects() {\n  if (5 !== pendingEffectsStatus) return !1;\n  var root = pendingEffectsRoot,\n    remainingLanes = pendingEffectsRemainingLanes;\n  pendingEffectsRemainingLanes = 0;\n  var renderPriority = lanesToEventPriority(pendingEffectsLanes),\n    prevTransition = ReactSharedInternals.T,\n    previousPriority = ReactDOMSharedInternals.p;\n  try {\n    ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n    ReactSharedInternals.T = null;\n    renderPriority = pendingPassiveTransitions;\n    pendingPassiveTransitions = null;\n    var root$jscomp$0 = pendingEffectsRoot,\n      lanes = pendingEffectsLanes;\n    pendingEffectsStatus = 0;\n    pendingFinishedWork = pendingEffectsRoot = null;\n    pendingEffectsLanes = 0;\n    if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(331));\n    var prevExecutionContext = executionContext;\n    executionContext |= 4;\n    commitPassiveUnmountOnFiber(root$jscomp$0.current);\n    commitPassiveMountOnFiber(\n      root$jscomp$0,\n      root$jscomp$0.current,\n      lanes,\n      renderPriority\n    );\n    executionContext = prevExecutionContext;\n    flushSyncWorkAcrossRoots_impl(0, !1);\n    if (\n      injectedHook &&\n      \"function\" === typeof injectedHook.onPostCommitFiberRoot\n    )\n      try {\n        injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\n      } catch (err) {}\n    return !0;\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition),\n      releaseRootPooledCache(root, remainingLanes);\n  }\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$174 = firstScheduledRoot; null !== root$174; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$174.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$174.suspendedLanes,\n                pingedLanes = root$174.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326741\n                  ? (JSCompiler_inline_result & 201326741) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$174,\n                root$174 === workInProgressRoot ? JSCompiler_inline_result : 0,\n                null !== root$174.cancelPendingCommit ||\n                  -1 !== root$174.timeoutHandle\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$174, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n        root$174 = root$174.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInImmediateTask() {\n  processRootScheduleInMicrotask();\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$3 = 31 - clz32(lanes),\n      lane = 1 << index$3,\n      expirationTime = expirationTimes[index$3];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$3] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  if (0 !== pendingEffectsStatus && 5 !== pendingEffectsStatus)\n    return (root.callbackNode = null), (root.callbackPriority = 0), null;\n  var originalCallbackNode = root.callbackNode;\n  if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPendingEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateRootScheduleTask() {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(\n          ImmediatePriority,\n          processRootScheduleInImmediateTask\n        )\n      : processRootScheduleInMicrotask();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1528 = 0;\n  i$jscomp$inline_1528 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1528++\n) {\n  var eventName$jscomp$inline_1529 =\n      simpleEventPluginEvents[i$jscomp$inline_1528],\n    domEventName$jscomp$inline_1530 =\n      eventName$jscomp$inline_1529.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1531 =\n      eventName$jscomp$inline_1529[0].toUpperCase() +\n      eventName$jscomp$inline_1529.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1530,\n    \"on\" + capitalizedEvent$jscomp$inline_1531\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (container === targetContainer) break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (\n              (3 === grandTag || 4 === grandTag) &&\n              nodeTag.stateNode.containerInfo === targetContainer\n            )\n              return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    if (3 === targetFiber.tag) return listeners;\n    targetFiber = targetFiber.return;\n  }\n  return [];\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$188 = props[hasSrc];\n          if (null != propValue$188)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$188;\n                break;\n              case \"type\":\n                propValue = propValue$188;\n                break;\n              case \"checked\":\n                checked = propValue$188;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$188;\n                break;\n              case \"value\":\n                propKey = propValue$188;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$188;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$188)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$188, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$188 in props)\n          props.hasOwnProperty(propValue$188) &&\n            ((hasSrc = props[propValue$188]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$188,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$205 in nextProps) {\n        var propKey = nextProps[propKey$205];\n        lastProp = lastProps[propKey$205];\n        if (\n          nextProps.hasOwnProperty(propKey$205) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$205) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$205,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$205 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$205 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$205\n        ? updateOptions(domElement, !!lastProps, propKey$205, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$205 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$205 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$205, propKey);\n      return;\n    case \"option\":\n      for (var propKey$221 in lastProps)\n        if (\n          ((propKey$205 = lastProps[propKey$221]),\n          lastProps.hasOwnProperty(propKey$221) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$221))\n        )\n          switch (propKey$221) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$221,\n                null,\n                nextProps,\n                propKey$205\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$205 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$205 &&\n                \"function\" !== typeof propKey$205 &&\n                \"symbol\" !== typeof propKey$205;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$226 in lastProps)\n        (propKey$205 = lastProps[propKey$226]),\n          lastProps.hasOwnProperty(propKey$226) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$226) &&\n            setProp(domElement, tag, propKey$226, null, nextProps, propKey$205);\n      for (checked in nextProps)\n        if (\n          ((propKey$205 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$205)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$231 in lastProps)\n          (propKey$205 = lastProps[propKey$231]),\n            lastProps.hasOwnProperty(propKey$231) &&\n              void 0 !== propKey$205 &&\n              !nextProps.hasOwnProperty(propKey$231) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$231,\n                void 0,\n                nextProps,\n                propKey$205\n              );\n        for (defaultChecked in nextProps)\n          (propKey$205 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$205 === propKey ||\n              (void 0 === propKey$205 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$236 in lastProps)\n    (propKey$205 = lastProps[propKey$236]),\n      lastProps.hasOwnProperty(propKey$236) &&\n        null != propKey$205 &&\n        !nextProps.hasOwnProperty(propKey$236) &&\n        setProp(domElement, tag, propKey$236, null, nextProps, propKey$205);\n  for (lastProp in nextProps)\n    (propKey$205 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$205 === propKey ||\n        (null == propKey$205 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$205, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction isSingletonScope(type) {\n  return \"head\" === type;\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    possiblePreambleContribution = 0,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (\n          0 < possiblePreambleContribution &&\n          8 > possiblePreambleContribution\n        ) {\n          node = possiblePreambleContribution;\n          var ownerDocument = parentInstance.ownerDocument;\n          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);\n          node & 2 && releaseSingletonInstance(ownerDocument.body);\n          if (node & 4)\n            for (\n              node = ownerDocument.head,\n                releaseSingletonInstance(node),\n                ownerDocument = node.firstChild;\n              ownerDocument;\n\n            ) {\n              var nextNode$jscomp$0 = ownerDocument.nextSibling,\n                nodeName = ownerDocument.nodeName;\n              ownerDocument[internalHoistableMarker] ||\n                \"SCRIPT\" === nodeName ||\n                \"STYLE\" === nodeName ||\n                (\"LINK\" === nodeName &&\n                  \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\n                node.removeChild(ownerDocument);\n              ownerDocument = nextNode$jscomp$0;\n            }\n        }\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else\n        \"$\" === node || \"$?\" === node || \"$!\" === node\n          ? depth++\n          : (possiblePreambleContribution = node.charCodeAt(0) - 48);\n    else possiblePreambleContribution = 0;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href || \"\" === anyProps.href\n                ? null\n                : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return (\n    \"$!\" === instance.data ||\n    (\"$?\" === instance.data && \"complete\" === instance.ownerDocument.readyState)\n  );\n}\nfunction registerSuspenseInstanceRetry(instance, callback) {\n  var ownerDocument = instance.ownerDocument;\n  if (\"$?\" !== instance.data || \"complete\" === ownerDocument.readyState)\n    callback();\n  else {\n    var listener = function () {\n      callback();\n      ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\n    };\n    ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\n    instance._reactRetry = listener;\n  }\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nvar previousHydratableOnEnteringScopedSingleton = null;\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nfunction releaseSingletonInstance(instance) {\n  for (var attributes = instance.attributes; attributes.length; )\n    instance.removeAttributeNode(attributes[0]);\n  detachDeletedInstance(instance);\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : 9 === container.nodeType\n      ? container\n      : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$244 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$245 = styles$244.get(type);\n        resource$245 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$245 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$244.set(type, resource$245),\n          (styles$244 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$244._p &&\n            ((resource$245.instance = styles$244),\n            (resource$245.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$244 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$245.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$245;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$250 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$250)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$250),\n            markNodeAsHoistable(instance$250),\n            instance$250\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$250 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$250);\n        var linkInstance = instance$250;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$250, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$250, props.precedence, hoistableRoot);\n        return (resource.instance = instance$250);\n      case \"script\":\n        instance$250 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$250)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$250)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane();\n              lane = getBumpedLaneForHydrationByLane(lane);\n              var root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1785 = React.version;\nif (\n  \"19.1.1\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1785\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1785,\n      \"19.1.1\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2256 = {\n  bundleType: 0,\n  version: \"19.1.1\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  reconcilerVersion: \"19.1.1\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2257 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2257.isDisabled &&\n    hook$jscomp$inline_2257.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2257.inject(\n        internals$jscomp$inline_2256\n      )),\n        (injectedHook = hook$jscomp$inline_2257);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  options = isStrictMode;\n  initialChildren.current.lanes = options;\n  markRootUpdated$1(initialChildren, options);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.1.1\";\n","/**\n * Utility functions for formatting numbers, prices, and decimals\n */\n\n/**\n * Formats a number with dynamic decimal places\n * - Shows up to 8 decimal places for precision\n * - Removes trailing zeros\n * - Handles very small numbers appropriately\n * @param value - The number to format\n * @param maxDecimals - Maximum decimal places (default: 8)\n * @param minDecimals - Minimum decimal places (default: 0)\n * @returns Formatted number string\n */\nexport function formatDynamicDecimals(\n  value: number | string,\n  maxDecimals: number = 8,\n  minDecimals: number = 0\n): string {\n  const num = typeof value === 'string' ? parseFloat(value) : value\n  \n  if (isNaN(num)) return '0'\n  \n  // Handle zero\n  if (num === 0) return minDecimals > 0 ? '0.' + '0'.repeat(minDecimals) : '0'\n  \n  // For very small numbers, use scientific notation if needed\n  if (Math.abs(num) < Math.pow(10, -maxDecimals)) {\n    return num.toExponential(2)\n  }\n  \n  // Format with maximum decimals, then remove trailing zeros\n  let formatted = num.toFixed(maxDecimals)\n  \n  // Remove trailing zeros after decimal point\n  if (formatted.includes('.')) {\n    formatted = formatted.replace(/\\.?0+$/, '')\n  }\n  \n  // Ensure minimum decimal places\n  if (minDecimals > 0) {\n    const decimalIndex = formatted.indexOf('.')\n    if (decimalIndex === -1) {\n      formatted += '.' + '0'.repeat(minDecimals)\n    } else {\n      const currentDecimals = formatted.length - decimalIndex - 1\n      if (currentDecimals < minDecimals) {\n        formatted += '0'.repeat(minDecimals - currentDecimals)\n      }\n    }\n  }\n  \n  return formatted\n}\n\n/**\n * Formats a WAX price with appropriate decimal precision\n * @param price - Price in WAX (string or number)\n * @param showCurrency - Whether to append ' WAX' (default: true)\n * @returns Formatted price string\n */\nexport function formatWaxPrice(price: string | number, showCurrency: boolean = true): string {\n  const numPrice = typeof price === 'string' ? parseFloat(price.replace(' WAX', '')) : price\n  \n  if (isNaN(numPrice)) return showCurrency ? '0 WAX' : '0'\n  \n  let formatted: string\n  \n  if (numPrice >= 1000) {\n    // For large amounts, show 2-4 decimals max\n    formatted = formatDynamicDecimals(numPrice, 4, 0)\n  } else if (numPrice >= 1) {\n    // For amounts >= 1, show up to 4 decimals\n    formatted = formatDynamicDecimals(numPrice, 4, 0)\n  } else if (numPrice >= 0.01) {\n    // For amounts >= 0.01, show up to 6 decimals\n    formatted = formatDynamicDecimals(numPrice, 6, 0)\n  } else {\n    // For very small amounts, show up to 8 decimals\n    formatted = formatDynamicDecimals(numPrice, 8, 0)\n  }\n  \n  return showCurrency ? `${formatted} WAX` : formatted\n}\n\n/**\n * Formats a number with thousands separators\n * @param value - The number to format\n * @param decimals - Number of decimal places (optional)\n * @returns Formatted number with commas\n */\nexport function formatNumberWithCommas(value: number | string, decimals?: number): string {\n  const num = typeof value === 'string' ? parseFloat(value) : value\n  \n  if (isNaN(num)) return '0'\n  \n  const options: Intl.NumberFormatOptions = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: decimals ?? 8\n  }\n  \n  return num.toLocaleString('en-US', options)\n}\n\n/**\n * Formats a percentage with appropriate decimal places\n * @param value - The percentage value (0-100)\n * @param maxDecimals - Maximum decimal places (default: 2)\n * @returns Formatted percentage string\n */\nexport function formatPercentage(value: number, maxDecimals: number = 2): string {\n  if (isNaN(value)) return '0%'\n  \n  const formatted = formatDynamicDecimals(value, maxDecimals, 0)\n  return `${formatted}%`\n}\n\n/**\n * Formats a large number with appropriate units (K, M, B)\n * @param value - The number to format\n * @param decimals - Number of decimal places (default: 1)\n * @returns Formatted number with unit\n */\nexport function formatLargeNumber(value: number, decimals: number = 1): string {\n  if (isNaN(value)) return '0'\n  \n  const absValue = Math.abs(value)\n  const sign = value < 0 ? '-' : ''\n  \n  if (absValue >= 1e9) {\n    return `${sign}${formatDynamicDecimals(absValue / 1e9, decimals, 0)}B`\n  } else if (absValue >= 1e6) {\n    return `${sign}${formatDynamicDecimals(absValue / 1e6, decimals, 0)}M`\n  } else if (absValue >= 1e3) {\n    return `${sign}${formatDynamicDecimals(absValue / 1e3, decimals, 0)}K`\n  } else {\n    return `${sign}${formatDynamicDecimals(absValue, decimals, 0)}`\n  }\n}\n\n/**\n * Parses a price string and extracts the numeric value\n * @param priceString - Price string (e.g., \"1.2345 WAX\")\n * @returns Numeric price value\n */\nexport function parsePriceString(priceString: string): number {\n  if (!priceString) return 0\n  \n  // Remove currency symbols and extra whitespace\n  const cleaned = priceString.replace(/[^0-9.-]/g, '')\n  const parsed = parseFloat(cleaned)\n  \n  return isNaN(parsed) ? 0 : parsed\n}\n\n/**\n * Validates if a string represents a valid decimal number\n * @param value - String to validate\n * @param maxDecimals - Maximum allowed decimal places\n * @returns True if valid decimal\n */\nexport function isValidDecimal(value: string, maxDecimals: number = 8): boolean {\n  if (!value || value.trim() === '') return false\n  \n  const regex = new RegExp(`^\\\\d+(\\\\.\\\\d{1,${maxDecimals}})?$`)\n  return regex.test(value.trim())\n}\n\n/**\n * Rounds a number to specified decimal places without trailing zeros\n * @param value - Number to round\n * @param decimals - Decimal places\n * @returns Rounded number\n */\nexport function roundToDecimals(value: number, decimals: number): number {\n  const factor = Math.pow(10, decimals)\n  return Math.round(value * factor) / factor\n}\n\n// Aliases for consistent naming\nexport const formatWAXPrice = formatWaxPrice\nexport const formatNumber = formatDynamicDecimals","//function add {\nfunction add(number1, number2) {\n    var _a;\n    if (number2 === void 0) { number2 = \"0\"; }\n    var neg = 0, ind = -1;\n    //check for negatives\n    if (number1[0] == \"-\") {\n        number1 = number1.substring(1);\n        if (!testZero(number1)) {\n            neg++;\n            ind = 1;\n            number1.length;\n        }\n    }\n    if (number2[0] == \"-\") {\n        number2 = number2.substring(1);\n        if (!testZero(number2)) {\n            neg++;\n            ind = 2;\n            number2.length;\n        }\n    }\n    number1 = trim(number1);\n    number2 = trim(number2);\n    _a = pad(trim(number1), trim(number2)), number1 = _a[0], number2 = _a[1];\n    if (neg == 1) {\n        if (ind === 1)\n            number1 = compliment(number1);\n        else if (ind === 2)\n            number2 = compliment(number2);\n    }\n    var res = addCore(number1, number2);\n    if (!neg)\n        return trim(res);\n    else if (neg == 2)\n        return \"-\" + trim(res);\n    else {\n        if (number1.length < res.length)\n            return trim(res.substring(1));\n        else\n            return \"-\" + trim(compliment(res));\n    }\n}\nfunction compliment(number) {\n    if (testZero(number)) {\n        return number;\n    }\n    var s = \"\", l = number.length, dec = number.split(\".\")[1], ld = dec ? dec.length : 0;\n    for (var i = 0; i < l; i++) {\n        if (number[i] >= \"0\" && number[i] <= \"9\")\n            s += 9 - parseInt(number[i]);\n        else\n            s += number[i];\n    }\n    var one = ld > 0 ? \"0.\" + new Array(ld).join(\"0\") + \"1\" : \"1\";\n    return addCore(s, one);\n}\nfunction trim(number) {\n    var parts = number.split(\".\");\n    if (!parts[0])\n        parts[0] = \"0\";\n    while (parts[0][0] == \"0\" && parts[0].length > 1)\n        parts[0] = parts[0].substring(1);\n    return parts[0] + (parts[1] ? \".\" + parts[1] : \"\");\n}\nfunction pad(number1, number2) {\n    var parts1 = number1.split(\".\"), parts2 = number2.split(\".\");\n    //pad integral part\n    var length1 = parts1[0].length, length2 = parts2[0].length;\n    if (length1 > length2) {\n        parts2[0] =\n            new Array(Math.abs(length1 - length2) + 1).join(\"0\") +\n                (parts2[0] ? parts2[0] : \"\");\n    }\n    else {\n        parts1[0] =\n            new Array(Math.abs(length1 - length2) + 1).join(\"0\") +\n                (parts1[0] ? parts1[0] : \"\");\n    }\n    //pad fractional part\n    (length1 = parts1[1] ? parts1[1].length : 0),\n        (length2 = parts2[1] ? parts2[1].length : 0);\n    if (length1 || length2) {\n        if (length1 > length2) {\n            parts2[1] =\n                (parts2[1] ? parts2[1] : \"\") +\n                    new Array(Math.abs(length1 - length2) + 1).join(\"0\");\n        }\n        else {\n            parts1[1] =\n                (parts1[1] ? parts1[1] : \"\") +\n                    new Array(Math.abs(length1 - length2) + 1).join(\"0\");\n        }\n    }\n    number1 = parts1[0] + (parts1[1] ? \".\" + parts1[1] : \"\");\n    number2 = parts2[0] + (parts2[1] ? \".\" + parts2[1] : \"\");\n    return [number1, number2];\n}\nfunction addCore(number1, number2) {\n    var _a;\n    _a = pad(number1, number2), number1 = _a[0], number2 = _a[1];\n    var sum = \"\", carry = 0;\n    for (var i = number1.length - 1; i >= 0; i--) {\n        if (number1[i] === \".\") {\n            sum = \".\" + sum;\n            continue;\n        }\n        var temp = parseInt(number1[i]) + parseInt(number2[i]) + carry;\n        sum = (temp % 10) + sum;\n        carry = Math.floor(temp / 10);\n    }\n    return carry ? carry.toString() + sum : sum;\n}\nfunction testZero(number) {\n    return /^0[0]*[.]{0,1}[0]*$/.test(number);\n}\n\nfunction abs(n) {\n    if (typeof n == \"number\" || typeof n == \"bigint\")\n        n = n.toString();\n    if (n[0] == \"-\")\n        return n.substring(1);\n    return n;\n}\n\nvar RoundingModes;\n(function (RoundingModes) {\n    /**\n     * Rounding mode to round towards positive infinity.\n     */\n    RoundingModes[RoundingModes[\"CEILING\"] = 0] = \"CEILING\";\n    /**\n     * Rounding mode to round towards zero.\n     */\n    RoundingModes[RoundingModes[\"DOWN\"] = 1] = \"DOWN\";\n    /**\n     * Rounding mode to round towards negative infinity.\n     */\n    RoundingModes[RoundingModes[\"FLOOR\"] = 2] = \"FLOOR\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round down.\n     */\n    RoundingModes[RoundingModes[\"HALF_DOWN\"] = 3] = \"HALF_DOWN\";\n    /**\n     * Rounding mode to round towards the \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case, round towards the even neighbor.\n     */\n    RoundingModes[RoundingModes[\"HALF_EVEN\"] = 4] = \"HALF_EVEN\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round up.\n     */\n    RoundingModes[RoundingModes[\"HALF_UP\"] = 5] = \"HALF_UP\";\n    /**\n     * Rounding mode to assert that the requested operation has an exact result, hence no rounding is necessary.\n     * UNIMPLEMENTED\n     */\n    RoundingModes[RoundingModes[\"UNNECESSARY\"] = 6] = \"UNNECESSARY\";\n    /**\n     * Rounding mode to round away from zero.\n     */\n    RoundingModes[RoundingModes[\"UP\"] = 7] = \"UP\";\n})(RoundingModes || (RoundingModes = {}));\n\n/**\n *\n * @param input the number to round\n * @param n precision\n * @param mode Rounding Mode\n */\nfunction roundOff(input, n, mode) {\n    if (n === void 0) { n = 0; }\n    if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n    if (mode === RoundingModes.UNNECESSARY) {\n        throw new Error(\"UNNECESSARY Rounding Mode has not yet been implemented\");\n    }\n    if (typeof (input) == 'number' || typeof (input) == 'bigint')\n        input = input.toString();\n    var neg = false;\n    if (input[0] === '-') {\n        neg = true;\n        input = input.substring(1);\n    }\n    var parts = input.split('.'), partInt = parts[0], partDec = parts[1];\n    //handle case of -ve n: roundOff(12564,-2)=12600\n    if (n < 0) {\n        n = -n;\n        if (partInt.length <= n)\n            return '0';\n        else {\n            var prefix = partInt.substr(0, partInt.length - n);\n            input = prefix + '.' + partInt.substr(partInt.length - n) + partDec;\n            prefix = roundOff(input, 0, mode);\n            return (neg ? '-' : '') + prefix + (new Array(n + 1).join('0'));\n        }\n    }\n    // handle case when integer output is desired\n    if (n == 0) {\n        partInt.length;\n        if (greaterThanFive(parts[1], partInt, neg, mode)) {\n            partInt = increment(partInt);\n        }\n        return (neg && parseInt(partInt) ? '-' : '') + partInt;\n    }\n    // handle case when n>0\n    if (!parts[1]) {\n        return (neg ? '-' : '') + partInt + '.' + (new Array(n + 1).join('0'));\n    }\n    else if (parts[1].length < n) {\n        return (neg ? '-' : '') + partInt + '.' + parts[1] + (new Array(n - parts[1].length + 1).join('0'));\n    }\n    partDec = parts[1].substring(0, n);\n    var rem = parts[1].substring(n);\n    if (rem && greaterThanFive(rem, partDec, neg, mode)) {\n        partDec = increment(partDec);\n        if (partDec.length > n) {\n            return (neg ? '-' : '') + increment(partInt, parseInt(partDec[0])) + '.' + partDec.substring(1);\n        }\n    }\n    return (neg && (parseInt(partInt) || parseInt(partDec)) ? '-' : '') + partInt + '.' + partDec;\n}\nfunction greaterThanFive(part, pre, neg, mode) {\n    if (!part || part === new Array(part.length + 1).join('0'))\n        return false;\n    // #region UP, DOWN, CEILING, FLOOR \n    if (mode === RoundingModes.DOWN || (!neg && mode === RoundingModes.FLOOR) ||\n        (neg && mode === RoundingModes.CEILING))\n        return false;\n    if (mode === RoundingModes.UP || (neg && mode === RoundingModes.FLOOR) ||\n        (!neg && mode === RoundingModes.CEILING))\n        return true;\n    // #endregion\n    // case when part !== five\n    var five = '5' + (new Array(part.length).join('0'));\n    if (part > five)\n        return true;\n    else if (part < five)\n        return false;\n    // case when part === five\n    switch (mode) {\n        case RoundingModes.HALF_DOWN: return false;\n        case RoundingModes.HALF_UP: return true;\n        case RoundingModes.HALF_EVEN:\n        default: return (parseInt(pre[pre.length - 1]) % 2 == 1);\n    }\n}\nfunction increment(part, c) {\n    if (c === void 0) { c = 0; }\n    if (!c)\n        c = 1;\n    if (typeof (part) == 'number')\n        part.toString();\n    var l = part.length - 1, s = '';\n    for (var i = l; i >= 0; i--) {\n        var x = parseInt(part[i]) + c;\n        if (x == 10) {\n            c = 1;\n            x = 0;\n        }\n        else {\n            c = 0;\n        }\n        s += x;\n    }\n    if (c)\n        s += c;\n    return s.split('').reverse().join('');\n}\n\n/*\n* Removes zero from front and back*/\nfunction stripTrailingZero(number) {\n    var isNegative = number[0] === '-';\n    if (isNegative) {\n        number = number.substr(1);\n    }\n    while (number[0] == '0') {\n        number = number.substr(1);\n    }\n    if (number.indexOf('.') != -1) {\n        while (number[number.length - 1] == '0') {\n            number = number.substr(0, number.length - 1);\n        }\n    }\n    if (number == \"\" || number == \".\") {\n        number = '0';\n    }\n    else if (number[number.length - 1] == '.') {\n        number = number.substr(0, number.length - 1);\n    }\n    if (number[0] == '.') {\n        number = '0' + number;\n    }\n    if (isNegative && number != '0') {\n        number = '-' + number;\n    }\n    return number;\n}\n\nfunction multiply(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    /*Filter numbers*/\n    var negative = 0;\n    if (number1[0] == '-') {\n        negative++;\n        number1 = number1.substr(1);\n    }\n    if (number2[0] == '-') {\n        negative++;\n        number2 = number2.substr(1);\n    }\n    number1 = stripTrailingZero(number1);\n    number2 = stripTrailingZero(number2);\n    var decimalLength1 = 0;\n    var decimalLength2 = 0;\n    if (number1.indexOf('.') != -1) {\n        decimalLength1 = number1.length - number1.indexOf('.') - 1;\n    }\n    if (number2.indexOf('.') != -1) {\n        decimalLength2 = number2.length - number2.indexOf('.') - 1;\n    }\n    var decimalLength = decimalLength1 + decimalLength2;\n    number1 = stripTrailingZero(number1.replace('.', ''));\n    number2 = stripTrailingZero(number2.replace('.', ''));\n    if (number1.length < number2.length) {\n        var temp = number1;\n        number1 = number2;\n        number2 = temp;\n    }\n    if (number2 == '0') {\n        return '0';\n    }\n    /*\n    * Core multiplication\n    */\n    var length = number2.length;\n    var carry = 0;\n    var positionVector = [];\n    var currentPosition = length - 1;\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        positionVector[i] = number1.length - 1;\n    }\n    for (var i = 0; i < 2 * number1.length; i++) {\n        var sum = 0;\n        for (var j = number2.length - 1; j >= currentPosition && j >= 0; j--) {\n            if (positionVector[j] > -1 && positionVector[j] < number1.length) {\n                sum += parseInt(number1[positionVector[j]--]) * parseInt(number2[j]);\n            }\n        }\n        sum += carry;\n        carry = Math.floor(sum / 10);\n        result = sum % 10 + result;\n        currentPosition--;\n    }\n    /*\n    * Formatting result\n    */\n    result = stripTrailingZero(adjustDecimal(result, decimalLength));\n    if (negative == 1) {\n        result = '-' + result;\n    }\n    return result;\n}\n/*\n* Add decimal point\n*/\nfunction adjustDecimal(number, decimal) {\n    if (decimal == 0)\n        return number;\n    else {\n        number = (decimal >= number.length) ? ((new Array(decimal - number.length + 1)).join('0') + number) : number;\n        return number.substr(0, number.length - decimal) + '.' + number.substr(number.length - decimal, decimal);\n    }\n}\n\nfunction divide(dividend, divisor, precission, mode) {\n    if (precission === void 0) { precission = 8; }\n    if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    // remove trailing zeros in decimal ISSUE#18\n    dividend = dividend.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    divisor = divisor.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    if (dividend == 0)\n        return '0';\n    var neg = 0;\n    if (divisor[0] == '-') {\n        divisor = divisor.substring(1);\n        neg++;\n    }\n    if (dividend[0] == '-') {\n        dividend = dividend.substring(1);\n        neg++;\n    }\n    var pt_dvsr = divisor.indexOf('.') > 0 ? divisor.length - divisor.indexOf('.') - 1 : -1;\n    divisor = trim(divisor.replace('.', ''));\n    if (pt_dvsr >= 0) {\n        var pt_dvnd = dividend.indexOf('.') > 0 ? dividend.length - dividend.indexOf('.') - 1 : -1;\n        if (pt_dvnd == -1) {\n            dividend = trim(dividend + (new Array(pt_dvsr + 1)).join('0'));\n        }\n        else {\n            if (pt_dvsr > pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                dividend = trim(dividend + (new Array(pt_dvsr - pt_dvnd + 1)).join('0'));\n            }\n            else if (pt_dvsr < pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                var loc = dividend.length - pt_dvnd + pt_dvsr;\n                dividend = trim(dividend.substring(0, loc) + '.' + dividend.substring(loc));\n            }\n            else if (pt_dvsr == pt_dvnd) {\n                dividend = trim(dividend.replace('.', ''));\n            }\n        }\n    }\n    var prec = 0, dl = divisor.length, quotent = '';\n    var dvnd = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(0, dl + 1) : dividend.substring(0, dl);\n    dividend = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(dl + 1) : dividend.substring(dl);\n    if (dvnd.indexOf('.') > -1) {\n        var shift = dvnd.length - dvnd.indexOf('.') - 1;\n        dvnd = dvnd.replace('.', '');\n        if (dl > dvnd.length) {\n            shift += dl - dvnd.length;\n            dvnd = dvnd + (new Array(dl - dvnd.length + 1)).join('0');\n        }\n        prec = shift;\n        quotent = '0.' + (new Array(shift)).join('0');\n    }\n    precission = precission + 2;\n    while (prec <= precission) {\n        var qt = 0;\n        while (parseInt(dvnd) >= parseInt(divisor)) {\n            dvnd = add(dvnd, '-' + divisor);\n            qt++;\n        }\n        quotent += qt;\n        if (!dividend) {\n            if (!prec)\n                quotent += '.';\n            prec++;\n            dvnd = dvnd + '0';\n        }\n        else {\n            if (dividend[0] == '.') {\n                quotent += '.';\n                prec++;\n                dividend = dividend.substring(1);\n            }\n            dvnd = dvnd + dividend.substring(0, 1);\n            dividend = dividend.substring(1);\n        }\n    }\n    return ((neg == 1) ? '-' : '') + trim(roundOff(quotent, precission - 2, mode));\n}\n\nfunction subtract(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    number2 = negate(number2);\n    return add(number1, number2);\n}\nfunction negate(number) {\n    if (number[0] == '-') {\n        number = number.substr(1);\n    }\n    else {\n        number = '-' + number;\n    }\n    return number;\n}\n\nfunction modulus(dividend, divisor) {\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    validate(dividend);\n    validate(divisor);\n    var sign = '';\n    if (dividend[0] == '-') {\n        sign = '-';\n        dividend = dividend.substr(1);\n    }\n    if (divisor[0] == '-') {\n        divisor = divisor.substr(1);\n    }\n    var result = subtract(dividend, multiply(divisor, roundOff(divide(dividend, divisor), 0, RoundingModes.FLOOR)));\n    return sign + result;\n}\nfunction validate(oparand) {\n    if (oparand.indexOf('.') != -1) {\n        throw new Error('Modulus of non-integers not supported');\n    }\n}\n\nfunction compareTo(number1, number2) {\n    var _a, _b;\n    var negative = false;\n    _a = [number1, number2].map(function (n) { return stripTrailingZero(n); }), number1 = _a[0], number2 = _a[1];\n    if (number1[0] == '-' && number2[0] != \"-\") {\n        return -1;\n    }\n    else if (number1[0] != '-' && number2[0] == '-') {\n        return 1;\n    }\n    else if (number1[0] == '-' && number2[0] == '-') {\n        number1 = number1.substr(1);\n        number2 = number2.substr(1);\n        negative = true;\n    }\n    _b = pad(number1, number2), number1 = _b[0], number2 = _b[1];\n    if (number1.localeCompare(number2) == 0) {\n        return 0;\n    }\n    for (var i = 0; i < number1.length; i++) {\n        if (number1[i] == number2[i]) {\n            continue;\n        }\n        else if (number1[i] > number2[i]) {\n            if (negative) {\n                return -1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            if (negative) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n    }\n    return 0;\n}\n\nvar bigDecimal = /** @class */ (function () {\n    function bigDecimal(number) {\n        if (number === void 0) { number = \"0\"; }\n        this.value = bigDecimal.validate(number);\n    }\n    bigDecimal.validate = function (number) {\n        if (number) {\n            number = number.toString();\n            if (isNaN(number))\n                throw Error(\"Parameter is not a number: \" + number);\n            if (number[0] == \"+\")\n                number = number.substring(1);\n        }\n        else\n            number = \"0\";\n        //handle missing leading zero\n        if (number.startsWith(\".\"))\n            number = \"0\" + number;\n        else if (number.startsWith(\"-.\"))\n            number = \"-0\" + number.substr(1);\n        //handle exponentiation\n        if (/e/i.test(number)) {\n            var _a = number.split(/[eE]/), mantisa = _a[0], exponent = _a[1];\n            mantisa = trim(mantisa);\n            var sign = \"\";\n            if (mantisa[0] == \"-\") {\n                sign = \"-\";\n                mantisa = mantisa.substring(1);\n            }\n            if (mantisa.indexOf(\".\") >= 0) {\n                exponent = parseInt(exponent) + mantisa.indexOf(\".\");\n                mantisa = mantisa.replace(\".\", \"\");\n            }\n            else {\n                exponent = parseInt(exponent) + mantisa.length;\n            }\n            if (mantisa.length < exponent) {\n                number =\n                    sign + mantisa + new Array(exponent - mantisa.length + 1).join(\"0\");\n            }\n            else if (mantisa.length >= exponent && exponent > 0) {\n                number =\n                    sign +\n                        trim(mantisa.substring(0, exponent)) +\n                        (mantisa.length > exponent ? \".\" + mantisa.substring(exponent) : \"\");\n            }\n            else {\n                number = sign + \"0.\" + new Array(-exponent + 1).join(\"0\") + mantisa;\n            }\n        }\n        return number;\n    };\n    bigDecimal.prototype.getValue = function () {\n        return this.value;\n    };\n    bigDecimal.prototype.setValue = function (num) {\n        this.value = bigDecimal.validate(num);\n    };\n    bigDecimal.getPrettyValue = function (number, digits, separator) {\n        if (digits === void 0) { digits = 3; }\n        if (separator === void 0) { separator = \",\"; }\n        // if (!(digits || separator)) {\n        //     digits = 3;\n        //     separator = ',';\n        // } else if (!(digits && separator)) {\n        //     throw Error('Illegal Arguments. Should pass both digits and separator or pass none');\n        // }\n        number = bigDecimal.validate(number);\n        var neg = number.charAt(0) == \"-\";\n        if (neg)\n            number = number.substring(1);\n        var len = number.indexOf(\".\");\n        len = len > 0 ? len : number.length;\n        var temp = \"\";\n        for (var i = len; i > 0;) {\n            if (i < digits) {\n                digits = i;\n                i = 0;\n            }\n            else\n                i -= digits;\n            temp =\n                number.substring(i, i + digits) +\n                    (i < len - digits && i >= 0 ? separator : \"\") +\n                    temp;\n        }\n        return (neg ? \"-\" : \"\") + temp + number.substring(len);\n    };\n    bigDecimal.prototype.getPrettyValue = function (digits, separator) {\n        if (digits === void 0) { digits = 3; }\n        if (separator === void 0) { separator = \",\"; }\n        return bigDecimal.getPrettyValue(this.value, digits, separator);\n    };\n    bigDecimal.round = function (number, precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n        number = bigDecimal.validate(number);\n        // console.log(number)\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return roundOff(number, precision, mode);\n    };\n    bigDecimal.prototype.round = function (precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return new bigDecimal(roundOff(this.value, precision, mode));\n    };\n    bigDecimal.abs = function (number) {\n        number = bigDecimal.validate(number);\n        return abs(number);\n    };\n    bigDecimal.prototype.abs = function () {\n        return new bigDecimal(abs(this.value));\n    };\n    bigDecimal.floor = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf(\".\") === -1)\n            return number;\n        return bigDecimal.round(number, 0, RoundingModes.FLOOR);\n    };\n    bigDecimal.prototype.floor = function () {\n        if (this.value.indexOf(\".\") === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, RoundingModes.FLOOR);\n    };\n    bigDecimal.ceil = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf(\".\") === -1)\n            return number;\n        return bigDecimal.round(number, 0, RoundingModes.CEILING);\n    };\n    bigDecimal.prototype.ceil = function () {\n        if (this.value.indexOf(\".\") === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, RoundingModes.CEILING);\n    };\n    bigDecimal.add = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return add(number1, number2);\n    };\n    bigDecimal.prototype.add = function (number) {\n        return new bigDecimal(add(this.value, number.getValue()));\n    };\n    bigDecimal.subtract = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return subtract(number1, number2);\n    };\n    bigDecimal.prototype.subtract = function (number) {\n        return new bigDecimal(subtract(this.value, number.getValue()));\n    };\n    bigDecimal.multiply = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return multiply(number1, number2);\n    };\n    bigDecimal.prototype.multiply = function (number) {\n        return new bigDecimal(multiply(this.value, number.getValue()));\n    };\n    bigDecimal.divide = function (number1, number2, precision, mode) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return divide(number1, number2, precision, mode);\n    };\n    bigDecimal.prototype.divide = function (number, precision, mode) {\n        return new bigDecimal(divide(this.value, number.getValue(), precision, mode));\n    };\n    bigDecimal.modulus = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return modulus(number1, number2);\n    };\n    bigDecimal.prototype.modulus = function (number) {\n        return new bigDecimal(modulus(this.value, number.getValue()));\n    };\n    bigDecimal.compareTo = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return compareTo(number1, number2);\n    };\n    bigDecimal.prototype.compareTo = function (number) {\n        return compareTo(this.value, number.getValue());\n    };\n    bigDecimal.negate = function (number) {\n        number = bigDecimal.validate(number);\n        return negate(number);\n    };\n    bigDecimal.prototype.negate = function () {\n        return new bigDecimal(negate(this.value));\n    };\n    bigDecimal.stripTrailingZero = function (number) {\n        number = bigDecimal.validate(number);\n        return stripTrailingZero(number);\n    };\n    bigDecimal.prototype.stripTrailingZero = function () {\n        return new bigDecimal(stripTrailingZero(this.value));\n    };\n    bigDecimal.RoundingModes = RoundingModes;\n    return bigDecimal;\n}());\n\nexport { bigDecimal, bigDecimal as default };\n//# sourceMappingURL=big-decimal.js.map\n","/**\n * @wharfkit/resources v1.5.0\n * https://github.com/wharfkit/resources\n *\n * @license\n * Copyright (c) 2021 Greymass Inc. All Rights Reserved.\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n *  1. Redistribution of source code must retain the above copyright notice, this\n *     list of conditions and the following disclaimer.\n * \n *  2. Redistribution in binary form must reproduce the above copyright notice,\n *     this list of conditions and the following disclaimer in the documentation\n *     and/or other materials provided with the distribution.\n * \n *  3. Neither the name of the copyright holder nor the names of its contributors\n *     may be used to endorse or promote products derived from this software without\n *     specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR INTENDED FOR USE\n * IN THE DESIGN, CONSTRUCTION, OPERATION OR MAINTENANCE OF ANY MILITARY FACILITY.\n */\nimport { Struct, UInt64, UInt128, Asset, Int64, TimePointSec, APIClient, FetchProvider } from '@wharfkit/antelope';\nimport BN from 'bn.js';\nimport { __decorate } from 'tslib';\nimport bigDecimal from 'js-big-decimal';\n\nclass PowerUpStateResource extends Struct {\n    constructor() {\n        super(...arguments);\n        this.default_block_cpu_limit = UInt64.from(200000);\n        this.default_block_net_limit = UInt64.from(1048576000);\n    }\n    // Get the current number of allocated units (shift from REX -> PowerUp)\n    get allocated() {\n        return 1 - Number(this.weight_ratio.dividing(this.target_weight_ratio)) / 100;\n    }\n    // Get the current percentage of reserved units\n    get reserved() {\n        return this.utilization.dividing(this.weight);\n    }\n    // Get the symbol definition for the token\n    get symbol() {\n        return this.min_price.symbol;\n    }\n    // Mimic: https://github.com/EOSIO/eosio.contracts/blob/d7bc0a5cc8c0c2edd4dc61b0126517d0cb46fd94/contracts/eosio.system/src/powerup.cpp#L358\n    utilization_increase(frac) {\n        const base = intToBigDecimal(frac);\n        const weight = intToBigDecimal(this.weight);\n        const multiplier = intToBigDecimal(Math.pow(10, 15));\n        return UInt128.from(base.multiply(weight).divide(multiplier, 15).ceil().getValue());\n    }\n    // Mimic: https://github.com/EOSIO/eosio.contracts/blob/d7bc0a5cc8c0c2edd4dc61b0126517d0cb46fd94/contracts/eosio.system/src/powerup.cpp#L284-L298\n    price_function(utilization) {\n        const { weight } = this;\n        let price = this.min_price.value;\n        const new_exponent = Number(this.exponent) - 1.0;\n        if (new_exponent <= 0.0) {\n            return this.max_price.value;\n        }\n        else {\n            // const util_weight = utilization.dividing(weight)\n            const util_weight = intToBigDecimal(utilization).divide(intToBigDecimal(weight), 18);\n            const difference = this.max_price.value - this.min_price.value;\n            price += difference * Math.pow(Number(util_weight.getValue()), new_exponent);\n        }\n        return price;\n    }\n    // Mimic: https://github.com/EOSIO/eosio.contracts/blob/d7bc0a5cc8c0c2edd4dc61b0126517d0cb46fd94/contracts/eosio.system/src/powerup.cpp#L274-L280\n    price_integral_delta(start_utilization, end_utilization) {\n        const difference = Asset.fromUnits(this.max_price.units.subtracting(this.min_price.units), this.symbol);\n        const coefficient = difference.value / this.exponent.value;\n        const start_u = Number(start_utilization.dividing(this.weight));\n        const end_u = Number(end_utilization.dividing(this.weight));\n        const delta = this.min_price.value * end_u -\n            this.min_price.value * start_u +\n            coefficient * Math.pow(end_u, this.exponent.value) -\n            coefficient * Math.pow(start_u, this.exponent.value);\n        return delta;\n    }\n    // Mimic: https://github.com/EOSIO/eosio.contracts/blob/d7bc0a5cc8c0c2edd4dc61b0126517d0cb46fd94/contracts/eosio.system/src/powerup.cpp#L262-L315\n    fee(utilization_increase, adjusted_utilization) {\n        const { utilization, weight } = this;\n        let start_utilization = Int64.from(utilization);\n        const end_utilization = start_utilization.adding(utilization_increase);\n        let fee = 0;\n        if (start_utilization.lt(adjusted_utilization)) {\n            const min = Math.min(Number(utilization_increase), Number(adjusted_utilization.subtracting(start_utilization)));\n            fee += Number(intToBigDecimal(this.price_function(adjusted_utilization) * min)\n                .divide(intToBigDecimal(weight))\n                .getValue());\n            start_utilization = adjusted_utilization;\n        }\n        if (start_utilization.lt(end_utilization)) {\n            fee += this.price_integral_delta(start_utilization, end_utilization);\n        }\n        return fee;\n    }\n    // Mimic: https://github.com/EOSIO/eosio.contracts/blob/d7bc0a5cc8c0c2edd4dc61b0126517d0cb46fd94/contracts/eosio.system/src/powerup.cpp#L105-L117\n    determine_adjusted_utilization(options) {\n        // Casting EOSIO types to usable formats for JS calculations\n        const { decay_secs, utilization, utilization_timestamp } = this;\n        let { adjusted_utilization } = this;\n        // If utilization is less than adjusted, calculate real time value\n        if (utilization.lt(adjusted_utilization)) {\n            // Create now & adjust JS timestamp to match EOSIO timestamp values\n            const ts = options && options.timestamp ? options.timestamp : new Date();\n            const now = TimePointSec.from(ts).toMilliseconds() / 1000;\n            const diff = adjusted_utilization.subtracting(utilization).toNumber();\n            let delta = diff *\n                Math.exp(-(now - utilization_timestamp.toMilliseconds()) / Number(decay_secs));\n            delta = Math.min(Math.max(delta, 0), diff); // Clamp the delta\n            adjusted_utilization = utilization.adding(delta);\n        }\n        return adjusted_utilization;\n    }\n}\n__decorate([\n    Struct.field('uint8')\n], PowerUpStateResource.prototype, \"version\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"weight\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"weight_ratio\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"assumed_stake_weight\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"initial_weight_ratio\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"target_weight_ratio\", void 0);\n__decorate([\n    Struct.field('time_point_sec')\n], PowerUpStateResource.prototype, \"initial_timestamp\", void 0);\n__decorate([\n    Struct.field('time_point_sec')\n], PowerUpStateResource.prototype, \"target_timestamp\", void 0);\n__decorate([\n    Struct.field('float64')\n], PowerUpStateResource.prototype, \"exponent\", void 0);\n__decorate([\n    Struct.field('uint32')\n], PowerUpStateResource.prototype, \"decay_secs\", void 0);\n__decorate([\n    Struct.field('asset')\n], PowerUpStateResource.prototype, \"min_price\", void 0);\n__decorate([\n    Struct.field('asset')\n], PowerUpStateResource.prototype, \"max_price\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"utilization\", void 0);\n__decorate([\n    Struct.field('int64')\n], PowerUpStateResource.prototype, \"adjusted_utilization\", void 0);\n__decorate([\n    Struct.field('time_point_sec')\n], PowerUpStateResource.prototype, \"utilization_timestamp\", void 0);\n\nlet PowerUpStateResourceCPU = class PowerUpStateResourceCPU extends PowerUpStateResource {\n    constructor() {\n        super(...arguments);\n        // Return smallest units per day, μs (microseconds)\n        this.per_day = (options) => this.us_per_day(options);\n        // Default frac generation by smallest unit type\n        this.frac = (usage, us) => this.frac_by_us(usage, us);\n        // Frac generation by ms (milliseconds)\n        this.frac_by_ms = (usage, ms) => this.frac_by_us(usage, ms * 1000);\n        // Price generation by smallest units, μs (microseconds)\n        this.price_per = (usage, us = 1000, options) => this.price_per_us(usage, us, options);\n        // Price generation by ms (milliseconds)\n        this.price_per_ms = (usage, ms = 1, options) => this.price_per_us(usage, ms * 1000, options);\n    }\n    // Return ms (milliseconds) per day\n    ms_per_day(options) {\n        return this.us_per_day(options) / 1000;\n    }\n    // Return μs (microseconds) per day\n    us_per_day(options) {\n        const limit = options && options.virtual_block_cpu_limit\n            ? options.virtual_block_cpu_limit\n            : this.default_block_cpu_limit;\n        return Number(limit) * 2 * 60 * 60 * 24;\n    }\n    // Convert weight to μs (microseconds)\n    weight_to_us(sample, weight) {\n        return UInt128.from(UInt128.from(weight).multiplying(Int64.from(sample)).dividing(BNPrecision, 'ceil'));\n    }\n    // Convert μs (microseconds) to weight\n    us_to_weight(sample, us) {\n        return Int64.from(us).multiplying(BNPrecision).dividing(sample, 'floor');\n    }\n    // Frac generation by μs (microseconds)\n    frac_by_us(usage, us) {\n        const precision = 15;\n        const converted = intToBigDecimal(this.us_to_weight(usage.cpu, us));\n        const current = intToBigDecimal(this.weight);\n        const multiplier = intToBigDecimal(Math.pow(10, precision));\n        const frac = converted.divide(current, precision).multiply(multiplier);\n        return Int64.from(frac.getValue());\n    }\n    // Price generation by μs (microseconds)\n    price_per_us(usage, us = 1000, options) {\n        // Determine the utilization increase by this action\n        const frac = UInt128.from(this.frac(usage, us));\n        const utilization_increase = this.utilization_increase(frac);\n        // Determine the adjusted utilization if needed\n        const adjusted_utilization = this.determine_adjusted_utilization(options);\n        // Derive the fee from the increase and utilization\n        const fee = this.fee(utilization_increase, adjusted_utilization);\n        // Force the fee up to the next highest value of precision\n        const precision = Math.pow(10, this.max_price.symbol.precision);\n        const price = fee * precision;\n        const value = Math.ceil(price) / precision;\n        const asset = Asset.fromFloat(fee, this.symbol);\n        if (price < 1) {\n            throw new Error(`Price (${String(asset)}) for requested CPU amount (${us}us) below required precision, increase requested amount.`);\n        }\n        if (options && options.min_payment && options.min_payment.units.gt(asset.units)) {\n            throw new Error(`Price (${String(asset)}) for requested CPU amount (${us}us) below minimum required payment (${String(options.min_payment)}), increase requested CPU amount.`);\n        }\n        // Return the modified fee\n        return value;\n    }\n};\nPowerUpStateResourceCPU = __decorate([\n    Struct.type('powerupstateresourcecpu')\n], PowerUpStateResourceCPU);\n\nlet PowerUpStateResourceNET = class PowerUpStateResourceNET extends PowerUpStateResource {\n    constructor() {\n        super(...arguments);\n        // Return smallest units per day, bytes\n        this.per_day = (options) => this.bytes_per_day(options);\n        // Default frac generation by smallest unit type\n        this.frac = (usage, bytes) => this.frac_by_bytes(usage, bytes);\n        // Frac generation by kb\n        this.frac_by_kb = (usage, kilobytes) => this.frac_by_bytes(usage, kilobytes * 1000);\n        // Price generation by smallest units, bytes\n        this.price_per = (usage, bytes = 1000, options) => this.price_per_byte(usage, bytes, options);\n        // Price generation by kb\n        this.price_per_kb = (usage, kilobytes = 1, options) => this.price_per_byte(usage, kilobytes * 1000, options);\n    }\n    // Return kb per day\n    kb_per_day(options) {\n        return this.bytes_per_day(options) / 1000;\n    }\n    // Return bytes per day\n    bytes_per_day(options) {\n        const limit = options && options.virtual_block_net_limit\n            ? options.virtual_block_net_limit\n            : this.default_block_net_limit;\n        return Number(limit) * 2 * 60 * 60 * 24;\n    }\n    // Convert weight to bytes\n    weight_to_bytes(sample, weight) {\n        return UInt128.from(UInt128.from(weight).multiplying(Int64.from(sample)).dividing(BNPrecision, 'ceil'));\n    }\n    // Convert bytes to weight\n    bytes_to_weight(sample, bytes) {\n        return Int64.from(bytes).multiplying(BNPrecision).dividing(Int64.from(sample), 'floor');\n    }\n    // Frac generation by bytes\n    frac_by_bytes(usage, bytes) {\n        const precision = 15;\n        const converted = intToBigDecimal(this.bytes_to_weight(usage.net, bytes));\n        const current = intToBigDecimal(this.weight);\n        const multiplier = intToBigDecimal(Math.pow(10, precision));\n        const frac = converted.divide(current, precision).multiply(multiplier);\n        return Int64.from(frac.getValue());\n    }\n    // Price generation by bytes\n    price_per_byte(usage, bytes = 1000, options) {\n        // Determine the utilization increase by this action\n        const frac = UInt128.from(this.frac(usage, bytes));\n        const utilization_increase = this.utilization_increase(frac);\n        // Determine the adjusted utilization if needed\n        const adjusted_utilization = this.determine_adjusted_utilization(options);\n        // Derive the fee from the increase and utilization\n        const fee = this.fee(utilization_increase, adjusted_utilization);\n        // Force the fee up to the next highest value of precision\n        const precision = Math.pow(10, this.max_price.symbol.precision);\n        const value = Math.ceil(fee * precision) / precision;\n        // Return the modified fee\n        return value;\n    }\n};\nPowerUpStateResourceNET = __decorate([\n    Struct.type('powerupstateresourcenet')\n], PowerUpStateResourceNET);\n\nlet PowerUpState = class PowerUpState extends Struct {\n};\n__decorate([\n    Struct.field('uint8')\n], PowerUpState.prototype, \"version\", void 0);\n__decorate([\n    Struct.field(PowerUpStateResourceNET)\n], PowerUpState.prototype, \"net\", void 0);\n__decorate([\n    Struct.field(PowerUpStateResourceCPU)\n], PowerUpState.prototype, \"cpu\", void 0);\n__decorate([\n    Struct.field('uint32')\n], PowerUpState.prototype, \"powerup_days\", void 0);\n__decorate([\n    Struct.field('asset')\n], PowerUpState.prototype, \"min_powerup_fee\", void 0);\nPowerUpState = __decorate([\n    Struct.type('powerupstate')\n], PowerUpState);\nclass PowerUpAPI {\n    constructor(parent) {\n        this.parent = parent;\n    }\n    async get_state() {\n        const response = await this.parent.api.v1.chain.get_table_rows({\n            code: 'eosio',\n            scope: '',\n            table: 'powup.state',\n            type: PowerUpState,\n        });\n        return response.rows[0];\n    }\n}\n\nlet Connector = class Connector extends Struct {\n};\n__decorate([\n    Struct.field('asset')\n], Connector.prototype, \"balance\", void 0);\n__decorate([\n    Struct.field('float64')\n], Connector.prototype, \"weight\", void 0);\nConnector = __decorate([\n    Struct.type('connector')\n], Connector);\nlet ExchangeState = class ExchangeState extends Struct {\n};\n__decorate([\n    Struct.field('asset')\n], ExchangeState.prototype, \"supply\", void 0);\n__decorate([\n    Struct.field(Connector)\n], ExchangeState.prototype, \"base\", void 0);\n__decorate([\n    Struct.field(Connector)\n], ExchangeState.prototype, \"quote\", void 0);\nExchangeState = __decorate([\n    Struct.type('exchange_state')\n], ExchangeState);\nlet RAMState = class RAMState extends ExchangeState {\n    price_per(bytes) {\n        const base = this.base.balance.units;\n        const quote = this.quote.balance.units;\n        return Asset.fromUnits(this.get_input(base, quote, Int64.from(bytes)), this.quote.balance.symbol);\n    }\n    price_per_kb(kilobytes) {\n        return this.price_per(kilobytes * 1000);\n    }\n    // Derived from https://github.com/EOSIO/eosio.contracts/blob/f6578c45c83ec60826e6a1eeb9ee71de85abe976/contracts/eosio.system/src/exchange_state.cpp#L96\n    get_input(base, quote, value) {\n        // (quote * value) / (base - value), using 'ceil' to round up\n        return quote.multiplying(value).dividing(base.subtracting(value), 'ceil');\n    }\n};\nRAMState = __decorate([\n    Struct.type('ramstate')\n], RAMState);\nclass RAMAPI {\n    constructor(parent) {\n        this.parent = parent;\n    }\n    async get_state() {\n        const response = await this.parent.api.v1.chain.get_table_rows({\n            code: 'eosio',\n            scope: 'eosio',\n            table: 'rammarket',\n            type: RAMState,\n        });\n        return response.rows[0];\n    }\n}\n\nlet REXState = class REXState extends Struct {\n    get reserved() {\n        return Number(this.total_lent.units) / Number(this.total_lendable.units);\n    }\n    get symbol() {\n        return this.total_lent.symbol;\n    }\n    get precision() {\n        return this.total_lent.symbol.precision;\n    }\n    get value() {\n        const lent = intToBigDecimal(this.total_lent.units);\n        const unlent = intToBigDecimal(this.total_unlent.units);\n        const rex = intToBigDecimal(this.total_rex.units);\n        return Number(lent.add(unlent).divide(rex, 18).getValue());\n    }\n    exchange(amount) {\n        const value = intToBigDecimal(amount.units);\n        const lendable = intToBigDecimal(this.total_lendable.units);\n        const rex = intToBigDecimal(this.total_rex.units);\n        const tokens = value.multiply(lendable).divide(rex, this.precision);\n        return Asset.fromUnits(Number(tokens.getValue()), this.symbol);\n    }\n    cpu_price_per_ms(sample, ms = 1) {\n        return this.cpu_price_per_us(sample, ms * 1000);\n    }\n    cpu_price_per_us(sample, us = 1000) {\n        return this.price_per(sample, us, sample.cpu);\n    }\n    net_price_per_kb(sample, kilobytes = 1) {\n        return this.net_price_per_byte(sample, kilobytes * 1000);\n    }\n    net_price_per_byte(sample, bytes = 1000) {\n        return this.price_per(sample, bytes, sample.net);\n    }\n    price_per(sample, unit = 1000, usage = sample.cpu) {\n        // Sample token units\n        const tokens = Asset.fromUnits(10000, this.symbol);\n        // Spending 1 EOS (10000 units) on REX gives this many tokens\n        const bancor = Number(tokens.units) / (this.total_rent.value / this.total_unlent.value);\n        // The ratio of the number of tokens received vs the sampled values\n        const unitPrice = bancor * (Number(usage) / BNPrecision);\n        // The token units spent per unit\n        const perunit = Number(tokens.units) / unitPrice;\n        // Multiply the per unit cost by the units requested\n        const cost = perunit * unit;\n        // Converting to an Asset\n        return cost / Math.pow(10, this.precision);\n    }\n};\n__decorate([\n    Struct.field('uint8')\n], REXState.prototype, \"version\", void 0);\n__decorate([\n    Struct.field('asset')\n], REXState.prototype, \"total_lent\", void 0);\n__decorate([\n    Struct.field('asset')\n], REXState.prototype, \"total_unlent\", void 0);\n__decorate([\n    Struct.field('asset')\n], REXState.prototype, \"total_rent\", void 0);\n__decorate([\n    Struct.field('asset')\n], REXState.prototype, \"total_lendable\", void 0);\n__decorate([\n    Struct.field('asset')\n], REXState.prototype, \"total_rex\", void 0);\n__decorate([\n    Struct.field('asset')\n], REXState.prototype, \"namebid_proceeds\", void 0);\n__decorate([\n    Struct.field('uint64')\n], REXState.prototype, \"loan_num\", void 0);\nREXState = __decorate([\n    Struct.type('rexstate')\n], REXState);\nclass REXAPI {\n    constructor(parent) {\n        this.parent = parent;\n    }\n    async get_state() {\n        const response = await this.parent.api.v1.chain.get_table_rows({\n            code: 'eosio',\n            scope: 'eosio',\n            table: 'rexpool',\n            type: REXState,\n        });\n        return response.rows[0];\n    }\n}\n\nconst BNPrecision = new BN(100 * 1000 * 1000);\nclass Resources {\n    constructor(options) {\n        // the account to use when sampling usage\n        this.sampleAccount = 'greymassfuel';\n        // token precision/symbol\n        this.symbol = '4,EOS';\n        this.v1 = {\n            powerup: new PowerUpAPI(this),\n            ram: new RAMAPI(this),\n            rex: new REXAPI(this),\n        };\n        // Allow overriding of the sample account name\n        if (options.sampleAccount) {\n            this.sampleAccount = options.sampleAccount;\n        }\n        // Allow overriding of the system token symbol\n        if (options.symbol) {\n            this.symbol = options.symbol;\n        }\n        // Allow variations on how to specify the API configuration\n        if (options.api) {\n            this.api = options.api;\n        }\n        else if (options.url) {\n            this.api = new APIClient({ provider: new FetchProvider(options.url, options) });\n        }\n        else {\n            throw new Error('Missing url or api client');\n        }\n    }\n    async getSampledUsage() {\n        const account = await this.api.v1.chain.get_account(this.sampleAccount);\n        const us = UInt128.from(account.cpu_limit.max.value.mul(BNPrecision));\n        const byte = UInt128.from(account.net_limit.max.value.mul(BNPrecision));\n        const cpu_weight = UInt128.from(account.cpu_weight.value);\n        const net_weight = UInt128.from(account.net_weight.value);\n        return {\n            account,\n            cpu: divCeil(us.value, cpu_weight.value),\n            net: divCeil(byte.value, net_weight.value),\n        };\n    }\n}\nResources.__className = 'Resources';\nfunction divCeil(num, den) {\n    let v = num.div(den);\n    const zero = new BN(0);\n    const one = new BN(1);\n    if (num.mod(den).gt(zero) && v.gt(one)) {\n        v = v.sub(one);\n    }\n    return UInt128.from(v);\n}\nfunction intToBigDecimal(value) {\n    return new bigDecimal(String(value));\n}\n\nexport { BNPrecision, Connector, ExchangeState, PowerUpAPI, PowerUpState, RAMAPI, RAMState, REXAPI, REXState, Resources, intToBigDecimal };\n//# sourceMappingURL=wharfkit-resources.m.js.map\n","import { useState, useEffect } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { NFTAsset, AssetData } from '../services/api'\nimport MediaRenderer from './MediaRenderer'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\nimport '../css/modal.css'\nimport '../css/send-offer-modal.css'\n\ninterface SendOfferModalProps {\n  isOpen: boolean\n  onClose: () => void\n  nft: NFTAsset | null\n}\n\ninterface UserNFT {\n  asset_id: string\n  name: string\n  image: string\n  video?: string | null\n  collection: string | { name: string; collection_name: string }\n  template_mint?: number\n  max_supply?: string\n}\n\nexport default function SendOfferModal({ isOpen, onClose, nft }: SendOfferModalProps) {\n  const { session, isConnected, account } = useWallet()\n  const { settings } = useDisplaySettings()\n  const { showSuccess, showError } = useNotifications()\n  const [offerType, setOfferType] = useState<'wax' | 'nft'>('wax')\n  const [waxAmount, setWaxAmount] = useState('')\n  const [customMemo, setCustomMemo] = useState('')\n  const [userNFTs, setUserNFTs] = useState<UserNFT[]>([])\n  const [selectedNFTs, setSelectedNFTs] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [loadingInventory, setLoadingInventory] = useState(false)\n  const [isPixalHolder, setIsPixalHolder] = useState(false)\n\n  // Check if user is a Pixal PFP holder\n  useEffect(() => {\n    const checkPixalHolder = async () => {\n      if (!account) return\n      \n      try {\n        // Check if user owns any Pixal PFP NFTs\n        const response = await fetch(`https://aa.dapplica.io/atomicassets/v1/assets?owner=${account}&collection_name=pixeljourney&limit=1`)\n        const data = await response.json()\n        setIsPixalHolder(data.data && data.data.length > 0)\n      } catch (error) {\n        console.error('Error checking Pixal holder status:', error)\n      }\n    }\n\n    if (isOpen && isConnected) {\n      checkPixalHolder()\n    }\n  }, [isOpen, isConnected, account])\n\n  // Load user's NFTs for trade offers\n  useEffect(() => {\n    const loadUserNFTs = async () => {\n      if (!account || offerType !== 'nft') return\n      \n      setLoadingInventory(true)\n      try {\n        const response = await fetch(`https://aa.dapplica.io/atomicassets/v1/assets?owner=${account}&limit=100`)\n        const data = await response.json()\n        \n        const formattedNFTs: UserNFT[] = data.data?.map((asset: AssetData) => {\n          const rawImage = asset.data?.img || asset.data?.image\n          const rawVideo = asset.data?.video\n          let imageUrl = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n          let videoUrl: string | null = null\n          \n          if (rawVideo && typeof rawVideo === 'string') {\n            if (rawVideo.startsWith('http')) {\n              videoUrl = rawVideo\n            } else {\n              videoUrl = `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${rawVideo}`\n            }\n          }\n          \n          if (rawImage && typeof rawImage === 'string') {\n            if (rawImage.startsWith('http')) {\n              imageUrl = rawImage\n            } else {\n              // Handle IPFS hash\n              imageUrl = `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${rawImage}`\n            }\n          }\n          \n          return {\n            asset_id: asset.asset_id || '',\n            name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id || 'N/A'}`,\n            image: imageUrl,\n            video: videoUrl,\n            collection: asset.collection?.collection_name || 'Unknown',\n            template_mint: undefined,\n            max_supply: asset.template?.max_supply || undefined\n          }\n        }) || []\n        \n        setUserNFTs(formattedNFTs)\n      } catch (error) {\n        console.error('Error loading user NFTs:', error)\n      } finally {\n        setLoadingInventory(false)\n      }\n    }\n\n    if (isOpen && offerType === 'nft') {\n      loadUserNFTs()\n    }\n  }, [isOpen, offerType, account])\n\n  const handleNFTSelection = (assetId: string) => {\n    setSelectedNFTs(prev => \n      prev.includes(assetId) \n        ? prev.filter(id => id !== assetId)\n        : [...prev, assetId]\n    )\n  }\n\n  const handleSendWaxOffer = async () => {\n    if (!account || !nft || !waxAmount || !session) return\n    \n    setIsLoading(true)\n    try {\n      const memo = customMemo || (isPixalHolder ? 'Trade Offer sent via PxMarket - market.pixeljourney.xyz' : 'Trade Offer sent via PxMarket - market.pixeljourney.xyz')\n      \n      // Create WAX buy offer transaction\n      const actions = [\n        {\n          account: 'eosio.token',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'atomicmarket',\n            quantity: `${parseFloat(waxAmount).toFixed(8)} WAX`,\n            memo: 'deposit'\n          }\n        },\n        {\n          account: 'atomicmarket',\n          name: 'createbuyo',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            buyer: account,\n            recipient: nft.owner || nft.seller,\n            price: `${parseFloat(waxAmount).toFixed(8)} WAX`,\n            asset_ids: [nft.asset_id],\n            memo: memo,\n            maker_marketplace: 'market.pxj'\n          }\n        }\n      ]\n\n      // Execute transaction through wallet\n      await session.transact({ actions })\n\n      showSuccess('WAX offer sent successfully!')\n      onClose()\n    } catch (error) {\n      console.error('Error sending WAX offer:', error)\n      showError('Failed to send WAX offer. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleSendNFTOffer = async () => {\n    if (!account || !nft || selectedNFTs.length === 0 || !session) return\n    \n    setIsLoading(true)\n    try {\n      const memo = customMemo || (isPixalHolder ? 'NFT Trade Offer sent via PxMarket - market.pixeljourney.xyz' : 'NFT Trade Offer sent via PxMarket - market.pixeljourney.xyz')\n      \n      // Create NFT trade offer transaction\n      const actions = [{\n        account: 'atomicassets',\n        name: 'createoffer',\n        authorization: [{\n          actor: account,\n          permission: 'active'\n        }],\n        data: {\n          sender: account,\n          recipient: nft.owner || nft.seller,\n          sender_asset_ids: selectedNFTs,\n          recipient_asset_ids: [nft.asset_id],\n          memo: memo\n        }\n      }]\n\n      // Execute transaction through wallet\n      await session.transact({ actions })\n\n      showSuccess('NFT trade offer sent successfully!')\n      onClose()\n    } catch (error) {\n      console.error('Error sending NFT offer:', error)\n      showError('Failed to send NFT offer. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleSubmit = () => {\n    if (offerType === 'wax') {\n      handleSendWaxOffer()\n    } else {\n      handleSendNFTOffer()\n    }\n  }\n\n  if (!isOpen || !nft) return null\n\n  return (\n    <div className=\"modal-backdrop\" onClick={onClose}>\n      <div className=\"modal-content send-offer-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Send Offer for {nft.name}</h3>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          {/* NFT Preview */}\n          <div className=\"target-nft-preview\">\n            <MediaRenderer\n               imageUrl={nft.image}\n               alt={nft.name}\n               enableAnimations={settings.enableAnimatedNFTs}\n             />\n            <div className=\"nft-info\">\n              <h4>{nft.name}</h4>\n              <p>Collection: {typeof nft.collection === 'string' ? nft.collection : (nft.collection as { collection_name?: string; name?: string })?.collection_name || (nft.collection as { name?: string })?.name || 'Unknown'}</p>\n              {nft.price && <p>Listed Price: {nft.price} WAX</p>}\n            </div>\n          </div>\n\n          {/* Offer Type Selection */}\n          <div className=\"offer-type-selection\">\n            <h4>Choose Offer Type</h4>\n            <div className=\"offer-type-buttons\">\n              <button \n                className={`offer-type-btn ${offerType === 'wax' ? 'active' : ''}`}\n                onClick={() => setOfferType('wax')}\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <path d=\"M12 6v6l4 2\"></path>\n                </svg>\n                WAX Offer\n              </button>\n              <button \n                className={`offer-type-btn ${offerType === 'nft' ? 'active' : ''}`}\n                onClick={() => setOfferType('nft')}\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                  <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"></circle>\n                  <polyline points=\"21,15 16,10 5,21\"></polyline>\n                </svg>\n                NFT Trade\n              </button>\n            </div>\n          </div>\n\n          {/* WAX Offer Form */}\n          {offerType === 'wax' && (\n            <div className=\"wax-offer-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"waxAmount\">WAX Amount</label>\n                <input\n                  id=\"waxAmount\"\n                  type=\"number\"\n                  step=\"0.0001\"\n                  min=\"0\"\n                  value={waxAmount}\n                  onChange={(e) => setWaxAmount(e.target.value)}\n                  placeholder=\"Enter WAX amount\"\n                  className=\"form-input\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* NFT Trade Form */}\n          {offerType === 'nft' && (\n            <div className=\"nft-trade-form\">\n              <h4>Select NFTs to Trade</h4>\n              {loadingInventory ? (\n                <div className=\"loading-inventory\">\n                  <div className=\"spinner\"></div>\n                  <p>Loading your NFTs...</p>\n                </div>\n              ) : (\n                <div className=\"user-nfts-grid\">\n                  {userNFTs.map((userNft) => (\n                    <div \n                      key={userNft.asset_id}\n                      className={`user-nft-item ${selectedNFTs.includes(userNft.asset_id) ? 'selected' : ''}`}\n                      onClick={() => handleNFTSelection(userNft.asset_id)}\n                    >\n                      <MediaRenderer\n                         imageUrl={userNft.image}\n                         videoUrl={userNft.video}\n                         alt={userNft.name}\n                         enableAnimations={settings.enableAnimatedNFTs}\n                       />\n                      <div className=\"nft-details\">\n                        <p className=\"nft-name\">{userNft.name}</p>\n                        <p className=\"nft-collection\">{typeof userNft.collection === 'string' ? userNft.collection : userNft.collection?.collection_name || userNft.collection?.name || 'Unknown'}</p>\n                      </div>\n                      {selectedNFTs.includes(userNft.asset_id) && (\n                        <div className=\"selection-indicator\">\n                          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                            <polyline points=\"20,6 9,17 4,12\"></polyline>\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Custom Memo (for Pixal holders) */}\n          {isPixalHolder && (\n            <div className=\"custom-memo-section\">\n              <div className=\"pixal-holder-badge\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <polygon points=\"12,2 15.09,8.26 22,9 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9 8.91,8.26\"></polygon>\n                </svg>\n                Pixal PFP Holder\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"customMemo\">Custom Memo (Optional)</label>\n                <textarea\n                  id=\"customMemo\"\n                  value={customMemo}\n                  onChange={(e) => setCustomMemo(e.target.value)}\n                  placeholder=\"Add a custom message to your offer...\"\n                  className=\"form-textarea\"\n                  rows={3}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-footer\">\n          <button className=\"btn-secondary\" onClick={onClose}>\n            Cancel\n          </button>\n          <button \n            className=\"btn-primary\"\n            onClick={handleSubmit}\n            disabled={isLoading || !isConnected || \n              (offerType === 'wax' && !waxAmount) || \n              (offerType === 'nft' && selectedNFTs.length === 0)\n            }\n          >\n            {isLoading ? (\n              <>\n                <div className=\"spinner-small\"></div>\n                Sending...\n              </>\n            ) : (\n              `Send ${offerType === 'wax' ? 'WAX' : 'NFT'} Offer`\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}","/**\n * HTML sanitization utilities to prevent XSS attacks\n */\n\n// Allowed HTML tags for safe rendering\nconst ALLOWED_TAGS = ['strong', 'em', 'b', 'i', 'u', 'br', 'p', 'span'];\n\n// Allowed attributes for HTML tags\nconst ALLOWED_ATTRIBUTES: Record<string, string[]> = {\n  'span': ['class'],\n  'p': ['class'],\n};\n\n/**\n * Sanitizes HTML content by removing potentially dangerous elements and attributes\n * @param html - The HTML string to sanitize\n * @returns Sanitized HTML string\n */\nexport function sanitizeHtml(html: string): string {\n  // Create a temporary DOM element to parse the HTML\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = html;\n\n  // Recursively sanitize all elements\n  sanitizeElement(tempDiv);\n\n  return tempDiv.innerHTML;\n}\n\n/**\n * Recursively sanitizes a DOM element and its children\n * @param element - The DOM element to sanitize\n */\nfunction sanitizeElement(element: Element): void {\n  const children = Array.from(element.children);\n  \n  for (const child of children) {\n    const tagName = child.tagName.toLowerCase();\n    \n    // Remove disallowed tags\n    if (!ALLOWED_TAGS.includes(tagName)) {\n      // Replace with text content to preserve the content but remove the tag\n      const textNode = document.createTextNode(child.textContent || '');\n      child.parentNode?.replaceChild(textNode, child);\n      continue;\n    }\n    \n    // Remove disallowed attributes\n    const allowedAttrs = ALLOWED_ATTRIBUTES[tagName] || [];\n    const attributes = Array.from(child.attributes);\n    \n    for (const attr of attributes) {\n      if (!allowedAttrs.includes(attr.name)) {\n        child.removeAttribute(attr.name);\n      }\n    }\n    \n    // Recursively sanitize children\n    sanitizeElement(child);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS\n * @param text - The text to escape\n * @returns Escaped text\n */\nexport function escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Safely formats markdown-like text with basic formatting\n * @param content - The content to format\n * @returns Sanitized HTML string\n */\nexport function formatSafeMarkdown(content: string): string {\n  // First escape any existing HTML\n  const escaped = escapeHtml(content);\n  \n  // Apply basic markdown formatting\n  const formatted = escaped\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') // Bold\n    .replace(/\\*(.*?)\\*/g, '<em>$1</em>') // Italic\n    .replace(/\\n/g, '<br>'); // Line breaks\n  \n  // Sanitize the result\n  return sanitizeHtml(formatted);\n}","// IPFS utility functions for consistent URL handling across the app\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\n/**\n * Convert various IPFS URL formats to a standardized format\n * @param imageUrl - The image URL or hash\n * @returns Standardized IPFS URL\n */\nexport function normalizeIPFSUrl(imageUrl: string | undefined | null): string {\n  if (!imageUrl) {\n    return ''\n  }\n\n  // If it's already a full HTTP URL, return as-is\n  if (imageUrl.startsWith('http://') || imageUrl.startsWith('https://')) {\n    return imageUrl\n  }\n\n  // If it's a data URL or blob URL, return as-is\n  if (imageUrl.startsWith('data:') || imageUrl.startsWith('blob:')) {\n    return imageUrl\n  }\n\n  // Handle ipfs:// protocol\n  if (imageUrl.startsWith('ipfs://')) {\n    const hash = imageUrl.replace('ipfs://', '')\n    return getIPFSGatewayUrl(hash)\n  }\n\n  // Handle /ipfs/ path\n  if (imageUrl.includes('/ipfs/')) {\n    const hash = imageUrl.split('/ipfs/')[1]\n    return getIPFSGatewayUrl(hash)\n  }\n\n  // If it looks like an IPFS hash (starts with Qm and is long enough)\n  if (imageUrl.startsWith('Qm') && imageUrl.length > 40) {\n    return getIPFSGatewayUrl(imageUrl)\n  }\n\n  // If it's just a hash without protocol, assume it's IPFS\n  if (imageUrl.length > 40 && /^[a-zA-Z0-9]+$/.test(imageUrl)) {\n    return getIPFSGatewayUrl(imageUrl)\n  }\n\n  // Default: assume it's a relative path and use IPFS gateway\n  return getIPFSGatewayUrl(imageUrl)\n}\n\n/**\n * Get a random IPFS gateway URL for load balancing\n * @param hash - The IPFS hash\n * @returns Full IPFS gateway URL\n */\nexport function getIPFSGatewayUrl(hash: string): string {\n  const gateways = API_ENDPOINTS.IPFS.GATEWAYS\n  const randomGateway = gateways[Math.floor(Math.random() * gateways.length)]\n  \n  // Clean the hash (remove any leading slashes or ipfs/ prefix)\n  const cleanHash = hash.replace(/^\\/?(ipfs\\/)?/, '')\n  \n  return `${randomGateway}${cleanHash}`\n}\n\n/**\n * Check if a URL is an IPFS URL\n * @param url - The URL to check\n * @returns True if it's an IPFS URL\n */\nexport function isIPFSUrl(url: string | undefined | null): boolean {\n  if (!url) return false\n  \n  return (\n    url.includes('/ipfs/') ||\n    url.startsWith('ipfs://') ||\n    url.includes('gateway.pinata.cloud') ||\n    url.includes('ipfs.io') ||\n    url.includes('dweb.link')\n  )\n}\n\n/**\n * Extract IPFS hash from various URL formats\n * @param url - The URL containing an IPFS hash\n * @returns The extracted hash or null if not found\n */\nexport function extractIPFSHash(url: string): string | null {\n  if (!url) return null\n\n  // Handle ipfs:// protocol\n  if (url.startsWith('ipfs://')) {\n    return url.replace('ipfs://', '')\n  }\n\n  // Handle /ipfs/ in URL\n  const ipfsMatch = url.match(/\\/ipfs\\/([a-zA-Z0-9]+)/)\n  if (ipfsMatch) {\n    return ipfsMatch[1]\n  }\n\n  // If it looks like a hash itself\n  if (url.startsWith('Qm') && url.length > 40) {\n    return url\n  }\n\n  return null\n}\n\n/**\n * Get fallback image URL for failed IPFS loads\n * @returns Fallback image URL\n */\nexport function getFallbackImageUrl(): string {\n  // Use a reliable fallback image from IPFS\n  return 'https://ipfs.io/ipfs/QmQKA9fxWBAsoDnMRZj1v1vsjwZeWZpHmnoEyujmeMi2rp'\n}\n\n/**\n * Create an image element with IPFS fallback handling\n * @param src - The image source URL\n * @param onLoad - Callback when image loads successfully\n * @param onError - Callback when image fails to load\n * @returns HTMLImageElement with fallback handling\n */\nexport function createImageWithFallback(\n  src: string,\n  onLoad?: (event: Event) => void,\n  onError?: (event: Event) => void\n): HTMLImageElement {\n  const img = new Image()\n  \n  let hasTriedFallback = false\n  \n  img.onerror = (event) => {\n    if (!hasTriedFallback && isIPFSUrl(src)) {\n      hasTriedFallback = true\n      // Try with a different gateway\n      const hash = extractIPFSHash(src)\n      if (hash) {\n        img.src = getIPFSGatewayUrl(hash)\n        return\n      }\n    }\n    \n    // If all else fails, use fallback image\n    if (!hasTriedFallback) {\n      hasTriedFallback = true\n      img.src = getFallbackImageUrl()\n      return\n    }\n    \n    // Call the original error handler\n    if (onError) {\n      onError(event as Event)\n    }\n  }\n  \n  img.onload = onLoad || null\n  img.src = normalizeIPFSUrl(src)\n  \n  return img\n}\n\n/**\n * Preload an IPFS image with fallback handling\n * @param src - The image source URL\n * @returns Promise that resolves with the working URL\n */\nexport function preloadIPFSImage(src: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const img = createImageWithFallback(\n      src,\n      () => resolve(img.src),\n      () => reject(new Error(`Failed to load image: ${src}`))\n    )\n  })\n}","// Collection tier configuration\n// This maps collection names to their tier status and associated benefits\n//\n// INSTRUCTIONS FOR COLLECTION OWNERS:\n// ===================================\n//\n// To customize your collection page on PxMarket, follow these steps:\n//\n// 1. CONTACT US FIRST:\n//    - Reach out to the PxMarket team via Discord or email\n//    - Provide your collection name and desired tier level\n//    - Discuss available customization options based on your tier\n//\n// 2. TIER LEVELS & BENEFITS:\n//    - Bronze (5M PXJ): Basic verification badge, community access\n//    - Silver (15M PXJ): Priority placement, custom banner, analytics\n//    - Gold (30M PXJ): Homepage carousel, social media promotion\n//    - Partner: Co-marketing opportunities, revenue sharing\n//    - Platinum: Full customization, premium placement\n//\n// 3. CUSTOMIZATION OPTIONS:\n//    - ownerMessage: Personal message from collection owner (all tiers)\n//    - quickLinks: Custom links to your website, Discord, social media (Silver+)\n//    - learnAboutGrid: Educational content grid about your project (Gold+)\n//    - discordUrl: Direct Discord community link (all tiers)\n//\n// 4. EXAMPLE CONFIGURATION:\n//    'yourcollection': {\n//      tier: 'silver',\n//      verified: true,\n//      quickLinks: [\n//        { label: 'Website', url: 'https://yoursite.com', icon: '🌐' },\n//        { label: 'Discord', url: 'https://discord.gg/yourserver', icon: '💬' }\n//      ],\n//      benefits: ['Priority placement', 'Custom banner', 'Analytics access'],\n//      ownerMessage: 'Welcome to our collection! Join our community...',\n//      discordUrl: 'https://discord.gg/yourserver'\n//    }\n//\n// 5. LEARN ABOUT GRID (Gold+ tiers):\n//    Add educational content about your project:\n//    learnAboutGrid: [\n//      {\n//        title: 'Your Feature',\n//        description: 'Explain what makes your project unique...',\n//        icon: '🎮', // Use emoji icons\n//        url: 'https://docs.yourproject.com' // Optional link\n//      }\n//    ]\n//\n// 6. SUBMISSION PROCESS:\n//    - Prepare your content following the format above\n//    - Submit via our collection owner portal or Discord\n//    - Our team will review and implement your customizations\n//    - Changes typically go live within 24-48 hours\n//\n// 7. CONTENT GUIDELINES:\n//    - Keep messages professional and community-friendly\n//    - Ensure all URLs are valid and secure (HTTPS)\n//    - Icons should be single emoji characters\n//    - Descriptions should be concise but informative\n//    - All content subject to moderation review\n//\n// For questions or to get started, contact us:\n// - Discord: https://discord.gg/pxmarket\n// - Email: collections@pxmarket.io\n// - Documentation: https://docs.pxmarket.io/collection-customization\n\nexport interface CollectionTier {\n  tier: 'platinum' | 'partner' | 'gold' | 'silver' | 'bronze'\n  verified: boolean\n  quickLinks?: {\n    label: string\n    url: string\n    icon?: string\n  }[]\n  benefits: string[]\n  ownerMessage?: string\n  discordUrl?: string\n  learnAboutGrid?: {\n    title: string\n    description: string\n    icon: string\n    url?: string\n  }[]\n}\n\nexport const COLLECTION_TIERS: Record<string, CollectionTier> = {\n  'pixeljourney': {\n    tier: 'platinum',\n    verified: true,\n    quickLinks: [\n      { label: 'Main Website', url: 'https://pixeljourney.xyz', icon: '🌐' },\n      { label: 'Discord', url: 'http://discord.gg/pixel-journey-1130670500776005734', icon: '💬' },\n      { label: 'X/Twitter', url: 'https://x.com/PXJourney', icon: '🐦' },\n      { label: 'Whitepaper', url: 'https://docs.pixeljourney.xyz', icon: '📄' }\n    ],\n    benefits: [\n      'Premium marketplace placement',\n      'Exclusive promotional campaigns',\n      'Priority customer support',\n      'Advanced analytics dashboard',\n      'Custom branding options'\n    ],\n    ownerMessage: 'Welcome to Pixel Journey! Join our community of adventurers exploring the digital realm. Connect with fellow travelers, learn about all the things and discover exclusive content.',\n    discordUrl: 'http://discord.gg/pixel-journey-1130670500776005734',\n    learnAboutGrid: [\n      {\n        title: 'PXJ Token',\n        description: 'Learn about our native utility token, its use cases, and how it powers the Pixel Journey ecosystem.',\n        icon: '🪙',\n        url: 'https://docs.pixeljourney.xyz/season-1/kickstarting-the-pxj-economy'\n      },\n      {\n        title: 'NFT Collections',\n        description: 'Discover our diverse range of NFT collectibles, from Pixal PFPs to Pixel Ingredients and special editions.',\n        icon: '🎨',\n        url: 'https://docs.pixeljourney.xyz/season-1/the-pixal-pfps'\n      },\n      {\n        title: 'Leaderboards',\n        description: 'Explore the PXJourney mechanics, quests, and adventures awaiting in Pixel Journey.',\n        icon: '🎮',\n        url: 'https://lb.pixeljourney.xyz/'\n      },\n      {\n        title: 'Staking & Rewards',\n        description: 'Understand how to stake your NFTs and tokens to earn rewards and participate in governance.',\n        icon: '💎',\n        url: 'https://pixeljourney.xyz/staking'\n      },\n      {\n        title: 'Roadmap',\n        description: 'Check out our development roadmap and upcoming features planned for the ecosystem.',\n        icon: '🗺️',\n        url: '/journeymap'\n      },\n      {\n        title: 'Community',\n        description: 'Join our vibrant community of adventurers, participate in events, and connect with fellow travelers.',\n        icon: '👥',\n        url: 'http://discord.gg/pixel-journey-1130670500776005734'\n      }\n    ]\n  },\n  'friedfactory': {\n    tier: 'partner',\n    verified: true,\n    quickLinks: [\n      { label: 'Artist Portfolio', url: 'https://friedfactory.art', icon: '🎨' },\n      { label: 'Discord', url: 'https://discord.gg/friedfactory', icon: '💬' },\n      { label: 'Twitter', url: 'https://twitter.com/friedfactory', icon: '🐦' }\n    ],\n    benefits: [\n      'Co-marketing opportunities',\n      'Revenue sharing programs',\n      'Joint event hosting',\n      'Cross-promotion support'\n    ]\n  },\n  'crptomuffins': {\n    tier: 'gold',\n    verified: true,\n    quickLinks: [\n      { label: 'Collection Info', url: '#', icon: 'ℹ️' },\n      { label: 'Discord', url: '#', icon: '💬' }\n    ],\n    benefits: [\n      'Homepage featured carousel',\n      'Social media promotion',\n      'Exclusive events participation',\n      'Direct community manager contact'\n    ]\n  },\n  'akufishheads': {\n    tier: 'silver',\n    verified: true,\n    quickLinks: [\n      { label: 'Collection Info', url: '#', icon: 'ℹ️' }\n    ],\n    benefits: [\n      'Priority marketplace placement',\n      'Weekly newsletter mentions',\n      'Custom collection banner',\n      'Analytics dashboard access'\n    ]\n  },\n  'pantheon': {\n    tier: 'bronze',\n    verified: true,\n    benefits: [\n      'Basic marketplace listing',\n      'Collection verification badge',\n      'Community Discord access',\n      'Monthly featured spot rotation'\n    ]\n  },\n  'pocketsizedp': {\n    tier: 'partner',\n    verified: true,\n    quickLinks: [\n      { label: 'Collection Info', url: '#', icon: 'ℹ️' }\n    ],\n    benefits: [\n      'Co-marketing opportunities',\n      'Revenue sharing programs',\n      'Joint event hosting',\n      'Cross-promotion support'\n    ]\n  },\n  'nimasodyssey': {\n    tier: 'partner',\n    verified: true,\n    benefits: [\n      'Co-marketing opportunities',\n      'Revenue sharing programs',\n      'Joint event hosting',\n      'Cross-promotion support'\n    ]\n  }\n}\n\n/**\n * Get tier information for a collection\n */\nexport function getCollectionTier(collectionName: string): CollectionTier | null {\n  return COLLECTION_TIERS[collectionName] || null\n}\n\n/**\n * Check if a collection has a specific tier or higher\n */\nexport function hasMinimumTier(collectionName: string, minimumTier: CollectionTier['tier']): boolean {\n  const tierHierarchy: Record<CollectionTier['tier'], number> = {\n    'bronze': 1,\n    'silver': 2,\n    'gold': 3,\n    'partner': 4,\n    'platinum': 5\n  }\n  \n  const collectionTier = getCollectionTier(collectionName)\n  if (!collectionTier) return false\n  \n  return tierHierarchy[collectionTier.tier] >= tierHierarchy[minimumTier]\n}\n\n/**\n * Get tier badge configuration\n */\nexport function getTierBadgeConfig(tier: CollectionTier['tier']) {\n  const configs = {\n    'platinum': {\n      icon: '💎',\n      label: 'Platinum',\n      className: 'tier-platinum',\n      color: '#e5e4e2'\n    },\n    'partner': {\n      icon: '🤝',\n      label: 'Partner',\n      className: 'tier-partner',\n      color: '#667eea'\n    },\n    'gold': {\n      icon: '🥇',\n      label: 'Gold',\n      className: 'tier-gold',\n      color: '#ffd700'\n    },\n    'silver': {\n      icon: '🥈',\n      label: 'Silver',\n      className: 'tier-silver',\n      color: '#c0c0c0'\n    },\n    'bronze': {\n      icon: '🥉',\n      label: 'Bronze',\n      className: 'tier-bronze',\n      color: '#cd7f32'\n    }\n  }\n  \n  return configs[tier]\n}","// WAX Powerup Functions - Based on WAXDao implementation\n// Handles powerup calculations and transactions for WAX blockchain\n\nimport { log } from './services/loggingService';\n\n// Fallback values\nconst currentUsername = 'promo.pxj';\nconst defaultSpinnerDuration = 3000;\nconst defaultTxSettings = {};\nconst PROCESSING_TX_TEXT = 'Processing transaction...';\n\nconst POWERUP_FRAC = 1_000_000_000_000_000;\nconst virtual_network_capacity_in_window = 172800;\n\n/**\n * Calculate amount from fraction and state\n */\nexport function calculateAmount(frac, state) {\n  if (!frac) return 0;\n  return frac * parseFloat(state.weight) / POWERUP_FRAC;\n}\n\n/**\n * Calculate powerup fee based on state and utilization increase\n */\nexport function calcPowerupFee(state, utilizationIncrease) {\n  if (utilizationIncrease <= 0) return 0;\n  \n  const max_price = parseFloat(state.max_price.split(' ')[0]);\n  const min_price = parseFloat(state.min_price.split(' ')[0]);\n\n  const priceIntegralDelta = (startUtilization, endUtilization) => {\n      const coefficient = (max_price - min_price) / parseFloat(state.exponent);\n      const startU = startUtilization / parseFloat(state.weight);\n      const endU = endUtilization / parseFloat(state.weight);\n      const delta = min_price * endU - min_price * startU +\n                    coefficient * (Math.pow(endU, parseFloat(state.exponent)) - Math.pow(startU, parseFloat(state.exponent)));\n      return delta;\n    };\n    \n\n  const priceFunction = (utilization) => {\n    let price = min_price;\n    const newExponent = state.exponent - 1.0;\n    if (newExponent <= 0.0) {\n      return max_price;\n    } else {\n      price += (max_price - min_price) * Math.pow(parseFloat(utilization) / state.weight, newExponent);\n    }\n    return price;\n  };\n\n  let fee = 0.0;\n  let startUtilization = parseFloat(state.utilization);\n  let endUtilization = parseFloat(startUtilization) + parseFloat(utilizationIncrease);\n\n  if (startUtilization < parseFloat(state.adjusted_utilization)) {\n    fee += priceFunction(parseFloat(state.adjusted_utilization)) *\n           Math.min(parseFloat(utilizationIncrease), parseFloat(state.adjusted_utilization) - parseFloat(startUtilization)) / parseFloat(state.weight);\n    startUtilization = parseFloat(state.adjusted_utilization);\n  }\n\n  if (startUtilization < endUtilization) {\n    fee += priceIntegralDelta(startUtilization, endUtilization);\n  }\n  \n  const min_fee = 0.00000001;\n  const threshold = 1e-8;\n  \n  if (fee < threshold) {\n      if (fee < min_fee) {\n          return min_fee.toFixed(8);\n      } else {\n          return fee.toPrecision(1).replace(/e-9/, '0.00000000');\n      }\n  } else {\n      return fee.toFixed(8);\n  }\n}\n\nexport const cpu_frac_to_submit = 100000000000;\nexport const net_frac_to_submit = 2000000000;\n\n/**\n * Calculate the fraction for CPU powerup\n */\nexport const waxToCpuFrac = (amount, cpuAllocation) => {\n  if (!amount || cpuAllocation === undefined) {\n    return 0;\n  }\n  \n  const cpuFraction = cpuAllocation / 100;\n  return cpuFraction * cpu_frac_to_submit;\n};\n\n/**\n * Calculate the fraction for NET powerup\n */\nexport const waxToNetFrac = (amount, cpuAllocation) => {\n  if (!amount || cpuAllocation === undefined) {\n    return 0;\n  }\n  \n  const netFraction = (100 - cpuAllocation) / 100;\n  return netFraction * net_frac_to_submit;\n};\n\n/**\n * Predict resource amounts based on fractions and states\n */\nexport function predictResourceAmounts(cpuFrac, netFrac, cpuState, netState) {\n  const cpuAmount = calculateAmount(cpuFrac, cpuState);\n  const netAmount = calculateAmount(netFrac, netState);\n\n  const cpuFee = calcPowerupFee(cpuState, cpuAmount);\n  const netFee = calcPowerupFee(netState, netAmount);\n\n  return {\n    cpuAmount,\n    netAmount,\n    cpuFee,\n    netFee\n  };\n}\n\n/**\n * Calculate NET resources with proper formatting\n */\nexport const netCalc = (netAmount, chainInfo) => {\n  if (!netAmount || netAmount <= 0) {\n    return '0 bytes';\n  }\n  \n  // Convert to appropriate units\n  if (netAmount >= 1024 * 1024) {\n    return `${(netAmount / (1024 * 1024)).toFixed(2)} MB`;\n  } else if (netAmount >= 1024) {\n    return `${(netAmount / 1024).toFixed(2)} KB`;\n  } else {\n    return `${netAmount} bytes`;\n  }\n};\n\n/**\n * Estimate CPU with elastic limit considerations\n */\nexport const estimateCpuWithElasticLimit = (cpuFrac, netFrac, cpuState, netState, chainInfo) => {\n  if(chainInfo && chainInfo.virtual_block_cpu_limit && chainInfo.block_cpu_limit){\n      let base_limit = parseFloat(chainInfo.block_cpu_limit);\n      let current_limit = parseFloat(chainInfo.virtual_block_cpu_limit);\n      let elastic_multiplier = current_limit / base_limit;\n      \n      const predicted = predictResourceAmounts(cpuFrac, netFrac, cpuState, netState);\n      const cpuMicroseconds = predicted.cpuAmount * elastic_multiplier;\n      \n      if (!cpuMicroseconds || cpuMicroseconds <= 0) {\n        return '0 ms';\n      }\n      \n      // Convert microseconds to milliseconds\n      const cpuMs = cpuMicroseconds / 1000;\n      \n      if (cpuMs >= 1000) {\n        return `${(cpuMs / 1000).toFixed(2)} seconds`;\n      } else {\n        return `${cpuMs.toFixed(2)} ms`;\n      }\n  }\n  return '0 ms';\n};\n\n/**\n * Submit powerup transaction to WAX blockchain - WAXDao implementation\n */\nexport const submitPowerupTx = async (\n  setRefresh,\n  accountToBoost,\n  maxPayment,\n  cpu_frac,\n  net_frac,\n  setShowTxModal,\n  setTxModalText,\n  setTxIsLoading,\n  wharfSession\n) => {\n  setShowTxModal(true);\n  setTxModalText(\"Awaiting confirmation...\");\n\n    if(localStorage.getItem(\"wharf--session\") == null){\n      setTxModalText(\n            \"You are not logged in. Click the wallet icon in the top menu\"\n            );\n            return;       \n    }\n\n    const session = wharfSession;\n    \n    let max_payment = `${Number(maxPayment).toFixed(8)} WAX`;\n\n    const action = [\n      {\n        account: \"waxdao\",\n        name: \"powerup\",\n        authorization: [session.permissionLevel],\n        data: {\n        },\n      },       \n      {\n        account: \"eosio\",\n        name: \"powerup\",\n        authorization: [session.permissionLevel],\n        data: {\n          payer: session.actor,\n          receiver: accountToBoost,\n          days: 1,\n          net_frac: parseFloat(net_frac).toFixed(0),\n          cpu_frac: parseFloat(cpu_frac).toFixed(0),\n          max_payment: max_payment\n        },\n      },\n    ];\n    \n    try {\n      const result = await session.transact({ actions: action }, defaultTxSettings);\n      setTxIsLoading(true);\n      setTxModalText(PROCESSING_TX_TEXT);\n      const timer = setTimeout(() => {\n        setTxModalText(`${accountToBoost} has been boosted with ${max_payment}`);\n        setRefresh((prev) => !prev);\n        setTxIsLoading(false);\n      }, defaultSpinnerDuration);\n      return () => clearTimeout(timer);\n    } catch (e) {\n      log.error('Powerup transaction error:', e);\n      setTxModalText(e.message);\n    }  \n\n};","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom'\nimport Navigation from './components/Navigation'\nimport LandingPage from './components/LandingPage'\nimport Marketplace from './components/Marketplace'\nimport Rewards from './components/Rewards'\nimport Inventory from './components/Inventory'\nimport Collections from './components/Collections'\nimport CollectionDetail from './components/CollectionDetail'\nimport TemplateDetail from './components/TemplateDetail'\nimport AssetDetail from './components/AssetDetail'\nimport ListingDetail from './components/ListingDetail'\nimport TransactionDetails from './components/TransactionDetails'\nimport UserProfile from './components/UserProfile'\nimport UserProfileLookup from './components/UserProfileLookup'\nimport Packs from './components/Packs'\n\nimport Watchlist from './components/Watchlist'\nimport Footer from './components/Footer'\n\nimport ActivityStats from './components/ActivityStats'\nimport Auctions from './components/Auctions'\nimport AuctionDetail from './components/AuctionDetail'\nimport Learn from './components/Learn'\nimport JourneyMap from './components/JourneyMap'\nimport Staking from './components/Staking'\nimport RWax from './components/RWax'\nimport PxCrafting from './components/PxCrafting'\nimport PxSwap from './components/PxSwap'\nimport { WalletProvider } from './contexts/WalletContext'\nimport { DisplaySettingsProvider } from './contexts/DisplaySettingsContext'\nimport { NotificationProvider } from './contexts/NotificationContext'\nimport { TokenBalanceProvider } from './contexts/TokenBalanceContext'\nimport { monitoringService } from './services/monitoringService'\nimport { pushNotificationService } from './services/pushNotificationService'\nimport { accessibilityService } from './services/accessibilityService'\nimport { MarketplaceConfigService } from './config/marketplaceConfig';\nimport { log } from './services/loggingService';\nimport PriceAlertManager from './components/PriceAlertNotification'\nimport NotificationContainer from './components/NotificationContainer'\nimport ConfirmDialog from './components/ConfirmDialog'\nimport ErrorBoundary from './components/ErrorBoundary'\nimport APIErrorBoundary from './components/APIErrorBoundary'\nimport ChatWidget from './components/ChatWidget'\nimport WatchlistAlertChecker from './components/WatchlistAlertChecker'\nimport PWAInstallBanner from './components/PWAInstallBanner'\nimport OfflineIndicator from './components/OfflineIndicator'\nimport TransactionNotifications from './components/TransactionNotifications'\nimport './App.css'\nimport './css/rewards.css'\nimport './css/footer.css'\nimport './css/inventory-page.css'\nimport './css/coming-soon.css'\nimport './css/collections.css'\nimport './css/activity-stats.css'\nimport './css/collection-detail.css'\nimport './css/template-detail.css'\nimport './css/asset-detail.css'\nimport './css/listing-detail.css'\nimport './css/user-profile.css'\n\nimport './css/watchlist.css'\nimport './css/collection-analytics.css'\nimport './css/price-alert-notification.css'\nimport './css/auctions.css'\nimport './css/learn.css'\nimport './css/journeymap.css'\nimport './css/rwax.css'\nimport './css/tokenizeInventoryModal.css'\nimport './css/assetDetailModal.css'\nimport './css/pxbadges.css'\nimport './css/pwa-install-banner.css'\nimport './css/offline-indicator.css'\nimport './css/pxcrafting.css'\nimport './css/wharfkit-custom.css'\nimport './css/enhanced-variables.css'\nimport './css/enhanced-utilities.css'\n\n// Component to handle navigation state based on current route\nconst AppContent = () => {\n  const location = useLocation()\n  const [currentPage, setCurrentPage] = useState('landing')\n  \n  // Navigation state tracking for route changes\n\n  // Update current page based on route - first one should remain /landing and not just landing\n  React.useEffect(() => {\n    const path = location.pathname\n    if (path === '' || path === '/' || path === '/market-alphatest/' || path === '/market-alphatest') {\n      setCurrentPage('/landing')\n    } else if (path === '/marketplace' || path === '/market-alphatest/marketplace') {\n      setCurrentPage('marketplace')\n    } else if (path === '/rewards') {\n      setCurrentPage('rewards')\n    } else if (path === '/inventory') {\n      setCurrentPage('inventory')\n    } else if (path === '/packs') {\n      setCurrentPage('packs')\n    } else if (path.startsWith('/collections')) {\n      setCurrentPage('collections')\n    } else if (path === '/activity' || path === '/stats') {\n      setCurrentPage('activity')\n    } else if (path === '/staking') {\n      setCurrentPage('staking')\n    } else if (path === '/profile') {\n      setCurrentPage('profile')\n    } else if (path === '/watchlist') {\n      setCurrentPage('watchlist')\n    } else if (path === '/auctions') {\n      setCurrentPage('auctions')\n    } else if (path === '/learn') {\n      setCurrentPage('learn')\n    } else if (path === '/journeymap') {\n      setCurrentPage('journeymap')\n    } else if (path === '/pxcrafting') {\n      setCurrentPage('pxcrafting')\n    }\n  }, [location.pathname])\n\n  // Scroll to top when route changes\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [location.pathname])\n\n  const handlePageChange = (page: string) => {\n    setCurrentPage(page)\n    // Navigate programmatically if needed\n    if (page === 'landing') {\n      window.history.pushState(null, '', '/')\n    } else if (page === 'marketplace') {\n      window.history.pushState(null, '', '/marketplace')\n    } else {\n      window.history.pushState(null, '', `/${page}`)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation currentPage={currentPage} onPageChange={handlePageChange} />\n      <main id=\"main-content\" role=\"main\" aria-label=\"Main content\" className=\"main-content\">\n        <Routes>\n          <Route path=\"/\" element={<APIErrorBoundary><LandingPage /></APIErrorBoundary>} />\n          <Route path=\"/marketplace\" element={<APIErrorBoundary><Marketplace /></APIErrorBoundary>} />\n          <Route path=\"/rewards\" element={<APIErrorBoundary><Rewards /></APIErrorBoundary>} />\n          <Route path=\"/inventory\" element={<APIErrorBoundary><Inventory /></APIErrorBoundary>} />\n          <Route path=\"/packs\" element={<APIErrorBoundary><Packs /></APIErrorBoundary>} />\n          <Route path=\"/collections\" element={<APIErrorBoundary><Collections /></APIErrorBoundary>} />\n          <Route path=\"/collections/:collectionName\" element={<APIErrorBoundary><CollectionDetail /></APIErrorBoundary>} />\n          <Route path=\"/collections/:collectionName/templates/:templateId\" element={<APIErrorBoundary><TemplateDetail /></APIErrorBoundary>} />\n          <Route path=\"/assets/:assetId\" element={<APIErrorBoundary><AssetDetail /></APIErrorBoundary>} />\n                <Route path=\"/listings/:saleId\" element={<APIErrorBoundary><ListingDetail /></APIErrorBoundary>} />\n                <Route path=\"/transactions/:transactionId\" element={<APIErrorBoundary><TransactionDetails /></APIErrorBoundary>} />\n                <Route path=\"/activity\" element={<APIErrorBoundary><ActivityStats /></APIErrorBoundary>} />\n          <Route path=\"/stats\" element={<APIErrorBoundary><ActivityStats /></APIErrorBoundary>} />\n          <Route path=\"/profile\" element={<APIErrorBoundary><UserProfile /></APIErrorBoundary>} />\n          <Route path=\"/profile/:account\" element={<APIErrorBoundary><UserProfileLookup /></APIErrorBoundary>} />\n\n          <Route path=\"/user-profile-lookup\" element={<APIErrorBoundary><UserProfileLookup /></APIErrorBoundary>} />\n          <Route path=\"/watchlist\" element={<APIErrorBoundary><Watchlist /></APIErrorBoundary>} />\n          <Route path=\"/auctions\" element={<APIErrorBoundary><Auctions /></APIErrorBoundary>} />\n          <Route path=\"/auctions/:id\" element={<APIErrorBoundary><AuctionDetail /></APIErrorBoundary>} />\n          <Route path=\"/learn\" element={<APIErrorBoundary><Learn /></APIErrorBoundary>} />\n          <Route path=\"/journeymap\" element={<APIErrorBoundary><JourneyMap /></APIErrorBoundary>} />\n          <Route path=\"/staking\" element={<APIErrorBoundary><Staking /></APIErrorBoundary>} />\n          <Route path=\"/rwax\" element={<APIErrorBoundary><RWax /></APIErrorBoundary>} />\n              <Route path=\"/pxcrafting\" element={<APIErrorBoundary><PxCrafting /></APIErrorBoundary>} />\n              <Route path=\"/pxswap\" element={<APIErrorBoundary><PxSwap /></APIErrorBoundary>} />\n        </Routes>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nfunction App() {\n  // Initialize monitoring and push notifications on app start\n  React.useEffect(() => {\n    // Initialize monitoring\n    monitoringService.trackEvent('app_initialized', {\n      timestamp: Date.now(),\n      userAgent: navigator.userAgent,\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      }\n    })\n\n    // Initialize accessibility service\n    accessibilityService.initialize()\n      .then(() => {\n        log.info('Accessibility service ready', 'App')\n        monitoringService.trackEvent('accessibility_service_ready', {\n          preferences: accessibilityService.getPreferences()\n        })\n      })\n      .catch((error) => {\n        log.error('Failed to initialize accessibility service', 'App', error)\n        monitoringService.reportError(error, 'accessibility_init_error')\n      })\n\n    // Initialize push notification service\n    pushNotificationService.initialize().then((success) => {\n      if (success) {\n        log.info('Push notification service initialized successfully', 'App')\n        monitoringService.trackEvent('push_service_ready', {\n          supported: pushNotificationService.getPermissionState().supported\n        })\n      } else {\n        log.warn('Push notification service initialization failed', 'App')\n      }\n    }).catch((error) => {\n      log.error('Push notification service initialization error', 'App', error)\n      monitoringService.reportError(error, 'push_service_init_error')\n    })\n\n    // Preload marketplace configuration\n    MarketplaceConfigService.preloadConfiguration().then(() => {\n      log.info('Marketplace configuration preloaded successfully', 'App')\n      monitoringService.trackEvent('marketplace_config_preloaded', {\n        timestamp: Date.now()\n      })\n    }).catch((error) => {\n      log.warn('Failed to preload marketplace configuration', 'App', { error })\n      monitoringService.reportError(error, 'marketplace_config_preload_error')\n    })\n  }, [])\n\n  return (\n    <ErrorBoundary>\n      <WalletProvider>\n        <TokenBalanceProvider>\n          <DisplaySettingsProvider>\n            <NotificationProvider>\n              <Router basename=\"/market-alphatest\">\n                <AppContent />\n              </Router>\n              <WatchlistAlertChecker />\n              <PriceAlertManager />\n              <NotificationContainer />\n              <ConfirmDialog />\n              <ChatWidget />\n              <PWAInstallBanner />\n              <OfflineIndicator />\n              <TransactionNotifications />\n            </NotificationProvider>\n          </DisplaySettingsProvider>\n        </TokenBalanceProvider>\n      </WalletProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","import { createContext } from 'react'\nimport type { Session } from '@wharfkit/session'\nimport type { TransactionType } from '../services/transactionService'\n\ninterface TransactionAction {\n  account: string\n  name: string\n  authorization: Array<{ actor: string; permission: string }>\n  data: Record<string, unknown>\n}\n\nexport interface WalletContextType {\n  isConnected: boolean\n  account: string | null\n  session: Session | null\n  login: () => Promise<Session | null>\n  logout: () => Promise<void>\n  transact: (actions: TransactionAction[]) => Promise<unknown>\n  purchaseNFT: (saleId: string, price: string) => Promise<unknown>\n  batchPurchaseNFTs: (purchases: Array<{saleId: string, price: string}>) => Promise<unknown>\n  executeCraftingTransaction: (craftingData: any) => Promise<unknown>\n  isLoading: boolean\n  // Transaction management methods\n  executeTransaction: (type: TransactionType, data: any) => Promise<string>\n  getTransaction?: (transactionId: string) => any\n  cancelTransaction?: (transactionId: string) => boolean\n  getTransactionHistory?: () => Promise<any[]>\n  transferNFT?: (assetId: string, recipient: string) => Promise<unknown>\n  bulkTransferNFT?: (recipient: string, assetIds: string[], memo?: string) => Promise<unknown>\n  transferTokens?: (to: string, amount: string, currency?: string, memo?: string) => Promise<unknown>\n}\n\nconst WalletContext = createContext<WalletContextType | undefined>(undefined)\n\nexport default WalletContext","import { useContext } from 'react'\nimport WalletContext, { type WalletContextType } from '../contexts/WalletContextDefinition'\n\nexport const useWallet = (): WalletContextType => {\n  const context = useContext(WalletContext)\n  if (context === undefined) {\n    throw new Error('useWallet must be used within a WalletProvider')\n  }\n  return context\n}","// Centralized error message service for consistent error handling\n\nexport interface ErrorMessageConfig {\n  title: string\n  message: string\n  action?: string\n}\n\nexport class ErrorMessageService {\n  // Standard error messages for common scenarios\n  static readonly MESSAGES = {\n    // Network and API errors\n    NETWORK_ERROR: {\n      title: 'Connection Error',\n      message: 'Unable to connect to the server. Please check your internet connection and try again.',\n      action: 'Retry'\n    },\n    TIMEOUT_ERROR: {\n      title: 'Request Timeout',\n      message: 'The request took too long to complete. Please try again.',\n      action: 'Retry'\n    },\n    API_ERROR: {\n      title: 'Service Unavailable',\n      message: 'The service is temporarily unavailable. Please try again in a moment.',\n      action: 'Retry'\n    },\n    LOAD_FAILED: {\n      title: 'Loading Failed',\n      message: 'Failed to load data. Please refresh the page or try again later.',\n      action: 'Refresh'\n    },\n    \n    // Authentication and wallet errors\n    WALLET_CONNECTION_FAILED: {\n      title: 'Wallet Connection Failed',\n      message: 'Unable to connect to your wallet. Please ensure your wallet is unlocked and try again.',\n      action: 'Retry'\n    },\n    WALLET_DISCONNECTED: {\n      title: 'Wallet Disconnected',\n      message: 'Your wallet has been disconnected. Please reconnect to continue.',\n      action: 'Connect Wallet'\n    },\n    INSUFFICIENT_BALANCE: {\n      title: 'Insufficient Balance',\n      message: 'You do not have enough balance to complete this transaction.',\n      action: 'Add Funds'\n    },\n    \n    // Transaction errors\n    TRANSACTION_FAILED: {\n      title: 'Transaction Failed',\n      message: 'The transaction could not be completed. Please try again.',\n      action: 'Retry'\n    },\n    TRANSACTION_REJECTED: {\n      title: 'Transaction Rejected',\n      message: 'The transaction was rejected. Please try again if this was unintentional.',\n      action: 'Retry'\n    },\n    \n    // Data validation errors\n    INVALID_INPUT: {\n      title: 'Invalid Input',\n      message: 'Please check your input and try again.',\n      action: 'Correct Input'\n    },\n    REQUIRED_FIELD: {\n      title: 'Required Field Missing',\n      message: 'Please fill in all required fields.',\n      action: 'Complete Form'\n    },\n    \n    // NFT and marketplace specific errors\n    NFT_NOT_FOUND: {\n      title: 'NFT Not Found',\n      message: 'The requested NFT could not be found or may no longer be available.',\n      action: 'Go Back'\n    },\n    COLLECTION_NOT_FOUND: {\n      title: 'Collection Not Found',\n      message: 'The requested collection could not be found or may not exist.',\n      action: 'Browse Collections'\n    },\n    PURCHASE_FAILED: {\n      title: 'Purchase Failed',\n      message: 'Unable to complete the purchase. The item may no longer be available.',\n      action: 'Refresh Listings'\n    },\n    LISTING_FAILED: {\n      title: 'Listing Failed',\n      message: 'Unable to list your NFT. Please check your wallet and try again.',\n      action: 'Retry'\n    },\n    \n    // Generic fallback\n    UNKNOWN_ERROR: {\n      title: 'Something Went Wrong',\n      message: 'An unexpected error occurred. Please try again or contact support if the problem persists.',\n      action: 'Retry'\n    }\n  } as const\n  \n  /**\n   * Get a standard error message configuration\n   */\n  static getMessage(key: keyof typeof ErrorMessageService.MESSAGES): ErrorMessageConfig {\n    return ErrorMessageService.MESSAGES[key]\n  }\n  \n  /**\n   * Create a custom error message with consistent formatting\n   */\n  static createMessage(title: string, message: string, action?: string): ErrorMessageConfig {\n    return { title, message, action }\n  }\n  \n  /**\n   * Format an error object into a user-friendly message\n   */\n  static formatError(error: unknown, fallbackMessage?: ErrorMessageConfig): ErrorMessageConfig {\n    if (error instanceof Error) {\n      // Check for specific error patterns\n      const message = error.message.toLowerCase()\n      const errorName = error.name.toLowerCase()\n      \n      // Network and connection errors\n      if (message.includes('network') || message.includes('fetch') || message.includes('connection')) {\n        return ErrorMessageService.MESSAGES.NETWORK_ERROR\n      }\n      \n      // Timeout errors\n      if (message.includes('timeout') || message.includes('aborted') || errorName.includes('timeout')) {\n        return ErrorMessageService.MESSAGES.TIMEOUT_ERROR\n      }\n      \n      // Transaction errors\n      if (message.includes('rejected') || message.includes('cancelled')) {\n        return ErrorMessageService.MESSAGES.TRANSACTION_REJECTED\n      }\n      \n      // Balance errors\n      if (message.includes('insufficient')) {\n        return ErrorMessageService.MESSAGES.INSUFFICIENT_BALANCE\n      }\n      \n      // Not found errors\n      if (message.includes('not found')) {\n        return ErrorMessageService.MESSAGES.NFT_NOT_FOUND\n      }\n      \n      // Chunk loading errors (code splitting)\n      if (errorName === 'chunkloaderror') {\n        return ErrorMessageService.MESSAGES.LOAD_FAILED\n      }\n      \n      // API and HTTP errors\n      if (message.includes('api') || message.includes('http') || message.includes('server')) {\n        return ErrorMessageService.MESSAGES.API_ERROR\n      }\n      \n      // Return custom message with error details for development\n      if (import.meta.env?.DEV || window.location.hostname === 'localhost') {\n        return ErrorMessageService.createMessage(\n          `Error: ${error.name}`,\n          error.message,\n          'Retry'\n        )\n      }\n      \n      // Generic error message for production\n      return ErrorMessageService.createMessage(\n        'Error',\n        'An error occurred while processing your request.',\n        'Retry'\n      )\n    }\n    \n    return fallbackMessage || ErrorMessageService.MESSAGES.UNKNOWN_ERROR\n  }\n  \n  /**\n   * Log error consistently across the application\n   * @deprecated Use log.error from loggingService instead\n   */\n  static logError(context: string, error: unknown, additionalInfo?: Record<string, unknown>): void {\n    // Use dynamic import to avoid circular dependencies\n    import('./loggingService').then(({ log }) => {\n      const errorInstance = error instanceof Error ? error : new Error(String(error))\n      log.error(`Error in ${context}`, context, errorInstance, additionalInfo)\n    }).catch(() => {\n      // Fallback to console if logging service is not available\n      console.error(`Error in ${context}:`, error, additionalInfo)\n    })\n  }\n}\n\n// Export commonly used error messages for convenience\nexport const ERROR_MESSAGES = ErrorMessageService.MESSAGES\nexport const formatError = ErrorMessageService.formatError\nexport const logError = ErrorMessageService.logError","/**\n * Production-ready logging service\n * Replaces console.log statements with structured logging\n * \n * USAGE GUIDELINES:\n * \n * 1. ALWAYS use the centralized log service instead of console.log/warn/error\n *    ✅ Good: log.info('User logged in', 'AuthService.login', { userId })\n *    ❌ Bad:  console.log('User logged in')\n * \n * 2. Choose appropriate log levels:\n *    - log.debug(): Development info, detailed tracing (filtered in production)\n *    - log.info():  Important events, successful operations, state changes\n *    - log.warn():  Recoverable errors, fallbacks, deprecated usage\n *    - log.error(): Critical errors, exceptions, failed operations\n * \n * 3. ALWAYS provide context as the second parameter:\n *    - Format: 'ServiceName.methodName' or 'ComponentName.functionName'\n *    - Example: 'RWax.handleTokenization', 'InventoryService.loadFullInventory'\n * \n * 4. Include relevant data as the third parameter when helpful:\n *    - Use objects for structured data: { userId, assetId, count }\n *    - Avoid logging sensitive information (passwords, tokens, keys)\n * \n * 5. For errors, pass the error object in the data parameter:\n *    - log.error('Failed to fetch data', 'ApiService.getData', { error, endpoint })\n * \n * 6. Migration from console calls:\n *    - console.log() → log.debug() or log.info() (depending on importance)\n *    - console.warn() → log.warn()\n *    - console.error() → log.error()\n * \n * 7. Import and use:\n *    import { log } from './loggingService'\n *    log.info('Operation completed', 'MyService.myMethod')\n */\n\nexport const LogLevel = {\n  DEBUG: 'debug',\n  INFO: 'info',\n  WARN: 'warn',\n  ERROR: 'error'\n} as const\n\nexport type LogLevel = typeof LogLevel[keyof typeof LogLevel]\n\ninterface LogEntry {\n  timestamp: string;\n  level: LogLevel;\n  message: string;\n  context?: string;\n  data?: unknown;\n  error?: Error;\n}\n\nclass LoggingService {\n  private logLevel: LogLevel = LogLevel.INFO;\n  private isDevelopment = import.meta.env.DEV;\n  private logs: LogEntry[] = [];\n  private maxLogs = 1000;\n\n  constructor() {\n    // Set log level based on environment\n    this.logLevel = this.isDevelopment ? LogLevel.DEBUG : LogLevel.WARN;\n  }\n\n  private createLogEntry(level: LogLevel, message: string, context?: string, data?: unknown, error?: Error): LogEntry {\n    return {\n      timestamp: new Date().toISOString(),\n      level,\n      message,\n      context,\n      data,\n      error\n    };\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    return level >= this.logLevel;\n  }\n\n  private storeLog(entry: LogEntry): void {\n    this.logs.push(entry);\n    if (this.logs.length > this.maxLogs) {\n      this.logs.shift(); // Remove oldest log\n    }\n  }\n\n  private formatMessage(entry: LogEntry): string {\n    const levelName = entry.level.toUpperCase();\n    const context = entry.context ? `[${entry.context}]` : '';\n    return `${entry.timestamp} ${levelName} ${context} ${entry.message}`;\n  }\n\n  debug(message: string, context?: string, data?: unknown): void {\n    if (!this.shouldLog(LogLevel.DEBUG)) return;\n    \n    const entry = this.createLogEntry(LogLevel.DEBUG, message, context, data);\n    this.storeLog(entry);\n    \n    if (this.isDevelopment) {\n      console.debug(this.formatMessage(entry), data || '');\n    }\n  }\n\n  info(message: string, context?: string, data?: unknown): void {\n    if (!this.shouldLog(LogLevel.INFO)) return;\n    \n    const entry = this.createLogEntry(LogLevel.INFO, message, context, data);\n    this.storeLog(entry);\n    \n    if (this.isDevelopment) {\n      console.info(this.formatMessage(entry), data || '');\n    }\n  }\n\n  warn(message: string, context?: string, data?: unknown): void {\n    if (!this.shouldLog(LogLevel.WARN)) return;\n    \n    const entry = this.createLogEntry(LogLevel.WARN, message, context, data);\n    this.storeLog(entry);\n    \n    console.warn(this.formatMessage(entry), data || '');\n  }\n\n  error(message: string, context?: string, error?: Error, data?: unknown): void {\n    if (!this.shouldLog(LogLevel.ERROR)) return;\n    \n    const entry = this.createLogEntry(LogLevel.ERROR, message, context, data, error);\n    this.storeLog(entry);\n    \n    console.error(this.formatMessage(entry), error || '', data || '');\n    \n    // In production, send to error reporting service\n    if (!this.isDevelopment && error) {\n      this.reportError(error, { message, context, data });\n    }\n  }\n\n  private async reportError(error: Error, metadata: Record<string, unknown>): Promise<void> {\n    try {\n      // Send to multiple error reporting services for redundancy\n      const reportingPromises = [\n        this.sendToErrorReportingAPI(error, metadata),\n        this.sendToLocalStorage(error, metadata),\n        this.sendToConsole(error, metadata)\n      ];\n\n      await Promise.allSettled(reportingPromises);\n    } catch (reportingError) {\n      // Fallback to console if all reporting methods fail\n      console.error('Failed to report error:', reportingError);\n      console.error('Original error:', error);\n    }\n  }\n\n  private async sendToErrorReportingAPI(error: Error, metadata: Record<string, unknown>): Promise<void> {\n    try {\n      const errorReport = {\n        message: error.message,\n        stack: error.stack,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        url: window.location.href,\n        userId: this.getUserId(),\n        sessionId: this.getSessionId(),\n        buildVersion: this.getBuildVersion(),\n        environment: this.getEnvironment(),\n        metadata\n      };\n\n      // Try primary error reporting endpoint\n      const response = await fetch('/api/errors/report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.getAuthToken()}`\n        },\n        body: JSON.stringify(errorReport)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error reporting failed: ${response.status} ${response.statusText}`);\n      }\n\n      console.log('Error successfully reported to server');\n    } catch {\n      // Try fallback error reporting service\n      await this.sendToFallbackErrorService(error, metadata);\n    }\n  }\n\n  private async sendToFallbackErrorService(error: Error, metadata: Record<string, unknown>): Promise<void> {\n    try {\n      // Use a third-party error reporting service as fallback\n      const errorData = {\n        error: {\n          message: error.message,\n          stack: error.stack,\n          timestamp: new Date().toISOString()\n        },\n        context: {\n          ...metadata,\n          userAgent: navigator.userAgent,\n          url: window.location.href\n        }\n      };\n\n      // This could be Sentry, LogRocket, Bugsnag, etc.\n      if (typeof window !== 'undefined' && (window as { Sentry?: { captureException: (error: Error, options: { extra: unknown; level: string }) => void } }).Sentry) {\n        (window as unknown as { Sentry: { captureException: (error: Error, options: { extra: unknown; level: string }) => void } }).Sentry.captureException(error, {\n          extra: errorData.context,\n          level: 'error'\n        });\n      }\n    } catch (fallbackError) {\n      console.warn('Fallback error reporting also failed:', fallbackError);\n    }\n  }\n\n  private async sendToLocalStorage(error: Error, metadata: Record<string, unknown>): Promise<void> {\n    try {\n      const storageKey = 'error_reports';\n      const maxStoredErrors = 50;\n      \n      const errorReport = {\n        message: error.message,\n        stack: error.stack,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        url: window.location.href,\n        metadata\n      };\n      \n      let storedErrors: unknown[] = [];\n      const existing = localStorage.getItem(storageKey);\n      \n      if (existing) {\n        try {\n          storedErrors = JSON.parse(existing);\n        } catch (parseError) {\n          console.warn('Failed to parse stored errors:', parseError);\n        }\n      }\n\n      // Add new error and limit storage\n      storedErrors.unshift(errorReport);\n      storedErrors = storedErrors.slice(0, maxStoredErrors);\n\n      localStorage.setItem(storageKey, JSON.stringify(storedErrors));\n    } catch (storageError) {\n      console.warn('Failed to store error in localStorage:', storageError);\n    }\n  }\n\n  private sendToConsole(error: Error, metadata: Record<string, unknown>): void {\n    const style = 'color: #ff4444; font-weight: bold; background: #ffe6e6; padding: 2px 4px; border-radius: 3px;';\n    console.group(`%cERROR: ${error.message}`, style);\n    \n    if (metadata) {\n      console.log('Metadata:', metadata);\n    }\n    \n    if (error.stack) {\n      console.log('Stack:', error.stack);\n    }\n    \n    console.log('Timestamp:', new Date().toISOString());\n    console.groupEnd();\n  }\n\n  private getUserId(): string {\n    return localStorage.getItem('user_id') || sessionStorage.getItem('user_id') || 'anonymous';\n  }\n\n  private getSessionId(): string {\n    let sessionId = sessionStorage.getItem('session_id');\n    if (!sessionId) {\n      sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      sessionStorage.setItem('session_id', sessionId);\n    }\n    return sessionId;\n  }\n\n  private getAuthToken(): string {\n    return localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token') || '';\n  }\n\n  private getBuildVersion(): string {\n    return import.meta.env.VITE_APP_VERSION || 'unknown';\n  }\n\n  private getEnvironment(): string {\n    return import.meta.env.MODE || 'development';\n  }\n\n  getLogs(level?: LogLevel): LogEntry[] {\n    if (level !== undefined) {\n      return this.logs.filter(log => log.level >= level);\n    }\n    return [...this.logs];\n  }\n\n  clearLogs(): void {\n    this.logs = [];\n  }\n\n  exportLogs(): string {\n    return JSON.stringify(this.logs, null, 2);\n  }\n}\n\n// Create singleton instance\nexport const logger = new LoggingService();\n\n// Convenience functions for backward compatibility\nexport const log = {\n  debug: (message: string, context?: string, data?: unknown) => logger.debug(message, context, data),\n  info: (message: string, context?: string, data?: unknown) => logger.info(message, context, data),\n  warn: (message: string, context?: string, data?: unknown) => logger.warn(message, context, data),\n  error: (message: string, context?: string, error?: Error, data?: unknown) => logger.error(message, context, error, data)\n};","/**\n * Marketplace Configuration\n * Contains configuration data for the Pixel Journey marketplace\n * Based on actual Pixal PFP asset attributes and structure\n */\n\nimport { log } from '../services/loggingService';\n\n// Known WaxRock types from Pixal PFP template 781515\n// These are the actual gem types that appear in the 'WaxRock' attribute\n// 96% of Pixal PFPs have WaxRock: \"none\", 4% have one of these rare gems\nexport const WAXROCK_TYPES = [\n  'Citrine',\n  'Tourmaline', \n  'Emerald',\n  'Garnet',\n  'Peridot',\n  'Jade',\n  'Sapphire',\n  'Turquoise',\n  'Pigeon Blood Ruby',\n  'Blue Rock',\n  'Black Rock',\n  'Rock'\n] as const\n\nexport type WaxRockType = typeof WAXROCK_TYPES[number]\n\n/**\n * Partner collections that have special marketplace access\n * Fallback values used when API is unavailable\n */\nexport const PARTNER_COLLECTIONS = [\n  'friedfactory',\n  'pixeljourney'\n] as const\n\n/**\n * Token contracts used in the marketplace\n * Fallback values used when API is unavailable\n */\nexport const TOKEN_CONTRACTS = [\n  'alien.worlds',\n  'prospectorsc', \n  'token.nefty'\n] as const\n\n/**\n * Pixal PFP template ID\n * All Pixal PFPs (including WaxRocks) use this template\n */\nexport const PIXAL_TEMPLATE_ID = '781515'\n\n/**\n * API Endpoint Configuration\n * Centralized configuration for all external API endpoints\n */\nexport const API_ENDPOINTS = {\n  // Atomic Assets API endpoints\n  ATOMIC_ASSETS: [\n    'https://atomic.wax.eosrio.io',\n    'https://wax-atomic.alcor.exchange',\n    'https://atomic-wax-mainnet.wecan.dev',\n    'https://wax.eosusa.io',\n    'https://wax-atomic-api.eosphere.io',\n    'https://atomic.3dkrender.com',\n    'https://aa-wax-public1.neftyblocks.com',\n    'https://atomic-wax.tacocrypto.io'\n  ],\n  \n  // WAX Chain API endpoints\n  WAX_CHAIN: {\n    EOSRIO: 'https://wax.eosrio.io',\n    WAXSWEDEN: 'https://api.waxsweden.org',\n    GREYMASS: 'https://wax.greymass.com',\n    EOSPHERE: 'https://wax.eosphere.io',\n    ALOHAEOS: 'https://api.wax.alohaeos.com',\n    PINK: 'https://wax.pink.gg',\n    CRYPTOLIONS: 'https://wax.cryptolions.io',\n    FALLBACK_ENDPOINTS: [\n      'https://wax.eosphere.io',\n      'https://wax.eosrio.io',\n      'https://api.wax.alohaeos.com',\n      'https://wax.pink.gg',\n      'https://api.waxsweden.org',\n      'https://wax.greymass.com',\n      'https://wax.cryptolions.io'\n    ],\n    HYPERION_ENDPOINTS: [\n      'https://wax-hyperion.eosdetroit.io',\n      'https://wax.eosrio.io',\n      'https://api.waxsweden.org'\n    ],\n    HIVEBP: 'https://wax-api.hivebp.io',\n    LIGHT_API: 'https://wax.light-api.net'\n  },\n  \n  // Specialized API endpoints\n  SPECIALIZED: {\n    ALCOR: 'https://alcor.exchange/api/v2',\n    DAPPLICA: 'https://aa.dapplica.io',\n    NEFTY: 'https://api.neftyblocks.com'\n  },\n  \n  // External services\n  IPFS: {\n    GATEWAYS: [\n      'https://ipfs.io/ipfs/',\n      'https://gateway.pinata.cloud/ipfs/',\n      'https://dweb.link/ipfs/'\n    ]\n  },\n  \n  // Avatar services\n  AVATAR: {\n    DICEBEAR: 'https://api.dicebear.com/7.x/identicon/svg'\n  },\n  \n  // Hyperion endpoints\n  HYPERION: [\n    'https://wax-hyperion.eosdetroit.io',\n    'https://wax.eosrio.io',\n    'https://api.waxsweden.org'\n  ],\n  \n  // Price and currency APIs\n  COINGECKO_API: 'https://api.coingecko.com/api/v3/simple/price',\n  EXCHANGE_RATE_API: 'https://api.exchangerate-api.com/v4/latest/USD',\n  \n  // Social and external links\n  SOCIAL: {\n    TWITTER_INTENT: 'https://twitter.com/intent/tweet',\n    FACEBOOK_SHARE: 'https://www.facebook.com/sharer/sharer.php',\n    REDDIT_SUBMIT: 'https://reddit.com/submit',\n    TELEGRAM_SHARE: 'https://t.me/share/url',\n    DISCORD: 'https://discord.gg/pixeljourney',\n    ATOMICHUB_EXPLORER: 'https://wax.atomichub.io/explorer',\n    BLOKS_EXPLORER: 'https://wax.bloks.io'\n  },\n  \n  // Pixel Journey specific\n  PIXEL_JOURNEY: {\n    MAIN_SITE: 'https://pixeljourney.xyz',\n    DOCS: 'https://docs.pixeljourney.xyz',\n    LOGO: '/logo.png',\n    DEFAULT_IMAGE: 'https://pixeljourney.xyz/img/toppixals/10.webp',\n    LEADERBOARD: 'https://lb.pixeljourney.xyz/',\n    CRAFTING_DOCS: 'https://docs.pixeljourney.xyz/season-1/recycling-and-crafting'\n  },\n  \n  // Avatar and image services\n  DICEBEAR_API: 'https://api.dicebear.com/7.x/identicon/svg',\n  \n  // Fonts and external resources\n  GOOGLE_FONTS: 'https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap',\n  \n  // WAX wallet\n  WAX_WALLET: 'https://wallet.wax.io'\n} as const\n\n/**\n * Marketplace Configuration Service\n * Provides centralized access to marketplace configuration data\n */\nexport class MarketplaceConfigService {\n  private static configCache: {\n    partnerCollections?: string[]\n    tokenContracts?: string[]\n    lastFetch?: number\n  } = {}\n  \n  private static readonly CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\n\n  /**\n   * Check if a WaxRock type is valid (not \"none\")\n   */\n  static isValidWaxRock(waxRock: string): boolean {\n    return waxRock !== 'none' && WAXROCK_TYPES.includes(waxRock as WaxRockType)\n  }\n\n  /**\n   * Get all valid WaxRock types (excluding \"none\")\n   */\n  static getWaxRockTypes(): readonly WaxRockType[] {\n    return WAXROCK_TYPES\n  }\n\n  /**\n   * Get partner collections from API with caching\n   * Falls back to hardcoded values if API fails\n   */\n  static async getPartnerCollections(): Promise<string[]> {\n    const now = Date.now()\n    \n    // Return cached data if still valid\n    if (this.configCache.partnerCollections && \n        this.configCache.lastFetch && \n        (now - this.configCache.lastFetch) < this.CACHE_DURATION) {\n      return this.configCache.partnerCollections\n    }\n\n    try {\n      // Dynamic import to avoid circular dependency\n      const { apiService } = await import('../services/api')\n      const collections = await apiService.getPartnerCollections()\n      \n      // Update cache\n      this.configCache.partnerCollections = collections\n      this.configCache.lastFetch = now\n      \n      return collections\n    } catch (error) {\n      log.warn('Failed to fetch partner collections from API, using fallback', 'MarketplaceConfig', { error })\n      // Return hardcoded fallback\n      return [...PARTNER_COLLECTIONS]\n    }\n  }\n\n  /**\n   * Get partner collections synchronously (for backward compatibility)\n   * Returns cached data or hardcoded fallback\n   */\n  static getPartnerCollectionsSync(): readonly string[] {\n    return this.configCache.partnerCollections || PARTNER_COLLECTIONS\n  }\n\n  /**\n   * Get token contracts from API with caching\n   * Falls back to hardcoded values if API fails\n   */\n  static async getTokenContracts(): Promise<string[]> {\n    const now = Date.now()\n    \n    // Return cached data if still valid\n    if (this.configCache.tokenContracts && \n        this.configCache.lastFetch && \n        (now - this.configCache.lastFetch) < this.CACHE_DURATION) {\n      return this.configCache.tokenContracts\n    }\n\n    try {\n      // Dynamic import to avoid circular dependency\n      const { apiService } = await import('../services/api')\n      const contracts = await apiService.getTokenContracts()\n      \n      // Update cache\n      this.configCache.tokenContracts = contracts\n      this.configCache.lastFetch = now\n      \n      return contracts\n    } catch (error) {\n      log.warn('Failed to fetch token contracts from API, using fallback', 'MarketplaceConfig', { error })\n      // Return hardcoded fallback\n      return [...TOKEN_CONTRACTS]\n    }\n  }\n\n  /**\n   * Get token contracts synchronously (for backward compatibility)\n   * Returns cached data or hardcoded fallback\n   */\n  static getTokenContractsSync(): readonly string[] {\n    return this.configCache.tokenContracts || TOKEN_CONTRACTS\n  }\n\n  /**\n   * Get Pixal PFP template ID\n   */\n  static getPixalTemplateId(): string {\n    return PIXAL_TEMPLATE_ID\n  }\n\n  /**\n   * Check if an asset is a Pixal PFP (including WaxRocks)\n   */\n  static isPixalPFP(templateId: string): boolean {\n    return templateId === PIXAL_TEMPLATE_ID\n  }\n\n  /**\n   * Generate dynamic filters based on API data\n   * Analyzes actual asset attributes to create meaningful filter categories\n   */\n  static generateFiltersFromAssets(assets: { data?: Record<string, unknown>; [key: string]: unknown }[]): string[] {\n    const filters = new Set<string>()\n    const attributeCounts = new Map<string, number>()\n    \n    // Add basic categories\n    filters.add('All Items')\n    \n    // Analyze assets to find common attributes\n    assets.forEach(asset => {\n      // Check traits/attributes\n      if (asset.traits && typeof asset.traits === 'object' && asset.traits !== null) {\n        Object.keys(asset.traits as Record<string, unknown>).forEach(traitKey => {\n          const traitValue = (asset.traits as Record<string, unknown>)[traitKey]\n          if (traitValue && traitValue !== 'none' && traitValue !== '') {\n            const filterKey = `${traitKey}: ${traitValue}`\n            attributeCounts.set(filterKey, (attributeCounts.get(filterKey) || 0) + 1)\n          }\n        })\n      }\n      \n      // Check data attributes\n      if (asset.data && typeof asset.data === 'object' && asset.data !== null) {\n        Object.keys(asset.data as Record<string, unknown>).forEach(dataKey => {\n          const dataValue = (asset.data as Record<string, unknown>)[dataKey]\n          if (dataValue && dataValue !== 'none' && dataValue !== '') {\n            const filterKey = `${dataKey}: ${dataValue}`\n            attributeCounts.set(filterKey, (attributeCounts.get(filterKey) || 0) + 1)\n          }\n        })\n      }\n      \n      // Add collection-based filters\n      if (asset.collection) {\n        const collectionFilter = `Collection: ${asset.collection}`\n        attributeCounts.set(collectionFilter, (attributeCounts.get(collectionFilter) || 0) + 1)\n      }\n      \n      // Add schema-based filters\n      if (asset.schema) {\n        const schemaFilter = `Schema: ${asset.schema}`\n        attributeCounts.set(schemaFilter, (attributeCounts.get(schemaFilter) || 0) + 1)\n      }\n    })\n    \n    // Only include attributes that appear in at least 2 assets (to avoid noise)\n    const minOccurrences = Math.max(2, Math.floor(assets.length * 0.05)) // At least 5% of assets\n    attributeCounts.forEach((count, filterKey) => {\n      if (count >= minOccurrences) {\n        filters.add(filterKey)\n      }\n    })\n    \n    return Array.from(filters).sort()\n  }\n\n  /**\n   * Preload configuration data to populate cache\n   * Should be called during app initialization\n   */\n  static async preloadConfiguration(): Promise<void> {\n    try {\n      await Promise.all([\n        this.getPartnerCollections(),\n        this.getTokenContracts()\n      ])\n    } catch (error) {\n      log.warn('Failed to preload marketplace configuration', 'MarketplaceConfig', { error })\n    }\n  }\n\n  /**\n   * Clear configuration cache (useful for testing or forced refresh)\n   */\n  static clearCache(): void {\n    this.configCache = {}\n  }\n}\n\n// Export for backward compatibility during transition\nexport const GameDataService = MarketplaceConfigService","// Currency conversion service for converting USD to various currencies\nimport { ErrorMessageService } from './errorMessageService'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\nexport interface ExchangeRates {\n  [currency: string]: number\n}\n\nexport interface CryptoRates {\n  bitcoin: { usd: number }\n  ethereum: { usd: number }\n}\n\nclass CurrencyService {\n  private exchangeRates: ExchangeRates = {}\n  private cryptoRates: CryptoRates = { bitcoin: { usd: 0 }, ethereum: { usd: 0 } }\n  private lastFetchTime: number = 0\n  private readonly CACHE_DURATION = 10 * 60 * 1000 // 10 minutes\n  private readonly EXCHANGE_API = API_ENDPOINTS.EXCHANGE_RATE_API\n  private readonly CRYPTO_API = API_ENDPOINTS.COINGECKO_API\n\n  // Fallback exchange rates (approximate)\n  private readonly FALLBACK_RATES: ExchangeRates = {\n    USD: 1,\n    EUR: 0.85,\n    DKK: 6.30,\n    AED: 3.67,\n    INR: 83.12,\n    RUB: 74.50,\n    CNY: 7.10,\n    JPY: 110.00\n  }\n\n  private readonly FALLBACK_CRYPTO: CryptoRates = {\n    bitcoin: { usd: 115000 },\n    ethereum: { usd: 4000 }\n  }\n\n  async getExchangeRates(): Promise<ExchangeRates> {\n    const now = Date.now()\n    \n    // Return cached rates if still valid\n    if (Object.keys(this.exchangeRates).length > 0 && (now - this.lastFetchTime) < this.CACHE_DURATION) {\n      return this.exchangeRates\n    }\n\n    try {\n      // Fetch fiat currency rates\n      const response = await fetch(this.EXCHANGE_API, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n\n      const data = await response.json()\n      \n      // Extract the rates we need\n      this.exchangeRates = {\n        USD: 1,\n        EUR: data.rates?.EUR || this.FALLBACK_RATES.EUR,\n        DKK: data.rates?.DKK || this.FALLBACK_RATES.DKK,\n        AED: data.rates?.AED || this.FALLBACK_RATES.AED,\n        INR: data.rates?.INR || this.FALLBACK_RATES.INR,\n        RUB: data.rates?.RUB || this.FALLBACK_RATES.RUB,\n        CNY: data.rates?.CNY || this.FALLBACK_RATES.CNY,\n        JPY: data.rates?.JPY || this.FALLBACK_RATES.JPY\n      }\n\n      // Fetch crypto rates\n      try {\n        const cryptoResponse = await fetch(this.CRYPTO_API, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          }\n        })\n\n        if (cryptoResponse.ok) {\n          const cryptoData = await cryptoResponse.json()\n          this.cryptoRates = {\n            bitcoin: { usd: cryptoData.bitcoin?.usd || this.FALLBACK_CRYPTO.bitcoin.usd },\n            ethereum: { usd: cryptoData.ethereum?.usd || this.FALLBACK_CRYPTO.ethereum.usd }\n          }\n        }\n      } catch (cryptoError) {\n        ErrorMessageService.logError('CurrencyService.getCryptoRates', cryptoError)\n        this.cryptoRates = this.FALLBACK_CRYPTO\n      }\n\n      this.lastFetchTime = now\n      return this.exchangeRates\n    } catch (error) {\n      ErrorMessageService.logError('CurrencyService.getExchangeRates', error, { api: this.EXCHANGE_API })\n      \n      // Use fallback rates\n      this.exchangeRates = this.FALLBACK_RATES\n      this.cryptoRates = this.FALLBACK_CRYPTO\n      this.lastFetchTime = now\n      \n      return this.exchangeRates\n    }\n  }\n\n  async convertUSDToCurrency(usdAmount: number, targetCurrency: string): Promise<string> {\n    if (usdAmount <= 0) return '0.00'\n    \n    // Handle crypto currencies\n    if (targetCurrency === 'BTC') {\n      await this.getExchangeRates() // This also fetches crypto rates\n      const btcPrice = this.cryptoRates.bitcoin.usd\n      const btcAmount = usdAmount / btcPrice\n      return btcAmount >= 0.001 ? btcAmount.toFixed(6) : btcAmount.toExponential(2)\n    }\n    \n    if (targetCurrency === 'ETH') {\n      await this.getExchangeRates() // This also fetches crypto rates\n      const ethPrice = this.cryptoRates.ethereum.usd\n      const ethAmount = usdAmount / ethPrice\n      return ethAmount >= 0.001 ? ethAmount.toFixed(6) : ethAmount.toExponential(2)\n    }\n\n    // Handle fiat currencies\n    const rates = await this.getExchangeRates()\n    const rate = rates[targetCurrency]\n    \n    if (!rate) {\n      return '0.00'\n    }\n\n    const convertedAmount = usdAmount * rate\n    \n    // Format based on currency\n    if (targetCurrency === 'JPY') {\n      return Math.round(convertedAmount).toString() // JPY doesn't use decimals\n    }\n    \n    return convertedAmount.toFixed(2)\n  }\n\n  async convertWaxToCurrency(waxAmount: string, targetCurrency: string): Promise<string> {\n    try {\n      // First convert WAX to USD\n      const { priceService } = await import('./priceService')\n      const usdString = await priceService.convertWaxToUSDAsync(waxAmount)\n      \n      // Extract USD amount from string (remove $ and commas)\n      const usdAmount = parseFloat(usdString.replace(/[$,]/g, ''))\n      \n      if (targetCurrency === 'USD') {\n        return usdString\n      }\n      \n      // Convert USD to target currency\n      const convertedAmount = await this.convertUSDToCurrency(usdAmount, targetCurrency)\n      \n      // Format with currency symbol\n      return this.formatCurrencyAmount(convertedAmount, targetCurrency)\n    } catch (error) {\n      ErrorMessageService.logError('CurrencyService.convertWaxToCurrency', error, { waxAmount, targetCurrency })\n      return '0.00'\n    }\n  }\n\n  formatCurrencyAmount(amount: string, currency: string): string {\n    switch (currency) {\n      case 'USD':\n        return `$${amount}`\n      case 'EUR':\n        return `€${amount}`\n      case 'DKK':\n        return `${amount} kr`\n      case 'AED':\n        return `${amount} د.إ`\n      case 'INR':\n        return `₹${amount}`\n      case 'RUB':\n        return `${amount} ₽`\n      case 'CNY':\n        return `¥${amount}`\n      case 'JPY':\n        return `¥${amount}`\n      case 'BTC':\n        return `₿${amount}`\n      case 'ETH':\n        return `Ξ${amount}`\n      default:\n        return `${amount} ${currency}`\n    }\n  }\n\n  getCurrencySymbol(currency: string): string {\n    const symbols: { [key: string]: string } = {\n      USD: '$',\n      EUR: '€',\n      DKK: 'kr',\n      AED: 'د.إ',\n      INR: '₹',\n      RUB: '₽',\n      CNY: '¥',\n      JPY: '¥',\n      BTC: '₿',\n      ETH: 'Ξ'\n    }\n    return symbols[currency] || currency\n  }\n}\n\nexport const currencyService = new CurrencyService()\nexport default currencyService","// Price service for fetching WAX/USD conversion rates and WPIXAL price data\nimport { ErrorMessageService } from './errorMessageService'\nimport { formatWAXPrice, formatNumber } from '../utils/formatUtils'\nimport { currencyService } from './currencyService'\nimport { log } from './loggingService'\n\nclass PriceService {\n  private waxPriceUSD: number = 0.02\n  private wpixalPriceUSD: number = 0.00002\n  private wpixalPriceWAX: number = 0.001\n  private pxjPriceUSD: number = 0.0001\n  private lastFetchTime: number = 0\n  private readonly CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\n  private readonly COINGECKO_WAX_API = 'https://api.coingecko.com/api/v3/simple/price?ids=wax&vs_currencies=usd'\n  private readonly GECKOTERMINAL_WPIXAL_API = 'https://api.geckoterminal.com/api/v2/networks/wax/pools/swap.alcor:7845'\n  private readonly GECKOTERMINAL_PXJ_POOLS = [\n    'https://api.geckoterminal.com/api/v2/networks/wax/pools/swap.alcor:1195', // PXJ/WAX\n    'https://api.geckoterminal.com/api/v2/networks/wax/pools/swap.alcor:1657', // PXJ/WUF\n    'https://api.geckoterminal.com/api/v2/networks/wax/pools/swap.alcor:6560'  // PXJ/KING\n  ]\n  private readonly FALLBACK_WAX_PRICE = 0.02 // Fallback WAX price in USD\n  private readonly FALLBACK_WPIXAL_PRICE = 0.00002 // Fallback WPIXAL price in USD\n  private readonly FALLBACK_PXJ_PRICE = 0.0001 // Fallback PXJ price in USD\n\n  /**\n   * Fetch all prices from Alcor Exchange API\n   */\n  private async fetchPrices(): Promise<void> {\n    const now = Date.now()\n    \n    // Return if cache is still valid\n    if ((now - this.lastFetchTime) < this.CACHE_DURATION && this.waxPriceUSD > 0 && this.wpixalPriceUSD > 0) {\n      return\n    }\n\n    try {\n      // Fetch WAX price from CoinGecko, WPIXAL price from GeckoTerminal, and PXJ prices from multiple pools\n      const [waxResponse, wpixalResponse, ...pxjResponses] = await Promise.all([\n        fetch(this.COINGECKO_WAX_API).catch(() => null),\n        fetch(this.GECKOTERMINAL_WPIXAL_API).catch(() => null),\n        ...this.GECKOTERMINAL_PXJ_POOLS.map(pool => fetch(pool).catch(() => null))\n      ])\n      \n      // Process WAX price\n      let waxPriceFromAPI = null\n      if (waxResponse && waxResponse.ok) {\n        try {\n          const waxData = await waxResponse.json()\n          waxPriceFromAPI = waxData.wax?.usd\n        } catch (error) {\n          log.warn('Failed to parse WAX price data:', 'PriceService.fetchPrices', { error })\n        }\n      }\n      \n      // Process WPIXAL price from GeckoTerminal\n      let wpixalPriceFromAPI = null\n      if (wpixalResponse && wpixalResponse.ok) {\n        try {\n          const wpixalData = await wpixalResponse.json()\n          // WPIXAL is the quote token in the WAXUSDC/WPIXAL pool\n          wpixalPriceFromAPI = wpixalData.data?.attributes?.quote_token_price_usd\n          if (wpixalPriceFromAPI) {\n            wpixalPriceFromAPI = parseFloat(wpixalPriceFromAPI)\n          }\n        } catch (error) {\n          log.warn('Failed to parse WPIXAL price data:', 'PriceService.fetchPrices', { error })\n        }\n      }\n      \n      // Process PXJ price from multiple pools (use the first successful one)\n       let pxjPriceFromAPI = null\n       for (const response of pxjResponses) {\n         if (response && response.ok) {\n           try {\n             const pxjData = await response.json()\n             // PXJ is the quote token in most pools (KING/PXJ, etc.)\n             const quoteTokenPrice = pxjData.data?.attributes?.quote_token_price_usd\n             if (quoteTokenPrice) {\n               pxjPriceFromAPI = parseFloat(quoteTokenPrice)\n               break // Use the first successful price\n             }\n           } catch (error) {\n             log.warn('Failed to parse PXJ price data from pool:', 'PriceService.fetchPrices', { error })\n           }\n         }\n       }\n       \n       this.waxPriceUSD = waxPriceFromAPI || this.FALLBACK_WAX_PRICE\n       this.wpixalPriceUSD = wpixalPriceFromAPI || this.FALLBACK_WPIXAL_PRICE\n       this.pxjPriceUSD = pxjPriceFromAPI || this.FALLBACK_PXJ_PRICE\n      \n      // Calculate WPIXAL price in WAX\n      if (this.waxPriceUSD > 0) {\n        this.wpixalPriceWAX = this.wpixalPriceUSD / this.waxPriceUSD\n      } else {\n        this.wpixalPriceWAX = 0.001 // Fallback ratio\n      }\n      \n      this.lastFetchTime = now\n      \n    } catch (error) {\n       ErrorMessageService.logError('PriceService.fetchPrices', error, { \n         waxApi: this.COINGECKO_WAX_API, \n         wpixalApi: this.GECKOTERMINAL_WPIXAL_API,\n         pxjPools: this.GECKOTERMINAL_PXJ_POOLS,\n         fallbackWaxPrice: this.FALLBACK_WAX_PRICE,\n         fallbackWpixalPrice: this.FALLBACK_WPIXAL_PRICE,\n         fallbackPxjPrice: this.FALLBACK_PXJ_PRICE\n       })\n      \n      // Use fallback prices\n      this.waxPriceUSD = this.FALLBACK_WAX_PRICE\n      this.wpixalPriceUSD = this.FALLBACK_WPIXAL_PRICE\n      this.pxjPriceUSD = this.FALLBACK_PXJ_PRICE\n      this.wpixalPriceWAX = this.FALLBACK_WPIXAL_PRICE / this.FALLBACK_WAX_PRICE\n      this.lastFetchTime = now\n    }\n  }\n\n  async getWaxPriceUSD(): Promise<number> {\n    await this.fetchPrices()\n    return this.waxPriceUSD\n  }\n\n  async getWpixalPriceWAX(): Promise<number> {\n    await this.fetchPrices()\n    return this.wpixalPriceWAX\n  }\n\n  async getWpixalPriceUSD(): Promise<number> {\n    await this.fetchPrices()\n    return this.wpixalPriceUSD\n  }\n\n  async getPxjPriceUSD(): Promise<number> {\n    await this.fetchPrices()\n    return this.pxjPriceUSD\n  }\n\n  convertWaxToUSD(waxAmount: string): string {\n    const amount = parseFloat(waxAmount.replace(/[^0-9.]/g, ''))\n    if (isNaN(amount) || this.waxPriceUSD <= 0) {\n      return '$0.00'\n    }\n    \n    const usdValue = amount * this.waxPriceUSD\n    return `$${formatNumber(usdValue, 2)}`\n  }\n\n  async convertWaxToUSDAsync(waxAmount: string): Promise<string> {\n    await this.getWaxPriceUSD()\n    return this.convertWaxToUSD(waxAmount)\n  }\n\n  async convertWaxToCurrencyAsync(waxAmount: string, currency: string = 'USD'): Promise<string> {\n    if (currency === 'USD') {\n      return this.convertWaxToUSDAsync(waxAmount)\n    }\n    \n    return currencyService.convertWaxToCurrency(waxAmount, currency)\n  }\n\n  /**\n   * Convert WPIXAL amount to WAX\n   */\n  async convertWpixalToWAX(wpixalAmount: string): Promise<string> {\n    try {\n      const amount = parseFloat(wpixalAmount.replace(/[^0-9.]/g, ''))\n      if (isNaN(amount)) return '0.0000 WAX'\n      \n      const wpixalPriceWAX = await this.getWpixalPriceWAX()\n      const waxValue = amount * wpixalPriceWAX\n      return formatWAXPrice(waxValue)\n    } catch (error) {\n      ErrorMessageService.logError('PriceService.convertWpixalToWAX', error, { wpixalAmount })\n      return '0.0000 WAX'\n    }\n  }\n\n  /**\n   * Convert WPIXAL amount to USD\n   */\n  async convertWpixalToUSD(wpixalAmount: string): Promise<string> {\n    try {\n      const amount = parseFloat(wpixalAmount.replace(/[^0-9.]/g, ''))\n      if (isNaN(amount)) return '$0.00'\n      \n      const wpixalPriceUSD = await this.getWpixalPriceUSD()\n      const usdValue = amount * wpixalPriceUSD\n      return `$${formatNumber(usdValue, 2)}`\n    } catch (error) {\n      ErrorMessageService.logError('PriceService.convertWpixalToUSD', error, { wpixalAmount })\n      return '$0.00'\n    }\n  }\n\n  /**\n   * Convert PXJ amount to USD\n   */\n  async convertPxjToUSD(pxjAmount: string): Promise<string> {\n    try {\n      const amount = parseFloat(pxjAmount.replace(/[^0-9.]/g, ''))\n      if (isNaN(amount)) return '$0.00'\n      \n      const pxjPriceUSD = await this.getPxjPriceUSD()\n      const usdValue = amount * pxjPriceUSD\n      return `$${formatNumber(usdValue, 6)}`\n    } catch (error) {\n      ErrorMessageService.logError('PriceService.convertPxjToUSD', error, { pxjAmount })\n      return '$0.00'\n    }\n  }\n\n  /**\n   * Convert PXJ amount to WAX\n   */\n  async convertPxjToWAX(pxjAmount: string): Promise<string> {\n    try {\n      const amount = parseFloat(pxjAmount.replace(/[^0-9.]/g, ''))\n      if (isNaN(amount)) return '0.0000 WAX'\n      \n      const pxjPriceUSD = await this.getPxjPriceUSD()\n      const waxPriceUSD = await this.getWaxPriceUSD()\n      const waxValue = (amount * pxjPriceUSD) / waxPriceUSD\n      return formatWAXPrice(waxValue)\n    } catch (error) {\n      ErrorMessageService.logError('PriceService.convertPxjToWAX', error, { pxjAmount })\n      return '0.0000 WAX'\n    }\n  }\n\n  // Helper method to get the selected currency from display settings\n  async convertWaxWithDisplaySettings(waxAmount: string): Promise<string> {\n    try {\n      // Get the selected currency from localStorage\n      const selectedCurrency = localStorage.getItem('selectedCurrency') || 'USD'\n      const showPricesInUSD = JSON.parse(localStorage.getItem('showPricesInUSD') || 'true')\n      \n      // If show prices in USD is disabled, return WAX amount\n      if (!showPricesInUSD) {\n        const amount = parseFloat(waxAmount.replace(/[^0-9.]/g, ''))\n        return formatWAXPrice(amount)\n      }\n      \n      return this.convertWaxToCurrencyAsync(waxAmount, selectedCurrency)\n    } catch (error) {\n      ErrorMessageService.logError('PriceService.convertWaxWithDisplaySettings', error, { waxAmount })\n      return this.convertWaxToUSDAsync(waxAmount)\n    }\n  }\n}\n\nexport const priceService = new PriceService()\nexport default priceService","import { logger } from './loggingService'\n\n/**\n * Centralized storage service with proper error handling and fallbacks\n */\nclass StorageService {\n  private isStorageAvailable(storage: Storage): boolean {\n    try {\n      const test = '__storage_test__'\n      storage.setItem(test, test)\n      storage.removeItem(test)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  private get isLocalStorageAvailable(): boolean {\n    return typeof window !== 'undefined' && this.isStorageAvailable(localStorage)\n  }\n\n  private get isSessionStorageAvailable(): boolean {\n    return typeof window !== 'undefined' && this.isStorageAvailable(sessionStorage)\n  }\n\n  /**\n   * Get item from storage with fallback and error handling\n   */\n  getItem(key: string, useSessionStorage = false): string | null {\n    try {\n      const storage = useSessionStorage ? sessionStorage : localStorage\n      \n      if (useSessionStorage && this.isSessionStorageAvailable) {\n        return storage.getItem(key)\n      } else if (!useSessionStorage && this.isLocalStorageAvailable) {\n        return storage.getItem(key)\n      }\n      \n      // Fallback to the other storage type\n      const fallbackStorage = useSessionStorage ? localStorage : sessionStorage\n      const isFallbackAvailable = useSessionStorage ? this.isLocalStorageAvailable : this.isSessionStorageAvailable\n      \n      if (isFallbackAvailable) {\n        logger.warn(`Primary storage unavailable, using fallback for key: ${key}`)\n        return fallbackStorage.getItem(key)\n      }\n      \n      logger.warn(`No storage available for key: ${key}`)\n      return null\n    } catch (error) {\n      logger.error('StorageService.getItem failed', 'StorageService', error as Error, { key, useSessionStorage })\n      return null\n    }\n  }\n\n  /**\n   * Set item in storage with fallback and error handling\n   */\n  setItem(key: string, value: string, useSessionStorage = false): boolean {\n    try {\n      const storage = useSessionStorage ? sessionStorage : localStorage\n      \n      if (useSessionStorage && this.isSessionStorageAvailable) {\n        storage.setItem(key, value)\n        return true\n      } else if (!useSessionStorage && this.isLocalStorageAvailable) {\n        storage.setItem(key, value)\n        return true\n      }\n      \n      // Fallback to the other storage type\n      const fallbackStorage = useSessionStorage ? localStorage : sessionStorage\n      const isFallbackAvailable = useSessionStorage ? this.isLocalStorageAvailable : this.isSessionStorageAvailable\n      \n      if (isFallbackAvailable) {\n        logger.warn(`Primary storage unavailable, using fallback for key: ${key}`)\n        fallbackStorage.setItem(key, value)\n        return true\n      }\n      \n      logger.warn(`No storage available for key: ${key}`)\n      return false\n    } catch (error) {\n      logger.error('StorageService.setItem failed', 'StorageService', error as Error, { key, useSessionStorage })\n      return false\n    }\n  }\n\n  /**\n   * Remove item from storage with error handling\n   */\n  removeItem(key: string, useSessionStorage = false): boolean {\n    try {\n      const storage = useSessionStorage ? sessionStorage : localStorage\n      \n      if (useSessionStorage && this.isSessionStorageAvailable) {\n        storage.removeItem(key)\n        return true\n      } else if (!useSessionStorage && this.isLocalStorageAvailable) {\n        storage.removeItem(key)\n        return true\n      }\n      \n      // Try to remove from both storages as fallback\n      let removed = false\n      if (this.isLocalStorageAvailable) {\n        localStorage.removeItem(key)\n        removed = true\n      }\n      if (this.isSessionStorageAvailable) {\n        sessionStorage.removeItem(key)\n        removed = true\n      }\n      \n      if (!removed) {\n        logger.warn(`No storage available to remove key: ${key}`)\n      }\n      \n      return removed\n    } catch (error) {\n      logger.error('StorageService.removeItem failed', 'StorageService', error as Error, { key, useSessionStorage })\n      return false\n    }\n  }\n\n  /**\n   * Clear all items from storage with error handling\n   */\n  clear(useSessionStorage = false): boolean {\n    try {\n      const storage = useSessionStorage ? sessionStorage : localStorage\n      \n      if (useSessionStorage && this.isSessionStorageAvailable) {\n        storage.clear()\n        return true\n      } else if (!useSessionStorage && this.isLocalStorageAvailable) {\n        storage.clear()\n        return true\n      }\n      \n      logger.warn('No storage available to clear')\n      return false\n    } catch (error) {\n      logger.error('StorageService.clear failed', 'StorageService', error as Error, { useSessionStorage })\n      return false\n    }\n  }\n\n  /**\n   * Get JSON object from storage with parsing error handling\n   */\n  getJSON<T>(key: string, defaultValue: T, useSessionStorage = false): T {\n    try {\n      const item = this.getItem(key, useSessionStorage)\n      if (item === null) {\n        return defaultValue\n      }\n      return JSON.parse(item) as T\n    } catch (error) {\n      logger.error('StorageService.getJSON failed', 'StorageService', error as Error, { key, useSessionStorage })\n      return defaultValue\n    }\n  }\n\n  /**\n   * Set JSON object in storage with stringification error handling\n   */\n  setJSON<T>(key: string, value: T, useSessionStorage = false): boolean {\n    try {\n      const jsonString = JSON.stringify(value)\n      return this.setItem(key, jsonString, useSessionStorage)\n    } catch (error) {\n      logger.error('StorageService.setJSON failed', 'StorageService', error as Error, { key, useSessionStorage })\n      return false\n    }\n  }\n\n  /**\n   * Get storage statistics\n   */\n  getStorageStats(): {\n    localStorage: { available: boolean; used: number; total: number }\n    sessionStorage: { available: boolean; used: number; total: number }\n  } {\n    const getStorageSize = (storage: Storage): { used: number; total: number } => {\n      try {\n        let used = 0\n        for (const key in storage) {\n          if (Object.prototype.hasOwnProperty.call(storage, key)) {\n            used += storage[key].length + key.length\n          }\n        }\n        \n        // Estimate total storage (usually 5-10MB for localStorage)\n        const total = 5 * 1024 * 1024 // 5MB estimate\n        return { used, total }\n      } catch {\n        return { used: 0, total: 0 }\n      }\n    }\n\n    return {\n      localStorage: {\n        available: this.isLocalStorageAvailable,\n        ...getStorageSize(this.isLocalStorageAvailable ? localStorage : {} as Storage)\n      },\n      sessionStorage: {\n        available: this.isSessionStorageAvailable,\n        ...getStorageSize(this.isSessionStorageAvailable ? sessionStorage : {} as Storage)\n      }\n    }\n  }\n\n  /**\n   * Check if storage quota is exceeded\n   */\n  isQuotaExceeded(): boolean {\n    const stats = this.getStorageStats()\n    const localStorageUsage = stats.localStorage.used / stats.localStorage.total\n    const sessionStorageUsage = stats.sessionStorage.used / stats.sessionStorage.total\n    \n    return localStorageUsage > 0.9 || sessionStorageUsage > 0.9\n  }\n\n  /**\n   * Clean up old or expired data\n   */\n  cleanup(keyPatterns: string[] = []): number {\n    let cleaned = 0\n    \n    try {\n      const storages = [\n        { storage: localStorage, available: this.isLocalStorageAvailable },\n        { storage: sessionStorage, available: this.isSessionStorageAvailable }\n      ]\n      \n      for (const { storage, available } of storages) {\n        if (!available) continue\n        \n        const keysToRemove: string[] = []\n        \n        for (let i = 0; i < storage.length; i++) {\n          const key = storage.key(i)\n          if (!key) continue\n          \n          // Remove keys matching patterns\n          for (const pattern of keyPatterns) {\n            if (key.includes(pattern)) {\n              keysToRemove.push(key)\n              break\n            }\n          }\n        }\n        \n        for (const key of keysToRemove) {\n          storage.removeItem(key)\n          cleaned++\n        }\n      }\n    } catch (error) {\n      logger.error('StorageService.cleanup failed', 'StorageService', error as Error, { keyPatterns })\n    }\n    \n    return cleaned\n  }\n}\n\nexport const storageService = new StorageService()\nexport default storageService","import type { NFTAsset, SaleData } from './api'\nimport { priceService } from './priceService'\nimport { ErrorMessageService } from './errorMessageService'\nimport { storageService } from './storageService'\n\nexport interface CartItem {\n  nft: NFTAsset\n  addedAt: number\n  isAvailable?: boolean\n  sale_id: string | null\n  selected?: boolean\n}\n\nexport interface CartTotals {\n  totalWAX: string\n  totalUSD: string\n  itemCount: number\n}\n\nclass CartService {\n  private storageKey = 'pixal-marketplace-cart'\n  private cart: CartItem[] = []\n  private listeners: Array<(cart: CartItem[]) => void> = []\n\n  constructor() {\n    this.loadCart()\n  }\n\n  // Load cart from storage with proper error handling\n  private loadCart(): void {\n    try {\n      this.cart = storageService.getJSON(this.storageKey, [])\n    } catch (error) {\n      ErrorMessageService.logError('CartService.loadCart', error)\n      this.cart = []\n    }\n  }\n\n  // Save cart to storage with proper error handling\n  private saveCart(): void {\n    try {\n      const success = storageService.setJSON(this.storageKey, this.cart)\n      if (!success) {\n        ErrorMessageService.logError('CartService.saveCart', new Error('Failed to save cart to storage'), { \n          storageKey: this.storageKey, \n          cartSize: this.cart.length \n        })\n      }\n      this.notifyListeners()\n    } catch (error) {\n      ErrorMessageService.logError('CartService.saveCart', error, { storageKey: this.storageKey, cartSize: this.cart.length })\n    }\n  }\n\n  // Add listener for cart changes\n  addListener(listener: (cart: CartItem[]) => void): void {\n    this.listeners.push(listener)\n  }\n\n  // Remove listener\n  removeListener(listener: (cart: CartItem[]) => void): void {\n    this.listeners = this.listeners.filter(l => l !== listener)\n  }\n\n  // Notify all listeners of cart changes\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => listener([...this.cart]))\n  }\n\n  // Add item to cart\n  addToCart(nft: NFTAsset): boolean {\n    // Check if item already exists in cart\n    const existingIndex = this.cart.findIndex(item => item.nft.asset_id === nft.asset_id)\n    \n    if (existingIndex !== -1) {\n      // Item already in cart, don't add duplicate\n      return false\n    }\n\n    const cartItem: CartItem = {\n      nft,\n      addedAt: Date.now(),\n      isAvailable: true,\n      sale_id: nft.sale_id\n    }\n\n    this.cart.push(cartItem)\n    this.saveCart()\n    return true\n  }\n\n  // Remove item from cart\n  removeFromCart(assetId: string): boolean {\n    const initialLength = this.cart.length\n    this.cart = this.cart.filter(item => item.nft.asset_id !== assetId)\n    \n    if (this.cart.length !== initialLength) {\n      this.saveCart()\n      return true\n    }\n    return false\n  }\n\n  // Check if item is in cart\n  isInCart(assetId: string): boolean {\n    return this.cart.some(item => item.nft.asset_id === assetId)\n  }\n\n  // Get cart items\n  getCart(): CartItem[] {\n    return [...this.cart]\n  }\n\n  // Get cart count\n  getCartCount(): number {\n    return this.cart.length\n  }\n\n  // Clear entire cart\n  clearCart(): void {\n    this.cart = []\n    this.saveCart()\n  }\n\n  // Remove unavailable items from cart\n  cleanupUnavailableItems(): void {\n    const initialLength = this.cart.length\n    this.cart = this.cart.filter(item => item.isAvailable !== false)\n    \n    if (this.cart.length !== initialLength) {\n      this.saveCart()\n    }\n  }\n\n  // Calculate cart totals\n  async calculateTotals(): Promise<CartTotals> {\n    const availableItems = this.cart.filter(item => item.isAvailable !== false)\n    \n    let totalWAXValue = 0\n    \n    // Sum up all WAX prices\n    availableItems.forEach(item => {\n      if (item.nft.price) {\n        const waxAmount = parseFloat(item.nft.price.replace(' WAX', ''))\n        if (!isNaN(waxAmount)) {\n          totalWAXValue += waxAmount\n        }\n      }\n    })\n\n    const totalWAX = `${totalWAXValue.toFixed(4)} WAX`\n    const totalUSD = await priceService.convertWaxToUSDAsync(totalWAX)\n\n    return {\n      totalWAX,\n      totalUSD,\n      itemCount: availableItems.length\n    }\n  }\n\n  // Check availability of cart items using AtomicAssets API with batching\n  async checkAvailability(): Promise<void> {\n    if (this.cart.length === 0) return\n    \n    const { apiService } = await import('./api')\n    \n    try {\n      // Batch check all sales at once instead of individual requests\n      const saleIds = this.cart.map(item => item.sale_id).filter(Boolean)\n      if (saleIds.length === 0) return\n      \n      const url = `${apiService.atomicMarketAPI}/atomicmarket/v1/sales?ids=${saleIds.join(',')}&state=1&limit=${saleIds.length}`\n      const response = await apiService.fetchWithRetry(url)\n      const data = await response.json()\n      \n      // Create a set of active sale IDs for quick lookup\n      const activeSaleIds = new Set(\n        data.success && data.data ? data.data.map((sale: SaleData) => sale.sale_id) : []\n      )\n      \n      // Update availability for all items\n      for (const item of this.cart) {\n        item.isAvailable = item.sale_id ? activeSaleIds.has(item.sale_id) : false\n      }\n      \n    } catch (error) {\n      ErrorMessageService.logError('CartService.checkAvailability', error, { cartSize: this.cart.length })\n      // If batch check fails, mark all items as potentially unavailable\n      for (const item of this.cart) {\n        item.isAvailable = false\n      }\n    }\n    \n    this.saveCart()\n  }\n\n  // Toggle item selection (for multi-select functionality)\n  toggleSelection(assetId: string): void {\n    const item = this.cart.find(item => item.nft.asset_id === assetId)\n    if (item) {\n      item.selected = !item.selected\n      this.saveCart()\n    }\n  }\n\n  // Select all available items\n  selectAll(): void {\n    this.cart.forEach(item => {\n      if (item.isAvailable !== false) {\n        item.selected = true\n      }\n    })\n    this.saveCart()\n  }\n\n  // Deselect all items\n  deselectAll(): void {\n    this.cart.forEach(item => {\n      item.selected = false\n    })\n    this.saveCart()\n  }\n\n  // Get selected items\n  getSelectedItems(): CartItem[] {\n    return this.cart.filter(item => item.selected === true)\n  }\n\n  // Get selected item count\n  getSelectedCount(): number {\n    return this.cart.filter(item => item.selected === true).length\n  }\n\n  // Remove selected items from cart\n  removeSelectedItems(): void {\n    this.cart = this.cart.filter(item => item.selected !== true)\n    this.saveCart()\n  }\n\n  // Check if item is selected\n  isSelected(assetId: string): boolean {\n    const item = this.cart.find(item => item.nft.asset_id === assetId)\n    return item?.selected === true\n  }\n}\n\n// Export singleton instance\nexport const cartService = new CartService()","import React, { createContext, useState, type ReactNode } from 'react'\n\nexport interface DisplaySettings {\n  showOtherCollections: boolean\n  showWhitelistedOnly: boolean\n  enableAnimatedNFTs: boolean\n  showExplicitContent: boolean\n  blockNSFW: boolean\n  blockAI: boolean\n  showChatButton: boolean\n  autoPlayVideos: boolean\n  muteVideos: boolean\n  showVideoControls: boolean\n  showPricesInUSD: boolean\n  selectedCurrency: string\n  showRarityRankings: boolean\n}\n\nexport interface DisplaySettingsContextType {\n  settings: DisplaySettings\n  updateSetting: (key: keyof DisplaySettings, value: boolean | string) => void\n}\n\nconst DisplaySettingsContext = createContext<DisplaySettingsContextType | undefined>(undefined)\n\ninterface DisplaySettingsProviderProps {\n  children: ReactNode\n}\n\nconst DisplaySettingsProvider: React.FC<DisplaySettingsProviderProps> = ({ children }) => {\n  const [settings, setSettings] = useState<DisplaySettings>(() => {\n    // Initialize from localStorage\n    return {\n      showOtherCollections: JSON.parse(localStorage.getItem('showOtherCollections') || 'true'),\n      showWhitelistedOnly: JSON.parse(localStorage.getItem('showWhitelistedOnly') || 'true'),\n      enableAnimatedNFTs: JSON.parse(localStorage.getItem('enableAnimatedNFTs') || 'true'),\n      showExplicitContent: JSON.parse(localStorage.getItem('showExplicitContent') || 'false'),\n      blockNSFW: JSON.parse(localStorage.getItem('blockNSFW') || 'false'),\n      blockAI: JSON.parse(localStorage.getItem('blockAI') || 'false'),\n      showChatButton: JSON.parse(localStorage.getItem('showChatButton') || 'true'),\n      autoPlayVideos: JSON.parse(localStorage.getItem('autoPlayVideos') || 'false'),\n      muteVideos: JSON.parse(localStorage.getItem('muteVideos') || 'true'),\n      showVideoControls: JSON.parse(localStorage.getItem('showVideoControls') || 'true'),\n      showPricesInUSD: JSON.parse(localStorage.getItem('showPricesInUSD') || 'true'),\n      selectedCurrency: localStorage.getItem('selectedCurrency') || 'USD',\n      showRarityRankings: JSON.parse(localStorage.getItem('showRarityRankings') || 'true')\n    }\n  })\n\n  const updateSetting = (key: keyof DisplaySettings, value: boolean | string) => {\n    setSettings(prev => {\n      const newSettings = { ...prev, [key]: value }\n      // Persist to localStorage\n      if (typeof value === 'string') {\n        localStorage.setItem(key, value)\n      } else {\n        localStorage.setItem(key, JSON.stringify(value))\n      }\n      return newSettings\n    })\n  }\n\n  const contextValue: DisplaySettingsContextType = {\n    settings,\n    updateSetting\n  }\n\n  return (\n    <DisplaySettingsContext.Provider value={contextValue}>\n      {children}\n    </DisplaySettingsContext.Provider>\n  )\n}\n\n// Default export for better HMR compatibility\nexport default DisplaySettingsProvider\nexport { DisplaySettingsProvider, DisplaySettingsContext }","import { useContext } from 'react'\nimport { DisplaySettingsContext, type DisplaySettingsContextType } from '../contexts/DisplaySettingsContext'\n\nexport const useDisplaySettings = (): DisplaySettingsContextType => {\n  const context = useContext(DisplaySettingsContext)\n  if (context === undefined) {\n    throw new Error('useDisplaySettings must be used within a DisplaySettingsProvider')\n  }\n  return context\n}","// Comprehensive monitoring and analytics service\nimport { log } from './loggingService'\n\ninterface PerformanceMetric {\n  name: string\n  value: number\n  timestamp: number\n  context?: Record<string, unknown>\n}\n\ninterface UserEvent {\n  event: string\n  properties: Record<string, unknown>\n  timestamp: number\n  userId?: string\n  sessionId: string\n}\n\ninterface ErrorReport {\n  error: Error\n  context: string\n  additionalInfo?: Record<string, unknown>\n  timestamp: number\n  userId?: string\n  sessionId: string\n  userAgent: string\n  url: string\n  stackTrace?: string\n}\n\ninterface APIMetrics {\n  endpoint: string\n  method: string\n  duration: number\n  status: number\n  timestamp: number\n  success: boolean\n  retryCount?: number\n}\n\ninterface UserSession {\n  sessionId: string\n  startTime: number\n  lastActivity: number\n  pageViews: number\n  events: UserEvent[]\n  userId?: string\n}\n\nclass MonitoringService {\n  private sessionId: string\n  private userId?: string\n  private session: UserSession\n  private performanceMetrics: PerformanceMetric[] = []\n  private apiMetrics: APIMetrics[] = []\n  private errorReports: ErrorReport[] = []\n  private isEnabled: boolean = true\n  private batchSize: number = 50\n  private flushInterval: number = 30000 // 30 seconds\n  private maxStoredMetrics: number = 1000\n  private pendingBatches: Array<{\n    type: 'performance' | 'api' | 'events' | 'errors'\n    data: (PerformanceMetric | APIMetrics | UserEvent | ErrorReport)[]\n    timestamp: number\n  }> = []\n  private batchTimeout: ReturnType<typeof setTimeout> | null = null\n\n  constructor() {\n    this.sessionId = this.generateSessionId()\n    this.session = {\n      sessionId: this.sessionId,\n      startTime: Date.now(),\n      lastActivity: Date.now(),\n      pageViews: 0,\n      events: []\n    }\n\n    this.initializeMonitoring()\n    this.startPerformanceObserver()\n    this.setupErrorHandlers()\n    this.startFlushTimer()\n  }\n\n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private initializeMonitoring(): void {\n    // Track page load performance\n    if (typeof window !== 'undefined' && window.performance) {\n      window.addEventListener('load', () => {\n        setTimeout(() => {\n          this.trackPageLoadPerformance()\n        }, 0)\n      })\n\n      // Track page visibility changes\n      document.addEventListener('visibilitychange', () => {\n        this.trackEvent('page_visibility_change', {\n          hidden: document.hidden\n        })\n      })\n\n      // Track user interactions\n      this.setupUserInteractionTracking()\n    }\n  }\n\n  private startPerformanceObserver(): void {\n    if (typeof window !== 'undefined' && 'PerformanceObserver' in window) {\n      try {\n        // Observe navigation timing\n        const navObserver = new PerformanceObserver((list) => {\n          for (const entry of list.getEntries()) {\n            if (entry.entryType === 'navigation') {\n              this.trackNavigationTiming(entry as PerformanceNavigationTiming)\n            }\n          }\n        })\n        navObserver.observe({ entryTypes: ['navigation'] })\n\n        // Observe resource timing\n        const resourceObserver = new PerformanceObserver((list) => {\n          for (const entry of list.getEntries()) {\n            if (entry.entryType === 'resource') {\n              this.trackResourceTiming(entry as PerformanceResourceTiming)\n            }\n          }\n        })\n        resourceObserver.observe({ entryTypes: ['resource'] })\n\n        // Observe largest contentful paint\n        const lcpObserver = new PerformanceObserver((list) => {\n          for (const entry of list.getEntries()) {\n            this.trackPerformanceMetric('largest_contentful_paint', entry.startTime)\n          }\n        })\n        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] })\n\n        // Observe first input delay\n        const fidObserver = new PerformanceObserver((list) => {\n          for (const entry of list.getEntries()) {\n            this.trackPerformanceMetric('first_input_delay', (entry as PerformanceEventTiming).processingStart - entry.startTime)\n          }\n        })\n        fidObserver.observe({ entryTypes: ['first-input'] })\n      } catch (error) {\n        log.warn('Performance Observer not fully supported', 'MonitoringService.startPerformanceObserver', { error })\n      }\n    }\n  }\n\n  private setupErrorHandlers(): void {\n    if (typeof window !== 'undefined') {\n      // Global error handler\n      window.addEventListener('error', (event) => {\n        this.reportError(event.error || new Error(event.message), 'global_error', {\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno\n        })\n      })\n\n      // Unhandled promise rejection handler\n      window.addEventListener('unhandledrejection', (event) => {\n        this.reportError(\n          event.reason instanceof Error ? event.reason : new Error(String(event.reason)),\n          'unhandled_promise_rejection'\n        )\n      })\n    }\n  }\n\n  private setupUserInteractionTracking(): void {\n    if (typeof window !== 'undefined') {\n      // Track clicks on important elements\n      document.addEventListener('click', (event) => {\n        const target = event.target as HTMLElement\n        if (target.matches('button, a, [role=\"button\"], .clickable')) {\n          this.trackEvent('user_click', {\n            element: target.tagName.toLowerCase(),\n            className: target.className,\n            id: target.id,\n            text: target.textContent?.slice(0, 50)\n          })\n        }\n      })\n\n      // Track form submissions\n      document.addEventListener('submit', (event) => {\n        const form = event.target as HTMLFormElement\n        this.trackEvent('form_submit', {\n          formId: form.id,\n          formClass: form.className,\n          action: form.action\n        })\n      })\n    }\n  }\n\n  private startFlushTimer(): void {\n    setInterval(() => {\n      this.flushMetrics()\n    }, this.flushInterval)\n  }\n\n  // Public API methods\n  setUserId(userId: string): void {\n    this.userId = userId\n    this.session.userId = userId\n  }\n\n  trackEvent(event: string, properties: Record<string, unknown> = {}): void {\n    if (!this.isEnabled) return\n\n    const userEvent: UserEvent = {\n      event,\n      properties,\n      timestamp: Date.now(),\n      userId: this.userId,\n      sessionId: this.sessionId\n    }\n\n    this.session.events.push(userEvent)\n    this.session.lastActivity = Date.now()\n    \n    // Add to batch for processing\n    this.addToBatch('events', userEvent)\n\n    // Limit stored events to prevent memory issues\n    if (this.session.events.length > this.maxStoredMetrics) {\n      this.session.events = this.session.events.slice(-this.maxStoredMetrics / 2)\n    }\n  }\n\n  trackPerformanceMetric(name: string, value: number, context?: Record<string, unknown>): void {\n    if (!this.isEnabled) return\n\n    const metric: PerformanceMetric = {\n      name,\n      value,\n      timestamp: Date.now(),\n      context\n    }\n\n    this.performanceMetrics.push(metric)\n    \n    // Add to batch for processing\n    this.addToBatch('performance', metric)\n\n    // Limit stored metrics\n    if (this.performanceMetrics.length > this.maxStoredMetrics) {\n      this.performanceMetrics = this.performanceMetrics.slice(-this.maxStoredMetrics / 2)\n    }\n  }\n\n  trackAPICall(endpoint: string, method: string, duration: number, status: number, success: boolean, retryCount?: number): void {\n    if (!this.isEnabled) return\n\n    const apiMetric: APIMetrics = {\n      endpoint,\n      method,\n      duration,\n      status,\n      timestamp: Date.now(),\n      success,\n      retryCount\n    }\n\n    this.apiMetrics.push(apiMetric)\n    \n    // Add to batch for processing\n    this.addToBatch('api', apiMetric)\n\n    // Track slow API calls as performance metrics\n    if (duration > 5000) { // 5 seconds\n      this.trackPerformanceMetric('slow_api_call', duration, {\n        endpoint,\n        method,\n        status\n      })\n    }\n\n    // Limit stored metrics\n    if (this.apiMetrics.length > this.maxStoredMetrics) {\n      this.apiMetrics = this.apiMetrics.slice(-this.maxStoredMetrics / 2)\n    }\n  }\n\n  reportError(error: Error, context: string, additionalInfo?: Record<string, unknown>): void {\n    if (!this.isEnabled) return\n\n    // Use centralized logging service\n    log.error(`${context}: ${error.message}`, 'monitoringService.reportError', error, { ...additionalInfo })\n\n    const errorReport: ErrorReport = {\n      error,\n      context,\n      additionalInfo,\n      timestamp: Date.now(),\n      userId: this.userId,\n      sessionId: this.sessionId,\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n      stackTrace: error.stack\n    }\n\n    this.errorReports.push(errorReport)\n\n    // Track error as event\n    this.trackEvent('error_occurred', {\n      context,\n      errorName: error.name,\n      errorMessage: error.message,\n      ...additionalInfo\n    })\n\n    // Limit stored errors\n    if (this.errorReports.length > this.maxStoredMetrics) {\n      this.errorReports = this.errorReports.slice(-this.maxStoredMetrics / 2)\n    }\n  }\n\n  // Performance tracking methods\n  private trackPageLoadPerformance(): void {\n    if (!window.performance || !window.performance.timing) return\n\n    const timing = window.performance.timing\n    const navigation = window.performance.navigation\n\n    // Calculate key metrics\n    const pageLoadTime = timing.loadEventEnd - timing.navigationStart\n    const domContentLoadedTime = timing.domContentLoadedEventEnd - timing.navigationStart\n    const firstByteTime = timing.responseStart - timing.navigationStart\n    const domInteractiveTime = timing.domInteractive - timing.navigationStart\n\n    this.trackPerformanceMetric('page_load_time', pageLoadTime)\n    this.trackPerformanceMetric('dom_content_loaded_time', domContentLoadedTime)\n    this.trackPerformanceMetric('first_byte_time', firstByteTime)\n    this.trackPerformanceMetric('dom_interactive_time', domInteractiveTime)\n\n    this.trackEvent('page_load', {\n      pageLoadTime,\n      domContentLoadedTime,\n      firstByteTime,\n      domInteractiveTime,\n      navigationType: navigation.type,\n      redirectCount: navigation.redirectCount\n    })\n  }\n\n  private trackNavigationTiming(entry: PerformanceNavigationTiming): void {\n    this.trackPerformanceMetric('dns_lookup_time', entry.domainLookupEnd - entry.domainLookupStart)\n    this.trackPerformanceMetric('tcp_connect_time', entry.connectEnd - entry.connectStart)\n    this.trackPerformanceMetric('request_response_time', entry.responseEnd - entry.requestStart)\n    this.trackPerformanceMetric('dom_processing_time', entry.domComplete - entry.domContentLoadedEventStart)\n  }\n\n  private trackResourceTiming(entry: PerformanceResourceTiming): void {\n    // Only track important resources to avoid noise\n    if (entry.name.includes('.js') || entry.name.includes('.css') || entry.name.includes('api')) {\n      this.trackPerformanceMetric('resource_load_time', entry.duration, {\n        resource: entry.name,\n        type: entry.initiatorType,\n        size: entry.transferSize\n      })\n    }\n  }\n\n  // Analytics and reporting methods\n  getSessionSummary(): UserSession {\n    return {\n      ...this.session,\n      events: [...this.session.events]\n    }\n  }\n\n  getPerformanceMetrics(): PerformanceMetric[] {\n    return [...this.performanceMetrics]\n  }\n\n  getAPIMetrics(): APIMetrics[] {\n    return [...this.apiMetrics]\n  }\n\n  getErrorReports(): ErrorReport[] {\n    return [...this.errorReports]\n  }\n\n  // Data export and external service integration\n  private async flushMetrics(): Promise<void> {\n    if (!this.isEnabled) return\n\n    const data = {\n      session: this.getSessionSummary(),\n      performance: this.getPerformanceMetrics(),\n      api: this.getAPIMetrics(),\n      errors: this.getErrorReports(),\n      timestamp: Date.now()\n    }\n\n    // In a real application, send to analytics service\n    // await this.sendToAnalyticsService(data)\n    \n    // For now, store in localStorage for debugging\n    try {\n      const existingData = JSON.parse(localStorage.getItem('monitoring_data') || '[]')\n      existingData.push(data)\n      \n      // Keep only last 10 flushes to prevent storage overflow\n      const recentData = existingData.slice(-10)\n      localStorage.setItem('monitoring_data', JSON.stringify(recentData))\n    } catch (error) {\n      log.warn('Failed to store monitoring data', 'MonitoringService.flushMetrics', { error })\n    }\n\n    // Clear metrics after flushing\n    this.performanceMetrics = []\n    this.apiMetrics = []\n    this.errorReports = []\n    this.session.events = []\n  }\n\n  // Configuration methods\n  enable(): void {\n    this.isEnabled = true\n  }\n\n  disable(): void {\n    this.isEnabled = false\n  }\n\n  isMonitoringEnabled(): boolean {\n    return this.isEnabled\n  }\n\n  setBatchSize(size: number): void {\n    this.batchSize = Math.max(10, Math.min(size, 200)) // Between 10 and 200\n  }\n  \n  /**\n   * Add data to batch for processing\n   */\n  private addToBatch(type: 'performance' | 'api' | 'events' | 'errors', data: PerformanceMetric | APIMetrics | UserEvent | ErrorReport): void {\n    if (!this.isEnabled) return\n    \n    let batch = this.pendingBatches.find(b => b.type === type)\n    \n    if (!batch) {\n      batch = {\n        type,\n        data: [],\n        timestamp: Date.now()\n      }\n      this.pendingBatches.push(batch)\n    }\n    \n    batch.data.push(data)\n    \n    // Process batch if it reaches the batch size\n    if (batch.data.length >= this.batchSize) {\n      this.processBatch(batch)\n      this.pendingBatches = this.pendingBatches.filter(b => b !== batch)\n    }\n    \n    // Set timeout to process remaining batches\n    this.scheduleBatchProcessing()\n  }\n  \n  /**\n   * Schedule batch processing\n   */\n  private scheduleBatchProcessing(): void {\n    if (this.batchTimeout) {\n      clearTimeout(this.batchTimeout)\n    }\n    \n    this.batchTimeout = setTimeout(() => {\n      this.processAllPendingBatches()\n    }, 5000) // Process remaining batches after 5 seconds\n  }\n  \n  /**\n   * Process a single batch\n   */\n  private async processBatch(batch: { type: string; data: (PerformanceMetric | APIMetrics | UserEvent | ErrorReport)[]; timestamp: number }): Promise<void> {\n    try {\n      // In a real implementation, send to analytics service\n      // await this.sendBatchToAnalyticsService(batch)\n      \n      // For now, store in localStorage with batch info\n      const batchData = {\n        ...batch,\n        batchId: this.generateBatchId(),\n        processedAt: Date.now()\n      }\n      \n      const existingBatches = JSON.parse(localStorage.getItem('monitoring_batches') || '[]')\n      existingBatches.push(batchData)\n      \n      // Keep only last 20 batches to prevent storage overflow\n      const recentBatches = existingBatches.slice(-20)\n      localStorage.setItem('monitoring_batches', JSON.stringify(recentBatches))\n    } catch (error) {\n      console.warn('Failed to process batch:', error)\n    }\n  }\n  \n  /**\n   * Process all pending batches\n   */\n  private async processAllPendingBatches(): Promise<void> {\n    const batches = [...this.pendingBatches]\n    this.pendingBatches = []\n    \n    for (const batch of batches) {\n      await this.processBatch(batch)\n    }\n    \n    if (this.batchTimeout) {\n      clearTimeout(this.batchTimeout)\n      this.batchTimeout = null\n    }\n  }\n  \n  /**\n   * Generate unique batch ID\n   */\n  private generateBatchId(): string {\n    return `batch_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  setFlushInterval(interval: number): void {\n    this.flushInterval = Math.max(5000, Math.min(interval, 300000)) // 5s to 5min\n  }\n\n  // Utility methods for external service integration\n  async exportData(): Promise<string> {\n    const data = {\n      session: this.getSessionSummary(),\n      performance: this.getPerformanceMetrics(),\n      api: this.getAPIMetrics(),\n      errors: this.getErrorReports()\n    }\n    return JSON.stringify(data, null, 2)\n  }\n\n  clearAllData(): void {\n    this.performanceMetrics = []\n    this.apiMetrics = []\n    this.errorReports = []\n    this.session.events = []\n    localStorage.removeItem('monitoring_data')\n  }\n}\n\n// Export singleton instance\nexport const monitoringService = new MonitoringService()\n\n// Export types for external use\nexport type {\n  PerformanceMetric,\n  UserEvent,\n  ErrorReport,\n  APIMetrics,\n  UserSession\n}","interface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  ttl: number; // Time to live in milliseconds\n}\n\ninterface CacheConfig {\n  defaultTTL: number;\n  maxSize: number;\n  cleanupInterval: number;\n}\n\nclass CacheService {\n  private cache = new Map<string, CacheEntry<unknown>>();\n  private config: CacheConfig;\n  private cleanupTimer: NodeJS.Timeout | null = null;\n\n  constructor(config: Partial<CacheConfig> = {}) {\n    this.config = {\n      defaultTTL: 5 * 60 * 1000, // 5 minutes\n      maxSize: 1000,\n      cleanupInterval: 60 * 1000, // 1 minute\n      ...config\n    };\n\n    this.startCleanup();\n  }\n\n  private startCleanup(): void {\n    this.cleanupTimer = setInterval(() => {\n      this.cleanup();\n    }, this.config.cleanupInterval);\n  }\n\n  private cleanup(): void {\n    const now = Date.now();\n    const keysToDelete: string[] = [];\n\n    for (const [key, entry] of this.cache.entries()) {\n      if (now - entry.timestamp > entry.ttl) {\n        keysToDelete.push(key);\n      }\n    }\n\n    keysToDelete.forEach(key => this.cache.delete(key));\n\n    // If cache is still too large, remove oldest entries\n    if (this.cache.size > this.config.maxSize) {\n      const entries = Array.from(this.cache.entries())\n        .sort(([, a], [, b]) => a.timestamp - b.timestamp);\n      \n      const toRemove = entries.slice(0, this.cache.size - this.config.maxSize);\n      toRemove.forEach(([key]) => this.cache.delete(key));\n    }\n  }\n\n  set<T>(key: string, data: T, ttl?: number): void {\n    const entry: CacheEntry<T> = {\n      data,\n      timestamp: Date.now(),\n      ttl: ttl || this.config.defaultTTL\n    };\n\n    this.cache.set(key, entry);\n  }\n\n  get<T>(key: string): T | null {\n    const entry = this.cache.get(key);\n    \n    if (!entry) {\n      return null;\n    }\n\n    const now = Date.now();\n    if (now - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return entry.data as T;\n  }\n\n  has(key: string): boolean {\n    const entry = this.cache.get(key);\n    if (!entry) return false;\n\n    const now = Date.now();\n    if (now - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      return false;\n    }\n\n    return true;\n  }\n\n  delete(key: string): boolean {\n    return this.cache.delete(key);\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n\n  // Cache with fetch pattern\n  async getOrFetch<T>(\n    key: string,\n    fetchFn: () => Promise<T>,\n    ttl?: number\n  ): Promise<T> {\n    const cached = this.get<T>(key);\n    if (cached !== null) {\n      return cached;\n    }\n\n    const data = await fetchFn();\n    this.set(key, data, ttl);\n    return data;\n  }\n\n  // Batch operations\n  setMany<T>(entries: Array<{ key: string; data: T; ttl?: number }>): void {\n    entries.forEach(({ key, data, ttl }) => {\n      this.set(key, data, ttl);\n    });\n  }\n\n  getMany<T>(keys: string[]): Array<{ key: string; data: T | null }> {\n    return keys.map(key => ({\n      key,\n      data: this.get<T>(key)\n    }));\n  }\n\n  // Statistics\n  getStats() {\n    const now = Date.now();\n    let validEntries = 0;\n    let expiredEntries = 0;\n\n    for (const entry of this.cache.values()) {\n      if (now - entry.timestamp > entry.ttl) {\n        expiredEntries++;\n      } else {\n        validEntries++;\n      }\n    }\n\n    return {\n      totalEntries: this.cache.size,\n      validEntries,\n      expiredEntries,\n      hitRate: validEntries / (validEntries + expiredEntries) || 0\n    };\n  }\n\n  destroy(): void {\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = null;\n    }\n    this.clear();\n  }\n}\n\n// Create singleton instance\nexport const cacheService = new CacheService({\n  defaultTTL: 5 * 60 * 1000, // 5 minutes for general data\n  maxSize: 1000,\n  cleanupInterval: 60 * 1000\n});\n\n// Specialized cache instances for different data types\nexport const assetCache = new CacheService({\n  defaultTTL: 10 * 60 * 1000, // 10 minutes for asset data\n  maxSize: 500,\n  cleanupInterval: 2 * 60 * 1000\n});\n\nexport const collectionCache = new CacheService({\n  defaultTTL: 30 * 60 * 1000, // 30 minutes for collection data\n  maxSize: 200,\n  cleanupInterval: 5 * 60 * 1000\n});\n\nexport const userCache = new CacheService({\n  defaultTTL: 2 * 60 * 1000, // 2 minutes for user data\n  maxSize: 100,\n  cleanupInterval: 30 * 1000\n});\n\nexport default cacheService;","// Optimized API Endpoint Management Service\n// Consolidates endpoint configuration and health monitoring\n\nexport interface EndpointConfig {\n  url: string\n  priority: number\n  healthStatus: 'healthy' | 'degraded' | 'unhealthy'\n  lastHealthCheck: number\n  consecutiveFailures: number\n  averageResponseTime: number\n  maxRetries: number\n}\n\nexport interface EndpointGroup {\n  name: string\n  endpoints: EndpointConfig[]\n  currentIndex: number\n  fallbackStrategy: 'round-robin' | 'priority' | 'fastest'\n  healthCheckInterval: number\n}\n\nclass ApiEndpointManager {\n  private endpointGroups: Map<string, EndpointGroup> = new Map()\n  private readonly HEALTH_CHECK_TIMEOUT = 5000 // 5 seconds\n  private readonly MAX_CONSECUTIVE_FAILURES = 3\n  private readonly HEALTH_CHECK_INTERVAL = 300000 // 5 minutes\n  private healthCheckTimers: Map<string, NodeJS.Timeout> = new Map()\n\n  constructor() {\n    this.initializeEndpointGroups()\n    this.startHealthChecks()\n  }\n\n  private initializeEndpointGroups(): void {\n    // Atomic Assets/Market endpoints\n    this.endpointGroups.set('atomic', {\n      name: 'atomic',\n      currentIndex: 0,\n      fallbackStrategy: 'priority',\n      healthCheckInterval: this.HEALTH_CHECK_INTERVAL,\n      endpoints: [\n        {\n          url: 'https://atomic.wax.eosrio.io',\n          priority: 1,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        },\n        {\n          url: 'https://wax-atomic.alcor.exchange',\n          priority: 2,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        },\n        {\n          url: 'https://atomic-wax-mainnet.wecan.dev',\n          priority: 3,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        },\n        {\n          url: 'https://wax.eosusa.io',\n          priority: 4,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        }\n      ]\n    })\n\n    // WAX Chain endpoints\n    this.endpointGroups.set('waxChain', {\n      name: 'waxChain',\n      currentIndex: 0,\n      fallbackStrategy: 'priority',\n      healthCheckInterval: this.HEALTH_CHECK_INTERVAL,\n      endpoints: [\n        {\n          url: 'https://wax.eosphere.io',\n          priority: 1,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        },\n        {\n          url: 'https://wax.eosrio.io',\n          priority: 2,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        },\n        {\n          url: 'https://api.wax.alohaeos.com',\n          priority: 3,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 3\n        }\n      ]\n    })\n\n    // Hyperion endpoints\n    this.endpointGroups.set('hyperion', {\n      name: 'hyperion',\n      currentIndex: 0,\n      fallbackStrategy: 'fastest',\n      healthCheckInterval: this.HEALTH_CHECK_INTERVAL,\n      endpoints: [\n        {\n          url: 'https://wax.eosrio.io',\n          priority: 1,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 2\n        },\n        {\n          url: 'https://api.wax.alohaeos.com',\n          priority: 2,\n          healthStatus: 'healthy',\n          lastHealthCheck: 0,\n          consecutiveFailures: 0,\n          averageResponseTime: 0,\n          maxRetries: 2\n        }\n      ]\n    })\n  }\n\n  /**\n   * Get the best available endpoint for a group\n   */\n  getBestEndpoint(groupName: string): string | null {\n    const group = this.endpointGroups.get(groupName)\n    if (!group) return null\n\n    const healthyEndpoints = group.endpoints.filter(ep => ep.healthStatus === 'healthy')\n    \n    if (healthyEndpoints.length === 0) {\n      // Fallback to degraded endpoints if no healthy ones\n      const degradedEndpoints = group.endpoints.filter(ep => ep.healthStatus === 'degraded')\n      if (degradedEndpoints.length > 0) {\n        return this.selectEndpoint(degradedEndpoints, group.fallbackStrategy)\n      }\n      // Last resort: use any endpoint\n      return group.endpoints[0]?.url || null\n    }\n\n    return this.selectEndpoint(healthyEndpoints, group.fallbackStrategy)\n  }\n\n  private selectEndpoint(endpoints: EndpointConfig[], strategy: string): string {\n    switch (strategy) {\n      case 'priority':\n        return endpoints.sort((a, b) => a.priority - b.priority)[0].url\n      case 'fastest':\n        return endpoints.sort((a, b) => a.averageResponseTime - b.averageResponseTime)[0].url\n      case 'round-robin':\n      default:\n        // Simple round-robin for now\n        return endpoints[Math.floor(Math.random() * endpoints.length)].url\n    }\n  }\n\n  /**\n   * Report endpoint failure to update health status\n   */\n  reportFailure(groupName: string, endpointUrl: string): void {\n    const group = this.endpointGroups.get(groupName)\n    if (!group) return\n\n    const endpoint = group.endpoints.find(ep => ep.url === endpointUrl)\n    if (!endpoint) return\n\n    endpoint.consecutiveFailures++\n    \n    if (endpoint.consecutiveFailures >= this.MAX_CONSECUTIVE_FAILURES) {\n      endpoint.healthStatus = 'unhealthy'\n    } else if (endpoint.consecutiveFailures >= 1) {\n      endpoint.healthStatus = 'degraded'\n    }\n  }\n\n  /**\n   * Report successful endpoint response\n   */\n  reportSuccess(groupName: string, endpointUrl: string, responseTime: number): void {\n    const group = this.endpointGroups.get(groupName)\n    if (!group) return\n\n    const endpoint = group.endpoints.find(ep => ep.url === endpointUrl)\n    if (!endpoint) return\n\n    endpoint.consecutiveFailures = 0\n    endpoint.healthStatus = 'healthy'\n    \n    // Update average response time (simple moving average)\n    if (endpoint.averageResponseTime === 0) {\n      endpoint.averageResponseTime = responseTime\n    } else {\n      endpoint.averageResponseTime = (endpoint.averageResponseTime * 0.8) + (responseTime * 0.2)\n    }\n  }\n\n  /**\n   * Get all endpoints for a group (for backward compatibility)\n   */\n  getEndpoints(groupName: string): string[] {\n    const group = this.endpointGroups.get(groupName)\n    return group ? group.endpoints.map(ep => ep.url) : []\n  }\n\n  /**\n   * Get current endpoint index for a group\n   */\n  getCurrentIndex(groupName: string): number {\n    const group = this.endpointGroups.get(groupName)\n    return group ? group.currentIndex : 0\n  }\n\n  /**\n   * Set current endpoint index for a group\n   */\n  setCurrentIndex(groupName: string, index: number): void {\n    const group = this.endpointGroups.get(groupName)\n    if (group && index >= 0 && index < group.endpoints.length) {\n      group.currentIndex = index\n    }\n  }\n\n  /**\n   * Start periodic health checks\n   */\n  private startHealthChecks(): void {\n    for (const [groupName, group] of this.endpointGroups) {\n      const timer = setInterval(() => {\n        this.performHealthCheck(groupName)\n      }, group.healthCheckInterval)\n      \n      this.healthCheckTimers.set(groupName, timer)\n    }\n  }\n\n  /**\n   * Perform health check for a group\n   */\n  private async performHealthCheck(groupName: string): Promise<void> {\n    const group = this.endpointGroups.get(groupName)\n    if (!group) return\n\n    const healthCheckPromises = group.endpoints.map(async (endpoint) => {\n      try {\n        const startTime = Date.now()\n        const controller = new AbortController()\n        const timeoutId = setTimeout(() => controller.abort(), this.HEALTH_CHECK_TIMEOUT)\n\n        const response = await fetch(`${endpoint.url}/health`, {\n          method: 'GET',\n          signal: controller.signal,\n          headers: { 'Accept': 'application/json' }\n        })\n\n        clearTimeout(timeoutId)\n        const responseTime = Date.now() - startTime\n        endpoint.lastHealthCheck = Date.now()\n\n        if (response.ok) {\n          this.reportSuccess(groupName, endpoint.url, responseTime)\n        } else {\n          this.reportFailure(groupName, endpoint.url)\n        }\n      } catch {\n        endpoint.lastHealthCheck = Date.now()\n        this.reportFailure(groupName, endpoint.url)\n      }\n    })\n\n    await Promise.allSettled(healthCheckPromises)\n  }\n\n  /**\n   * Get health status for all endpoint groups\n   */\n  getHealthStatus(): Record<string, { healthy: number; degraded: number; unhealthy: number }> {\n    const status: Record<string, { healthy: number; degraded: number; unhealthy: number }> = {}\n    \n    for (const [groupName, group] of this.endpointGroups) {\n      status[groupName] = {\n        healthy: group.endpoints.filter(ep => ep.healthStatus === 'healthy').length,\n        degraded: group.endpoints.filter(ep => ep.healthStatus === 'degraded').length,\n        unhealthy: group.endpoints.filter(ep => ep.healthStatus === 'unhealthy').length\n      }\n    }\n    \n    return status\n  }\n\n  /**\n   * Cleanup timers on service destruction\n   */\n  destroy(): void {\n    for (const timer of this.healthCheckTimers.values()) {\n      clearInterval(timer)\n    }\n    this.healthCheckTimers.clear()\n  }\n}\n\n// Export singleton instance\nexport const apiEndpointManager = new ApiEndpointManager()\nexport default apiEndpointManager","// API service for AtomicMarket integration\r\n// NOTE: wax.api.atomicassets.io is a dead domain \r\nimport { ErrorMessageService } from './errorMessageService'\r\nimport { monitoringService } from './monitoringService'\r\nimport { logger } from './loggingService'\r\nimport { assetCache, collectionCache, userCache, cacheService } from './cacheService'\r\nimport { formatWAXPrice, formatNumber } from '../utils/formatUtils'\r\nimport { API_ENDPOINTS, MarketplaceConfigService } from '../config/marketplaceConfig'\r\nimport { apiEndpointManager } from './apiEndpointManager'\r\nexport interface NFTAsset {\r\n  sale_id: string | null\r\n  asset_id: string\r\n  name: string\r\n  image: string\r\n  video?: string\r\n  price: string | null\r\n  seller: string | null\r\n  owner?: string\r\n  collection: string\r\n  schema: string\r\n  template_id?: string\r\n  template_mint?: number\r\n  max_supply?: string\r\n  traits: Record<string, string | number | boolean | null | undefined>\r\n  data?: Record<string, string | number | boolean | null | undefined>\r\n  rarity?: string\r\n  created_at_time?: string\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n  success: boolean\r\n  data: T\r\n  query_time?: number\r\n}\r\n\r\n// Enhanced health check configuration\r\ninterface HealthConfig {\r\n  path: string\r\n  validator?: (data: unknown) => boolean // Optional: Custom check for \"healthy\"\r\n  fallback?: boolean\r\n}\r\n\r\n// EOS Nation API response interfaces\r\ninterface EosNationEndpointData {\r\n  url?: string\r\n  endpoint?: string\r\n  api_url?: string\r\n  [key: string]: unknown\r\n}\r\n\r\ninterface EosNationReport {\r\n  atomic_https?: (string | EosNationEndpointData)[]\r\n  api_https2?: (string | EosNationEndpointData)[]\r\n  hyperion_https?: (string | EosNationEndpointData)[]\r\n  [key: string]: unknown\r\n}\r\n\r\ninterface EosNationResponse {\r\n  report?: EosNationReport\r\n  [key: string]: unknown\r\n}\r\n\r\nexport interface AssetData {\r\n  data?: {\r\n    img?: string\r\n    video?: string\r\n    [key: string]: string | number | boolean | undefined\r\n  }\r\n  template?: {\r\n    template_id: string\r\n    max_supply: string\r\n    immutable_data?: Record<string, string | number | boolean>\r\n  }\r\n  collection?: {\r\n    collection_name: string\r\n    name: string\r\n    img?: string\r\n  }\r\n  schema?: {\r\n    schema_name: string\r\n  }\r\n  asset_id?: string\r\n  name?: string\r\n  template_mint?: string | number\r\n}\r\n\r\nexport interface SaleData {\r\n  sale_id: string\r\n  assets: AssetData[]\r\n  listing_price: string\r\n  listing_symbol: string\r\n  seller: string\r\n  buyer?: string\r\n  updated_at_time: string\r\n  state: number\r\n  collection_name?: string\r\n  price?: PriceData\r\n}\r\n\r\nexport interface PriceData {\r\n  amount: string\r\n  token_symbol: string\r\n  token_precision: number\r\n  token_contract: string\r\n}\r\n\r\nexport interface CollectionData {\r\n  collection_name: string\r\n  name: string\r\n  img?: string\r\n  author: string\r\n  allow_notify: boolean\r\n  authorized_accounts: string[]\r\n  notify_accounts: string[]\r\n  market_fee: number\r\n  created_at_block: string\r\n  created_at_time: string\r\n  assets?: string | number\r\n  data?: Record<string, string | number | boolean>\r\n}\r\n\r\nexport interface MarketStats {\r\n  symbol: string\r\n  results: Array<{\r\n    time: string\r\n    volume: string\r\n    sales: string\r\n  }>\r\n}\r\n\r\nexport interface CollectionDetails {\r\n  collection_name: string\r\n  name: string\r\n  img?: string\r\n  author: string\r\n  allow_notify: boolean\r\n  authorized_accounts: string[]\r\n  notify_accounts: string[]\r\n  market_fee: number\r\n  data?: Record<string, string | number | boolean>\r\n  created_at_block: string\r\n  created_at_time: string\r\n  floor_price?: string\r\n  assets?: string\r\n  volume?: string\r\n  sales?: string\r\n}\r\n\r\nexport interface Schema {\r\n  schema_name: string\r\n  format: Array<{\r\n    name: string\r\n    type: string\r\n  }>\r\n  created_at_block: string\r\n  created_at_time: string\r\n}\r\n\r\n// Comprehensive AtomicAssets/AtomicMarket API parameters interface\r\nexport interface AtomicParams {\r\n  // Common pagination and sorting\r\n  page?: number               // Pagination page (starts at 1)\r\n  limit?: number              // 1-1000 (default 100)\r\n  order?: 'asc' | 'desc'\r\n  sort?: string               // e.g., 'created', 'price', 'asset_id', 'updated'\r\n  \r\n  // Asset filtering\r\n  collection_name?: string\r\n  schema_name?: string\r\n  template_id?: string | number\r\n  asset_id?: string | number\r\n  owner?: string\r\n  state?: string              // Comma-separated, e.g., '1,3' (sales: 1=listed,3=sold)\r\n  \r\n  // Price filtering\r\n  symbol?: string             // e.g., 'WAX'\r\n  min_price?: number\r\n  max_price?: number\r\n  \r\n  // Time filtering\r\n  before?: number             // Timestamp\r\n  after?: number              // Timestamp\r\n  \r\n  // ID filtering\r\n  ids?: string                // Comma-separated IDs\r\n  lower_bound?: string\r\n  upper_bound?: string\r\n  \r\n  // Sales-specific\r\n  seller?: string\r\n  buyer?: string\r\n  hide_offers?: boolean\r\n  \r\n  // Assets-specific\r\n  minted_by?: string\r\n  burner?: string\r\n  burned?: boolean\r\n  \r\n  // Offers-specific\r\n  sender?: string\r\n  recipient?: string\r\n  recipient_name?: string\r\n  \r\n  // Market-specific\r\n  marketplace?: string\r\n  maker_marketplace?: string\r\n  taker_marketplace?: string\r\n  \r\n  // Data filtering (for template/asset data)\r\n  [key: `data:${string}`]: string | number | boolean\r\n  \r\n  // Match filtering\r\n  match?: string\r\n  search?: string\r\n  \r\n  // Additional filters\r\n  authorized_account?: string\r\n  notify_account?: string\r\n  collection_blacklist?: string\r\n  collection_whitelist?: string\r\n  \r\n  // General index signature for compatibility\r\n  [key: string]: string | number | boolean | undefined\r\n}\r\n\r\nexport interface BurnData {\r\n  account: string\r\n  asset_ids: string[]\r\n  collection_name: string\r\n  created_at_block: string\r\n  created_at_time: string\r\n}\r\n\r\nexport interface CollectionAnalytics {\r\n  collection_name: string\r\n  volume?: string\r\n  sales?: string\r\n  floor?: string\r\n  average?: string\r\n  max?: string\r\n  assets?: string\r\n  holders?: number\r\n  dailyVolume?: string\r\n  dailySales?: number\r\n  totalTransactions?: number\r\n  activeListings?: number\r\n  averagePrice?: string\r\n  volume_24h?: string\r\n  floor_price?: string\r\n  market_cap?: string\r\n}\r\n\r\nexport interface SimilarCollection {\r\n  collection_name: string\r\n  name: string\r\n  similarity_score?: number\r\n}\r\n\r\nexport interface TemplateData {\r\n  template_id: string\r\n  max_supply: string\r\n  is_transferable: boolean\r\n  is_burnable: boolean\r\n  issued_supply: string\r\n  immutable_data: Record<string, unknown>\r\n  created_at_time: string\r\n  created_at_block: string\r\n  schema_name: string\r\n  img?: string\r\n  video?: string\r\n  data?: {\r\n    img?: string\r\n    video?: string\r\n  }\r\n  template?: {\r\n    immutable_data?: {\r\n      img?: string\r\n      video?: string\r\n    }\r\n  }\r\n}\r\n\r\nexport interface AssetDetails {\r\n  asset_id: string\r\n  collection_name: string\r\n  schema_name: string\r\n  template_id: string\r\n  name: string\r\n  owner: string\r\n  is_transferable: boolean\r\n  is_burnable: boolean\r\n  template: TemplateData\r\n  mutable_data: Record<string, unknown>\r\n  immutable_data: Record<string, unknown>\r\n  data?: Record<string, unknown>\r\n  created_at_time: string\r\n  created_at_block: string\r\n  minted_at_time: string\r\n  minted_at_block: string\r\n  updated_at_time: string\r\n  updated_at_block: string\r\n  transferred_at_time: string\r\n  transferred_at_block: string\r\n}\r\n\r\nexport interface TransferData {\r\n  from: string\r\n  to: string\r\n  asset_ids: string[]\r\n  memo: string\r\n  created_at_time: string\r\n  created_at_block: string\r\n}\r\n\r\nexport interface HolderData {\r\n  account: string\r\n  assets: string\r\n}\r\n\r\nexport interface CollectionVolumeData {\r\n  date: string\r\n  volume: string\r\n  sales: number\r\n}\r\n\r\n// WAX Chain API interfaces\r\nexport interface WaxAccountInfo {\r\n  account_name: string\r\n  head_block_num: number\r\n  head_block_time: string\r\n  privileged: boolean\r\n  last_code_update: string\r\n  created: string\r\n  core_liquid_balance?: string\r\n  ram_quota: number\r\n  net_weight: number\r\n  cpu_weight: number\r\n  net_limit: {\r\n    used: number\r\n    available: number\r\n    max: number\r\n  }\r\n  cpu_limit: {\r\n    used: number\r\n    available: number\r\n    max: number\r\n  }\r\n  ram_usage: number\r\n  permissions: WaxPermission[]\r\n  total_resources?: {\r\n    owner: string\r\n    net_weight: string\r\n    cpu_weight: string\r\n    ram_bytes: number\r\n  }\r\n  self_delegated_bandwidth?: {\r\n    from: string\r\n    to: string\r\n    net_weight: string\r\n    cpu_weight: string\r\n  }\r\n  refund_request?: {\r\n    owner: string\r\n    net_amount: string\r\n    cpu_amount: string\r\n    request_time: string\r\n  }\r\n  voter_info?: {\r\n    owner: string\r\n    proxy: string\r\n    producers: string[]\r\n    staked: number\r\n    last_vote_weight: string\r\n    proxied_vote_weight: string\r\n    is_proxy: number\r\n    flags1: number\r\n    reserved2: number\r\n    reserved3: string\r\n  }\r\n}\r\n\r\nexport interface WaxPermission {\r\n  perm_name: string\r\n  parent: string\r\n  required_auth: {\r\n    threshold: number\r\n    keys: Array<{\r\n      key: string\r\n      weight: number\r\n    }>\r\n    accounts: Array<{\r\n      permission: {\r\n        actor: string\r\n        permission: string\r\n      }\r\n      weight: number\r\n    }>\r\n    waits: Array<{\r\n      wait_sec: number\r\n      weight: number\r\n    }>\r\n  }\r\n}\r\n\r\nexport interface WaxChainInfo {\r\n  server_version: string\r\n  chain_id: string\r\n  head_block_num: number\r\n  last_irreversible_block_num: number\r\n  last_irreversible_block_id: string\r\n  head_block_id: string\r\n  head_block_time: string\r\n  head_block_producer: string\r\n  virtual_block_cpu_limit: number\r\n  virtual_block_net_limit: number\r\n  block_cpu_limit: number\r\n  block_net_limit: number\r\n  server_version_string: string\r\n  fork_db_head_block_num: number\r\n  fork_db_head_block_id: string\r\n}\r\n\r\nexport interface WaxCurrencyBalance {\r\n  balance: string\r\n  contract: string\r\n  symbol: string\r\n}\r\n\r\n// WAX Light API interfaces\r\nexport interface LightApiBalance {\r\n  amount: string\r\n  currency: string\r\n  decimals: string\r\n  contract: string\r\n}\r\n\r\nexport interface LightApiResponse {\r\n  account_name: string\r\n  balances: LightApiBalance[]\r\n  chain: {\r\n    description: string\r\n    block_num: number\r\n    block_time: string\r\n    chainid: string\r\n    production: number\r\n    sync: number\r\n    network: string\r\n    decimals: number\r\n    rex_enabled: number\r\n    systoken: string\r\n  }\r\n}\r\n\r\n// Alcor Exchange API interfaces\r\nexport interface AlcorTokenPrice {\r\n  symbol: string\r\n  contract: string\r\n  id: string\r\n  system_price: number\r\n  usd_price: number\r\n  decimals: number\r\n}\r\n\r\nexport interface AlcorPairData {\r\n  base: {\r\n    id: string\r\n    contract: string\r\n    symbol: string\r\n    precision: number\r\n  }\r\n  target: {\r\n    id: string\r\n    contract: string\r\n    symbol: string\r\n    precision: number\r\n  }\r\n  ticker_id: string\r\n}\r\n\r\nexport interface AlcorSwapParams {\r\n  from_token: string\r\n  from_contract: string\r\n  to_token: string\r\n  to_contract: string\r\n  amount: string\r\n  slippage: number\r\n}\r\n\r\n/*\r\n=== API SOURCES DOCUMENTATION ===\r\n\r\n1. AtomicAssets API - NFT data and marketplace\r\n   - Endpoints: Multiple fallback endpoints for redundancy\r\n   - Docs: https://github.com/pinknetworkx/eosio-contract-api-docs oor swagger: https://wax-atomic.alcor.exchange/docs/#/\r\n   - Usage: Collections, NFTs, sales, transfers, market data\r\n\r\n2. AtomicMarket API - NFT marketplace transactions\r\n   - Endpoints: Same as AtomicAssets (integrated)\r\n   - Docs: https://github.com/pinknetworkx/eosio-contract-api-docs\r\n   - Usage: Sales data, market statistics, pricing\r\n\r\n3. HiveBP API - Enhanced WAX blockchain data\r\n   - Endpoint: https://wax-api.hivebp.io\r\n   - Docs: Custom HiveBP endpoints  https://hivebp.github.io/wax-api\r\n   - Usage: Similar collections, enhanced analytics\r\n\r\n4. WAX Chain API - Direct blockchain queries\r\n   - Endpoints: Multiple WAX RPC endpoints\r\n   - Docs: https://developers.eos.io/manuals/eos/latest/nodeos/plugins/chain_api_plugin/api-reference/index\r\n  -  full ocs: https://docs.wax.io/apis/chain-api.htm\r\n   - Usage: Account info, token balances, chain data\r\n\r\n5. WAX Light API - Fast token balance queries\r\n   - Endpoint: https://wax.light-api.net\r\n   - Docs: https://github.com/cc32d9/eosio_light_api/blob/master/README.md\r\n   - Usage: Quick token balance lookups, account data\r\n\r\n6. Alcor Exchange API - Token prices and DEX data\r\n   - Endpoint: https://api.alcor.exchange\r\n   - Docs: https://api.alcor.exchange/#introduction\r\n   - Usage: Token prices, market data, bulk sell functionality\r\n\r\n*/\r\n\r\nclass ApiService {\r\n  // Multiple API endpoints for redundancy and fallback support\r\n  // Updated: Removed failing endpoints based on health checks\r\n  private atomicEndpoints: string[] = [...API_ENDPOINTS.ATOMIC_ASSETS]\r\n  \r\n  private readonly hiveBPAPI = API_ENDPOINTS.WAX_CHAIN.HIVEBP\r\n  \r\n  // WAX Light API endpoint\r\n  private readonly waxLightAPI = API_ENDPOINTS.WAX_CHAIN.LIGHT_API\r\n  \r\n  // Alcor Exchange API endpoint - WAX specific\r\n  private readonly alcorAPI = API_ENDPOINTS.SPECIALIZED.ALCOR\r\n  \r\n  // WAX Chain API endpoints\r\n  // Updated: Prioritize working endpoints, keep others as fallbacks\r\n  private waxChainEndpoints: string[] = [...API_ENDPOINTS.WAX_CHAIN.FALLBACK_ENDPOINTS]\r\n\r\n  // WAX Hyperion History API endpoints\r\n  private hyperionEndpoints = API_ENDPOINTS.WAX_CHAIN.HYPERION_ENDPOINTS\r\n  \r\n  private currentEndpointIndex = 0\r\n  private currentWaxChainIndex = 0\r\n  private currentHyperionIndex = 0\r\n  private adaptiveLimits = new Map<string, number>() // Track optimal limits per endpoint\r\n  \r\n  // Optimized cache configuration\r\n  private readonly DEFAULT_CACHE_TTL = 300000 // 5 minutes in milliseconds\r\n  \r\n  private get waxChainAPI() {\r\n    return apiEndpointManager.getBestEndpoint('waxChain') || this.waxChainEndpoints[this.currentWaxChainIndex]\r\n  }\r\n  \r\n  public get atomicMarketAPI() {\r\n    return this.atomicEndpoints[this.currentEndpointIndex]\r\n  }\r\n  \r\n  public get atomicAssetsAPI() {\r\n    return this.atomicEndpoints[this.currentEndpointIndex]\r\n  }\r\n\r\n  /**\r\n   * Get current healthy atomic endpoint with intelligent load balancing\r\n   */\r\n  public getCurrentAtomicEndpoint(): string {\r\n    // Use the new endpoint manager for intelligent selection\r\n    const bestEndpoint = apiEndpointManager.getBestEndpoint('atomic')\r\n    if (bestEndpoint) {\r\n      return bestEndpoint\r\n    }\r\n    \r\n    // Fallback to legacy method if endpoint manager fails\r\n    const healthyEndpoints = this.getHealthyEndpoints(this.atomicEndpoints)\r\n    if (healthyEndpoints.length > 0) {\r\n      const healthyEndpoint = healthyEndpoints[0]\r\n      this.currentEndpointIndex = this.atomicEndpoints.indexOf(healthyEndpoint as typeof this.atomicEndpoints[0])\r\n      return healthyEndpoint\r\n    }\r\n    \r\n    return this.atomicEndpoints[this.currentEndpointIndex] || this.atomicEndpoints[0]\r\n  }\r\n  \r\n  // Enhanced cache helper methods\r\n  private getFromCache<T>(key: string): T | null {\r\n    // Determine which cache to use based on key prefix\r\n    if (key.startsWith('asset_')) {\r\n      return assetCache.get(key)\r\n    } else if (key.startsWith('collection_')) {\r\n      return collectionCache.get(key)\r\n    } else if (key.startsWith('user_')) {\r\n      return userCache.get(key)\r\n    }\r\n    return cacheService.get(key)\r\n  }\r\n\r\n  private setCache<T>(key: string, data: T, ttl: number = this.DEFAULT_CACHE_TTL): void {\r\n    // Determine which cache to use based on key prefix\r\n    if (key.startsWith('asset_')) {\r\n      assetCache.set(key, data, ttl)\r\n    } else if (key.startsWith('collection_')) {\r\n      collectionCache.set(key, data, ttl)\r\n    } else if (key.startsWith('user_')) {\r\n      userCache.set(key, data, ttl)\r\n    } else {\r\n      cacheService.set(key, data, ttl)\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n  // Legacy cache cleanup method removed - handled by centralized cache service\r\n  \r\n  /**\r\n   * Report endpoint health status to the endpoint manager\r\n   */\r\n  private reportEndpointHealth(url: string, success: boolean, responseTime?: number): void {\r\n    try {\r\n      const urlObj = new URL(url)\r\n      const baseUrl = `${urlObj.protocol}//${urlObj.host}`\r\n      \r\n      // Determine which endpoint group this belongs to\r\n      let groupName = 'atomic' // default\r\n      if (url.includes('wax.eosphere.io') || url.includes('wax.eosrio.io') || url.includes('api.wax.alohaeos.com')) {\r\n        if (url.includes('/v2/history') || url.includes('/v1/history')) {\r\n          groupName = 'hyperion'\r\n        } else {\r\n          groupName = 'waxChain'\r\n        }\r\n      }\r\n      \r\n      if (success && responseTime !== undefined) {\r\n        apiEndpointManager.reportSuccess(groupName, baseUrl, responseTime)\r\n      } else if (!success) {\r\n        apiEndpointManager.reportFailure(groupName, baseUrl)\r\n      }\r\n    } catch (error) {\r\n      // Silently fail to avoid disrupting main API functionality\r\n      logger.warn('Failed to report endpoint health:', 'ApiService.reportEndpointHealth', error as Error)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get cache statistics for monitoring (aggregated from centralized cache service)\r\n   */\r\n  getCacheStats(): {\r\n    totalEntries: number\r\n    validEntries: number\r\n    expiredEntries: number\r\n    hitRate: number\r\n  } {\r\n    const assetStats = assetCache.getStats()\r\n    const collectionStats = collectionCache.getStats()\r\n    const userStats = userCache.getStats()\r\n    const generalStats = cacheService.getStats()\r\n    \r\n    return {\r\n      totalEntries: assetStats.totalEntries + collectionStats.totalEntries + userStats.totalEntries + generalStats.totalEntries,\r\n      validEntries: assetStats.validEntries + collectionStats.validEntries + userStats.validEntries + generalStats.validEntries,\r\n      expiredEntries: assetStats.expiredEntries + collectionStats.expiredEntries + userStats.expiredEntries + generalStats.expiredEntries,\r\n      hitRate: (assetStats.hitRate + collectionStats.hitRate + userStats.hitRate + generalStats.hitRate) / 4\r\n    }\r\n  }\r\n  \r\n  /**\r\n    * Clear all cache entries (using centralized cache service)\r\n    */\r\n   clearCache(): void {\r\n     assetCache.clear()\r\n     collectionCache.clear()\r\n     userCache.clear()\r\n     cacheService.clear()\r\n   }\r\n   \r\n   /**\r\n    * Warm up cache with commonly accessed data\r\n    */\r\n   async warmupCache(account?: string): Promise<void> {\r\n     try {\r\n       const warmupTasks: Promise<unknown>[] = []\r\n       \r\n       // Warm up collection data for top collections\r\n       const topCollections = this.approvedCollections.slice(0, 5)\r\n       for (const collection of topCollections) {\r\n         warmupTasks.push(\r\n           this.getCollectionStats(collection).catch(error => \r\n             ErrorMessageService.logError('ApiService.warmupCache.collectionStats', error, { collection })\r\n           )\r\n         )\r\n       }\r\n       \r\n       // Warm up market stats\r\n       warmupTasks.push(\r\n         this.getMarketStats().catch(error => \r\n           ErrorMessageService.logError('ApiService.warmupCache.marketStats', error)\r\n         )\r\n       )\r\n       \r\n       // If account provided, warm up user-specific data\r\n       if (account) {\r\n         warmupTasks.push(\r\n           this.getUserInventoryOverview(account).catch(error => \r\n             ErrorMessageService.logError('ApiService.warmupCache.userInventory', error, { account })\r\n           )\r\n         )\r\n       }\r\n       \r\n       // Execute all warmup tasks concurrently with a timeout\r\n       await Promise.allSettled(warmupTasks)\r\n       \r\n     } catch (error) {\r\n        ErrorMessageService.logError('ApiService.warmupCache', error as Error)\r\n      }\r\n   }\r\n   \r\n   /**\r\n    * Intelligent prefetching based on user behavior patterns\r\n    */\r\n   async prefetchData(context: {\r\n     currentPage?: string\r\n     userAccount?: string\r\n     recentCollections?: string[]\r\n     recentSearches?: string[]\r\n   }): Promise<void> {\r\n     try {\r\n       const prefetchTasks: Promise<unknown>[] = []\r\n       \r\n       // Prefetch based on current page context\r\n       if (context.currentPage === 'marketplace') {\r\n         // Prefetch next page of assets\r\n         prefetchTasks.push(\r\n           this.getPxApprovedListings(100, 100).catch((error: unknown) => \r\n             ErrorMessageService.logError('ApiService.prefetch.marketplaceAssets', error)\r\n           )\r\n         )\r\n       }\r\n       \r\n       if (context.currentPage === 'inventory' && context.userAccount) {\r\n         // Prefetch user's collection data\r\n         prefetchTasks.push(\r\n           this.getUserInventoryOptimized(context.userAccount, { page: 2 }).catch(error => \r\n             ErrorMessageService.logError('ApiService.prefetch.userInventory', error, { account: context.userAccount })\r\n           )\r\n         )\r\n       }\r\n       \r\n       // Prefetch data for recently viewed collections\r\n       if (context.recentCollections) {\r\n         for (const collection of context.recentCollections.slice(0, 3)) {\r\n           prefetchTasks.push(\r\n             this.getCollectionStats(collection).catch(error => \r\n               ErrorMessageService.logError('ApiService.prefetch.recentCollection', error, { collection })\r\n             )\r\n           )\r\n         }\r\n       }\r\n       \r\n       // Execute prefetch tasks with lower priority\r\n       setTimeout(() => {\r\n         Promise.allSettled(prefetchTasks)\r\n       }, 1000) // Delay prefetching to not interfere with immediate requests\r\n       \r\n     } catch (error) {\r\n       ErrorMessageService.logError('ApiService.prefetchData', error as Error)\r\n     }\r\n   }\r\n   \r\n   /**\r\n    * Cache invalidation for specific data types (using centralized cache service)\r\n    */\r\n   invalidateCache(pattern: string | RegExp): void {\r\n     // Delegate to centralized cache services\r\n     if (typeof pattern === 'string') {\r\n       // Clear from all cache services based on pattern\r\n       assetCache.clear() // Could be more selective based on pattern\r\n       collectionCache.clear()\r\n       userCache.clear()\r\n       cacheService.clear()\r\n     } else {\r\n       // For regex patterns, clear all caches as we can't easily filter\r\n       assetCache.clear()\r\n       collectionCache.clear()\r\n       userCache.clear()\r\n       cacheService.clear()\r\n     }\r\n   }\r\n  \r\n  \r\n  private getAdaptiveLimit(baseUrl: string, requestedLimit: number): number {\r\n    const key = new URL(baseUrl).hostname\r\n    const storedLimit = this.adaptiveLimits.get(key)\r\n    \r\n    if (storedLimit) {\r\n      return Math.min(requestedLimit, storedLimit, 100) // Enforce max 100\r\n    }\r\n    \r\n    // Start with max limit of 100 to avoid API errors\r\n    return Math.min(requestedLimit, 100)\r\n  }\r\n  \r\n  private updateAdaptiveLimit(baseUrl: string, limit: number, success: boolean): void {\r\n    const key = new URL(baseUrl).hostname\r\n    \r\n    if (!success) {\r\n      // Reduce limit on failure\r\n      const newLimit = Math.max(Math.floor(limit * 0.7), 20)  // Min 20 to avoid too low\r\n      this.adaptiveLimits.set(key, newLimit)\r\n      // Reduced API limit due to rate limiting\r\n    } else if (limit < 100) {\r\n      // Gradually increase limit on success\r\n      const currentLimit = this.adaptiveLimits.get(key) || limit\r\n      const newLimit = Math.min(Math.floor(currentLimit * 1.1), 100)  // Max 100 (safe limit)\r\n      this.adaptiveLimits.set(key, newLimit)\r\n    }\r\n  }\r\n\r\n  private approvedCollections = [\r\n    'pixeljourney',\r\n    'friedfactory'\r\n  ]\r\n  \r\n  constructor() {\r\n    // Initialize with first endpoint\r\n    this.currentEndpointIndex = 0\r\n    this.currentWaxChainIndex = 0\r\n    this.currentHyperionIndex = 0\r\n    \r\n    // Initialize health configurations\r\n    this.initializeHealthConfigs()\r\n    \r\n    // // Start cache maintenance\r\n    // this.startCacheMaintenance()\r\n    \r\n    // Start health checks - temporarily disabled to prevent duplicate health checking\r\n    // with apiEndpointManager.ts which is already handling endpoint health monitoring\r\n    // this.startHealthChecks()\r\n  }\r\n  \r\n  // /**\r\n  //  * Start periodic cache maintenance\r\n  //  */\r\n  // private startCacheMaintenance(): void {\r\n  //   // Clean expired cache entries every 5 minutes\r\n  //   setInterval(() => {\r\n  //     this.clearExpiredCache()\r\n  //   }, 5 * 60 * 1000)\r\n    \r\n  //   // Cache optimization is now handled by centralized cache services\r\n  //   // Each cache service manages its own cleanup and eviction policies\r\n  // }\r\n  \r\n\r\n\r\n  // Separate fetch method for Alcor Exchange API calls\r\n  private async fetchAlcorAPI(url: string, retries = 3, options?: RequestInit): Promise<Response> {\r\n    let lastError: Error | null = null\r\n    \r\n    const startTime = Date.now()\r\n    const method = options?.method || 'GET'\r\n    \r\n    for (let i = 0; i < retries; i++) {\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n          },\r\n          mode: 'cors',\r\n          signal: options?.signal,\r\n          ...options\r\n        })\r\n        \r\n        const duration = Date.now() - startTime\r\n        \r\n        if (response.ok) {\r\n          // Track successful API call\r\n          monitoringService.trackAPICall(url, method, duration, response.status, true, i)\r\n          return response\r\n        }\r\n        \r\n        lastError = new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n        \r\n        if (i < retries - 1) {\r\n          await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)))\r\n        } else {\r\n          // Track failed API call on final retry\r\n          monitoringService.trackAPICall(url, method, duration, response.status, false, i)\r\n        }\r\n      } catch (error) {\r\n        const duration = Date.now() - startTime\r\n        lastError = error as Error\r\n        \r\n        // Track error on final retry\r\n        if (i === retries - 1) {\r\n          monitoringService.trackAPICall(url, method, duration, 0, false, i)\r\n          monitoringService.reportError(lastError, 'alcor_api_error', { url, method, retries: i + 1 })\r\n        }\r\n        \r\n        // Don't retry if request was aborted\r\n        if (error instanceof Error && error.name === 'AbortError') {\r\n          monitoringService.reportError(error, 'alcor_api_abort', { url, method })\r\n          throw error\r\n        }\r\n        if (i < retries - 1) {\r\n          await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)))\r\n        }\r\n      }\r\n    }\r\n    \r\n    throw lastError || new Error('Failed to fetch from Alcor Exchange API')\r\n  }\r\n\r\n  // Circuit breaker state management\r\n  private circuitBreakerState: Map<string, {\r\n    failures: number\r\n    lastFailure: number\r\n    state: 'closed' | 'open' | 'half-open'\r\n  }> = new Map()\r\n\r\n  private readonly CIRCUIT_BREAKER_THRESHOLD = 5\r\n  private readonly CIRCUIT_BREAKER_TIMEOUT = 60000 // 1 minute\r\n  private readonly MAX_TIMEOUT = 30000 // 30 seconds\r\n  \r\n\r\n  \r\n  // Health check management\r\n  private endpointHealth: Map<string, {\r\n    isHealthy: boolean\r\n    lastCheck: number\r\n    consecutiveFailures: number\r\n    responseTime: number\r\n  }> = new Map()\r\n  private readonly HEALTH_CHECK_INTERVAL = 300000 // 5 minutes\r\n  private readonly MAX_CONSECUTIVE_FAILURES = 3\r\n  private healthCheckIntervalId: NodeJS.Timeout | null = null\r\n\r\n  private healthConfigs: Map<string, HealthConfig> = new Map()\r\n\r\n  /**\r\n   * Initialize health configurations for all endpoints\r\n   */\r\n  private initializeHealthConfigs(): void {\r\n    this.healthConfigs.clear()\r\n    \r\n    // Add configurations for all validated endpoints\r\n    this.getValidatedEndpoints('atomic').forEach(ep => {\r\n      this.healthConfigs.set(ep, {\r\n        path: '/atomicassets/v1/collections?limit=1',\r\n        validator: (data: unknown) => {\r\n          const atomicData = data as { data?: unknown[]; success?: boolean }\r\n          return Array.isArray(atomicData.data) && atomicData.success === true\r\n        }\r\n      })\r\n    })\r\n    \r\n    this.getValidatedEndpoints('waxChain').forEach(ep => {\r\n      this.healthConfigs.set(ep, {\r\n        path: '/v1/chain/get_info',\r\n        validator: (data: unknown) => {\r\n          const chainData = data as { head_block_num?: number }\r\n          return typeof chainData.head_block_num === 'number' && chainData.head_block_num > 0\r\n        }\r\n      })\r\n    })\r\n    \r\n    this.getValidatedEndpoints('hyperion').forEach(ep => {\r\n      this.healthConfigs.set(ep, {\r\n        path: '/v2/health',\r\n        validator: (data: unknown) => {\r\n          const healthData = data as { health?: { status?: string } | string }\r\n          return (healthData.health && \r\n                 (typeof healthData.health === 'object' && healthData.health.status === 'OK') ||\r\n                 healthData.health === 'OK')\r\n        }\r\n      })\r\n    })\r\n    \r\n    logger.info(`[Health Config] Initialized configurations for ${this.healthConfigs.size} endpoints`)\r\n  }\r\n\r\n  // EOS Nation endpoint validation data\r\n  private eosNationEndpoints: {\r\n    atomicEndpoints: string[]\r\n    waxChainEndpoints: string[]\r\n    hyperionEndpoints: string[]\r\n    lastUpdated: number\r\n  } = {\r\n    atomicEndpoints: [],\r\n    waxChainEndpoints: [],\r\n    hyperionEndpoints: [],\r\n    lastUpdated: 0\r\n  }\r\n  private readonly EOS_NATION_UPDATE_INTERVAL = 3600000 // 1 hour\r\n\r\n  private getCircuitBreakerKey(url: string): string {\r\n    try {\r\n      const urlObj = new URL(url)\r\n      return urlObj.hostname\r\n    } catch {\r\n      return url\r\n    }\r\n  }\r\n\r\n  private isCircuitBreakerOpen(key: string): boolean {\r\n    const state = this.circuitBreakerState.get(key)\r\n    if (!state) return false\r\n\r\n    if (state.state === 'open') {\r\n      if (Date.now() - state.lastFailure > this.CIRCUIT_BREAKER_TIMEOUT) {\r\n        state.state = 'half-open'\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  private recordCircuitBreakerFailure(key: string): void {\r\n    const state = this.circuitBreakerState.get(key) || {\r\n      failures: 0,\r\n      lastFailure: 0,\r\n      state: 'closed' as const\r\n    }\r\n\r\n    state.failures++\r\n    state.lastFailure = Date.now()\r\n\r\n    if (state.failures >= this.CIRCUIT_BREAKER_THRESHOLD) {\r\n      state.state = 'open'\r\n    }\r\n\r\n    this.circuitBreakerState.set(key, state)\r\n  }\r\n\r\n  private recordCircuitBreakerSuccess(key: string): void {\r\n    const state = this.circuitBreakerState.get(key)\r\n    if (state) {\r\n      state.failures = 0\r\n      state.state = 'closed'\r\n      this.circuitBreakerState.set(key, state)\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n\r\n\r\n  /**\r\n   * Update endpoint health status\r\n   */\r\n  private updateEndpointHealth(endpointKey: string, success: boolean, responseTime: number): void {\r\n    let health = this.endpointHealth.get(endpointKey)\r\n    \r\n    if (!health) {\r\n      health = {\r\n        isHealthy: true,\r\n        lastCheck: Date.now(),\r\n        consecutiveFailures: 0,\r\n        responseTime: 0\r\n      }\r\n      this.endpointHealth.set(endpointKey, health)\r\n    }\r\n    \r\n    health.lastCheck = Date.now()\r\n    \r\n    if (success) {\r\n      health.consecutiveFailures = 0\r\n      health.isHealthy = true\r\n      health.responseTime = responseTime\r\n    } else {\r\n      health.consecutiveFailures++\r\n      if (health.consecutiveFailures >= this.MAX_CONSECUTIVE_FAILURES) {\r\n        health.isHealthy = false\r\n      }\r\n    }\r\n    \r\n    this.endpointHealth.set(endpointKey, health)\r\n  }\r\n  \r\n  /**\r\n   * Check if endpoint is healthy\r\n   */\r\n  private isEndpointHealthy(endpointKey: string): boolean {\r\n    const health = this.endpointHealth.get(endpointKey)\r\n    if (!health) return true // Assume healthy if no data\r\n    \r\n    // Consider endpoint unhealthy if not checked recently\r\n    const timeSinceLastCheck = Date.now() - health.lastCheck\r\n    if (timeSinceLastCheck > this.HEALTH_CHECK_INTERVAL * 2) {\r\n      return false\r\n    }\r\n    \r\n    return health.isHealthy\r\n  }\r\n  \r\n  /**\r\n   * Perform periodic health checks on endpoints\r\n   */\r\n  private async performHealthCheck(endpoint: string): Promise<void> {\r\n    const endpointKey = this.getCircuitBreakerKey(endpoint)\r\n    const config = this.healthConfigs.get(endpoint) || { path: '', fallback: true } // Fallback to base if no config\r\n    const healthCheckUrl = config.path ? `${endpoint}${config.path}` : endpoint\r\n\r\n    try {\r\n      const startTime = Date.now()\r\n      const response = await fetch(healthCheckUrl, {\r\n        method: config.path ? 'GET' : 'HEAD', // HEAD for root fallback\r\n        signal: AbortSignal.timeout(10000), // Bump for reliability\r\n        headers: { 'Accept': 'application/json' }\r\n      })\r\n\r\n      let isHealthy = response.ok\r\n      const duration = Date.now() - startTime\r\n\r\n      if (response.ok && config.validator) {\r\n        const data = await response.json()\r\n        isHealthy = config.validator(data)\r\n        // Only log validation failures or first success after failure\r\n        const currentHealth = this.endpointHealth.get(endpointKey)\r\n        if (!isHealthy || (currentHealth && currentHealth.consecutiveFailures > 0)) {\r\n          logger.info(`[HealthCheck] ${endpoint}:`, 'ApiService.performHealthCheck', { healthy: isHealthy, duration: `${duration}ms` })\r\n        }\r\n      }\r\n\r\n      this.updateEndpointHealth(endpointKey, isHealthy, duration)\r\n      if (!isHealthy) {\r\n        logger.warn(`[HealthCheck] ${endpoint} failed validation`)\r\n      }\r\n    } catch (error) {\r\n      logger.error(`[HealthCheck] ${endpoint} error:`, 'ApiService.performHealthCheck', error as Error)\r\n      this.updateEndpointHealth(endpointKey, false, 0)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Start periodic health checks for all endpoints\r\n   */\r\n  private startHealthChecks(): void {\r\n    // Clear any existing interval to prevent duplicates\r\n    if (this.healthCheckIntervalId) {\r\n      clearInterval(this.healthCheckIntervalId)\r\n      this.healthCheckIntervalId = null\r\n    }\r\n\r\n    // Start health checks with reduced logging frequency\r\n    this.healthCheckIntervalId = setInterval(() => {\r\n      logger.info('[HealthCheck] Starting periodic health check cycle...')\r\n      \r\n      // Check atomic endpoints (including EOS Nation validated ones)\r\n      this.getValidatedEndpoints('atomic').forEach(endpoint => {\r\n        this.performHealthCheck(endpoint)\r\n      })\r\n      \r\n      // Check WAX chain endpoints (including EOS Nation validated ones)\r\n      this.getValidatedEndpoints('waxChain').forEach(endpoint => {\r\n        this.performHealthCheck(endpoint)\r\n      })\r\n      \r\n      // Check hyperion endpoints (including EOS Nation validated ones)\r\n      this.getValidatedEndpoints('hyperion').forEach(endpoint => {\r\n        this.performHealthCheck(endpoint)\r\n      })\r\n      \r\n      logger.info('[HealthCheck] Completed periodic health check cycle')\r\n    }, this.HEALTH_CHECK_INTERVAL)\r\n    \r\n    // Also start EOS Nation endpoint updates\r\n    this.updateEosNationEndpoints()\r\n  }\r\n\r\n  /**\r\n   * Stop health checks to prevent memory leaks\r\n   */\r\n  public stopHealthChecks(): void {\r\n    if (this.healthCheckIntervalId) {\r\n      clearInterval(this.healthCheckIntervalId)\r\n      this.healthCheckIntervalId = null\r\n      logger.info('[HealthCheck] Health check interval stopped')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manually start health checks if needed\r\n   */\r\n  public enableHealthChecks(): void {\r\n    logger.info('[HealthCheck] Enabling health checks...')\r\n    this.startHealthChecks()\r\n  }\r\n\r\n  /**\r\n   * Fetch and update endpoint data from EOS Nation validator\r\n   */\r\n  private async updateEosNationEndpoints(): Promise<void> {\r\n    try {\r\n      const now = Date.now()\r\n      if (now - this.eosNationEndpoints.lastUpdated < this.EOS_NATION_UPDATE_INTERVAL) {\r\n        return // Skip if updated recently\r\n      }\r\n\r\n      logger.info('[EOS Nation] Fetching latest endpoint data...')\r\n      const response = await fetch('https://validate.eosnation.io/wax/reports/endpoints.json', {\r\n        method: 'GET',\r\n        headers: { 'Accept': 'application/json' },\r\n        signal: AbortSignal.timeout(10000)\r\n      })\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      if (!data || typeof data !== 'object') {\r\n        throw new Error('Invalid JSON response from EOS Nation API')\r\n      }\r\n\r\n      if (!data.report || typeof data.report !== 'object') {\r\n        logger.warn('[EOS Nation] No report data found in response:', data)\r\n        throw new Error('Invalid response format from EOS Nation API')\r\n      }\r\n\r\n      // Extract endpoints from the report data with better error handling\r\n      const eosNationData = data as EosNationResponse\r\n      const report = eosNationData.report as EosNationReport\r\n      const atomicEndpoints = this.parseEosNationEndpoints(report.atomic_https || [])\r\n      const waxChainEndpoints = this.parseEosNationEndpoints(report.api_https2 || [])\r\n      const hyperionEndpoints = this.parseEosNationEndpoints(report.hyperion_https || [])\r\n\r\n      logger.info('[EOS Nation] Raw endpoint counts:', 'ApiService.updateEosNationEndpoints', {\r\n        atomic_https: Array.isArray(report.atomic_https) ? report.atomic_https.length : 'not array',\r\n        api_https2: Array.isArray(report.api_https2) ? report.api_https2.length : 'not array',\r\n        hyperion_https: Array.isArray(report.hyperion_https) ? report.hyperion_https.length : 'not array'\r\n      })\r\n\r\n      // Update our endpoint data\r\n      this.eosNationEndpoints = {\r\n        atomicEndpoints,\r\n        waxChainEndpoints,\r\n        hyperionEndpoints,\r\n        lastUpdated: now\r\n      }\r\n\r\n      logger.info(`[EOS Nation] Updated endpoints: ${atomicEndpoints.length} atomic, ${waxChainEndpoints.length} wax chain, ${hyperionEndpoints.length} hyperion`)\r\n      \r\n      // Reinitialize health configs with new endpoints\r\n      this.initializeHealthConfigs()\r\n      \r\n      // Schedule next update\r\n      setTimeout(() => this.updateEosNationEndpoints(), this.EOS_NATION_UPDATE_INTERVAL)\r\n    } catch (error) {\r\n      logger.error('[EOS Nation] Failed to update endpoint data:', 'ApiService.updateEosNationEndpoints', error as Error)\r\n      // Retry in 10 minutes on failure\r\n      setTimeout(() => this.updateEosNationEndpoints(), 600000)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse EOS Nation endpoint data into clean URLs\r\n   */\r\n  private parseEosNationEndpoints(endpoints: (string | EosNationEndpointData)[]): string[] {\r\n    if (!Array.isArray(endpoints)) {\r\n      logger.warn('[EOS Nation] Expected array of endpoints, got:', typeof endpoints)\r\n      return []\r\n    }\r\n\r\n    return endpoints\r\n      .map(endpoint => {\r\n        try {\r\n          // Handle different possible formats\r\n          let endpointStr: string\r\n          \r\n          if (typeof endpoint === 'string') {\r\n            endpointStr = endpoint\r\n          } else if (typeof endpoint === 'object' && endpoint !== null) {\r\n            // If it's an object, try to extract URL from common properties\r\n            const obj = endpoint as EosNationEndpointData\r\n            endpointStr = (obj.url || obj.endpoint || obj.api_url || String(endpoint)) as string\r\n          } else {\r\n            endpointStr = String(endpoint)\r\n          }\r\n\r\n          // EOS Nation format: \" https://example.com COUNTRY PROVIDER\"\r\n          const trimmed = endpointStr.trim()\r\n          const urlMatch = trimmed.match(/https?:\\/\\/[^\\s]+/)\r\n          return urlMatch ? urlMatch[0] : null\r\n        } catch (error) {\r\n          logger.warn('[EOS Nation] Failed to parse endpoint', 'ApiService.updateEosNationEndpoints', error as Error)\r\n          return null\r\n        }\r\n      })\r\n      .filter((url): url is string => url !== null)\r\n      .filter(url => {\r\n        try {\r\n          new URL(url)\r\n          return true\r\n        } catch {\r\n          return false\r\n        }\r\n      })\r\n   }\r\n\r\n  /**\r\n   * Get validated endpoints from EOS Nation data combined with our static endpoints\r\n   */\r\n  private getValidatedEndpoints(type: 'atomic' | 'waxChain' | 'hyperion'): string[] {\r\n    const staticEndpoints = type === 'atomic' ? this.atomicEndpoints : \r\n                           type === 'waxChain' ? this.waxChainEndpoints : \r\n                           this.hyperionEndpoints\r\n    \r\n    const eosNationEndpoints = type === 'atomic' ? this.eosNationEndpoints.atomicEndpoints :\r\n                              type === 'waxChain' ? this.eosNationEndpoints.waxChainEndpoints :\r\n                              this.eosNationEndpoints.hyperionEndpoints\r\n    \r\n    // Combine and deduplicate endpoints, prioritizing EOS Nation validated ones\r\n    const combined = [...new Set([...eosNationEndpoints, ...staticEndpoints])]\r\n    \r\n    logger.info(`[Endpoint Selection] ${type}: ${combined.length} total (${eosNationEndpoints.length} from EOS Nation, ${staticEndpoints.length} static)`)\r\n    return combined\r\n  }\r\n   \r\n  /**\r\n   * Get healthy endpoints from a list\r\n   */\r\n  private getHealthyEndpoints(endpoints: readonly string[]): string[] {\r\n    return endpoints.filter(endpoint => {\r\n      const endpointKey = this.getCircuitBreakerKey(endpoint)\r\n      return this.isEndpointHealthy(endpointKey) && !this.isCircuitBreakerOpen(endpointKey)\r\n    })\r\n  }\r\n\r\n  private classifyError(error: Error, status?: number): 'retryable' | 'non-retryable' | 'rate-limit' {\r\n    if (status) {\r\n      if (status === 429) return 'rate-limit'\r\n      if (status === 408 || status === 502 || status === 503 || status === 504) return 'retryable'\r\n      if (status >= 400 && status < 500) return 'non-retryable'\r\n      if (status >= 500) return 'retryable'\r\n    }\r\n\r\n    const message = error.message.toLowerCase()\r\n    \r\n    // Rate limiting indicators\r\n    if (message.includes('rate limit') || message.includes('429') || message.includes('too many requests')) {\r\n      return 'rate-limit'\r\n    }\r\n    \r\n    // Network and timeout errors - retryable\r\n    if (\r\n      message.includes('timeout') ||\r\n      message.includes('network') ||\r\n      message.includes('connection') ||\r\n      message.includes('fetch') ||\r\n      message.includes('enotfound') ||\r\n      message.includes('econnreset') ||\r\n      message.includes('econnrefused') ||\r\n      message.includes('socket hang up') ||\r\n      error.name === 'AbortError'\r\n    ) {\r\n      return 'retryable'\r\n    }\r\n    \r\n    // Client errors - non-retryable\r\n    if (\r\n      message.includes('400') ||\r\n      message.includes('401') ||\r\n      message.includes('403') ||\r\n      message.includes('404') ||\r\n      message.includes('unauthorized') ||\r\n      message.includes('forbidden') ||\r\n      message.includes('not found') ||\r\n      message.includes('bad request')\r\n    ) {\r\n      return 'non-retryable'\r\n    }\r\n    \r\n    // Default to retryable for unknown errors\r\n    return 'retryable'\r\n  }\r\n\r\n  private calculateDelay(attempt: number, errorType: 'retryable' | 'rate-limit', jitter = true): number {\r\n    let baseDelay: number\r\n    \r\n    if (errorType === 'rate-limit') {\r\n      // Exponential backoff for rate limits: 1s, 2s, 4s, 8s, 16s, 30s (max)\r\n      baseDelay = Math.min(Math.pow(2, attempt) * 1000, this.MAX_TIMEOUT)\r\n    } else {\r\n      // Linear backoff for other retryable errors: 1s, 2s, 3s, 4s, 5s\r\n      baseDelay = Math.min((attempt + 1) * 1000, 5000)\r\n    }\r\n\r\n    // Add jitter to prevent thundering herd\r\n    if (jitter) {\r\n      const jitterAmount = baseDelay * 0.1 // 10% jitter\r\n      baseDelay += (Math.random() - 0.5) * 2 * jitterAmount\r\n    }\r\n\r\n    return Math.max(baseDelay, 100) // Minimum 100ms delay\r\n  }\r\n\r\n  public async fetchWithRetry(url: string, retries = 3, options?: RequestInit): Promise<Response> {\r\n    const circuitKey = this.getCircuitBreakerKey(url)\r\n    let lastError: Error | null = null\r\n    const startTime = Date.now()\r\n    \r\n    // Check circuit breaker\r\n    if (this.isCircuitBreakerOpen(circuitKey)) {\r\n      throw new Error(`Circuit breaker is open for ${circuitKey}. Service temporarily unavailable.`)\r\n    }\r\n\r\n    // Enhanced timeout handling\r\n    const timeoutMs = options?.signal ? undefined : 15000 // 15 second default timeout\r\n    const controller = new AbortController()\r\n    let timeoutId: ReturnType<typeof setTimeout> | undefined\r\n\r\n    if (timeoutMs && !options?.signal) {\r\n      timeoutId = setTimeout(() => controller.abort(), timeoutMs)\r\n    }\r\n\r\n    const fetchOptions: RequestInit = {\r\n      method: options?.method || 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'User-Agent': 'PxMarket/2.0',\r\n        ...options?.headers\r\n      },\r\n      mode: 'cors',\r\n      signal: options?.signal || controller.signal,\r\n      ...options\r\n    }\r\n\r\n    try {\r\n      // Check if this is a HiveBP API call - if so, don't use endpoint switching\r\n      if (url.includes('wax-api.hivebp.io')) {\r\n        for (let i = 0; i < retries; i++) {\r\n          try {\r\n            const response = await fetch(url, fetchOptions)\r\n            \r\n            if (response.ok) {\r\n              this.recordCircuitBreakerSuccess(circuitKey)\r\n              // Report success to endpoint manager\r\n              const responseTime = Date.now() - startTime\r\n              this.reportEndpointHealth(url, true, responseTime)\r\n              return response\r\n            }\r\n            \r\n            const errorType = this.classifyError(new Error(`HTTP ${response.status}`), response.status)\r\n            lastError = new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n            \r\n            if (errorType === 'non-retryable' || i === retries - 1) {\r\n              break\r\n            }\r\n            \r\n            const delay = this.calculateDelay(i, errorType)\r\n            await new Promise(resolve => setTimeout(resolve, delay))\r\n          } catch (error) {\r\n            const err = error as Error\r\n            const errorType = this.classifyError(err)\r\n            lastError = err\r\n            \r\n            if (errorType === 'non-retryable' || i === retries - 1) {\r\n              break\r\n            }\r\n            \r\n            const delay = this.calculateDelay(i, errorType)\r\n            await new Promise(resolve => setTimeout(resolve, delay))\r\n          }\r\n        }\r\n        \r\n        this.recordCircuitBreakerFailure(circuitKey)\r\n        throw lastError || new Error('Failed to fetch from HiveBP API')\r\n      }\r\n      \r\n      // Check if this is a WAX Chain API call\r\n      if (this.waxChainEndpoints.some(endpoint => url.includes(endpoint))) {\r\n        const healthyWaxEndpoints = this.getHealthyEndpoints(this.waxChainEndpoints)\r\n        const waxEndpointsToTry = healthyWaxEndpoints.length > 0 ? healthyWaxEndpoints : this.waxChainEndpoints\r\n        \r\n        for (let endpointIndex = 0; endpointIndex < waxEndpointsToTry.length; endpointIndex++) {\r\n          const endpoint = waxEndpointsToTry[endpointIndex]\r\n          // Update current endpoint index to match the actual endpoint\r\n          this.currentWaxChainIndex = this.waxChainEndpoints.indexOf(endpoint)\r\n          \r\n          // Replace the base URL in the provided URL with current endpoint\r\n          const currentUrl = url.replace(/https:\\/\\/[^/]+/, endpoint)\r\n          const endpointKey = this.getCircuitBreakerKey(currentUrl)\r\n          \r\n          // Skip if this endpoint's circuit breaker is open\r\n          if (this.isCircuitBreakerOpen(endpointKey)) {\r\n            continue\r\n          }\r\n          \r\n          // Try current endpoint with retries\r\n        let endpointSuccess = false\r\n        for (let i = 0; i < retries; i++) {\r\n          try {\r\n            const response = await fetch(currentUrl, fetchOptions)\r\n            \r\n            if (response.ok) {\r\n              this.recordCircuitBreakerSuccess(endpointKey)\r\n              endpointSuccess = true\r\n              return response\r\n            }\r\n              \r\n              const errorType = this.classifyError(new Error(`HTTP ${response.status}`), response.status)\r\n              lastError = new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n              \r\n              // If it's a 400 error, try next endpoint immediately\r\n              if (response.status === 400 || errorType === 'non-retryable') {\r\n                break\r\n              }\r\n              \r\n              if (i < retries - 1) {\r\n                const delay = this.calculateDelay(i, errorType)\r\n                await new Promise(resolve => setTimeout(resolve, delay))\r\n              }\r\n            } catch (error) {\r\n              const err = error as Error\r\n              const errorType = this.classifyError(err)\r\n              lastError = err\r\n              \r\n              if (errorType === 'non-retryable') {\r\n                break\r\n              }\r\n              \r\n              if (i < retries - 1) {\r\n                const delay = this.calculateDelay(i, errorType)\r\n                await new Promise(resolve => setTimeout(resolve, delay))\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (!endpointSuccess) {\r\n            this.recordCircuitBreakerFailure(endpointKey)\r\n          }\r\n        }\r\n        \r\n        throw lastError || new Error('All WAX Chain endpoints failed')\r\n      }\r\n      \r\n      // For Atomic API calls, prioritize healthy endpoints\r\n      const healthyAtomicEndpoints = this.getHealthyEndpoints(this.atomicEndpoints)\r\n      const endpointsToTry = healthyAtomicEndpoints.length > 0 ? healthyAtomicEndpoints : this.atomicEndpoints\r\n      \r\n      for (let endpointIndex = 0; endpointIndex < endpointsToTry.length; endpointIndex++) {\r\n        const endpoint = endpointsToTry[endpointIndex]\r\n        // Update current endpoint index to match the actual endpoint\r\n        this.currentEndpointIndex = this.atomicEndpoints.indexOf(endpoint)\r\n        \r\n        // Replace the base URL in the provided URL with current endpoint\r\n        const currentUrl = url.replace(/https:\\/\\/[^/]+/, endpoint)\r\n        const endpointKey = this.getCircuitBreakerKey(currentUrl)\r\n        \r\n        // Skip if this endpoint's circuit breaker is open\r\n        if (this.isCircuitBreakerOpen(endpointKey)) {\r\n          continue\r\n        }\r\n        \r\n        // Try current endpoint with retries\r\n        let endpointSuccess = false\r\n        for (let i = 0; i < retries; i++) {\r\n          try {\r\n            const response = await fetch(currentUrl, fetchOptions)\r\n            \r\n            if (response.ok) {\r\n              this.recordCircuitBreakerSuccess(endpointKey)\r\n              endpointSuccess = true\r\n              // Report success to endpoint manager\r\n              const responseTime = Date.now() - startTime\r\n              this.reportEndpointHealth(currentUrl, true, responseTime)\r\n              return response\r\n            }\r\n            \r\n            const errorType = this.classifyError(new Error(`HTTP ${response.status}`), response.status)\r\n            lastError = new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n            \r\n            // If it's a 400 error, try next endpoint immediately\r\n            if (response.status === 400 || errorType === 'non-retryable') {\r\n              break\r\n            }\r\n            \r\n            if (i < retries - 1) {\r\n              const delay = this.calculateDelay(i, errorType)\r\n              await new Promise(resolve => setTimeout(resolve, delay))\r\n            }\r\n          } catch (error) {\r\n            const err = error as Error\r\n            const errorType = this.classifyError(err)\r\n            lastError = err\r\n            \r\n            if (errorType === 'non-retryable') {\r\n              break\r\n            }\r\n            \r\n            if (i < retries - 1) {\r\n              const delay = this.calculateDelay(i, errorType)\r\n              await new Promise(resolve => setTimeout(resolve, delay))\r\n            }\r\n          }\r\n        }\r\n        \r\n        if (!endpointSuccess) {\r\n          this.recordCircuitBreakerFailure(endpointKey)\r\n        }\r\n      }\r\n      \r\n      throw lastError || new Error('All endpoints failed')\r\n    } finally {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private formatSaleData(sale: SaleData): NFTAsset {\r\n    const asset = sale.assets[0]\r\n    return {\r\n      sale_id: sale.sale_id,\r\n      asset_id: asset?.asset_id || '',\r\n      name: asset?.name || `${asset?.collection?.collection_name || 'Unknown'} #${asset?.asset_id || 'N/A'}`,\r\n      image: this.getAssetImage(asset),\r\n      video: this.getAssetVideo(asset),\r\n      price: sale.price ? this.formatPrice(sale.price) : '0 WAX',\r\n      seller: sale.seller,\r\n      collection: asset?.collection?.collection_name || 'Unknown',\r\n      schema: asset?.schema?.schema_name || 'Unknown',\r\n      template_mint: asset?.template_mint ? parseInt(asset.template_mint.toString()) : undefined,\r\n      max_supply: asset?.template?.max_supply || undefined,\r\n      traits: asset?.data ? Object.fromEntries(\r\n        Object.entries(asset.data).filter(([, value]) => value !== undefined && value !== null)\r\n      ) as Record<string, string | number | boolean> : {}\r\n    }\r\n  }\r\n\r\n  public getAssetImage(asset: AssetData): string {\r\n    const img = asset?.data?.img || asset?.template?.immutable_data?.img\r\n    if (!img) return API_ENDPOINTS.PIXEL_JOURNEY.DEFAULT_IMAGE\r\n    if (typeof img === 'string') {\r\n      return img.startsWith('http')\r\n        ? img\r\n        : img.startsWith('Qm')\r\n        ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${img}`\r\n        : img\r\n    }\r\n    return API_ENDPOINTS.PIXEL_JOURNEY.DEFAULT_IMAGE\r\n  }\r\n\r\n  private getAssetVideo(asset: AssetData): string {\r\n    const video = asset?.data?.video || asset?.template?.immutable_data?.video\r\n    if (!video || typeof video !== 'string') return ''\r\n    return video.startsWith('http')\r\n      ? video\r\n      : video.startsWith('Qm')\r\n      ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${video}`\r\n      : video\r\n  }\r\n\r\n  private formatPrice(price: PriceData): string {\r\n    if (!price || !price.amount) return '0 WAX'\r\n    \r\n    const amount = parseFloat(price.amount) / Math.pow(10, price.token_precision || 8)\r\n    if (price.token_symbol === 'WAX' || !price.token_symbol) {\r\n      return formatWAXPrice(amount)\r\n    }\r\n    return `${formatNumber(amount)} ${price.token_symbol}`\r\n  }\r\n\r\n\r\n\r\n  async getCheapestPixals(limit = 50, page = 1): Promise<NFTAsset[]> {\r\n    const baseUrl = this.atomicMarketAPI\r\n    const adaptiveLimit = this.getAdaptiveLimit(baseUrl, limit)\r\n    \r\n    try {\r\n      const url = `${baseUrl}/atomicmarket/v1/sales?state=1&collection_name=pixeljourney&schema_name=pixals&sort=price&order=asc&limit=${adaptiveLimit}&page=${page}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        this.updateAdaptiveLimit(baseUrl, adaptiveLimit, true)\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      this.updateAdaptiveLimit(baseUrl, adaptiveLimit, false)\r\n      ErrorMessageService.logError('ApiService.getCheapestPixals', error, { limit, adaptiveLimit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getWaxRockPixals(limit = 50, page = 1): Promise<NFTAsset[]> {\r\n    const baseUrl = this.atomicMarketAPI\r\n    const adaptiveLimit = this.getAdaptiveLimit(baseUrl, limit)\r\n    \r\n    try {\r\n      // Import the proper WaxRock types from config\r\n      const { MarketplaceConfigService } = await import('../config/marketplaceConfig')\r\n      const waxRockTypes = MarketplaceConfigService.getWaxRockTypes()\r\n      \r\n      // Try multiple approaches to get WaxRock listings\r\n      let allWaxRockSales: SaleData[] = []\r\n      \r\n      // Approach 1: Query each WaxRock type individually using data:WaxRock parameter\r\n      for (const waxRockType of waxRockTypes) {\r\n        try {\r\n          const url = `${baseUrl}/atomicmarket/v1/sales?state=1&collection_name=pixeljourney&schema_name=pixals&immutable_data.WaxRock=${encodeURIComponent(waxRockType)}&sort=price&order=asc&limit=50&page=1`\r\n          const response = await this.fetchWithRetry(url)\r\n          const data: ApiResponse<SaleData[]> = await response.json()\r\n          \r\n          if (data.success && data.data) {\r\n            allWaxRockSales.push(...data.data)\r\n          }\r\n        } catch (error) {\r\n          // Continue with other types if one fails\r\n          logger.warn(`Failed to fetch ${waxRockType} WaxRocks:`, 'ApiService.getWaxRockPixals', error as Error)\r\n        }\r\n      }\r\n      \r\n      // Approach 2: Fallback to client-side filtering if API filtering didn't work\r\n      if (allWaxRockSales.length === 0) {\r\n        const fallbackUrl = `${baseUrl}/atomicmarket/v1/sales?state=1&collection_name=pixeljourney&schema_name=pixals&sort=price&order=asc&limit=100&page=${page}`\r\n        const response = await this.fetchWithRetry(fallbackUrl)\r\n        const data: ApiResponse<SaleData[]> = await response.json()\r\n        \r\n        if (data.success && data.data) {\r\n          // Filter for WaxRock traits client-side\r\n          allWaxRockSales = data.data.filter(sale => {\r\n            if (!sale.assets || !sale.assets[0]) return false\r\n            const asset = sale.assets[0]\r\n            \r\n            // Check immutable_data for WaxRock attribute first\r\n            const waxRock = asset.data?.WaxRock || asset.template?.immutable_data?.WaxRock\r\n            \r\n            // Ensure we have a string value for WaxRock\r\n            if (waxRock && typeof waxRock === 'string') {\r\n              // Explicitly exclude 'none' values and only include valid WaxRock types\r\n              return waxRock !== 'none' && MarketplaceConfigService.isValidWaxRock(waxRock)\r\n            }\r\n            \r\n            // Fallback: check for WaxRock trait names in data using proper config\r\n            // But make sure we're not including 'none' values\r\n            const validWaxRockTypes = waxRockTypes.map(type => type.toLowerCase())\r\n            if (asset.data) {\r\n              return Object.values(asset.data).some(value => {\r\n                if (typeof value === 'string') {\r\n                  const lowerValue = value.toLowerCase()\r\n                  // Explicitly exclude 'none' and only include valid types\r\n                  return lowerValue !== 'none' && validWaxRockTypes.includes(lowerValue)\r\n                }\r\n                return false\r\n              })\r\n            }\r\n            \r\n            return false\r\n          })\r\n        }\r\n      }\r\n      \r\n      // Remove duplicates based on sale_id\r\n      const uniqueSales = allWaxRockSales.filter((sale, index, self) => \r\n        index === self.findIndex(s => s.sale_id === sale.sale_id)\r\n      )\r\n      \r\n      // Sort by price (ascending) and apply pagination\r\n      uniqueSales.sort((a, b) => {\r\n        const priceA = parseFloat(a.listing_price || '0')\r\n        const priceB = parseFloat(b.listing_price || '0')\r\n        return priceA - priceB\r\n      })\r\n      \r\n      // Apply pagination\r\n      const startIndex = (page - 1) * adaptiveLimit\r\n      const paginatedResults = uniqueSales.slice(startIndex, startIndex + adaptiveLimit)\r\n      \r\n      this.updateAdaptiveLimit(baseUrl, adaptiveLimit, true)\r\n      return paginatedResults.map(sale => this.formatSaleData(sale))\r\n      \r\n    } catch (error) {\r\n      this.updateAdaptiveLimit(baseUrl, adaptiveLimit, false)\r\n      ErrorMessageService.logError('ApiService.getWaxRockPixals', error, { limit, adaptiveLimit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getPixelIngredients(limit = 20, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=pixeljourney&schema_name=ingredients&sort=price&order=asc&limit=${safeLimit}&page=${page}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getPixelIngredients', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getBundleListings(limit = 20, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      // Search for bundle listings in pixeljourney collection with bundle schema\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=pixeljourney&schema_name=bundles&sort=price&order=asc&limit=${safeLimit}&page=${page}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getBundleListings', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getFriedFactoryNFTs(limit = 20, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=friedfactory&sort=price&order=asc&limit=${safeLimit}&page=${page}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getFriedFactoryNFTs', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getCryptoMuffinsNFTs(limit = 20, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=crptomuffins&sort=price&order=asc&limit=${safeLimit}&page=${page}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCryptoMuffinsNFTs', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n   async getAkufishheadsNFTs(limit = 20, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=akufishheads&sort=price&order=asc&limit=${safeLimit}&page=${page}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAkufishheadsNFTs', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getPartnerListings(limit = 16, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      // Partner collections - specific curated collections\r\n      const partnerCollections = MarketplaceConfigService.getPartnerCollectionsSync()\r\n      const collectionQuery = partnerCollections.join(',')\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=${collectionQuery}&sort=created&order=desc&limit=${safeLimit}&page=${page}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getPartnerListings', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getPxApprovedListings(limit = 16, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      // PxApproved collections - approved by Pixel Journey team\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&collection_name=pixeljourney&sort=created&order=desc&limit=${safeLimit}&page=${page}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getPxApprovedListings', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getAHVerifiedListings(limit = 16, page = 1): Promise<NFTAsset[]> {\r\n    try {\r\n      // Limit to maximum 50 items per request to avoid HTTP 400 errors\r\n      const safeLimit = Math.min(limit, 50)\r\n      // All AtomicHub verified collections - requires Pixal holder verification\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&verified=true&sort=created&order=desc&limit=${safeLimit}&page=${page}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAHVerifiedListings', error, { limit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getAllWaxListings(limit = 16, page = 1): Promise<NFTAsset[]> {\r\n    const baseUrl = this.atomicMarketAPI\r\n    const adaptiveLimit = this.getAdaptiveLimit(baseUrl, limit)\r\n    \r\n    try {\r\n      // All WAX listings - requires Pixal holder verification\r\n      const url = `${baseUrl}/atomicmarket/v1/sales?state=1&sort=created&order=desc&limit=${adaptiveLimit}&page=${page}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        this.updateAdaptiveLimit(baseUrl, adaptiveLimit, true)\r\n        return data.data.map(sale => this.formatSaleData(sale))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      this.updateAdaptiveLimit(baseUrl, adaptiveLimit, false)\r\n      ErrorMessageService.logError('ApiService.getAllWaxListings', error, { limit, adaptiveLimit, page })\r\n      throw error // Re-throw error instead of returning mock data\r\n    }\r\n  }\r\n\r\n  async getRecentSales(limit = 50): Promise<SaleData[]> {\r\n    try {\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=3&limit=${limit}&order=desc&sort=updated`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getRecentSales', error, { limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getSales(params: AtomicParams = {}): Promise<{\r\n    success: boolean\r\n    data: SaleData[]\r\n    query_total?: number\r\n  }> {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 100,\r\n        order = 'desc',\r\n        sort = 'updated',\r\n        collection_name,\r\n        schema_name,\r\n        template_id,\r\n        asset_id,\r\n        seller,\r\n        buyer,\r\n        state = '1,3', // Default to listed and sold sales\r\n        symbol = 'WAX',\r\n        min_price,\r\n        max_price,\r\n        before,\r\n        after\r\n      } = params\r\n      \r\n      let url = `${this.atomicMarketAPI}/atomicmarket/v1/sales?page=${page}&limit=${limit}&order=${order}&sort=${sort}&state=${state}&symbol=${symbol}`\r\n      \r\n      if (collection_name) url += `&collection_name=${collection_name}`\r\n      if (schema_name) url += `&schema_name=${schema_name}`\r\n      if (template_id) url += `&template_id=${template_id}`\r\n      if (asset_id) url += `&asset_id=${asset_id}`\r\n      if (seller) url += `&seller=${seller}`\r\n      if (buyer) url += `&buyer=${buyer}`\r\n      if (min_price) url += `&min_price=${min_price}`\r\n      if (max_price) url += `&max_price=${max_price}`\r\n      if (before) url += `&before=${before}`\r\n      if (after) url += `&after=${after}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return {\r\n        success: data.success || false,\r\n        data: data.data || [],\r\n        query_total: data.query_total\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getSales', error, params)\r\n      return { success: false, data: [] }\r\n    }\r\n  }\r\n\r\n  // Top WAX collections whitelist for better performance and reliability\r\n  private readonly COLLECTION_WHITELIST = [\r\n    'alien.worlds', 'defiminingio', 'pixeljourney', 'crptomuffins', 'kogsofficial',\r\n    'mlb.topps', 'gpk.topps', 'warsaken', 'pocketsizedp', 'taco',\r\n    'pantheon', 'cbreakgaming', 'akufishheads', 'battleminers', 'twitchytides',\r\n    'novopangeaio', 'fadedmonsuta', 'bcbrawlers', 'nftopiafrens', 'drwawncompany',\r\n    'talesofcrypt', 'official.wax', 'music.worlds', 'gkniftyheads', 'dungeonitems',\r\n    'outlawtroops', 'byronartset1', 'prospectorsg', 'street.hero', 'crewtoonswax'\r\n  ];\r\n\r\n  async getCollections(\r\n    options: {\r\n      limit?: number\r\n      page?: number\r\n      whitelistOnly?: boolean\r\n      author?: string\r\n      match?: string\r\n      order?: 'asc' | 'desc'\r\n      sort?: 'created' | 'name' | 'collection_name'\r\n      singleCollection?: string\r\n    } = {}\r\n  ): Promise<CollectionData[]> {\r\n    try {\r\n      const {\r\n        limit = 20,\r\n        page = 1,\r\n        whitelistOnly = true,\r\n        author,\r\n        match,\r\n        order = 'desc',\r\n        sort = 'created',\r\n        singleCollection\r\n      } = options\r\n\r\n      const params = new URLSearchParams()\r\n      \r\n      // Handle different filtering modes\r\n      if (singleCollection) {\r\n        // Get specific collection only\r\n        params.append('collection_name', singleCollection)\r\n        params.append('limit', '1')\r\n      } else if (whitelistOnly) {\r\n        // Get collections individually from whitelist since collection_whitelist param is not supported\r\n        const collectionsToFetch = this.COLLECTION_WHITELIST.slice(0, Math.min(limit, 20))\r\n        const collectionPromises = collectionsToFetch.map(async (collectionName) => {\r\n          try {\r\n            const response = await this.fetchWithRetry(`${this.atomicAssetsAPI}/atomicassets/v1/collections/${collectionName}`)\r\n            const data = await response.json()\r\n            if (data.success && data.data) {\r\n              return data.data\r\n            }\r\n            return null\r\n          } catch {\r\n            return null\r\n          }\r\n        })\r\n        \r\n        const results = await Promise.all(collectionPromises)\r\n        const validCollections = results.filter(col => col !== null)\r\n        return validCollections\r\n      } else {\r\n        // Get all collections with optional filters\r\n        params.append('limit', Math.min(limit, 100).toString())\r\n        params.append('page', page.toString())\r\n        \r\n        if (author) params.append('author', author)\r\n        if (match) params.append('match', match)\r\n      }\r\n      \r\n      params.append('order', order)\r\n      params.append('sort', sort)\r\n      \r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/collections?${params.toString()}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<CollectionDetails[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollections', error, options)\r\n      // Return fallback collections on error\r\n      return [\r\n        { \r\n          collection_name: 'pixeljourney', \r\n          name: 'Pixel Journey', \r\n          img: '', \r\n          author: 'pixeljourney', \r\n          allow_notify: true,\r\n          authorized_accounts: [],\r\n          notify_accounts: [],\r\n          market_fee: 0,\r\n          created_at_time: '', \r\n          created_at_block: '' \r\n        },\r\n        { \r\n          collection_name: 'friedfactory', \r\n          name: 'Fried Factory', \r\n          img: '', \r\n          author: 'friedfactory', \r\n          allow_notify: true,\r\n          authorized_accounts: [],\r\n          notify_accounts: [],\r\n          market_fee: 0,\r\n          created_at_time: '', \r\n          created_at_block: '' \r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  // Removed loadCollectionsIndividually to prevent mass API calls that spam console errors\r\n\r\n\r\n\r\n  async getMarketStats(): Promise<MarketStats | null> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicmarket/v1/stats/graph`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<MarketStats[]> = await response.json()\r\n      \r\n      if (data.success && data.data && data.data.length > 0) {\r\n        return data.data[data.data.length - 1]\r\n      }\r\n      \r\n      return null\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getMarketStats', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Get individual collection details more efficiently\r\n  async getCollectionDetails(collectionName: string): Promise<CollectionDetails | null> {\r\n    const cacheKey = `collection-${collectionName}`\r\n    \r\n    // Check circuit breaker before making API call\r\n    if (this.isCircuitBreakerOpen(cacheKey)) {\r\n      return null\r\n    }\r\n\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/collections/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<CollectionDetails> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return null\r\n    } catch (error) {\r\n      // Record circuit breaker failure to prevent spam\r\n      this.recordCircuitBreakerFailure(cacheKey)\r\n      \r\n      // Only log error if circuit breaker is not open to prevent spam\r\n      if (!this.isCircuitBreakerOpen(cacheKey)) {\r\n        ErrorMessageService.logError('ApiService.getCollectionDetails', error, { collectionName })\r\n      }\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getCollectionSchemas(collectionName: string, limit = 50): Promise<Schema[]> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/schemas?collection_name=${collectionName}&limit=${limit}&order=desc&sort=created`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<Schema[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionAssets', error, { collectionName, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getCollectionTemplates(collectionName: string, schemaName?: string, limit = 50): Promise<TemplateData[]> {\r\n    try {\r\n      let url = `${this.atomicAssetsAPI}/atomicassets/v1/templates?collection_name=${collectionName}&limit=${limit}&order=desc&sort=created`\r\n      if (schemaName) {\r\n        url += `&schema_name=${schemaName}`\r\n      }\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<TemplateData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionTemplates', error, { collectionName, schemaName, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getCollectionAssets(collectionName: string, schemaName?: string, templateId?: string, limit = 50): Promise<AssetDetails[]> {\r\n    try {\r\n      let url = `${this.getCurrentAtomicEndpoint()}/atomicmarket/v1/assets?collection_name=${collectionName}&burned=false&limit=${limit}&order=desc&sort=asset_id`\r\n      if (schemaName) {\r\n        url += `&schema_name=${schemaName}`\r\n      }\r\n      if (templateId) {\r\n        url += `&template_id=${templateId}`\r\n      }\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetDetails[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionAssets', error, { collectionName, schemaName, templateId, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getAssetDetails(assetId: string): Promise<AssetDetails | null> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/assets/${assetId}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetDetails> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return null\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAssetDetails', error, { assetId })\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Additional Atomic API endpoints for comprehensive collection data\r\n  async getCollectionStats(collectionName: string): Promise<CollectionAnalytics | null> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/collections/${collectionName}/stats`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<CollectionAnalytics> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return null\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionSchemas', error, { collectionName })\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getCollectionBurns(collectionName: string, limit = 50): Promise<BurnData[]> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/burns?collection_name=${collectionName}&limit=${limit}&order=desc&sort=created`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<BurnData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionBurns', error, { collectionName, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getCollectionTransfers(collectionName: string, limit = 50): Promise<TransferData[]> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicassets/v1/transfers?collection_name=${collectionName}&limit=${limit}&order=desc&sort=created`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<TransferData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionTransfers', error, { collectionName, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  // HiveBP WAX API integration for enhanced analytics\r\n  async getCollectionVolumeGraph(collectionName: string, days = 30): Promise<CollectionVolumeData[] | null> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/sales-volume-graph/${days}/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data\r\n    } catch (error) {\r\n      logger.warn(`HiveBP volume graph not available for ${collectionName}`, 'API', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getCollectionMarketCap(collectionName: string): Promise<number | null> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/collection-marketcap/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data\r\n    } catch (error) {\r\n      logger.warn(`HiveBP market cap not available for ${collectionName}`, 'API', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getSimilarCollections(collectionName: string): Promise<SimilarCollection[]> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/similar-collections/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data || []\r\n    } catch (error) {\r\n      logger.warn(`HiveBP similar collections not available for ${collectionName}`, 'API', error)\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getCollectionAnalytics(collectionName: string): Promise<CollectionAnalytics | null> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/collection-stats/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data\r\n    } catch (error) {\r\n      logger.warn(`HiveBP analytics not available for ${collectionName}`, 'API', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // HiveBP API methods for collection statistics\r\n  async getHiveBPMarketCap(collectionName: string): Promise<number | null> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/marketcap/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data?.marketcap || null\r\n    } catch (error) {\r\n      logger.warn(`HiveBP market cap not available for ${collectionName}`, 'API', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getHiveBPVolumeDays(collectionName: string, days: number = 1): Promise<number | null> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/volume/${days}/${collectionName}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data?.volume || null\r\n    } catch (error) {\r\n      logger.warn(`HiveBP volume data not available for ${collectionName}`, 'API', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getHiveBPFloorPrice(templateId: string): Promise<number | null> {\r\n    try {\r\n      const url = `${this.hiveBPAPI}/v3/floor/${templateId}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return data?.floor_price || null\r\n    } catch (error) {\r\n      logger.warn(`HiveBP floor price not available for template ${templateId}`, 'API', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Enhanced collection stats using HiveBP APIs\r\n  async getEnhancedCollectionStats(collectionName: string): Promise<{\r\n    marketCap: number | null\r\n    volume24h: number | null\r\n    volume7d: number | null\r\n    floorPrice: number | null\r\n  }> {\r\n    try {\r\n      const [marketCap, volume24h, volume7d] = await Promise.all([\r\n        this.getHiveBPMarketCap(collectionName),\r\n        this.getHiveBPVolumeDays(collectionName, 1),\r\n        this.getHiveBPVolumeDays(collectionName, 7)\r\n      ])\r\n\r\n      // For floor price, we need to get a template ID from the collection first\r\n      let floorPrice: number | null = null\r\n      try {\r\n        const templates = await this.getCollectionTemplates(collectionName, undefined, 1)\r\n        if (templates.length > 0) {\r\n          floorPrice = await this.getHiveBPFloorPrice(templates[0].template_id)\r\n        }\r\n      } catch (error) {\r\n        logger.warn(`Could not fetch floor price for ${collectionName}`, 'API', error)\r\n      }\r\n\r\n      return {\r\n        marketCap,\r\n        volume24h,\r\n        volume7d,\r\n        floorPrice\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionStats', error, { collectionName })\r\n      return {\r\n        marketCap: null,\r\n        volume24h: null,\r\n        volume7d: null,\r\n        floorPrice: null\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get collection top sales\r\n  async getCollectionTopSales(collectionName: string, limit = 20): Promise<SaleData[]> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicmarket/v1/sales?collection_name=${collectionName}&state=3&limit=${limit}&order=desc&sort=price`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionTopSales', error, { collectionName, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  // Get collection floor price\r\n  async getCollectionFloorPrice(collectionName: string): Promise<{ floorPrice: number }> {\r\n    try {\r\n      const url = `${this.atomicAssetsAPI}/atomicmarket/v1/sales?collection_name=${collectionName}&state=1&limit=1&order=asc&sort=price`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<SaleData[]> = await response.json()\r\n      \r\n      if (data.success && data.data && data.data.length > 0) {\r\n        const floorPrice = parseFloat(data.data[0].listing_price) / 100000000 // Convert from atomic units to WAX\r\n        return { floorPrice }\r\n      }\r\n      \r\n      return { floorPrice: 0 }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionFloorPrice', error, { collectionName })\r\n      return { floorPrice: 0 }\r\n    }\r\n  }\r\n\r\n  // Get collection holder statistics\r\n  async getCollectionHolders(collectionName: string, limit = 50, offset = 0): Promise<HolderData[]> {\r\n    try {\r\n      let url = `${this.atomicAssetsAPI}/atomicassets/v1/accounts?collection_name=${collectionName}&limit=${limit}&order=desc&sort=assets`\r\n      if (offset > 0) {\r\n        url += `&page=${Math.floor(offset / limit) + 1}`\r\n      }\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<HolderData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionHolders', error, { collectionName, limit, offset })\r\n      return []\r\n    }\r\n  }\r\n\r\n  // NFT Trading Data API methods using AtomicAssets\r\n  async getNFTTradingStats(): Promise<CollectionAnalytics | null> {\r\n    try {\r\n      // Get 24h sales data\r\n      const salesResponse = await this.fetchWithRetry(\r\n        `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=3&after=${Date.now() - 86400000}&limit=1000`\r\n      )\r\n      const salesData = await salesResponse.json()\r\n      \r\n      // Calculate daily volume and sales count\r\n      let dailyVolume = 0\r\n      let dailySales = 0\r\n      \r\n      if (salesData.success && salesData.data) {\r\n        dailySales = salesData.data.length\r\n        dailyVolume = salesData.data.reduce((total: number, sale: SaleData) => {\r\n          return total + (sale.price ? (parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision)) : 0)\r\n        }, 0)\r\n      }\r\n      \r\n      // Get active listings count\r\n      const listingsResponse = await this.fetchWithRetry(\r\n        `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=1&limit=1`\r\n      )\r\n      const listingsData = await listingsResponse.json()\r\n      const activeListings = listingsData.success ? parseInt(listingsData.query_time) : 0\r\n      \r\n      return {\r\n        collection_name: 'global',\r\n        dailyVolume: formatNumber(dailyVolume),\r\n        dailySales,\r\n        totalTransactions: dailySales,\r\n        activeListings,\r\n        averagePrice: dailySales > 0 ? formatNumber(dailyVolume / dailySales) : '0'\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getNFTTradingStats', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getTopCollectionsByVolume(limit: number = 10): Promise<CollectionDetails[]> {\r\n    try {\r\n      // Get collections with recent sales\r\n      const collectionsResponse = await this.fetchWithRetry(\r\n        `${this.atomicMarketAPI}/atomicmarket/v1/stats/collections?limit=${limit}&sort=volume`\r\n      )\r\n      const collectionsData = await collectionsResponse.json()\r\n      \r\n      if (collectionsData.success && collectionsData.data) {\r\n        return collectionsData.data.map((collection: CollectionDetails) => ({\r\n          collection_name: collection.collection_name,\r\n          volume_24h: collection.volume ? formatWAXPrice(parseFloat(collection.volume) / 100000000) : '0 WAX',\r\n          sales_24h: parseInt(collection.sales || '0') || 0,\r\n          floor_price: collection.floor_price ? formatWAXPrice(parseFloat(collection.floor_price) / 100000000) : '0 WAX',\r\n          assets_count: collection.assets || '0'\r\n        }))\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getTopCollectionsByVolume', error, { limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getRecentNFTTrades(limit: number = 20): Promise<SaleData[]> {\r\n    try {\r\n      const response = await this.fetchWithRetry(\r\n        `${this.atomicMarketAPI}/atomicmarket/v1/sales?state=3&limit=${limit}&sort=updated`\r\n      )\r\n      const data = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map((sale: SaleData) => ({\r\n          sale_id: sale.sale_id,\r\n          collection_name: sale.collection_name || sale.assets[0]?.collection?.collection_name || 'Unknown',\r\n          asset_name: sale.assets[0]?.name || `Asset #${sale.assets[0]?.asset_id}`,\r\n          price: sale.price ? formatWAXPrice(parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision)) : '0 WAX',\r\n          buyer: sale.buyer,\r\n          seller: sale.seller,\r\n          timestamp: sale.updated_at_time\r\n        }))\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getNFTTradingStats', error, { limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getUserInventory(account: string, limit: number = 1000): Promise<NFTAsset[]> {\r\n    try {\r\n      const collectionQuery = this.approvedCollections.join(',')\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&collection_name=${collectionQuery}&burned=false&limit=${limit}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventory', error, { account })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getUserInventoryPaginated(account: string, page: number = 1, limit: number = 1000): Promise<{ assets: NFTAsset[], hasMore: boolean, total: number }> {\r\n    try {\r\n      const collectionQuery = this.approvedCollections.join(',')\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&collection_name=${collectionQuery}&burned=false&limit=${limit}&page=${page}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        // Check if there are more items by making a request for the next page\r\n        const hasMore = data.data.length === limit\r\n        \r\n        // Get total count (this is an approximation since AtomicAssets API doesn't provide total count directly)\r\n        const total = (page - 1) * limit + data.data.length + (hasMore ? 1 : 0)\r\n        \r\n        return { assets, hasMore, total }\r\n      }\r\n      \r\n      throw new Error('Invalid API response')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryPaginated', error, { account, page, limit })\r\n      return { assets: [], hasMore: false, total: 0 }\r\n    }\r\n  }\r\n\r\n  async getUserInventoryAll(account: string, page: number = 1, limit: number = 1000): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean, currentPage: number }> {\r\n    try {\r\n      // Remove collection restriction to get ALL user NFTs\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&burned=false&limit=${limit}&page=${page}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          video: this.getAssetVideo(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        const hasMore = data.data.length === limit\r\n        return { \r\n          assets, \r\n          total: ((page - 1) * limit) + assets.length + (hasMore ? 1 : 0), \r\n          hasMore,\r\n          currentPage: page\r\n        }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false, currentPage: page }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryAll', error, { account, page, limit })\r\n      return { assets: [], total: 0, hasMore: false, currentPage: page }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user inventory for a specific collection - more efficient for filtered views\r\n   */\r\n  async getUserInventoryByCollection(account: string, collectionName: string, limit: number = 1000, offset: number = 0): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean }> {\r\n    try {\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&collection_name=${collectionName}&burned=false&limit=${limit}&offset=${offset}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        const hasMore = data.data.length === limit\r\n        return { assets, total: offset + assets.length + (hasMore ? 1 : 0), hasMore }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryByCollection', error, { account, collectionName, limit, offset })\r\n      return { assets: [], total: 0, hasMore: false }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user inventory for a specific schema within a collection - most precise query\r\n   */\r\n  async getUserInventoryBySchema(account: string, collectionName: string, schemaName: string, limit: number = 1000, offset: number = 0): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean }> {\r\n    try {\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&collection_name=${collectionName}&schema_name=${schemaName}&burned=false&limit=${limit}&offset=${offset}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        // Simple hasMore calculation - if we got a full page, there might be more\r\n        const hasMore = data.data.length === limit\r\n        \r\n        return { assets, total: offset + assets.length + (hasMore ? 1 : 0), hasMore }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryBySchema', error, { account, collectionName, schemaName, limit, offset })\r\n      return { assets: [], total: 0, hasMore: false }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user inventory overview - efficient for large inventories (15-20k+ assets)\r\n   * Returns collection counts and basic stats without fetching all assets\r\n   */\r\n  async getUserInventoryOverview(account: string): Promise<{\r\n    totalAssets: number\r\n    collections: Array<{ name: string, count: number, schema_counts: Record<string, number> }>\r\n    topCollections: Array<{ name: string, count: number }>\r\n  }> {\r\n    try {\r\n      // Use WAX Chain API for efficient overview\r\n      const tableUrl = `${API_ENDPOINTS.WAX_CHAIN.EOSRIO}/v1/chain/get_table_rows`\r\n      const response = await fetch(tableUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: 'atomicassets',\r\n          scope: account,\r\n          table: 'assets',\r\n          limit: 1000,\r\n          reverse: false\r\n        })\r\n      })\r\n      \r\n      const data = await response.json()\r\n      const collections = new Map<string, { count: number, schemas: Map<string, number> }>()\r\n      let totalAssets = 0\r\n      \r\n      interface AssetRow {\r\n        collection_name?: string\r\n        schema_name?: string\r\n      }\r\n      \r\n      if (data.rows) {\r\n        data.rows.forEach((row: AssetRow) => {\r\n          if (!row.collection_name) return\r\n          \r\n          totalAssets++\r\n          const collectionName = row.collection_name\r\n          const schemaName = row.schema_name || 'unknown'\r\n          \r\n          if (!collections.has(collectionName)) {\r\n            collections.set(collectionName, { count: 0, schemas: new Map() })\r\n          }\r\n          \r\n          const collection = collections.get(collectionName)!\r\n          collection.count++\r\n          collection.schemas.set(schemaName, (collection.schemas.get(schemaName) || 0) + 1)\r\n        })\r\n      }\r\n      \r\n      // Convert to array and sort by count\r\n      const collectionsArray = Array.from(collections.entries()).map(([name, data]) => ({\r\n        name,\r\n        count: data.count,\r\n        schema_counts: Object.fromEntries(data.schemas)\r\n      })).sort((a, b) => b.count - a.count)\r\n      \r\n      return {\r\n        totalAssets,\r\n        collections: collectionsArray,\r\n        topCollections: collectionsArray.slice(0, 10)\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryOverview', error, { account })\r\n      // Fallback to AtomicAssets API count\r\n      try {\r\n        const fallbackUrl = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/assets?owner=${account}&page=1&limit=1`\r\n        const fallbackResponse = await this.fetchWithRetry(fallbackUrl)\r\n        const fallbackData = await fallbackResponse.json()\r\n        const totalAssets = fallbackData.success ? (fallbackData.query_total || 0) : 0\r\n        \r\n        return {\r\n          totalAssets,\r\n          collections: [],\r\n          topCollections: []\r\n        }\r\n      } catch (fallbackError) {\r\n        ErrorMessageService.logError('ApiService.getUserInventoryOverview.fallback', fallbackError, { account })\r\n        return { totalAssets: 0, collections: [], topCollections: [] }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user inventory with lazy loading optimization for large inventories\r\n   * Uses higher limits and caching for better performance\r\n   */\r\n  async getUserInventoryOptimized(account: string, options: {\r\n    page?: number\r\n    limit?: number\r\n    collectionName?: string\r\n    schemaName?: string\r\n    useCache?: boolean\r\n    cacheTTL?: number\r\n  } = {}): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean, currentPage: number }> {\r\n    const {\r\n      page = 1,\r\n      limit = 1000, // Use higher default limit\r\n      collectionName,\r\n      schemaName,\r\n      useCache = true,\r\n      cacheTTL = 300000 // 5 minutes\r\n    } = options\r\n    \r\n    // Create cache key\r\n    const cacheKey = `inventory_${account}_${page}_${limit}_${collectionName || 'all'}_${schemaName || 'all'}`\r\n    \r\n    // Check cache first\r\n    if (useCache) {\r\n      const cached = this.getFromCache<{ assets: NFTAsset[], total: number, hasMore: boolean, currentPage: number }>(cacheKey)\r\n      if (cached) return cached\r\n    }\r\n    \r\n    try {\r\n      let url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/assets?owner=${account}&burned=false&limit=${limit}&page=${page}&order=desc&sort=asset_id`\r\n      \r\n      // Add collection filter if specified\r\n      if (collectionName && collectionName !== 'all') {\r\n        url += `&collection_name=${collectionName}`\r\n      }\r\n      // When collectionName is 'all', undefined, or empty, don't add collection filter\r\n      // This allows users to see ALL their NFTs from any collection\r\n      \r\n      // Add schema filter if specified\r\n      if (schemaName) {\r\n        url += `&schema_name=${schemaName}`\r\n      }\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        const hasMore = data.data.length === limit\r\n        const result = {\r\n          assets,\r\n          total: (data as { query_total?: number }).query_total || (((page - 1) * limit) + assets.length + (hasMore ? 1 : 0)),\r\n          hasMore,\r\n          currentPage: page\r\n        }\r\n        \r\n        // Cache the result\r\n        if (useCache) {\r\n          this.setCache(cacheKey, result, cacheTTL)\r\n        }\r\n        \r\n        return result\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false, currentPage: page }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryOptimized', error, { account, page, limit, collectionName, schemaName })\r\n      return { assets: [], total: 0, hasMore: false, currentPage: page }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Background batch fetcher for large inventories\r\n   * Fetches data in chunks with delays to avoid rate limits\r\n   */\r\n  async getUserInventoryBatch(account: string, options: {\r\n    batchSize?: number\r\n    maxBatches?: number\r\n    delayMs?: number\r\n    collectionName?: string\r\n    onProgress?: (progress: { current: number, total: number, assets: NFTAsset[], errors: string[] }) => void\r\n    maxRetries?: number\r\n    onError?: (error: Error, batchNumber: number, willRetry: boolean) => void\r\n  } = {}): Promise<{ assets: NFTAsset[], errors: string[], partialSuccess: boolean }> {\r\n    const {\r\n      batchSize = 1000,\r\n      maxBatches = 20, // Max 20k assets\r\n      delayMs = 500, // 500ms delay between batches\r\n      collectionName,\r\n      onProgress,\r\n      maxRetries = 3,\r\n      onError\r\n    } = options\r\n    \r\n    const allAssets: NFTAsset[] = []\r\n    const errors: string[] = []\r\n    let currentBatch = 1\r\n    let hasMore = true\r\n    let consecutiveFailures = 0\r\n    const maxConsecutiveFailures = 3\r\n    \r\n    while (hasMore && currentBatch <= maxBatches && consecutiveFailures < maxConsecutiveFailures) {\r\n      let batchSuccess = false\r\n      let lastError: Error | null = null\r\n      \r\n      // Retry logic for individual batch\r\n      for (let retryAttempt = 0; retryAttempt <= maxRetries; retryAttempt++) {\r\n        try {\r\n          if (retryAttempt > 0) {\r\n            // Calculate adaptive delay based on consecutive failures and retry attempt\r\n            const adaptiveDelay = delayMs * Math.pow(1.5, consecutiveFailures)\r\n            const retryDelay = Math.min(1000 * Math.pow(2, retryAttempt - 1) + adaptiveDelay, 10000)\r\n            await new Promise(resolve => setTimeout(resolve, retryDelay))\r\n          }\r\n          \r\n          const result = await this.getUserInventoryOptimized(account, {\r\n            page: currentBatch,\r\n            limit: batchSize,\r\n            collectionName,\r\n            useCache: false // Don't cache individual batches\r\n          })\r\n          \r\n          // Success - add assets and update state\r\n          allAssets.push(...result.assets)\r\n          hasMore = result.hasMore\r\n          batchSuccess = true\r\n          consecutiveFailures = 0\r\n          \r\n          // Call progress callback\r\n          if (onProgress) {\r\n            onProgress({\r\n              current: currentBatch,\r\n              total: Math.min(maxBatches, Math.ceil(result.total / batchSize)),\r\n              assets: [...allAssets],\r\n              errors: [...errors]\r\n            })\r\n          }\r\n          \r\n          break // Exit retry loop on success\r\n          \r\n        } catch (error) {\r\n          lastError = error as Error\r\n          const willRetry = retryAttempt < maxRetries\r\n          \r\n          // Call error callback\r\n          if (onError) {\r\n            onError(lastError, currentBatch, willRetry)\r\n          }\r\n          \r\n          // Log the error with context\r\n          ErrorMessageService.logError(\r\n            `ApiService.getUserInventoryBatch.batch${currentBatch}.attempt${retryAttempt + 1}`,\r\n            lastError,\r\n            { account, batchSize, currentBatch, retryAttempt }\r\n          )\r\n          \r\n          // If this is the last retry attempt, record the failure\r\n          if (!willRetry) {\r\n            const errorMsg = `Batch ${currentBatch} failed after ${maxRetries + 1} attempts: ${lastError.message}`\r\n            errors.push(errorMsg)\r\n            consecutiveFailures++\r\n            \r\n            // For critical errors (auth, network), stop immediately\r\n            if (this.isCriticalError(lastError)) {\r\n              ErrorMessageService.logError(\r\n                'ApiService.getUserInventoryBatch.criticalError',\r\n                lastError,\r\n                { account, currentBatch, errorType: 'critical' }\r\n              )\r\n              return {\r\n                assets: allAssets,\r\n                errors: [...errors, 'Critical error encountered, stopping batch processing'],\r\n                partialSuccess: allAssets.length > 0\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Move to next batch\r\n      currentBatch++\r\n      \r\n      // Add adaptive delay between batches\r\n      if (hasMore && currentBatch <= maxBatches && batchSuccess) {\r\n        const adaptiveDelay = delayMs * Math.pow(1.2, Math.min(consecutiveFailures, 3))\r\n        await new Promise(resolve => setTimeout(resolve, adaptiveDelay))\r\n      }\r\n    }\r\n    \r\n    // Final error logging if we stopped due to consecutive failures\r\n    if (consecutiveFailures >= maxConsecutiveFailures) {\r\n      const errorMsg = `Stopped processing due to ${consecutiveFailures} consecutive batch failures`\r\n      errors.push(errorMsg)\r\n      ErrorMessageService.logError(\r\n        'ApiService.getUserInventoryBatch.tooManyFailures',\r\n        new Error(errorMsg),\r\n        { account, currentBatch, consecutiveFailures }\r\n      )\r\n    }\r\n    \r\n    return {\r\n      assets: allAssets,\r\n      errors,\r\n      partialSuccess: allAssets.length > 0 && (errors.length > 0 || consecutiveFailures > 0)\r\n    }\r\n  }\r\n  \r\n  /**\r\n    * Determines if an error is critical and should stop batch processing\r\n    */\r\n   private isCriticalError(error: Error): boolean {\r\n     const message = error.message.toLowerCase()\r\n     return (\r\n       message.includes('unauthorized') ||\r\n       message.includes('forbidden') ||\r\n       message.includes('invalid account') ||\r\n       message.includes('network error') ||\r\n       message.includes('dns') ||\r\n       message.includes('connection refused')\r\n     )\r\n   }\r\n   \r\n   /**\r\n    * Generic batch operation wrapper with error handling and retry logic\r\n    * Can be used by other services for consistent batch processing\r\n    */\r\n   async executeBatchOperation<T, R>(\r\n     items: T[],\r\n     batchProcessor: (batch: T[], batchIndex: number) => Promise<R[]>,\r\n     options: {\r\n       batchSize?: number\r\n       maxRetries?: number\r\n       delayMs?: number\r\n       onProgress?: (progress: { completed: number, total: number, errors: string[] }) => void\r\n       onError?: (error: Error, batchIndex: number, willRetry: boolean) => void\r\n       stopOnCriticalError?: boolean\r\n     } = {}\r\n   ): Promise<{ results: R[], errors: string[], partialSuccess: boolean }> {\r\n     const {\r\n       batchSize = 100,\r\n       maxRetries = 3,\r\n       delayMs = 500,\r\n       onProgress,\r\n       onError,\r\n       stopOnCriticalError = true\r\n     } = options\r\n     \r\n     const results: R[] = []\r\n     const errors: string[] = []\r\n     const batches = this.chunkArray(items, batchSize)\r\n     let consecutiveFailures = 0\r\n     const maxConsecutiveFailures = 3\r\n     \r\n     for (let batchIndex = 0; batchIndex < batches.length; batchIndex++) {\r\n       const batch = batches[batchIndex]\r\n       let batchSuccess = false\r\n       let lastError: Error | null = null\r\n       \r\n       // Retry logic for individual batch\r\n       for (let retryAttempt = 0; retryAttempt <= maxRetries; retryAttempt++) {\r\n         try {\r\n           if (retryAttempt > 0) {\r\n             // Exponential backoff for retries\r\n             const retryDelay = Math.min(1000 * Math.pow(2, retryAttempt - 1), 10000)\r\n             await new Promise(resolve => setTimeout(resolve, retryDelay))\r\n           }\r\n           \r\n           const batchResults = await batchProcessor(batch, batchIndex)\r\n           results.push(...batchResults)\r\n           batchSuccess = true\r\n           consecutiveFailures = 0\r\n           \r\n           // Call progress callback\r\n           if (onProgress) {\r\n             onProgress({\r\n               completed: batchIndex + 1,\r\n               total: batches.length,\r\n               errors: [...errors]\r\n             })\r\n           }\r\n           \r\n           break // Exit retry loop on success\r\n           \r\n         } catch (error) {\r\n           lastError = error as Error\r\n           const willRetry = retryAttempt < maxRetries\r\n           \r\n           // Call error callback\r\n           if (onError) {\r\n             onError(lastError, batchIndex, willRetry)\r\n           }\r\n           \r\n           // Log the error with context\r\n           ErrorMessageService.logError(\r\n             `ApiService.executeBatchOperation.batch${batchIndex}.attempt${retryAttempt + 1}`,\r\n             lastError,\r\n             { batchIndex, retryAttempt, batchSize: batch.length }\r\n           )\r\n           \r\n           // If this is the last retry attempt, record the failure\r\n           if (!willRetry) {\r\n             const errorMsg = `Batch ${batchIndex} failed after ${maxRetries + 1} attempts: ${lastError.message}`\r\n             errors.push(errorMsg)\r\n             consecutiveFailures++\r\n             \r\n             // For critical errors, stop immediately if configured\r\n             if (stopOnCriticalError && this.isCriticalError(lastError)) {\r\n               ErrorMessageService.logError(\r\n                 'ApiService.executeBatchOperation.criticalError',\r\n                 lastError,\r\n                 { batchIndex, errorType: 'critical' }\r\n               )\r\n               return {\r\n                 results,\r\n                 errors: [...errors, 'Critical error encountered, stopping batch processing'],\r\n                 partialSuccess: results.length > 0\r\n               }\r\n             }\r\n           }\r\n         }\r\n       }\r\n       \r\n       // Stop if too many consecutive failures\r\n       if (consecutiveFailures >= maxConsecutiveFailures) {\r\n         const errorMsg = `Stopped processing due to ${consecutiveFailures} consecutive batch failures`\r\n         errors.push(errorMsg)\r\n         ErrorMessageService.logError(\r\n           'ApiService.executeBatchOperation.tooManyFailures',\r\n           new Error(errorMsg),\r\n           { batchIndex, consecutiveFailures }\r\n         )\r\n         break\r\n       }\r\n       \r\n       // Add adaptive delay between batches\r\n       if (batchIndex < batches.length - 1 && batchSuccess) {\r\n         const adaptiveDelay = delayMs * Math.pow(1.2, Math.min(consecutiveFailures, 3))\r\n         await new Promise(resolve => setTimeout(resolve, adaptiveDelay))\r\n       }\r\n     }\r\n     \r\n     return {\r\n       results,\r\n       errors,\r\n       partialSuccess: results.length > 0 && errors.length > 0\r\n     }\r\n   }\r\n   \r\n   /**\r\n    * Utility method to chunk an array into smaller batches\r\n    */\r\n   private chunkArray<T>(array: T[], chunkSize: number): T[][] {\r\n     const chunks: T[][] = []\r\n     for (let i = 0; i < array.length; i += chunkSize) {\r\n       chunks.push(array.slice(i, i + chunkSize))\r\n     }\r\n     return chunks\r\n   }\r\n\r\n  /**\r\n   * Get user inventory with optional collection filtering - for inventory page with dropdown\r\n   */\r\n  async getUserInventoryWithFilter(account: string, page: number = 1, limit: number = 1000, collectionName?: string): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean, currentPage: number }> {\r\n    try {\r\n      let url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&burned=false&limit=${limit}&page=${page}&order=desc&sort=asset_id`\r\n      \r\n      // Add collection filter if specified\r\n      if (collectionName && collectionName !== 'all') {\r\n        url += `&collection_name=${collectionName}`\r\n      }\r\n      // When collectionName is 'all' or undefined, don't add any collection filter\r\n      // This allows users to see ALL their NFTs from any collection\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          video: this.getAssetVideo(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        // Simple hasMore calculation - if we got a full page, there might be more\r\n        const hasMore = data.data.length === limit\r\n        \r\n        return { \r\n          assets, \r\n          total: (page - 1) * limit + assets.length + (hasMore ? 1 : 0), \r\n          hasMore,\r\n          currentPage: page\r\n        }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false, currentPage: page }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryWithFilter', error, { account, page, limit, collectionName })\r\n      return { assets: [], total: 0, hasMore: false, currentPage: page }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enhanced user inventory method with comprehensive AtomicAssets API filtering and sorting options\r\n   * Supports all available query parameters for maximum flexibility\r\n   */\r\n  async getUserInventoryEnhanced(account: string, options: {\r\n    page?: number\r\n    limit?: number\r\n    order?: 'asc' | 'desc'\r\n    sort?: 'asset_id' | 'created' | 'updated' | 'transferred' | 'minted'\r\n    collection_name?: string\r\n    schema_name?: string\r\n    template_id?: string | number\r\n    search?: string\r\n    match?: string\r\n    before?: number\r\n    after?: number\r\n    collection_whitelist?: string\r\n    collection_blacklist?: string\r\n    authorized_account?: string\r\n    minted_by?: string\r\n    burned?: boolean\r\n  } = {}): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean, currentPage: number, collections: string[], schemas: string[] }> {\r\n    // Set defaults - show latest received/transferred NFTs by default\r\n    const {\r\n      page = 1,\r\n      limit = 1000,\r\n      order = 'desc',\r\n      sort = 'transferred', // Default to latest transferred (received)\r\n      burned = false,\r\n      ...filters\r\n    } = options\r\n    \r\n    try {\r\n\r\n      // Build query parameters\r\n      const params = new URLSearchParams({\r\n        owner: account,\r\n        burned: burned.toString(),\r\n        limit: limit.toString(),\r\n        page: page.toString(),\r\n        order,\r\n        sort\r\n      })\r\n\r\n      // Add optional filters\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined && value !== null && value !== '') {\r\n          params.append(key, value.toString())\r\n        }\r\n      })\r\n\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?${params.toString()}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          video: this.getAssetVideo(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_id: asset.template?.template_id || '0',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        // Extract unique collections and schemas for filter options\r\n        const collections = [...new Set(assets.map(asset => asset.collection))].filter(c => c !== 'Unknown')\r\n        const schemas = [...new Set(assets.map(asset => asset.schema))].filter(s => s !== 'Unknown')\r\n        \r\n        const hasMore = data.data.length === limit\r\n        \r\n        return { \r\n          assets, \r\n          total: (page - 1) * limit + assets.length + (hasMore ? 1 : 0), \r\n          hasMore,\r\n          currentPage: page,\r\n          collections,\r\n          schemas\r\n        }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false, currentPage: page, collections: [], schemas: [] }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryEnhanced', error, { account, options })\r\n      return { assets: [], total: 0, hasMore: false, currentPage: page, collections: [], schemas: [] }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user inventory for a specific template - fastest for single template queries\r\n   */\r\n  async getUserInventoryByTemplate(account: string, templateId: string, limit: number = 1000, offset: number = 0): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean }> {\r\n    try {\r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&template_id=${templateId}&burned=false&limit=${limit}&offset=${offset}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        const assets = data.data.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          )\r\n        }))\r\n        \r\n        const hasMore = data.data.length === limit\r\n        return { assets, total: offset + assets.length + (hasMore ? 1 : 0), hasMore }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryByTemplate', error, { account, templateId, limit, offset })\r\n      return { assets: [], total: 0, hasMore: false }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user's WaxRock Pixal PFPs - filters for template 781515 with valid WaxRock attributes\r\n   */\r\n  async getUserInventoryWaxRocks(account: string, limit: number = 1000, offset: number = 0): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean }> {\r\n    try {\r\n      // Import the proper WaxRock types and Pixal template ID from config\r\n      const { MarketplaceConfigService } = await import('../config/marketplaceConfig')\r\n      const pixalTemplateId = MarketplaceConfigService.getPixalTemplateId()\r\n      \r\n      const url = `${this.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&template_id=${pixalTemplateId}&burned=false&limit=${limit}&offset=${offset}&order=desc&sort=asset_id`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data: ApiResponse<AssetData[]> = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        // Filter for assets that have valid WaxRock attributes\r\n        const waxRockAssets = data.data.filter(asset => {\r\n          // Check both mutable and immutable data for WaxRock attribute\r\n          const waxRock = asset.data?.WaxRock || asset.template?.immutable_data?.WaxRock\r\n          \r\n          if (waxRock && typeof waxRock === 'string') {\r\n            // Explicitly exclude 'none' values and only include valid WaxRock types\r\n            return waxRock !== 'none' && MarketplaceConfigService.isValidWaxRock(waxRock)\r\n          }\r\n          \r\n          return false\r\n        })\r\n        \r\n        const assets = waxRockAssets.map(asset => ({\r\n          sale_id: '',\r\n          asset_id: asset.asset_id || '',\r\n          name: asset.name || `${asset.collection?.collection_name || 'Unknown'} #${asset.asset_id}`,\r\n          image: this.getAssetImage(asset),\r\n          price: 'Not for sale',\r\n          seller: account,\r\n          collection: asset.collection?.collection_name || 'Unknown',\r\n          schema: asset.schema?.schema_name || 'Unknown',\r\n          template_mint: parseInt(asset.template?.template_id || '0') || 0,\r\n          max_supply: asset.template?.max_supply || '0',\r\n          traits: Object.fromEntries(\r\n            Object.entries(asset.data || {}).map(([key, value]) => [key, value ?? ''])\r\n          ),\r\n          data: asset.data\r\n        }))\r\n        \r\n        const hasMore = data.data.length === limit\r\n        return { assets, total: assets.length, hasMore }\r\n      }\r\n      \r\n      return { assets: [], total: 0, hasMore: false }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserInventoryWaxRocks', error, { account, limit, offset })\r\n      return { assets: [], total: 0, hasMore: false }\r\n    }\r\n  }\r\n\r\n  // WAX Chain API methods\r\n  async getWaxChainInfo(): Promise<WaxChainInfo | null> {\r\n    try {\r\n      const response = await this.fetchWithRetry(`${this.waxChainAPI}/v1/chain/get_info`)\r\n      if (response.ok) {\r\n        return await response.json()\r\n      }\r\n      throw new Error('Failed to fetch chain info')\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getWaxChainInfo', error)\r\n      // Try next endpoint\r\n      if (this.currentWaxChainIndex < this.waxChainEndpoints.length - 1) {\r\n        this.currentWaxChainIndex++\r\n        return this.getWaxChainInfo()\r\n      }\r\n      this.currentWaxChainIndex = 0\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getWaxAccountInfo(accountName: string): Promise<WaxAccountInfo | null> {\r\n    // Fetching account info from WAX chain\r\n    \r\n    for (let endpointIndex = 0; endpointIndex < this.waxChainEndpoints.length; endpointIndex++) {\r\n      const endpoint = this.waxChainEndpoints[endpointIndex];\r\n      // Trying WAX chain endpoint\r\n      \r\n      try {\r\n        const response = await fetch(\r\n          `${endpoint}/v1/chain/get_account`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            },\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n              account_name: accountName\r\n            })\r\n          }\r\n        );\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          // Successfully fetched account info\r\n          this.currentWaxChainIndex = endpointIndex; // Update successful endpoint\r\n          return data;\r\n        } else {\r\n          logger.warn(`Endpoint ${endpoint} returned status ${response.status}: ${response.statusText}`, 'API');\r\n        }\r\n      } catch (error) {\r\n        ErrorMessageService.logError('ApiService.getWaxAccountInfo', error, { endpoint, accountName });\r\n        // Continue to next endpoint\r\n      }\r\n    }\r\n    \r\n    ErrorMessageService.logError('ApiService.getWaxAccountInfo', new Error('All WAX chain endpoints failed for get_account'), { accountName });\r\n    return null;\r\n  }\r\n\r\n  async getWaxCurrencyBalance(accountName: string, contract: string = 'eosio.token', symbol: string = 'WAX'): Promise<WaxCurrencyBalance[]> {\r\n    logger.debug(`Attempting to fetch currency balance for: ${accountName}`, 'API');\r\n    \r\n    for (let endpointIndex = 0; endpointIndex < this.waxChainEndpoints.length; endpointIndex++) {\r\n      const endpoint = this.waxChainEndpoints[endpointIndex];\r\n      logger.debug(`Trying endpoint ${endpointIndex + 1}/${this.waxChainEndpoints.length}: ${endpoint}`, 'API');\r\n      \r\n      try {\r\n        const response = await fetch(\r\n          `${endpoint}/v1/chain/get_currency_balance`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            },\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n              code: contract,\r\n              account: accountName,\r\n              symbol: symbol\r\n            })\r\n          }\r\n        );\r\n        \r\n        if (response.ok) {\r\n          const balances = await response.json();\r\n          logger.debug(`Successfully fetched currency balance from ${endpoint}`, 'API');\r\n          this.currentWaxChainIndex = endpointIndex; // Update successful endpoint\r\n          return balances.map((balance: string) => ({\r\n            balance,\r\n            contract,\r\n            symbol: balance.split(' ')[1] || symbol\r\n          }));\r\n        } else {\r\n          logger.warn(`Endpoint ${endpoint} returned status ${response.status}: ${response.statusText}`, 'API');\r\n        }\r\n      } catch (error) {\r\n        ErrorMessageService.logError('ApiService.getWaxCurrencyBalance', error, { endpoint, accountName, contract, symbol });\r\n        // Continue to next endpoint\r\n      }\r\n    }\r\n    \r\n    ErrorMessageService.logError('ApiService.getWaxCurrencyBalance', new Error('All WAX chain endpoints failed for get_currency_balance'), { accountName, contract, symbol });\r\n    return [];\r\n  }\r\n\r\n  // === WAX Light API Methods ===\r\n  \r\n  /**\r\n   * Get token balances for a WAX account using Light API\r\n   * Much faster than standard RPC calls\r\n   */\r\n  async getLightApiBalances(accountName: string): Promise<LightApiResponse | null> {\r\n    try {\r\n      const url = `${this.waxLightAPI}/api/balances/wax/${accountName}`\r\n      \r\n      // Use direct fetch for Light API - don't use fetchWithRetry as it tries Atomic endpoints\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        mode: 'cors'\r\n      })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      const data: LightApiResponse = await response.json()\r\n      return data\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getLightApiBalances', error, { accountName })\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get account information using Light API\r\n   */\r\n  async getLightApiAccountInfo(accountName: string): Promise<{\r\n    account: {\r\n      account_name: string\r\n      head_block_num: number\r\n      head_block_time: string\r\n      privileged: boolean\r\n      last_code_update: string\r\n      created: string\r\n      core_liquid_balance?: string\r\n      ram_quota: number\r\n      net_weight: number\r\n      cpu_weight: number\r\n      net_limit: {\r\n        used: number\r\n        available: number\r\n        max: number\r\n      }\r\n      cpu_limit: {\r\n        used: number\r\n        available: number\r\n        max: number\r\n      }\r\n      ram_usage: number\r\n      permissions: Array<{\r\n        perm_name: string\r\n        parent: string\r\n        required_auth: {\r\n          threshold: number\r\n          keys: Array<{\r\n            key: string\r\n            weight: number\r\n          }>\r\n          accounts: Array<unknown>\r\n          waits: Array<unknown>\r\n        }\r\n      }>\r\n    }\r\n  } | null> {\r\n    try {\r\n      const url = `${this.waxLightAPI}/api/account/wax/${accountName}`\r\n      \r\n      // Use direct fetch for Light API - don't use fetchWithRetry as it tries Atomic endpoints\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        mode: 'cors'\r\n      })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      return await response.json()\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getLightApiAccountInfo', error, { accountName })\r\n      return null\r\n    }\r\n  }\r\n\r\n  // === Alcor Exchange API Methods ===\r\n  \r\n  /**\r\n   * Get token price from Alcor Exchange\r\n   */\r\n  async getAlcorTokenPrice(symbol: string, contract: string): Promise<AlcorTokenPrice | null> {\r\n    let timeoutId: NodeJS.Timeout | null = null\r\n    try {\r\n      // Create token ID in format: symbol-contract\r\n      const tokenId = `${symbol.toLowerCase()}-${contract}`\r\n      const url = `${this.alcorAPI}/tokens/${tokenId}`\r\n      \r\n      // Add timeout and better error handling\r\n      const controller = new AbortController()\r\n      timeoutId = setTimeout(() => {\r\n        controller.abort()\r\n      }, 8000) // Reduced to 8 second timeout\r\n      \r\n      const response = await this.fetchAlcorAPI(url, 2, { signal: controller.signal })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      const tokenData: AlcorTokenPrice = await response.json()\r\n      \r\n      return tokenData\r\n    } catch (error) {\r\n      // Handle abort errors more gracefully\r\n      if (error instanceof Error && error.name === 'AbortError') {\r\n        logger.warn(`Alcor API request timeout for ${symbol}`, 'API')\r\n        return null\r\n      }\r\n      \r\n      logger.warn(`Error fetching Alcor token price for ${symbol}`, 'API', error)\r\n      // Return fallback data for WAX to prevent UI crashes\r\n      if (symbol.toLowerCase() === 'wax') {\r\n        return {\r\n          symbol: 'WAX',\r\n          contract: 'eosio.token',\r\n          id: 'wax-eosio.token',\r\n          system_price: 0.05, // Fallback price\r\n          usd_price: 0.05,\r\n          decimals: 8\r\n        }\r\n      }\r\n      return null\r\n    } finally {\r\n      // Always clear the timeout\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all available trading pairs from Alcor Exchange\r\n   */\r\n  async getAlcorMarkets(): Promise<AlcorPairData[]> {\r\n    try {\r\n      const url = `${this.alcorAPI}/pairs`\r\n      const response = await this.fetchAlcorAPI(url)\r\n      \r\n      return await response.json()\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAlcorMarkets', error)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get marketplace configuration data\r\n   * This would typically come from a backend API or configuration service\r\n   * For now, we'll simulate API responses with the known data\r\n   */\r\n  async getMarketplaceConfig(): Promise<{\r\n    partnerCollections: string[]\r\n    tokenContracts: string[]\r\n    supportedTokens: Array<{\r\n      contract: string\r\n      symbol: string\r\n      precision: number\r\n    }>\r\n  }> {\r\n    try {\r\n      // In a real implementation, this would fetch from a configuration API\r\n      // For now, return the known configuration data\r\n      return {\r\n        partnerCollections: [\r\n          'friedfactory',\r\n          'pixeljourney'\r\n        ],\r\n        tokenContracts: [\r\n          'alien.worlds',\r\n          'prospectorsc',\r\n          'token.nefty'\r\n        ],\r\n        supportedTokens: [\r\n          { contract: 'eosio.token', symbol: 'WAX', precision: 8 },\r\n          { contract: 'alien.worlds', symbol: 'TLM', precision: 4 },\r\n          { contract: 'prospectorsc', symbol: 'PGL', precision: 4 },\r\n          { contract: 'token.nefty', symbol: 'NEFTY', precision: 8 }\r\n        ]\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getMarketplaceConfig', error)\r\n      // Return fallback configuration\r\n      return {\r\n        partnerCollections: ['friedfactory', 'pixeljourney'],\r\n        tokenContracts: ['alien.worlds', 'prospectorsc', 'token.nefty'],\r\n        supportedTokens: [\r\n          { contract: 'eosio.token', symbol: 'WAX', precision: 8 }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get partner collections from API\r\n   */\r\n  async getPartnerCollections(): Promise<string[]> {\r\n    try {\r\n      const config = await this.getMarketplaceConfig()\r\n      return config.partnerCollections\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getPartnerCollections', error)\r\n      return ['friedfactory', 'pixeljourney'] // Fallback\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get supported token contracts from API\r\n   */\r\n  async getTokenContracts(): Promise<string[]> {\r\n    try {\r\n      const config = await this.getMarketplaceConfig()\r\n      return config.tokenContracts\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getTokenContracts', error)\r\n      return ['alien.worlds', 'prospectorsc', 'token.nefty'] // Fallback\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get swap quote for token exchange on Alcor\r\n   */\r\n  async getAlcorSwapQuote(params: AlcorSwapParams): Promise<{\r\n    input: {\r\n      amount: string\r\n      symbol: string\r\n      contract: string\r\n    }\r\n    output: {\r\n      amount: string\r\n      symbol: string\r\n      contract: string\r\n    }\r\n    price: number\r\n    priceImpact: number\r\n    route: Array<{\r\n      pool: {\r\n        id: number\r\n        tokenA: {\r\n          symbol: string\r\n          contract: string\r\n        }\r\n        tokenB: {\r\n          symbol: string\r\n          contract: string\r\n        }\r\n      }\r\n    }>\r\n  } | null> {\r\n    try {\r\n      const url = `${this.alcorAPI}/swap/quote`\r\n      const response = await this.fetchAlcorAPI(url, 3, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(params)\r\n      })\r\n      \r\n      return await response.json()\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAlcorSwapQuote', error, { params })\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get PXJ token price specifically (commonly used)\r\n   */\r\n  async getPXJPrice(): Promise<number> {\r\n    try {\r\n      const priceData = await this.getAlcorTokenPrice('PXJ', 'pixeljourney')\r\n      return priceData?.system_price || 0\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getPXJPrice', error)\r\n      return 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate total portfolio value in USD\r\n   */\r\n  async calculatePortfolioValue(balances: LightApiBalance[]): Promise<number> {\r\n    let totalValue = 0\r\n    \r\n    for (const balance of balances) {\r\n      try {\r\n        const priceData = await this.getAlcorTokenPrice(balance.currency, balance.contract)\r\n        if (priceData) {\r\n          const amount = parseFloat(balance.amount)\r\n          const decimals = parseInt(balance.decimals)\r\n          const adjustedAmount = amount / Math.pow(10, decimals)\r\n          totalValue += adjustedAmount * priceData.usd_price\r\n        }\r\n      } catch (error) {\r\n        logger.warn(`Could not get price for ${balance.currency}`, 'API', error)\r\n      }\r\n    }\r\n    \r\n    return totalValue\r\n  }\r\n\r\n  /**\r\n   * Get marketplace listings for NFTs by asset_id\r\n   */\r\n  async getMarketplaceNFTs(params: {\r\n    page?: number\r\n    limit?: number\r\n    asset_id?: string\r\n    state?: number\r\n  }): Promise<{\r\n    success: boolean\r\n    data: Array<{\r\n      sale_id: string\r\n      asset_id: string\r\n      price: string\r\n      seller: string\r\n      created_at_time: string\r\n    }>\r\n  }> {\r\n    try {\r\n      const { page = 1, limit = 100, asset_id, state = 1 } = params\r\n      let url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/sales?state=${state}&page=${page}&limit=${limit}&order=desc&sort=created`\r\n      \r\n      if (asset_id) {\r\n        url += `&asset_id=${asset_id}`\r\n      }\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return {\r\n          success: true,\r\n          data: data.data.map((sale: {\r\n            sale_id: string\r\n            assets: Array<{ asset_id: string }>\r\n            price: { amount: string; token_symbol: string; token_precision: number }\r\n            seller: string\r\n            created_at_time: string\r\n          }) => ({\r\n            sale_id: sale.sale_id,\r\n            asset_id: sale.assets[0]?.asset_id || '',\r\n            price: sale.price ? `${(parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision || 8)).toFixed(8)} ${sale.price.token_symbol}` : '0 WAX',\r\n            seller: sale.seller,\r\n            created_at_time: sale.created_at_time\r\n          }))\r\n        }\r\n      }\r\n      \r\n      return { success: true, data: [] }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getMarketplaceNFTs', error, { params })\r\n      return { success: false, data: [] }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get offers for a specific NFT asset\r\n   */\r\n  async getAssetOffers(assetId: string): Promise<Array<{\r\n    id: string\r\n    buyer: string\r\n    price: string\r\n    token: string\r\n    created: string\r\n    memo?: string\r\n  }>> {\r\n    try {\r\n      const url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/buyoffers?asset_id=${assetId}&state=0&page=1&limit=100&order=desc&sort=price`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      if (data.success && data.data) {\r\n        return data.data.map((offer: {\r\n          buyoffer_id: string\r\n          buyer: string\r\n          price: { amount: string; token_symbol: string }\r\n          created_at_time: string\r\n          memo?: string\r\n        }) => ({\r\n          id: offer.buyoffer_id,\r\n          buyer: offer.buyer,\r\n          price: offer.price.amount,\r\n          symbol: offer.price.token_symbol,\r\n          timestamp: offer.created_at_time,\r\n          memo: offer.memo || ''\r\n        }))\r\n      }\r\n      \r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAssetOffers', error, { assetId })\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get assets in batch using ids parameter for efficient API usage\r\n   */\r\n  async getAssetsBatch(assetIds: string[]): Promise<{\r\n    success: boolean\r\n    data: AssetDetails[]\r\n    errors: string[]\r\n  }> {\r\n    if (!assetIds.length) {\r\n      return { success: true, data: [], errors: [] }\r\n    }\r\n\r\n    try {\r\n      // Split into chunks of 100 (API limit)\r\n      const chunks = this.chunkArray(assetIds, 100)\r\n      const allAssets: AssetDetails[] = []\r\n      const errors: string[] = []\r\n\r\n      for (const chunk of chunks) {\r\n        try {\r\n          const idsParam = chunk.join(',')\r\n          const url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/assets`\r\n          \r\n          // Use POST for longer queries to avoid URL length limits\r\n          const response = await this.fetchWithRetry(url, 3, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              ids: idsParam,\r\n              limit: '1000'\r\n            })\r\n          })\r\n          \r\n          const data = await response.json()\r\n          \r\n          if (data.success && data.data) {\r\n            allAssets.push(...data.data)\r\n          } else {\r\n            errors.push(`Failed to fetch assets batch: ${chunk.join(', ')}`)\r\n          }\r\n        } catch (error) {\r\n          ErrorMessageService.logError('ApiService.getAssetsBatch', error, { chunk })\r\n          errors.push(`Error fetching assets: ${chunk.join(', ')}`)\r\n        }\r\n      }\r\n\r\n      return {\r\n        success: errors.length === 0,\r\n        data: allAssets,\r\n        errors\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAssetsBatch', error, { assetIds })\r\n      return {\r\n        success: false,\r\n        data: [],\r\n        errors: [`Failed to process asset batch: ${error}`]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get templates in batch using ids parameter for efficient API usage\r\n   */\r\n  async getTemplatesBatch(templateIds: string[]): Promise<{\r\n    success: boolean\r\n    data: TemplateData[]\r\n    errors: string[]\r\n  }> {\r\n    if (!templateIds.length) {\r\n      return { success: true, data: [], errors: [] }\r\n    }\r\n\r\n    try {\r\n      // Split into chunks of 100 (API limit)\r\n      const chunks = this.chunkArray(templateIds, 100)\r\n      const allTemplates: TemplateData[] = []\r\n      const errors: string[] = []\r\n\r\n      for (const chunk of chunks) {\r\n        try {\r\n          const idsParam = chunk.join(',')\r\n          const url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/templates`\r\n          \r\n          // Use POST for longer queries\r\n          const response = await this.fetchWithRetry(url, 3, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              ids: idsParam,\r\n              limit: '1000'\r\n            })\r\n          })\r\n          \r\n          const data = await response.json()\r\n          \r\n          if (data.success && data.data) {\r\n            allTemplates.push(...data.data)\r\n          } else {\r\n            errors.push(`Failed to fetch templates batch: ${chunk.join(', ')}`)\r\n          }\r\n        } catch (error) {\r\n          ErrorMessageService.logError('ApiService.getTemplatesBatch', error, { chunk })\r\n          errors.push(`Error fetching templates: ${chunk.join(', ')}`)\r\n        }\r\n      }\r\n\r\n      return {\r\n        success: errors.length === 0,\r\n        data: allTemplates,\r\n        errors\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getTemplatesBatch', error, { templateIds })\r\n      return {\r\n        success: false,\r\n        data: [],\r\n        errors: [`Failed to process template batch: ${error}`]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get asset counts for multiple templates efficiently\r\n   */\r\n  async getAssetCountsBatch(templateIds: string[], owner?: string): Promise<{\r\n    success: boolean\r\n    data: Record<string, number>\r\n    errors: string[]\r\n  }> {\r\n    if (!templateIds.length) {\r\n      return { success: true, data: {}, errors: [] }\r\n    }\r\n\r\n    try {\r\n      const counts: Record<string, number> = {}\r\n      const errors: string[] = []\r\n      \r\n      // Process in smaller chunks to avoid overwhelming the API\r\n      const chunks = this.chunkArray(templateIds, 50)\r\n      \r\n      for (const chunk of chunks) {\r\n        try {\r\n          const promises = chunk.map(async (templateId) => {\r\n            try {\r\n              const params: AtomicParams = {\r\n                template_id: templateId,\r\n                limit: 1 // We only need the count\r\n              }\r\n              \r\n              if (owner) {\r\n                params.owner = owner\r\n              }\r\n              \r\n              const url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/assets`\r\n              const queryParams = new URLSearchParams()\r\n              \r\n              Object.entries(params).forEach(([key, value]) => {\r\n                if (value !== undefined && value !== null) {\r\n                  queryParams.append(key, String(value))\r\n                }\r\n              })\r\n              \r\n              const response = await this.fetchWithRetry(`${url}?${queryParams}`)\r\n              const data = await response.json()\r\n              \r\n              if (data.success) {\r\n                return { templateId, count: parseInt(data.query_total || '0') }\r\n              } else {\r\n                return { templateId, count: 0, error: 'API returned unsuccessful response' }\r\n              }\r\n            } catch (error) {\r\n              return { templateId, count: 0, error: String(error) }\r\n            }\r\n          })\r\n          \r\n          const results = await Promise.all(promises)\r\n          \r\n          results.forEach(result => {\r\n            if (result.error) {\r\n              errors.push(`Error fetching count for template ${result.templateId}: ${result.error}`)\r\n            }\r\n            counts[result.templateId] = result.count\r\n          })\r\n          \r\n          // Add delay between chunks to be respectful to the API\r\n          if (chunks.indexOf(chunk) < chunks.length - 1) {\r\n            await new Promise(resolve => setTimeout(resolve, 100))\r\n          }\r\n        } catch (error) {\r\n          ErrorMessageService.logError('ApiService.getAssetCountsBatch chunk', error, { chunk })\r\n          chunk.forEach(templateId => {\r\n            counts[templateId] = 0\r\n            errors.push(`Error processing template ${templateId}: ${error}`)\r\n          })\r\n        }\r\n      }\r\n\r\n      return {\r\n        success: errors.length === 0,\r\n        data: counts,\r\n        errors\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAssetCountsBatch', error, { templateIds })\r\n      return {\r\n        success: false,\r\n        data: {},\r\n        errors: [`Failed to process asset counts batch: ${error}`]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all offers (buy offers) with comprehensive filtering\r\n   */\r\n  async getOffers(params: AtomicParams = {}): Promise<{\r\n    success: boolean\r\n    data: Array<{\r\n      buyoffer_id: string\r\n      buyer: string\r\n      seller: string\r\n      price: PriceData\r\n      assets: AssetData[]\r\n      memo?: string\r\n      state: number\r\n      created_at_time: string\r\n      updated_at_time: string\r\n    }>\r\n    query_total?: number\r\n  }> {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 100,\r\n        order = 'desc',\r\n        sort = 'created',\r\n        state = '0',\r\n        collection_name,\r\n        schema_name,\r\n        template_id,\r\n        asset_id,\r\n        buyer,\r\n        seller,\r\n        min_price,\r\n        max_price,\r\n        symbol = 'WAX'\r\n      } = params\r\n      \r\n      let url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/buyoffers?page=${page}&limit=${limit}&order=${order}&sort=${sort}&state=${state}&symbol=${symbol}`\r\n      \r\n      if (collection_name) url += `&collection_name=${collection_name}`\r\n      if (schema_name) url += `&schema_name=${schema_name}`\r\n      if (template_id) url += `&template_id=${template_id}`\r\n      if (asset_id) url += `&asset_id=${asset_id}`\r\n      if (buyer) url += `&buyer=${buyer}`\r\n      if (seller) url += `&seller=${seller}`\r\n      if (min_price) url += `&min_price=${min_price}`\r\n      if (max_price) url += `&max_price=${max_price}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return {\r\n        success: data.success || false,\r\n        data: data.data || [],\r\n        query_total: data.query_total\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getOffers', error, params)\r\n      return { success: false, data: [] }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get price history and statistics for assets/templates\r\n   */\r\n  async getPrices(params: AtomicParams = {}): Promise<{\r\n    success: boolean\r\n    data: Array<{\r\n      sale_id: string\r\n      price: PriceData\r\n      template_mint: number\r\n      created_at_time: string\r\n    }>\r\n    query_total?: number\r\n  }> {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 100,\r\n        order = 'desc',\r\n        sort = 'created',\r\n        collection_name,\r\n        schema_name,\r\n        template_id,\r\n        symbol = 'WAX'\r\n      } = params\r\n      \r\n      let url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/prices?page=${page}&limit=${limit}&order=${order}&sort=${sort}&symbol=${symbol}`\r\n      \r\n      if (collection_name) url += `&collection_name=${collection_name}`\r\n      if (schema_name) url += `&schema_name=${schema_name}`\r\n      if (template_id) url += `&template_id=${template_id}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return {\r\n        success: data.success || false,\r\n        data: data.data || [],\r\n        query_total: data.query_total\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getPrices', error, params)\r\n      return { success: false, data: [] }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get asset transfers history\r\n   */\r\n  async getTransfers(params: AtomicParams = {}): Promise<{\r\n    success: boolean\r\n    data: Array<{\r\n      transfer_id: string\r\n      sender_name: string\r\n      recipient_name: string\r\n      assets: AssetData[]\r\n      memo?: string\r\n      created_at_time: string\r\n      txid: string\r\n    }>\r\n    query_total?: number\r\n  }> {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 100,\r\n        order = 'desc',\r\n        sort = 'created',\r\n        collection_name,\r\n        schema_name,\r\n        template_id,\r\n        asset_id,\r\n        sender,\r\n        recipient_name: recipient\r\n      } = params\r\n      \r\n      let url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/transfers?page=${page}&limit=${limit}&order=${order}&sort=${sort}`\r\n      \r\n      if (collection_name) url += `&collection_name=${collection_name}`\r\n      if (schema_name) url += `&schema_name=${schema_name}`\r\n      if (template_id) url += `&template_id=${template_id}`\r\n      if (asset_id) url += `&asset_id=${asset_id}`\r\n      if (sender) url += `&sender_name=${sender}`\r\n      if (recipient) url += `&recipient_name=${recipient}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return {\r\n        success: data.success || false,\r\n        data: data.data || [],\r\n        query_total: data.query_total\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getTransfers', error, params)\r\n      return { success: false, data: [] }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get comprehensive collection market statistics\r\n   */\r\n  async getCollectionMarketStats(params: {\r\n    collection_name?: string\r\n    symbol?: string\r\n  } = {}): Promise<{\r\n    success: boolean\r\n    data: {\r\n      symbol: string\r\n      market_contract: string\r\n      sales: string\r\n      volume: string\r\n      suggested_median: string\r\n      suggested_average: string\r\n    }\r\n  }> {\r\n    try {\r\n      const { collection_name, symbol = 'WAX' } = params\r\n      \r\n      let url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/stats/collections?symbol=${symbol}`\r\n      \r\n      if (collection_name) {\r\n        url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/stats/collections/${collection_name}?symbol=${symbol}`\r\n      }\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return {\r\n        success: data.success || false,\r\n        data: data.data || {}\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionMarketStats', error, params)\r\n      return { \r\n        success: false, \r\n        data: {\r\n          symbol: '',\r\n          market_contract: '',\r\n          sales: '0',\r\n          volume: '0',\r\n          suggested_median: '0',\r\n          suggested_average: '0'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get template statistics and pricing data\r\n   */\r\n  async getTemplateStats(collectionName: string, templateId: string, symbol: string = 'WAX'): Promise<{\r\n    success: boolean\r\n    data: {\r\n      template_id: string\r\n      collection_name: string\r\n      assets: string\r\n      burned: string\r\n      sales: string\r\n      volume: string\r\n      suggested_median: string\r\n      suggested_average: string\r\n    }\r\n  }> {\r\n    try {\r\n      const url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/stats/templates/${collectionName}/${templateId}?symbol=${symbol}`\r\n      const response = await this.fetchWithRetry(url)\r\n      const data = await response.json()\r\n      \r\n      return {\r\n        success: data.success || false,\r\n        data: data.data || {}\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getTemplateStats', error, { collectionName, templateId, symbol })\r\n      return { \r\n        success: false, \r\n        data: {\r\n          template_id: '',\r\n          collection_name: '',\r\n          assets: '0',\r\n          burned: '0',\r\n          sales: '0',\r\n          volume: '0',\r\n          suggested_median: '0',\r\n          suggested_average: '0'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get account transfers for a specific token\r\n   */\r\n  /**\r\n   * Fetch transaction history using WAX Hyperion History API\r\n   */\r\n  async getHyperionTransactionHistory(\r\n    account: string,\r\n    limit: number = 100,\r\n    skip: number = 0\r\n  ): Promise<Array<{\r\n    transaction_id: string\r\n    block_time: string\r\n    action_name: string\r\n    contract: string\r\n    from?: string\r\n    to?: string\r\n    quantity?: string\r\n    memo?: string\r\n    asset_ids?: string[]\r\n    collection_name?: string\r\n    type: string\r\n    status: string\r\n  }>> {\r\n    logger.debug('🔍 Fetching Hyperion transaction history for:', 'API', { account })\r\n    \r\n    try {\r\n      const hyperionUrl = `${this.hyperionEndpoints[this.currentHyperionIndex]}/v2/history/get_actions`\r\n      const params = new URLSearchParams({\r\n        account: account,\r\n        limit: Math.min(limit, 1000).toString(),\r\n        skip: skip.toString(),\r\n        sort: 'desc'\r\n      })\r\n      \r\n      logger.debug('📡 Hyperion API URL:', 'API', { url: `${hyperionUrl}?${params}` })\r\n      const response = await this.fetchWithRetry(`${hyperionUrl}?${params}`)\r\n      const data = await response.json()\r\n      \r\n      if (!data.actions || !Array.isArray(data.actions)) {\r\n        logger.warn('No actions found in Hyperion response', 'API')\r\n        return []\r\n      }\r\n      \r\n      logger.debug(`📊 Found ${data.actions.length} Hyperion actions`, 'API')\r\n      \r\n      const transactions = data.actions.map((action: {\r\n        trx_id: string\r\n        timestamp: string\r\n        act: {\r\n          account: string\r\n          name: string\r\n          data: {\r\n            from?: string\r\n            to?: string\r\n            quantity?: string\r\n            memo?: string\r\n            asset_ids?: string[]\r\n            collection_name?: string\r\n            [key: string]: unknown\r\n          }\r\n        }\r\n        block_num: number\r\n      }) => {\r\n        const actionData = action.act.data\r\n        let transactionType = 'unknown'\r\n        \r\n        // Determine transaction type based on contract and action\r\n        if (action.act.account === 'eosio.token' && action.act.name === 'transfer') {\r\n          transactionType = actionData.from === account ? 'token_send' : 'token_receive'\r\n        } else if (action.act.account === 'atomicassets' && action.act.name === 'transfer') {\r\n          transactionType = 'nft_transfer'\r\n        } else if (action.act.account === 'atomicmarket' && action.act.name === 'purchasesale') {\r\n          transactionType = 'nft_purchase'\r\n        } else if (action.act.account === 'atomicmarket' && action.act.name === 'announcesale') {\r\n          transactionType = 'nft_listing'\r\n        } else if (action.act.account === 'atomicmarket' && action.act.name === 'cancelsale') {\r\n          transactionType = 'nft_cancel_listing'\r\n        } else {\r\n          transactionType = `${action.act.account}_${action.act.name}`\r\n        }\r\n        \r\n        return {\r\n          transaction_id: action.trx_id,\r\n          block_time: action.timestamp,\r\n          action_name: action.act.name,\r\n          contract: action.act.account,\r\n          from: actionData.from,\r\n          to: actionData.to,\r\n          quantity: actionData.quantity,\r\n          memo: actionData.memo,\r\n          asset_ids: actionData.asset_ids,\r\n          collection_name: actionData.collection_name,\r\n          type: transactionType,\r\n          status: 'completed'\r\n        }\r\n      })\r\n      \r\n      logger.debug(`✅ Processed ${transactions.length} Hyperion transactions`, 'API')\r\n      return transactions\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Hyperion API error', 'API', error as Error)\r\n      \r\n      // Try next Hyperion endpoint\r\n      if (this.currentHyperionIndex < this.hyperionEndpoints.length - 1) {\r\n        this.currentHyperionIndex++\r\n        logger.debug(`🔄 Switching to Hyperion endpoint ${this.currentHyperionIndex + 1}`, 'API')\r\n        return this.getHyperionTransactionHistory(account, limit, skip)\r\n      } else {\r\n        this.currentHyperionIndex = 0\r\n        ErrorMessageService.logError('ApiService.getHyperionTransactionHistory', error, { account, limit, skip })\r\n        return []\r\n      }\r\n    }\r\n  }\r\n\r\n  async getAccountTransfers(\r\n    account: string,\r\n    contract: string,\r\n    symbol: string,\r\n    limit: number = 50,\r\n    offset: number = 0\r\n  ): Promise<Array<{\r\n    transaction_id: string\r\n    timestamp: string\r\n    from: string\r\n    to: string\r\n    quantity: string\r\n    memo: string\r\n  }>> {\r\n    try {\r\n      // Use Hyperion API similar to waxblock.io approach\r\n      const hyperionUrl = `${this.hyperionEndpoints[this.currentHyperionIndex]}/v2/history/get_actions`\r\n      const params = new URLSearchParams({\r\n        account: account,\r\n        limit: Math.min(limit, 100).toString(),\r\n        sort: 'desc',\r\n        skip: offset.toString(),\r\n        [`transfer.to`]: account\r\n      })\r\n      \r\n      logger.debug('🔍 Fetching account transfers from Hyperion:', 'API', { \r\n        account, \r\n        contract, \r\n        symbol, \r\n        url: `${hyperionUrl}?${params}` \r\n      })\r\n      \r\n      const response = await this.fetchWithRetry(`${hyperionUrl}?${params}`)\r\n      const data = await response.json()\r\n      \r\n      if (!data.actions || !Array.isArray(data.actions)) {\r\n        logger.warn('No actions found in Hyperion response for transfers', 'API')\r\n        return []\r\n      }\r\n      \r\n      logger.debug(`📊 Found ${data.actions.length} Hyperion transfer actions`, 'API')\r\n      \r\n      // Filter and format transfers\r\n      const transfers = data.actions\r\n        .filter((action: {\r\n          act?: {\r\n            account?: string\r\n            name?: string\r\n            data?: {\r\n              to?: string\r\n              from?: string\r\n              quantity?: string\r\n              symbol?: string\r\n            }\r\n          }\r\n        }) => {\r\n          const act = action.act\r\n          return act?.account === contract &&\r\n                 act?.name === 'transfer' &&\r\n                 (act?.data?.to === account || act?.data?.from === account) &&\r\n                 (act?.data?.quantity?.includes(symbol) || act?.data?.symbol === symbol)\r\n        })\r\n        .slice(0, limit)\r\n        .map((action: {\r\n          act: {\r\n            data: {\r\n              from: string\r\n              to: string\r\n              quantity: string\r\n              memo?: string\r\n            }\r\n          }\r\n          trx_id: string\r\n          timestamp: string\r\n          block_num: number\r\n        }) => {\r\n          const data = action.act.data\r\n          return {\r\n            from: data.from,\r\n            to: data.to,\r\n            quantity: data.quantity,\r\n            memo: data.memo || '',\r\n            timestamp: action.timestamp,\r\n            transaction_id: action.trx_id,\r\n            block_num: action.block_num\r\n          }\r\n        })\r\n      \r\n      logger.debug(`✅ Processed ${transfers.length} transfers for account ${account}`, 'API')\r\n      return transfers\r\n      \r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAccountTransfers', error, { account, contract, symbol, limit, offset })\r\n      logger.warn('Falling back to legacy WAX chain API', 'API')\r\n      \r\n      // Fallback to the old WAX chain API method\r\n      return this.fetchTransfersFromWaxChainAPI(account, contract, symbol, limit, offset)\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  /**\r\n   * Legacy WAX Chain API fallback method for transfer fetching\r\n   */\r\n  private async fetchTransfersFromWaxChainAPI(\r\n    account: string,\r\n    contract: string,\r\n    symbol: string,\r\n    limit: number = 50,\r\n    offset: number = 0\r\n  ): Promise<Array<{\r\n    transaction_id: string\r\n    timestamp: string\r\n    from: string\r\n    to: string\r\n    quantity: string\r\n    memo: string\r\n  }>> {\r\n    try {\r\n      // Use WAX chain API to get account actions (legacy fallback)\r\n      const response = await fetch(`${this.waxChainAPI}/v1/history/get_actions`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          account_name: account,\r\n          pos: -1,\r\n          offset: offset,\r\n          filter: `${contract}:transfer`\r\n        })\r\n      })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      const actions = data.actions || []\r\n      \r\n      // Filter and format transfers\r\n      const transfers = actions\r\n        .filter((action: {\r\n          action_trace?: {\r\n            act?: {\r\n              name?: string\r\n              account?: string\r\n              data?: {\r\n                to?: string\r\n                from?: string\r\n                quantity?: string\r\n              }\r\n            }\r\n          }\r\n        }) => {\r\n          const act = action.action_trace?.act\r\n          return act?.name === 'transfer' && \r\n                 act?.account === contract &&\r\n                 (act?.data?.to === account || act?.data?.from === account) &&\r\n                 act?.data?.quantity?.includes(symbol)\r\n        })\r\n        .slice(0, limit)\r\n        .map((action: {\r\n          action_trace: {\r\n            act: {\r\n              data: {\r\n                from: string\r\n                to: string\r\n                quantity: string\r\n                memo?: string\r\n              }\r\n            }\r\n            trx_id: string\r\n          }\r\n          block_time: string\r\n          block_num: number\r\n        }) => {\r\n          const act = action.action_trace.act\r\n          const data = act.data\r\n          return {\r\n            from: data.from,\r\n            to: data.to,\r\n            quantity: data.quantity,\r\n            memo: data.memo || '',\r\n            timestamp: action.block_time,\r\n            transaction_id: action.action_trace.trx_id,\r\n            block_num: action.block_num\r\n          }\r\n        })\r\n      \r\n      return transfers\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.fetchTransfersFromWaxChainAPI', error, { account, contract, symbol, limit, offset })\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get comprehensive user transaction history including marketplace sales and NFT transfers\r\n   */\r\n  async getUserTransactions(account: string, limit: number = 500): Promise<Array<{\r\n    transaction_id: string\r\n    block_time: string\r\n    action_name: string\r\n    asset_id?: string\r\n    asset_name?: string\r\n    collection_name?: string\r\n    price?: string\r\n    from?: string\r\n    to?: string\r\n    type: string\r\n    status: string\r\n    memo?: string\r\n  }>> {\r\n    logger.debug('🔍 getUserTransactions called for account:', 'API', { account, limit })\r\n    try {\r\n      const allTransactions: Array<{\r\n        transaction_id: string\r\n        block_time: string\r\n        action_name: string\r\n        asset_id?: string\r\n        asset_name?: string\r\n        collection_name?: string\r\n        price?: string\r\n        from?: string\r\n        to?: string\r\n        type: string\r\n        status: string\r\n        memo?: string\r\n      }> = []\r\n      \r\n      // 0. Get comprehensive transaction history from Hyperion API\r\n      try {\r\n        logger.debug('🚀 Fetching Hyperion transaction history...', 'API')\r\n        const hyperionTransactions = await this.getHyperionTransactionHistory(account, Math.min(limit, 200))\r\n        logger.debug('🚀 Hyperion transactions:', 'API', { count: hyperionTransactions.length })\r\n        \r\n        const formattedHyperionTransactions = hyperionTransactions.map(tx => ({\r\n          transaction_id: tx.transaction_id,\r\n          block_time: tx.block_time,\r\n          action_name: tx.action_name,\r\n          asset_id: tx.asset_ids?.[0],\r\n          asset_name: tx.asset_ids?.[0] ? `Asset #${tx.asset_ids[0]}` : undefined,\r\n          collection_name: tx.collection_name,\r\n          price: tx.quantity,\r\n          from: tx.from,\r\n          to: tx.to,\r\n          type: tx.type,\r\n          status: tx.status,\r\n          memo: tx.memo\r\n        }))\r\n        \r\n        allTransactions.push(...formattedHyperionTransactions)\r\n        logger.debug('✅ Added Hyperion transactions', 'API', { count: formattedHyperionTransactions.length })\r\n      } catch (error) {\r\n        logger.warn('Failed to fetch Hyperion transactions', 'API', error)\r\n      }\r\n      \r\n      // 1. Get marketplace transactions (sales/purchases)\r\n      try {\r\n        const salesUrl = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/sales?account=${account}&state=3&page=1&limit=${Math.min(limit, 200)}&order=desc&sort=updated`\r\n        logger.debug('📊 Fetching marketplace transactions from:', 'API', { url: salesUrl })\r\n        const salesResponse = await this.fetchWithRetry(salesUrl)\r\n        const salesData = await salesResponse.json()\r\n        logger.debug('📊 Marketplace response:', 'API', { success: salesData.success, dataLength: salesData.data?.length })\r\n        \r\n        if (salesData.success && salesData.data) {\r\n          const marketplaceTransactions = salesData.data.map((sale: {\r\n            sale_id: string\r\n            updated_at_time: string\r\n            buyer: string\r\n            seller: string\r\n            price: {\r\n              amount: string\r\n              token_symbol: string\r\n              token_precision?: number\r\n            }\r\n            assets: Array<{\r\n              asset_id: string\r\n              name?: string\r\n              collection?: {\r\n                collection_name: string\r\n              }\r\n            }>\r\n          }) => {\r\n            const priceAmount = parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision || 8)\r\n            const formattedPrice = sale.price.token_symbol === 'WAX' ? formatWAXPrice(priceAmount) : `${formatNumber(priceAmount)} ${sale.price.token_symbol}`\r\n            \r\n            return {\r\n              transaction_id: sale.sale_id,\r\n              block_time: sale.updated_at_time,\r\n              action_name: sale.buyer === account ? 'purchase' : 'sale',\r\n              asset_id: sale.assets[0]?.asset_id,\r\n              asset_name: sale.assets[0]?.name || `Asset #${sale.assets[0]?.asset_id}`,\r\n              collection_name: sale.assets[0]?.collection?.collection_name,\r\n              price: formattedPrice,\r\n              from: sale.buyer === account ? sale.seller : account,\r\n              to: sale.buyer === account ? account : sale.buyer,\r\n              type: sale.buyer === account ? 'purchase' : 'sale',\r\n              status: 'completed'\r\n            }\r\n          })\r\n          allTransactions.push(...marketplaceTransactions)\r\n        }\r\n      } catch (error) {\r\n        logger.warn('Failed to fetch marketplace transactions', 'API', error)\r\n      }\r\n      \r\n      // 2. Get NFT transfers (sent and received)\r\n      try {\r\n        const transfersUrl = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/transfers?account=${account}&page=1&limit=${Math.min(limit, 200)}&order=desc&sort=created`\r\n        logger.debug('🔄 Fetching NFT transfers from:', 'API', { url: transfersUrl })\r\n        const transfersResponse = await this.fetchWithRetry(transfersUrl)\r\n        const transfersData = await transfersResponse.json()\r\n        logger.debug('🔄 NFT transfers response:', 'API', { success: transfersData.success, dataLength: transfersData.data?.length })\r\n        \r\n        if (transfersData.success && transfersData.data) {\r\n          const nftTransfers = transfersData.data\r\n            .filter((transfer: {\r\n              sender: string\r\n              recipient: string\r\n            }) => transfer.sender !== transfer.recipient) // Exclude self-transfers\r\n            .map((transfer: {\r\n              tx_id?: string\r\n              transfer_id: string\r\n              created_at_time: string\r\n              sender: string\r\n              recipient: string\r\n              assets?: Array<{\r\n                asset_id: string\r\n                name?: string\r\n                collection?: {\r\n                  collection_name: string\r\n                }\r\n              }>\r\n            }) => {\r\n              const asset = transfer.assets?.[0]\r\n              return {\r\n                transaction_id: transfer.tx_id || `transfer_${transfer.transfer_id}`,\r\n                block_time: transfer.created_at_time,\r\n                action_name: 'transfer',\r\n                asset_id: asset?.asset_id,\r\n                asset_name: asset?.name || `Asset #${asset?.asset_id}`,\r\n                collection_name: asset?.collection?.collection_name,\r\n                price: undefined,\r\n                from: transfer.sender,\r\n                to: transfer.recipient,\r\n                type: 'transfer',\r\n                status: 'completed',\r\n                memo: (transfer as unknown as { memo?: string }).memo || undefined\r\n              }\r\n            })\r\n          allTransactions.push(...nftTransfers)\r\n        }\r\n      } catch (error) {\r\n        logger.warn('Failed to fetch NFT transfers', 'API', error)\r\n      }\r\n      \r\n      // 3. Get token transfers (WAX and other tokens)\r\n      try {\r\n        logger.debug('💰 Fetching token transfers for account:', 'API', { account })\r\n        const tokenTransfers = await this.getAccountTransfers(account, 'eosio.token', 'WAX', Math.min(limit, 100))\r\n        logger.debug('💰 Token transfers response:', 'API', { count: tokenTransfers.length })\r\n        const formattedTokenTransfers = tokenTransfers.map((transfer: {\r\n          transaction_id: string\r\n          timestamp: string\r\n          from: string\r\n          to: string\r\n          quantity: string\r\n          memo: string\r\n        }) => ({\r\n          transaction_id: transfer.transaction_id,\r\n          block_time: transfer.timestamp,\r\n          action_name: 'token_transfer',\r\n          asset_id: undefined,\r\n          asset_name: 'WAX Token',\r\n          collection_name: 'WAX',\r\n          price: transfer.quantity,\r\n          from: transfer.from,\r\n          to: transfer.to,\r\n          type: transfer.from === account ? 'token_send' : 'token_receive',\r\n          status: 'completed',\r\n          memo: transfer.memo\r\n        }))\r\n        allTransactions.push(...formattedTokenTransfers)\r\n      } catch (error) {\r\n        logger.warn('Failed to fetch token transfers', 'API', error)\r\n      }\r\n      \r\n      logger.debug('📋 Total transactions found:', 'API', { count: allTransactions.length })\r\n      \r\n      // Remove duplicates based on transaction_id and merge data from different sources\r\n      const uniqueTransactions = new Map<string, typeof allTransactions[0]>()\r\n      \r\n      allTransactions.forEach(tx => {\r\n        const existing = uniqueTransactions.get(tx.transaction_id)\r\n        if (!existing) {\r\n          uniqueTransactions.set(tx.transaction_id, tx)\r\n        } else {\r\n          // Merge data, preferring more detailed information\r\n          const merged = {\r\n            ...existing,\r\n            ...tx,\r\n            // Prefer non-undefined values\r\n            asset_id: tx.asset_id || existing.asset_id,\r\n            asset_name: tx.asset_name || existing.asset_name,\r\n            collection_name: tx.collection_name || existing.collection_name,\r\n            price: tx.price || existing.price,\r\n            from: tx.from || existing.from,\r\n            to: tx.to || existing.to,\r\n            memo: tx.memo || existing.memo\r\n          }\r\n          uniqueTransactions.set(tx.transaction_id, merged)\r\n        }\r\n      })\r\n      \r\n      // Sort all transactions by timestamp (newest first) and limit results\r\n      const sortedTransactions = Array.from(uniqueTransactions.values())\r\n        .sort((a, b) => new Date(b.block_time).getTime() - new Date(a.block_time).getTime())\r\n        .slice(0, limit)\r\n      \r\n      logger.debug('✅ Returning unique transactions', 'API', { unique: sortedTransactions.length, total: allTransactions.length })\r\n      return sortedTransactions\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserTransactions', error, { account, limit })\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user statistics from various sources\r\n   */\r\n  async getUserStats(account: string): Promise<{\r\n    totalAssets: number\r\n    totalSales: number\r\n    totalEarned: string\r\n    collections: string[]\r\n    totalPurchases: number\r\n    totalSpent: string\r\n    favoriteCollections: string[]\r\n    joinDate: string\r\n    nftsOwned: number\r\n    nftsListed: number\r\n  }> {\r\n    try {\r\n      // Get account creation date from blockchain\r\n      let joinDate = '2023-01-01' // Fallback date\r\n      try {\r\n        const accountInfo = await this.getWaxAccountInfo(account)\r\n        if (accountInfo?.created) {\r\n          // Format the blockchain date to a readable format\r\n          const createdDate = new Date(accountInfo.created)\r\n          joinDate = createdDate.toISOString().split('T')[0] // YYYY-MM-DD format\r\n        }\r\n      } catch (accountError) {\r\n        // If account info fails, use fallback date\r\n        logger.warn('Failed to fetch account creation date', 'API', { account, error: accountError })\r\n      }\r\n\r\n      // Get user's assets count\r\n      const assetsUrl = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicassets/v1/assets?owner=${account}&page=1&limit=1`\r\n      const assetsResponse = await this.fetchWithRetry(assetsUrl)\r\n      const assetsData = await assetsResponse.json()\r\n      const nftsOwned = assetsData.success ? (assetsData.query_total || assetsData.data?.length || 0) : 0\r\n\r\n      // Get user's sales history for stats (reduced limit to avoid 400 errors)\r\n      const salesUrl = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/sales?seller=${account}&state=3&page=1&limit=100&order=desc&sort=updated`\r\n      const salesResponse = await this.fetchWithRetry(salesUrl)\r\n      const salesData = await salesResponse.json()\r\n      \r\n      let totalSales = 0\r\n      let totalEarned = 0\r\n      const collections = new Set<string>()\r\n      \r\n      if (salesData.success && salesData.data) {\r\n        totalSales = salesData.data.length\r\n        salesData.data.forEach((sale: {\r\n          price: { amount: string }\r\n          assets: Array<{\r\n            collection?: {\r\n              collection_name: string\r\n            }\r\n          }>\r\n        }) => {\r\n          totalEarned += parseFloat(sale.price.amount) || 0\r\n          if (sale.assets[0]?.collection?.collection_name) {\r\n            collections.add(sale.assets[0].collection.collection_name)\r\n          }\r\n        })\r\n      }\r\n\r\n      // Get user's purchase history (reduced limit to avoid 400 errors)\r\n      const purchasesUrl = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/sales?buyer=${account}&state=3&page=1&limit=100&order=desc&sort=updated`\r\n      const purchasesResponse = await this.fetchWithRetry(purchasesUrl)\r\n      const purchasesData = await purchasesResponse.json()\r\n      \r\n      let totalPurchases = 0\r\n      let totalSpent = 0\r\n      \r\n      if (purchasesData.success && purchasesData.data) {\r\n        totalPurchases = purchasesData.data.length\r\n        purchasesData.data.forEach((sale: {\r\n          price: { amount: string }\r\n          assets: Array<{\r\n            collection?: {\r\n              collection_name: string\r\n            }\r\n          }>\r\n        }) => {\r\n          totalSpent += parseFloat(sale.price.amount) || 0\r\n          if (sale.assets[0]?.collection?.collection_name) {\r\n            collections.add(sale.assets[0].collection.collection_name)\r\n          }\r\n        })\r\n      }\r\n\r\n      return {\r\n        totalAssets: nftsOwned,\r\n        totalPurchases,\r\n        totalSales,\r\n        totalSpent: formatWAXPrice(totalSpent),\r\n        totalEarned: formatWAXPrice(totalEarned),\r\n        collections: Array.from(collections),\r\n        favoriteCollections: Array.from(collections).slice(0, 3),\r\n        joinDate,\r\n        nftsOwned,\r\n        nftsListed: 0 // Would need active listings count\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUserStats', error, { account })\r\n      return {\r\n        totalAssets: 0,\r\n        totalPurchases: 0,\r\n        totalSales: 0,\r\n        totalSpent: '0.0000 WAX',\r\n        totalEarned: '0.0000 WAX',\r\n        collections: [],\r\n        favoriteCollections: [],\r\n        joinDate: '2023-01-01',\r\n        nftsOwned: 0,\r\n        nftsListed: 0\r\n      }\r\n    }\r\n  }\r\n\r\n  async getCollectionPriceHistory(collectionName: string, timeframe: string = '7d') {\r\n    try {\r\n      const url = `${this.atomicEndpoints[this.currentEndpointIndex]}/atomicmarket/v1/sales?collection_name=${collectionName}&state=3&limit=100&order=desc&sort=updated`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      \r\n      // Process sales data into price history points\r\n      const priceHistory = data.data.map((sale: {\r\n        updated_at_time: string\r\n        price: {\r\n          amount: string\r\n          token_precision: number\r\n        }\r\n      }) => ({\r\n        timestamp: new Date(sale.updated_at_time).getTime(),\r\n        price: parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision),\r\n        volume: 1\r\n      }))\r\n      \r\n      return priceHistory\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getCollectionPriceHistory', error, { collectionName, timeframe })\r\n      // Enhanced fallback: try Alcor Exchange API for real market data\r\n      return this.fetchPriceHistoryFromAlcor(collectionName, timeframe)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch real price history from Alcor Exchange API\r\n   */\r\n  private async fetchPriceHistoryFromAlcor(collectionName: string, timeframe: string): Promise<Array<{\r\n    timestamp: number\r\n    price: number\r\n    volume: number\r\n  }>> {\r\n    try {\r\n      // Try to get WAX price history from Alcor as a baseline\r\n      const response = await fetch(`${this.alcorAPI}/markets/1/charts?resolution=1D&limit=100`)\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        \r\n        if (data && Array.isArray(data)) {\r\n          const days = timeframe === '24h' ? 1 : timeframe === '7d' ? 7 : timeframe === '30d' ? 30 : 90\r\n          \r\n          interface PriceDataItem {\r\n            time: number\r\n            close?: string\r\n            price?: string\r\n            volume?: string\r\n          }\r\n          \r\n          return data\r\n            .slice(-days)\r\n            .map((item: PriceDataItem) => ({\r\n              timestamp: item.time * 1000, // Convert to milliseconds\r\n              price: parseFloat(item.close || item.price || '1'),\r\n              volume: parseFloat(item.volume || '0')\r\n            }))\r\n        }\r\n      }\r\n      \r\n      // If Alcor fails, try to get collection floor price trends\r\n      const collectionStats = await this.getCollectionMarketStats({ collection_name: collectionName })\r\n      \r\n      if (collectionStats.success && collectionStats.data) {\r\n        const basePrice = parseFloat(collectionStats.data.suggested_average || '1')\r\n        const now = Date.now()\r\n        const days = timeframe === '24h' ? 1 : timeframe === '7d' ? 7 : timeframe === '30d' ? 30 : 90\r\n        \r\n        // Generate realistic price variations based on actual market data\r\n        const priceHistory = []\r\n        for (let i = days; i >= 0; i--) {\r\n          const timestamp = now - (i * 24 * 60 * 60 * 1000)\r\n          const variation = 0.9 + (Math.random() * 0.2) // ±10% variation\r\n          const price = basePrice * variation\r\n          const volume = parseFloat(collectionStats.data.volume || '0') / days\r\n          \r\n          priceHistory.push({ timestamp, price, volume })\r\n        }\r\n        \r\n        return priceHistory\r\n      }\r\n      \r\n      // Final fallback: return empty array instead of mock data\r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.fetchPriceHistoryFromAlcor', error, { collectionName, timeframe })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getAuctionBids(auctionId: string): Promise<Array<{\r\n    bidder: string\r\n    bid_amount: string\r\n    timestamp: string\r\n  }>> {\r\n    try {\r\n      // Note: AtomicMarket API doesn't provide bid history endpoint\r\n      // This is a placeholder for future implementation\r\n      // For now, return empty array\r\n      return []\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAuctionBids', error, { auctionId })\r\n      return []\r\n    }\r\n  }\r\n\r\n  async getAuctions(params: {\r\n    state?: number\r\n    limit?: number\r\n    offset?: number\r\n    sort?: string\r\n    order?: string\r\n    hide_empty_auctions?: boolean\r\n    search?: string\r\n    collection_name?: string\r\n    collection_blacklist?: string\r\n    seller_blacklist?: string\r\n    symbol?: string\r\n  } = {}): Promise<{\r\n    success: boolean\r\n    data: Array<{\r\n      auction_id: string\r\n      asset_id: string\r\n      seller: string\r\n      price: string\r\n      end_time: string\r\n      collection_name: string\r\n      template_id: string\r\n      asset_name: string\r\n      image: string\r\n      video: string\r\n      current_bid: string\r\n      bidder: string | null\r\n      assets: Array<{\r\n        asset_id: string\r\n        name?: string\r\n      }>\r\n      created_at_time: string\r\n    }>\r\n    query_time?: number\r\n    error?: unknown\r\n  }> {\r\n    const {\r\n      state = 1,\r\n      limit = 36,\r\n      offset = 0,\r\n      sort = 'created',\r\n      order = 'desc',\r\n      hide_empty_auctions = true,\r\n      search,\r\n      collection_name,\r\n      collection_blacklist = 'flinttffunko,onlyfanzgaly,farmerpetsco,fantaspeop',\r\n      seller_blacklist = 'dximg.wam,xpvrs.wam,5rrrc.wam,nnmnmnmnn.gm',\r\n      symbol = 'WAX'\r\n    } = params\r\n    \r\n    try {\r\n      // Use the dynamic AtomicMarket API endpoint\r\n      let url = `${this.atomicMarketAPI}/atomicmarket/v1/auctions?limit=${limit}&offset=${offset}&sort=${sort}&order=${order}&symbol=${symbol}`\r\n      \r\n      if (state !== undefined) {\r\n        url += `&state=${state}`\r\n      }\r\n      \r\n      if (hide_empty_auctions) {\r\n        url += `&hide_empty_auctions=true`\r\n      }\r\n      \r\n      if (search) {\r\n        url += `&search=${encodeURIComponent(search)}`\r\n      }\r\n      \r\n      if (collection_name) {\r\n        url += `&collection_name=${encodeURIComponent(collection_name)}`\r\n      }\r\n      \r\n      if (collection_blacklist) {\r\n        url += `&collection_blacklist=${encodeURIComponent(collection_blacklist)}`\r\n      }\r\n      \r\n      if (seller_blacklist) {\r\n        url += `&seller_blacklist=${encodeURIComponent(seller_blacklist)}`\r\n      }\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      \r\n      // Check if the response has the expected structure\r\n      if (!data.success || !data.data) {\r\n        throw new Error('Invalid API response structure')\r\n      }\r\n      \r\n      // Format the auction data to match expected interface\r\n      const formattedData = data.data.map((auction: {\r\n        auction_id: string\r\n        seller: string\r\n        buyer?: string\r\n        price?: {\r\n          amount: string\r\n          token_symbol?: string\r\n          token_precision?: number\r\n        }\r\n        end_time: string\r\n        created_at_time: string\r\n        assets?: Array<{\r\n          asset_id: string\r\n          name?: string\r\n          data?: {\r\n            name?: string\r\n            img?: string\r\n            [key: string]: unknown\r\n          }\r\n          template?: {\r\n            template_id: string\r\n            immutable_data?: {\r\n              name?: string\r\n              img?: string\r\n              [key: string]: unknown\r\n            }\r\n          }\r\n          collection?: {\r\n            collection_name: string\r\n            name?: string\r\n          }\r\n          schema?: {\r\n            schema_name: string\r\n          }\r\n        }>\r\n      }) => {\r\n        const asset = auction.assets?.[0]\r\n        const assetName = asset?.name || \r\n                         asset?.data?.name || \r\n                         asset?.template?.immutable_data?.name || \r\n                         `${asset?.collection?.collection_name || 'Unknown'} #${asset?.asset_id}`\r\n        \r\n        // Format price with proper precision\r\n        const priceAmount = auction.price?.amount || '0'\r\n        const tokenSymbol = auction.price?.token_symbol || 'WAX'\r\n        const tokenPrecision = auction.price?.token_precision || 8\r\n        const formattedPrice = priceAmount !== '0' ? \r\n          `${(parseFloat(priceAmount) / Math.pow(10, tokenPrecision)).toFixed(tokenPrecision)} ${tokenSymbol}` : \r\n          '0 WAX'\r\n        \r\n        return {\r\n          auction_id: auction.auction_id,\r\n          asset_id: asset?.asset_id || '',\r\n          seller: auction.seller,\r\n          price: formattedPrice,\r\n          end_time: auction.end_time,\r\n          collection_name: asset?.collection?.collection_name || 'Unknown',\r\n          template_id: asset?.template?.template_id || '',\r\n          asset_name: assetName,\r\n          image: asset ? this.getAssetImage(asset as AssetData) : 'https://pixeljourney.xyz/img/toppixals/10.webp',\r\n          video: asset ? (this.getAssetVideo(asset as AssetData) || '') : '',\r\n          current_bid: formattedPrice,\r\n          bidder: auction.buyer || null,\r\n          created_at_time: auction.created_at_time\r\n        }\r\n      })\r\n      \r\n      return { data: formattedData, success: true }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAuctions', error, { state, limit, offset, sort, order })\r\n      return { data: [], success: false, error }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a single auction by ID\r\n   */\r\n  async getAuction(auctionId: string): Promise<{\r\n    success: boolean\r\n    data: {\r\n      auction_id: string\r\n      asset_id: string\r\n      seller: string\r\n      price: string\r\n      end_time: string\r\n      collection_name: string\r\n      template_id: string\r\n      asset_name: string\r\n      image: string\r\n      video: string\r\n      current_bid: string\r\n      bidder: string | null\r\n    } | null\r\n    error?: unknown\r\n  }> {\r\n    try {\r\n      // Use the dynamic AtomicMarket API endpoint for a specific auction\r\n      const url = `${this.atomicMarketAPI}/atomicmarket/v1/auctions/${auctionId}`\r\n      \r\n      const response = await this.fetchWithRetry(url)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      \r\n      // Check if the response has the expected structure\r\n      if (!data.success || !data.data) {\r\n        throw new Error('Invalid API response structure')\r\n      }\r\n      \r\n      const auction = data.data\r\n      \r\n      // Format the auction data to match expected interface\r\n      const formattedAuction = {\r\n        auction_id: auction.auction_id,\r\n        asset_id: auction.assets?.[0]?.asset_id || '',\r\n        seller: auction.seller,\r\n        price: auction.price?.amount || '0',\r\n        end_time: auction.end_time,\r\n        collection_name: auction.assets?.[0]?.collection?.collection_name || 'Unknown',\r\n        template_id: auction.assets?.[0]?.template?.template_id || '',\r\n        asset_name: auction.assets?.[0]?.name || auction.assets?.[0]?.data?.name || `Asset #${auction.assets?.[0]?.asset_id}`,\r\n        image: auction.assets?.[0] ? this.getAssetImage(auction.assets[0] as AssetData) : '',\r\n        video: auction.assets?.[0] ? this.getAssetVideo(auction.assets[0] as AssetData) : '',\r\n        current_bid: auction.price?.amount || '0',\r\n        bidder: auction.buyer || null\r\n      }\r\n      \r\n      return { data: formattedAuction, success: true }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getAuction', error, { auctionId })\r\n      return { data: null, success: false, error }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get USD price for a given WAX amount\r\n   */\r\n  async getUSDPrice(waxAmount: number): Promise<string> {\r\n    try {\r\n      const { priceService } = await import('./priceService')\r\n      return await priceService.convertWaxToUSDAsync(waxAmount.toString())\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getUSDPrice', error, { waxAmount })\r\n      return '$0.00'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generic WAX RPC call with endpoint rotation\r\n   */\r\n  async waxRpcCall(endpoint: string, body: Record<string, unknown>): Promise<Record<string, unknown>> {\r\n    for (let endpointIndex = 0; endpointIndex < this.waxChainEndpoints.length; endpointIndex++) {\r\n      const baseUrl = this.waxChainEndpoints[endpointIndex]\r\n      const url = `${baseUrl}${endpoint}`\r\n      \r\n      try {\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          mode: 'cors',\r\n          body: JSON.stringify(body)\r\n        })\r\n        \r\n        if (response.ok) {\r\n          this.currentWaxChainIndex = endpointIndex\r\n          return await response.json()\r\n        }\r\n        \r\n        logger.warn('WAX RPC endpoint returned error status', 'API', { endpoint: baseUrl, status: response.status, statusText: response.statusText })\r\n      } catch (error) {\r\n        ErrorMessageService.logError('ApiService.waxRpcCall', error, { endpoint: baseUrl, body })\r\n      }\r\n    }\r\n    \r\n    throw new Error(`All WAX RPC endpoints failed for ${endpoint}`)\r\n  }\r\n\r\n  /**\r\n   * Get powerup state from WAX blockchain\r\n   */\r\n  async getPowerupState(): Promise<{\r\n    rows: Array<{\r\n      version: number\r\n      net: {\r\n        version: number\r\n        weight: string\r\n        weight_ratio: string\r\n        assumed_stake_weight: string\r\n        initial_weight_ratio: string\r\n        target_weight_ratio: string\r\n        initial_daily_rent: string\r\n        current_daily_rent: string\r\n        rent_days: number\r\n        rent_sec: number\r\n        utilization: string\r\n        adjusted_utilization: string\r\n        utilization_timestamp: string\r\n      }\r\n      cpu: {\r\n        version: number\r\n        weight: string\r\n        weight_ratio: string\r\n        assumed_stake_weight: string\r\n        initial_weight_ratio: string\r\n        target_weight_ratio: string\r\n        initial_daily_rent: string\r\n        current_daily_rent: string\r\n        rent_days: number\r\n        rent_sec: number\r\n        utilization: string\r\n        adjusted_utilization: string\r\n        utilization_timestamp: string\r\n      }\r\n      powerup_days: number\r\n      min_powerup_fee: {\r\n        quantity: string\r\n        contract: string\r\n      }\r\n    }>\r\n    more: boolean\r\n    next_key: string\r\n  }> {\r\n    return this.waxRpcCall('/v1/chain/get_table_rows', {\r\n      json: true,\r\n      code: 'eosio',\r\n      scope: 'eosio',\r\n      table: 'powup.state',\r\n      limit: 1\r\n    }) as Promise<{\r\n      rows: Array<{\r\n        version: number\r\n        net: {\r\n          version: number\r\n          weight: string\r\n          weight_ratio: string\r\n          assumed_stake_weight: string\r\n          initial_weight_ratio: string\r\n          target_weight_ratio: string\r\n          initial_daily_rent: string\r\n          current_daily_rent: string\r\n          rent_days: number\r\n          rent_sec: number\r\n          utilization: string\r\n          adjusted_utilization: string\r\n          utilization_timestamp: string\r\n        }\r\n        cpu: {\r\n          version: number\r\n          weight: string\r\n          weight_ratio: string\r\n          assumed_stake_weight: string\r\n          initial_weight_ratio: string\r\n          target_weight_ratio: string\r\n          initial_daily_rent: string\r\n          current_daily_rent: string\r\n          rent_days: number\r\n          rent_sec: number\r\n          utilization: string\r\n          adjusted_utilization: string\r\n          utilization_timestamp: string\r\n        }\r\n        powerup_days: number\r\n        min_powerup_fee: {\r\n          quantity: string\r\n          contract: string\r\n        }\r\n      }>\r\n      more: boolean\r\n      next_key: string\r\n    }>\r\n  }\r\n\r\n  /**\r\n   * Get chain info from WAX blockchain\r\n   */\r\n  async getChainInfo(): Promise<{\r\n    server_version: string\r\n    chain_id: string\r\n    head_block_num: number\r\n    last_irreversible_block_num: number\r\n    last_irreversible_block_id: string\r\n    head_block_id: string\r\n    head_block_time: string\r\n    head_block_producer: string\r\n    virtual_block_cpu_limit: number\r\n    virtual_block_net_limit: number\r\n    block_cpu_limit: number\r\n    block_net_limit: number\r\n    server_version_string: string\r\n    fork_db_head_block_num: number\r\n    fork_db_head_block_id: string\r\n    server_full_version_string: string\r\n  }> {\r\n    return this.waxRpcCall('/v1/chain/get_info', {}) as Promise<{\r\n      server_version: string\r\n      chain_id: string\r\n      head_block_num: number\r\n      last_irreversible_block_num: number\r\n      last_irreversible_block_id: string\r\n      head_block_id: string\r\n      head_block_time: string\r\n      head_block_producer: string\r\n      virtual_block_cpu_limit: number\r\n      virtual_block_net_limit: number\r\n      block_cpu_limit: number\r\n      block_net_limit: number\r\n      server_version_string: string\r\n      fork_db_head_block_num: number\r\n      fork_db_head_block_id: string\r\n      server_full_version_string: string\r\n    }>\r\n  }\r\n\r\n  /**\r\n   * Get RWAX-specific transfers (tokenizations and redemptions)\r\n   * Fetches transfers to/from the 'rwax' account for pixeljourney collection\r\n   */\r\n  async getRWAXTransfers(params: {\r\n    limit?: number\r\n    page?: number\r\n    order?: 'asc' | 'desc'\r\n  } = {}): Promise<{\r\n    success: boolean\r\n    data: Array<{\r\n      transfer_id: string\r\n      sender_name: string\r\n      recipient_name: string\r\n      assets: AssetData[]\r\n      memo?: string\r\n      created_at_time: string\r\n      txid: string\r\n      type: 'tokenization' | 'redemption'\r\n    }>\r\n    query_total?: number\r\n  }> {\r\n    try {\r\n      const {\r\n        limit = 20,\r\n        page = 1,\r\n        order = 'desc'\r\n      } = params\r\n      \r\n      // Fetch transfers where rwax is either sender or recipient\r\n      const [toRwaxResponse, fromRwaxResponse] = await Promise.all([\r\n        // Transfers TO rwax (tokenizations)\r\n        this.getTransfers({\r\n          recipient_name: 'rwax',\r\n          collection_name: 'pixeljourney',\r\n          limit: Math.ceil(limit / 2),\r\n          page,\r\n          order,\r\n          sort: 'created'\r\n        }),\r\n        // Transfers FROM rwax (redemptions)\r\n        this.getTransfers({\r\n          sender: 'rwax',\r\n          collection_name: 'pixeljourney',\r\n          limit: Math.ceil(limit / 2),\r\n          page,\r\n          order,\r\n          sort: 'created'\r\n        })\r\n      ])\r\n      \r\n      // Combine transfers with type classification\r\n      const allTransfers = [\r\n        ...toRwaxResponse.data.map(transfer => ({\r\n          ...transfer,\r\n          type: 'tokenization' as const\r\n        })),\r\n        ...fromRwaxResponse.data.map(transfer => ({\r\n          ...transfer,\r\n          type: 'redemption' as const\r\n        }))\r\n      ]\r\n      \r\n      // Remove duplicates based on transfer_id and txid\r\n      const uniqueTransfers = new Map<string, typeof allTransfers[0]>()\r\n      \r\n      allTransfers.forEach(transfer => {\r\n        // Create a unique key using both transfer_id and txid to handle edge cases\r\n        const uniqueKey = `${transfer.transfer_id}-${transfer.txid}`\r\n        \r\n        if (!uniqueTransfers.has(uniqueKey)) {\r\n          uniqueTransfers.set(uniqueKey, transfer)\r\n        } else {\r\n          // If duplicate found, prefer the one with more complete data\r\n          const existing = uniqueTransfers.get(uniqueKey)!\r\n          const hasMoreAssets = transfer.assets.length > existing.assets.length\r\n          const hasMoreData = Object.keys(transfer).length > Object.keys(existing).length\r\n          \r\n          if (hasMoreAssets || hasMoreData) {\r\n            uniqueTransfers.set(uniqueKey, transfer)\r\n          }\r\n        }\r\n      })\r\n      \r\n      // Convert back to array and sort by creation time\r\n      const deduplicatedTransfers = Array.from(uniqueTransfers.values())\r\n      deduplicatedTransfers.sort((a, b) => {\r\n        const timeA = new Date(a.created_at_time).getTime()\r\n        const timeB = new Date(b.created_at_time).getTime()\r\n        return order === 'desc' ? timeB - timeA : timeA - timeB\r\n      })\r\n      \r\n      // Limit results\r\n      const limitedTransfers = deduplicatedTransfers.slice(0, limit)\r\n      \r\n      return {\r\n        success: true,\r\n        data: limitedTransfers,\r\n        query_total: (toRwaxResponse.query_total || 0) + (fromRwaxResponse.query_total || 0)\r\n      }\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ApiService.getRWAXTransfers', error, params)\r\n      return { success: false, data: [] }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const apiService = new ApiService()\r\nexport default apiService","import { apiService } from './api'\nimport { ErrorMessageService } from './errorMessageService'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\nimport { MarketplaceConfigService } from '../config/marketplaceConfig'\n\nexport interface UserBadge {\n  id: string\n  name: string\n  description: string\n  icon: string\n  color: string\n  borderColor: string\n  type: 'ownership' | 'holdings' | 'achievement' | 'special' | 'trading' | 'social'\n  requirements?: string\n  tier?: number\n  rarity?: 'common' | 'rare' | 'epic' | 'legendary'\n  unlockedAt?: Date\n  progress?: {\n    current: number\n    required: number\n    percentage: number\n  }\n}\n\nexport interface BadgeCheckResult {\n  badges: UserBadge[]\n  pxjBalance: number\n  journeyAssets: number\n  pixalPfpOwned: boolean\n  waxrockOwned: boolean\n  ingredientsOwned: boolean\n  tradingVolume?: number\n  totalTransactions?: number\n  accountAge?: number\n}\n\nexport interface BadgeProgress {\n  badgeId: string\n  current: number\n  required: number\n  percentage: number\n  nextMilestone?: string\n}\n\ninterface CachedBadgeResult {\n  result: BadgeCheckResult\n  timestamp: number\n  expiresAt: number\n}\n\nclass BadgeService {\n  private badgeCache = new Map<string, CachedBadgeResult>()\n  private readonly CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\n  private readonly BADGE_DEFINITIONS: Record<string, UserBadge> = {\n    'pixal-pfp': {\n      id: 'pixal-pfp',\n      name: 'Pixal PFP',\n      description: 'Owns a Pixal PFP NFT (Template 781515)',\n      icon: '🎭',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'ownership',\n      requirements: 'Own Template 781515'\n    },\n    'pixal-collector-5': {\n      id: 'pixal-collector-5',\n      name: 'Pixal Collector I',\n      description: 'Owns 5+ Pixal PFPs',\n      icon: '🎭',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'ownership',\n      requirements: '5+ Pixal PFPs',\n      tier: 1\n    },\n    'pixal-collector-25': {\n      id: 'pixal-collector-25',\n      name: 'Pixal Collector II',\n      description: 'Owns 25+ Pixal PFPs',\n      icon: '🎭',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'ownership',\n      requirements: '25+ Pixal PFPs',\n      tier: 2,\n      rarity: 'rare'\n    },\n    'pixal-collector-50': {\n      id: 'pixal-collector-50',\n      name: 'Pixal Collector III',\n      description: 'Owns 50+ Pixal PFPs',\n      icon: '🎭',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'ownership',\n      requirements: '50+ Pixal PFPs',\n      tier: 3,\n      rarity: 'epic'\n    },\n    'pixal-collector-100': {\n      id: 'pixal-collector-100',\n      name: 'Pixal Collector IV',\n      description: 'Owns 100+ Pixal PFPs',\n      icon: '🎭',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'ownership',\n      requirements: '100+ Pixal PFPs',\n      tier: 4,\n      rarity: 'epic'\n    },\n    'pixal-collector-250': {\n      id: 'pixal-collector-250',\n      name: 'Pixal Collector V',\n      description: 'Owns 250+ Pixal PFPs',\n      icon: '🎭',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'ownership',\n      requirements: '250+ Pixal PFPs',\n      tier: 5,\n       rarity: 'legendary'\n     },\n     'waxrock': {\n      id: 'waxrock',\n      name: 'WaxRock',\n      description: 'Owns WaxRock Pixal NFT',\n      icon: '🪨',\n      color: '#f59e0b',\n      borderColor: 'rgba(245, 158, 11, 0.3)',\n      type: 'ownership',\n      requirements: 'Own WaxRock NFTs'\n    },\n    'waxrock-collector-3': {\n      id: 'waxrock-collector-3',\n      name: 'WaxRock Collector I',\n      description: 'Owns 3+ WaxRock trait Pixals',\n      icon: '🪨',\n      color: '#78716c',\n      borderColor: 'rgba(120, 113, 108, 0.3)',\n      type: 'ownership',\n      requirements: '3+ WaxRock trait Pixals',\n      tier: 1\n    },\n    'waxrock-collector-6': {\n      id: 'waxrock-collector-6',\n      name: 'WaxRock Collector II',\n      description: 'Owns 6+ WaxRock trait Pixals',\n      icon: '🪨',\n      color: '#78716c',\n      borderColor: 'rgba(120, 113, 108, 0.3)',\n      type: 'ownership',\n      requirements: '6+ WaxRock trait Pixals',\n      tier: 2,\n      rarity: 'rare'\n    },\n    'waxrock-collector-10': {\n      id: 'waxrock-collector-10',\n      name: 'WaxRock Collector III',\n      description: 'Owns 10+ WaxRock trait Pixals',\n      icon: '🪨',\n      color: '#78716c',\n      borderColor: 'rgba(120, 113, 108, 0.3)',\n      type: 'ownership',\n      requirements: '10+ WaxRock trait Pixals',\n      tier: 3,\n       rarity: 'epic'\n     },\n     'ingredients': {\n      id: 'ingredients',\n      name: 'Ingredients',\n      description: 'Owns Pixel Journey Ingredients',\n      icon: '🧪',\n      color: '#22c55e',\n      borderColor: 'rgba(34, 197, 94, 0.3)',\n      type: 'ownership',\n      requirements: 'Own Ingredient NFTs'\n    },\n    'pxj-whale': {\n      id: 'pxj-whale',\n      name: 'PXJ Whale',\n      description: 'Holds 50,000,000+ PXJ tokens',\n      icon: '🐋',\n      color: '#3b82f6',\n      borderColor: 'rgba(59, 130, 246, 0.3)',\n      type: 'holdings',\n      requirements: '50,000,000+ PXJ',\n      rarity: 'legendary'\n    },\n    'pxj-holder': {\n      id: 'pxj-holder',\n      name: 'PXJ Holder',\n      description: 'Holds 100,000+ PXJ tokens',\n      icon: '💎',\n      color: '#8b5cf6',\n      borderColor: 'rgba(139, 92, 246, 0.3)',\n      type: 'holdings',\n      requirements: '100,000+ PXJ'\n    },\n    'pxj-shrimp': {\n      id: 'pxj-shrimp',\n      name: 'PXJ Shrimp',\n      description: 'Holds 10,000+ PXJ tokens',\n      icon: '🦐',\n      color: '#f97316',\n      borderColor: 'rgba(249, 115, 22, 0.3)',\n      type: 'holdings',\n      requirements: '10,000+ PXJ'\n    },\n    'wpixal-holder': {\n      id: 'wpixal-holder',\n      name: 'WPIXAL Holder',\n      description: 'Owns WPIXAL tokens',\n      icon: '🪙',\n      color: '#a855f7',\n      borderColor: 'rgba(168, 85, 247, 0.3)',\n      type: 'holdings',\n      requirements: 'Own WPIXAL tokens'\n    },\n    'king-holder': {\n      id: 'king-holder',\n      name: 'KING Holder',\n      description: 'Holds KING tokens',\n      icon: '👑',\n      color: '#fbbf24',\n      borderColor: 'rgba(251, 191, 36, 0.3)',\n      type: 'holdings',\n      requirements: 'Hold KING tokens'\n    },\n    'journey-collector': {\n      id: 'journey-collector',\n      name: 'Journey Collector',\n      description: 'Owns 50+ Journey assets',\n      icon: '🎒',\n      color: '#ec4899',\n      borderColor: 'rgba(236, 72, 153, 0.3)',\n      type: 'ownership',\n      requirements: '50+ Journey Assets'\n    },\n    'journey-enthusiast': {\n      id: 'journey-enthusiast',\n      name: 'Journey Enthusiast',\n      description: 'Owns 10+ Journey assets',\n      icon: '⭐',\n      color: '#f97316',\n      borderColor: 'rgba(249, 115, 22, 0.3)',\n      type: 'ownership',\n      requirements: '10+ Journey Assets'\n    },\n    'early-adopter': {\n      id: 'early-adopter',\n      name: 'Early Adopter',\n      description: 'One of the first Journey participants',\n      icon: '🚀',\n      color: '#06b6d4',\n      borderColor: 'rgba(6, 182, 212, 0.3)',\n      type: 'special',\n      requirements: 'Early participation',\n      rarity: 'legendary'\n    },\n    'active-trader': {\n      id: 'active-trader',\n      name: 'Active Trader',\n      description: 'Completed 100+ transactions',\n      icon: '📈',\n      color: '#10b981',\n      borderColor: 'rgba(16, 185, 129, 0.3)',\n      type: 'trading',\n      requirements: '100+ Transactions',\n      rarity: 'rare'\n    },\n    'volume-trader': {\n      id: 'volume-trader',\n      name: 'Volume Trader',\n      description: 'Traded 10,000+ WAX in volume',\n      icon: '💰',\n      color: '#f59e0b',\n      borderColor: 'rgba(245, 158, 11, 0.3)',\n      type: 'trading',\n      requirements: '10,000+ WAX Volume',\n      rarity: 'epic'\n    },\n    'community-member': {\n      id: 'community-member',\n      name: 'Community Member',\n      description: 'Active community participant',\n      icon: '👥',\n      color: '#8b5cf6',\n      borderColor: 'rgba(139, 92, 246, 0.3)',\n      type: 'social',\n      requirements: 'Community Engagement',\n      rarity: 'common'\n    },\n    'diamond-hands': {\n      id: 'diamond-hands',\n      name: 'Diamond Hands',\n      description: 'Held assets for 6+ months',\n      icon: '💎',\n      color: '#3b82f6',\n      borderColor: 'rgba(59, 130, 246, 0.3)',\n      type: 'achievement',\n      requirements: '6+ Months Holding',\n      rarity: 'epic'\n    },\n    'master-collector': {\n      id: 'master-collector',\n      name: 'Master Collector',\n      description: 'Owns 500+ Journey assets',\n      icon: '🏆',\n      color: '#dc2626',\n      borderColor: 'rgba(220, 38, 38, 0.3)',\n      type: 'ownership',\n      requirements: '500+ Journey Assets',\n      rarity: 'legendary'\n    }\n  }\n\n  /**\n   * Check all badges for a user account with caching and progress tracking\n   */\n  async checkUserBadges(userAccount: string, forceRefresh: boolean = false): Promise<BadgeCheckResult> {\n    // Check cache first\n    if (!forceRefresh) {\n      const cached = this.badgeCache.get(userAccount)\n      if (cached && Date.now() < cached.expiresAt) {\n        return cached.result\n      }\n    }\n\n    try {\n      const [inventory, pxjBalance, tradingStats] = await Promise.all([\n        apiService.getUserInventory(userAccount),\n        this.getPXJBalance(userAccount),\n        this.getTradingStats(userAccount)\n      ])\n\n      const badges: UserBadge[] = []\n      let journeyAssets = 0\n      let pixalPfpOwned = false\n      let waxrockOwned = false\n      let ingredientsOwned = false\n      const tradingVolume = tradingStats.volume\n      const totalTransactions = tradingStats.transactions\n      const accountAge = tradingStats.accountAge\n\n      if (inventory && inventory.length > 0) {\n        // Count Journey assets\n        journeyAssets = inventory.filter(asset => \n          asset.collection === 'pixeljourney'\n        ).length\n\n        // Check for Pixal PFP (Template 781515) and count them\n        const pixalPfpAssets = inventory.filter(asset => \n          asset.template_id === '781515'\n        )\n        const pixalPfpCount = pixalPfpAssets.length\n        pixalPfpOwned = pixalPfpCount > 0\n        \n        if (pixalPfpOwned) {\n          badges.push(this.BADGE_DEFINITIONS['pixal-pfp'])\n        }\n        \n        // Multi-step Pixal PFP collector badges\n        if (pixalPfpCount >= 250) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['pixal-collector-250'],\n            unlockedAt: new Date()\n          })\n        } else if (pixalPfpCount >= 100) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['pixal-collector-100'],\n            unlockedAt: new Date(),\n            progress: {\n              current: pixalPfpCount,\n              required: 250,\n              percentage: Math.round((pixalPfpCount / 250) * 100)\n            }\n          })\n        } else if (pixalPfpCount >= 50) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['pixal-collector-50'],\n            unlockedAt: new Date(),\n            progress: {\n              current: pixalPfpCount,\n              required: 100,\n              percentage: Math.round((pixalPfpCount / 100) * 100)\n            }\n          })\n        } else if (pixalPfpCount >= 25) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['pixal-collector-25'],\n            unlockedAt: new Date(),\n            progress: {\n              current: pixalPfpCount,\n              required: 50,\n              percentage: Math.round((pixalPfpCount / 50) * 100)\n            }\n          })\n        } else if (pixalPfpCount >= 5) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['pixal-collector-5'],\n            unlockedAt: new Date(),\n            progress: {\n              current: pixalPfpCount,\n              required: 25,\n              percentage: Math.round((pixalPfpCount / 25) * 100)\n            }\n          })\n        }\n\n        // Check for WaxRock using proper filtering and count them\n        const waxrockAssets = inventory.filter(asset => {\n          // Check if this is a Pixal PFP with WaxRock attribute\n          if (asset.template_id === MarketplaceConfigService.getPixalTemplateId()) {\n            const waxRock = asset.traits?.WaxRock\n            if (typeof waxRock === 'string' && waxRock !== 'none') {\n              return MarketplaceConfigService.isValidWaxRock(waxRock)\n            }\n            // Fallback: check for waxRockTypes in asset data values\n            if (asset.data) {\n              const lowerValue = Object.values(asset.traits || {}).find(value => \n                typeof value === 'string' && \n                MarketplaceConfigService.isValidWaxRock(value as string)\n              ) as string\n              return lowerValue && lowerValue !== 'none'\n            }\n          }\n          return false\n        })\n        const waxrockCount = waxrockAssets.length\n        waxrockOwned = waxrockCount > 0\n        \n        if (waxrockOwned) {\n          badges.push(this.BADGE_DEFINITIONS['waxrock'])\n        }\n        \n        // Multi-step WaxRock collector badges\n        if (waxrockCount >= 10) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['waxrock-collector-10'],\n            unlockedAt: new Date()\n          })\n        } else if (waxrockCount >= 6) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['waxrock-collector-6'],\n            unlockedAt: new Date(),\n            progress: {\n              current: waxrockCount,\n              required: 10,\n              percentage: Math.round((waxrockCount / 10) * 100)\n            }\n          })\n        } else if (waxrockCount >= 3) {\n          badges.push({\n            ...this.BADGE_DEFINITIONS['waxrock-collector-3'],\n            unlockedAt: new Date(),\n            progress: {\n              current: waxrockCount,\n              required: 6,\n              percentage: Math.round((waxrockCount / 6) * 100)\n            }\n          })\n        }\n\n        // Check for Ingredients\n        ingredientsOwned = inventory.some(asset => \n          asset.collection === 'pixeljourney' && asset.schema === 'ingredients'\n        )\n        if (ingredientsOwned) {\n          badges.push(this.BADGE_DEFINITIONS['ingredients'])\n        }\n\n        // Journey collection badges with progress tracking\n      if (journeyAssets >= 500) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['master-collector'],\n          unlockedAt: new Date()\n        })\n      } else if (journeyAssets >= 50) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['journey-collector'],\n          unlockedAt: new Date(),\n          progress: journeyAssets < 500 ? {\n            current: journeyAssets,\n            required: 500,\n            percentage: Math.round((journeyAssets / 500) * 100)\n          } : undefined\n        })\n      } else if (journeyAssets >= 10) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['journey-enthusiast'],\n          unlockedAt: new Date(),\n          progress: {\n            current: journeyAssets,\n            required: 50,\n            percentage: Math.round((journeyAssets / 50) * 100)\n          }\n        })\n      }\n      }\n\n      // PXJ holding badges with progress tracking\n      if (pxjBalance >= 50000000) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['pxj-whale'],\n          unlockedAt: new Date()\n        })\n      } else if (pxjBalance >= 100000) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['pxj-holder'],\n          unlockedAt: new Date(),\n          progress: pxjBalance < 50000000 ? {\n            current: pxjBalance,\n            required: 50000000,\n            percentage: Math.round((pxjBalance / 50000000) * 100)\n          } : undefined\n        })\n      } else if (pxjBalance >= 10000) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['pxj-shrimp'],\n          unlockedAt: new Date(),\n          progress: pxjBalance < 100000 ? {\n            current: pxjBalance,\n            required: 100000,\n            percentage: Math.round((pxjBalance / 100000) * 100)\n          } : undefined\n        })\n      }\n\n      // Check for WPIXAL and KING tokens\n      const [wpixalBalance, kingBalance] = await Promise.all([\n        this.getTokenBalance(userAccount, 'pixeljourney', 'WPIXAL'),\n        this.getTokenBalance(userAccount, 'alpha.waxfun', 'KING')\n      ])\n\n      if (wpixalBalance > 0) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['wpixal-holder'],\n          unlockedAt: new Date()\n        })\n      }\n\n      if (kingBalance > 0) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['king-holder'],\n          unlockedAt: new Date()\n        })\n      }\n\n      // Trading badges\n      if (totalTransactions >= 100) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['active-trader'],\n          unlockedAt: new Date()\n        })\n      }\n\n      if (tradingVolume >= 10000) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['volume-trader'],\n          unlockedAt: new Date()\n        })\n      }\n\n      // Achievement badges\n      if (accountAge >= 180) { // 6 months in days\n        badges.push({\n          ...this.BADGE_DEFINITIONS['diamond-hands'],\n          unlockedAt: new Date()\n        })\n      }\n\n      // Social badges (placeholder - would need social engagement data)\n      // For now, award to users with multiple badge types\n      const badgeTypes = new Set(badges.map(b => b.type))\n      if (badgeTypes.size >= 3) {\n        badges.push({\n          ...this.BADGE_DEFINITIONS['community-member'],\n          unlockedAt: new Date()\n        })\n      }\n\n      // Check for early adopter status (could be based on first transaction date, etc.)\n      const isEarlyAdopter = await this.checkEarlyAdopterStatus(userAccount)\n      if (isEarlyAdopter) {\n        badges.push(this.BADGE_DEFINITIONS['early-adopter'])\n      }\n\n      const result: BadgeCheckResult = {\n        badges,\n        pxjBalance,\n        journeyAssets,\n        pixalPfpOwned,\n        waxrockOwned,\n        ingredientsOwned,\n        tradingVolume,\n        totalTransactions,\n        accountAge\n      }\n\n      // Cache the result\n      this.badgeCache.set(userAccount, {\n        result,\n        timestamp: Date.now(),\n        expiresAt: Date.now() + this.CACHE_DURATION\n      })\n\n      return result\n    } catch (error) {\n      ErrorMessageService.logError('BadgeService.checkUserBadges', error, { userAccount })\n      return {\n        badges: [],\n        pxjBalance: 0,\n        journeyAssets: 0,\n        pixalPfpOwned: false,\n        waxrockOwned: false,\n        ingredientsOwned: false,\n        tradingVolume: 0,\n        totalTransactions: 0,\n        accountAge: 0\n      }\n    }\n  }\n\n  /**\n   * Get user's PXJ token balance\n   */\n  private async getPXJBalance(userAccount: string): Promise<number> {\n    try {\n      const response = await apiService.fetchWithRetry(\n        `${API_ENDPOINTS.WAX_CHAIN.EOSRIO}/v2/state/get_tokens?account=${userAccount}`\n      )\n      const data = await response.json()\n      \n      if (data.tokens) {\n        interface TokenData {\n          symbol: string\n          contract: string\n          amount: string\n        }\n        \n        const pxjToken = data.tokens.find((token: TokenData) => \n          token.symbol === 'PXJ' && token.contract === 'pixeljourney'\n        )\n        return pxjToken ? parseFloat(pxjToken.amount) : 0\n      }\n      \n      return 0\n    } catch (error) {\n      ErrorMessageService.logError('BadgeService.getPXJBalance', error, { userAccount })\n      return 0\n    }\n  }\n\n  /**\n   * Get trading statistics for a user\n   */\n  private async getTradingStats(userAccount: string): Promise<{ volume: number; transactions: number; accountAge: number }> {\n    try {\n      // This would typically call an API endpoint that provides trading statistics\n      // For now, return mock data - this should be implemented with actual API calls\n      const mockStats = {\n        volume: Math.random() * 50000, // Random volume for demo\n        transactions: Math.floor(Math.random() * 200), // Random transaction count\n        accountAge: Math.floor(Math.random() * 365) // Random account age in days\n      }\n      return mockStats\n    } catch (error) {\n      ErrorMessageService.logError('BadgeService.getTradingStats', error, { userAccount })\n      return {\n        volume: 0,\n        transactions: 0,\n        accountAge: 0\n      }\n    }\n  }\n\n  /**\n   * Get token balance for a specific token contract and symbol\n   */\n  private async getTokenBalance(userAccount: string, contract: string, symbol: string): Promise<number> {\n    try {\n      const response = await apiService.fetchWithRetry(\n        `${API_ENDPOINTS.WAX_CHAIN.GREYMASS}/get_table_rows`,\n        3,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            json: true,\n            code: contract,\n            scope: userAccount,\n            table: 'accounts',\n            limit: 100\n          })\n        }\n      )\n      \n      const data = await response.json()\n      \n      if (data.rows && data.rows.length > 0) {\n        const tokenRow = data.rows.find((row: { balance?: string }) => \n          row.balance && row.balance.includes(symbol)\n        )\n        \n        if (tokenRow) {\n          const balanceStr = tokenRow.balance.split(' ')[0]\n          return parseFloat(balanceStr) || 0\n        }\n      }\n      \n      return 0\n    } catch (error) {\n      ErrorMessageService.logError('BadgeService.getTokenBalance', error, { userAccount, contract, symbol })\n      return 0\n    }\n  }\n\n  /**\n   * Check if user is an early adopter\n   */\n  private async checkEarlyAdopterStatus(userAccount: string): Promise<boolean> {\n    try {\n      // This could be enhanced to check transaction history, whitelist, etc.\n      // For now, we'll use a simple heuristic based on account creation or first transaction\n      const response = await apiService.fetchWithRetry(\n        `${API_ENDPOINTS.WAX_CHAIN.EOSRIO}/v2/history/get_actions?account=${userAccount}&limit=1&sort=asc`\n      )\n      const data = await response.json()\n      \n      if (data.actions && data.actions.length > 0) {\n        const firstAction = data.actions[0]\n        const actionDate = new Date(firstAction.timestamp)\n        const cutoffDate = new Date('2023-01-01') // Adjust this date as needed\n        \n        return actionDate < cutoffDate\n      }\n      \n      return false\n    } catch (error) {\n      ErrorMessageService.logError('BadgeService.checkEarlyAdopterStatus', error, { userAccount })\n      return false\n    }\n  }\n\n  /**\n   * Get badge definition by ID\n   */\n  getBadgeDefinition(badgeId: string): UserBadge | undefined {\n    return this.BADGE_DEFINITIONS[badgeId]\n  }\n\n  /**\n   * Get all available badge definitions\n   */\n  getAllBadgeDefinitions(): UserBadge[] {\n    return Object.values(this.BADGE_DEFINITIONS)\n  }\n\n  /**\n   * Check if user has specific badge\n   */\n  async hasUserBadge(userAccount: string, badgeId: string): Promise<boolean> {\n    const result = await this.checkUserBadges(userAccount)\n    return result.badges.some(badge => badge.id === badgeId)\n  }\n\n  /**\n   * Get user's badge statistics with enhanced information\n   */\n  async getUserBadgeStats(userAccount: string): Promise<{\n    totalBadges: number\n    badgesByType: Record<string, number>\n    badgesByRarity: Record<string, number>\n    recentBadges: UserBadge[]\n    progressBadges: UserBadge[]\n  }> {\n    const result = await this.checkUserBadges(userAccount)\n    return this.getBadgeStatistics(result.badges)\n  }\n\n  /**\n   * Get statistics about user's badges\n   */\n  getBadgeStatistics(badges: UserBadge[]): {\n    totalBadges: number\n    badgesByType: Record<string, number>\n    badgesByRarity: Record<string, number>\n    recentBadges: UserBadge[]\n    progressBadges: UserBadge[]\n  } {\n    const badgesByType: Record<string, number> = {}\n    const badgesByRarity: Record<string, number> = {}\n    const recentBadges = badges\n      .filter(badge => badge.unlockedAt)\n      .sort((a, b) => new Date(b.unlockedAt!).getTime() - new Date(a.unlockedAt!).getTime())\n      .slice(0, 5)\n    const progressBadges = badges.filter(badge => badge.progress)\n\n    badges.forEach(badge => {\n      badgesByType[badge.type] = (badgesByType[badge.type] || 0) + 1\n      if (badge.rarity) {\n        badgesByRarity[badge.rarity] = (badgesByRarity[badge.rarity] || 0) + 1\n      }\n    })\n\n    return {\n      totalBadges: badges.length,\n      badgesByType,\n      badgesByRarity,\n      recentBadges,\n      progressBadges\n    }\n  }\n\n  /**\n   * Clear badge cache for a specific user or all users\n   */\n  clearBadgeCache(userAccount?: string): void {\n    if (userAccount) {\n      this.badgeCache.delete(userAccount)\n    } else {\n      this.badgeCache.clear()\n    }\n  }\n\n  /**\n   * Get badge progress for a specific badge type\n   */\n  getBadgeProgress(userAccount: string, badgeId: string): BadgeProgress | null {\n    const cached = this.badgeCache.get(userAccount)\n    if (!cached) return null\n\n    const badge = cached.result.badges.find(b => b.id === badgeId)\n    if (badge?.progress) {\n      return {\n        badgeId,\n        current: badge.progress.current,\n        required: badge.progress.required,\n        percentage: badge.progress.percentage\n      }\n    }\n    return null\n  }\n\n  /**\n   * Get all available badge definitions with user progress\n   */\n  async getAllBadgeDefinitionsWithProgress(userAccount: string): Promise<Array<UserBadge & { earned: boolean }>> {\n    const userBadges = await this.checkUserBadges(userAccount)\n    const earnedBadgeIds = new Set(userBadges.badges.map(b => b.id))\n\n    return Object.values(this.BADGE_DEFINITIONS).map(badge => {\n      const userBadge = userBadges.badges.find(b => b.id === badge.id)\n      return {\n        ...badge,\n        earned: earnedBadgeIds.has(badge.id),\n        progress: userBadge?.progress,\n        unlockedAt: userBadge?.unlockedAt\n      }\n    })\n  }\n}\n\nexport const badgeService = new BadgeService()\nexport default badgeService","import { apiService } from './api'\nimport { log } from './loggingService'\n\nexport interface WaxBalanceResult {\n  balance: string\n  lastUpdated: number\n}\n\nclass BalanceService {\n  private balanceCache: Map<string, WaxBalanceResult> = new Map()\n  private readonly CACHE_DURATION = 30000 // 30 seconds\n\n  /**\n   * Get WAX balance for an account with caching\n   */\n  async getWaxBalance(account: string, forceRefresh: boolean = false): Promise<string> {\n    if (!account) return '0.0000 WAX'\n\n    const cacheKey = `wax_${account}`\n    const cached = this.balanceCache.get(cacheKey)\n    const now = Date.now()\n\n    // Return cached balance if it's still fresh and not forcing refresh\n    if (!forceRefresh && cached && (now - cached.lastUpdated) < this.CACHE_DURATION) {\n      return cached.balance\n    }\n\n    try {\n      // Try Light API first (more comprehensive)\n      const lightApiBalances = await apiService.getLightApiBalances(account)\n      \n      if (lightApiBalances && lightApiBalances.balances) {\n        const waxBalance = lightApiBalances.balances.find(\n          balance => balance.currency === 'WAX' && balance.contract === 'eosio.token'\n        )\n        \n        if (waxBalance) {\n          const formattedBalance = `${waxBalance.amount} ${waxBalance.currency}`\n          this.balanceCache.set(cacheKey, {\n            balance: formattedBalance,\n            lastUpdated: now\n          })\n          return formattedBalance\n        }\n      }\n    } catch (error) {\n      log.warn('Light API balance fetch failed, falling back to currency balance API', 'BalanceService', { error })\n    }\n\n    try {\n      // Fallback to direct currency balance API\n      const balances = await apiService.getWaxCurrencyBalance(account, 'eosio.token', 'WAX')\n      if (balances && balances.length > 0) {\n        const balance = balances[0].balance\n        this.balanceCache.set(cacheKey, {\n          balance,\n          lastUpdated: now\n        })\n        return balance\n      }\n    } catch (error) {\n      log.error('Failed to fetch WAX balance', 'BalanceService', error as Error)\n    }\n\n    // Return default if all methods fail\n    return '0.0000 WAX'\n  }\n\n  /**\n   * Clear balance cache for an account\n   */\n  clearCache(account?: string): void {\n    if (account) {\n      this.balanceCache.delete(`wax_${account}`)\n    } else {\n      this.balanceCache.clear()\n    }\n  }\n\n  /**\n   * Check if balance is cached and fresh\n   */\n  isCached(account: string): boolean {\n    const cached = this.balanceCache.get(`wax_${account}`)\n    if (!cached) return false\n    \n    const now = Date.now()\n    return (now - cached.lastUpdated) < this.CACHE_DURATION\n  }\n}\n\nexport const balanceService = new BalanceService()","import React, { createContext, useState, useEffect, type ReactNode } from 'react'\nimport type { Notification, NotificationContextType } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\n\n\ninterface ConfirmDialogState {\n  title: string\n  message: string\n  confirmText: string\n  cancelText: string\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined)\n\ninterface NotificationProviderProps {\n  children: ReactNode\n}\n\nconst NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([])\n  const confirmResolveRef = React.useRef<((value: boolean) => void) | null>(null)\n  const [confirmDialog, setConfirmDialog] = useState<ConfirmDialogState | null>(null)\n  const [soundEnabled, setSoundEnabled] = useState(() => {\n    const saved = localStorage.getItem('notification-sound-enabled')\n    return saved !== null ? JSON.parse(saved) : true\n  })\n  const [maxNotifications] = useState(5) // Limit concurrent notifications\n\n  // Save sound preference to localStorage\n  useEffect(() => {\n    localStorage.setItem('notification-sound-enabled', JSON.stringify(soundEnabled))\n  }, [soundEnabled])\n\n  const addNotification = (notification: Omit<Notification, 'id'>) => {\n    const id = Date.now().toString() + Math.random().toString(36).substr(2, 9)\n    const newNotification: Notification = {\n      ...notification,\n      id,\n      duration: notification.duration ?? 5000\n    }\n    \n    setNotifications(prev => {\n      // Limit the number of concurrent notifications\n      const updated = [...prev, newNotification]\n      if (updated.length > maxNotifications) {\n        return updated.slice(-maxNotifications)\n      }\n      return updated\n    })\n    \n    // Auto-remove notification after duration\n    if (newNotification.duration && newNotification.duration > 0) {\n      setTimeout(() => {\n        removeNotification(id)\n      }, newNotification.duration)\n    }\n  }\n\n  const removeNotification = (id: string) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id))\n  }\n\n  const clearAllNotifications = () => {\n    setNotifications([])\n  }\n\n  const toggleSound = () => {\n    setSoundEnabled((prev: boolean) => !prev)\n  }\n\n  const showSuccess = (message: string, title?: string, duration?: number) => {\n    addNotification({ type: 'success', message, title, duration })\n  }\n\n  const showError = (message: string, title?: string, duration?: number) => {\n    // Log error notifications to centralized logging service\n    log.warn('User error notification displayed', 'NotificationContext.showError', { message, title, duration })\n    addNotification({ type: 'error', message, title, duration })\n  }\n\n  const showWarning = (message: string, title?: string, duration?: number) => {\n    // Log warning notifications for monitoring user experience issues\n    log.info('User warning notification displayed', 'NotificationContext.showWarning', { message, title, duration })\n    addNotification({ type: 'warning', message, title, duration })\n  }\n\n  const showInfo = (message: string, title?: string, duration?: number) => {\n    addNotification({ type: 'info', message, title, duration })\n  }\n\n  const confirm = (title: string, message: string, confirmText: string = 'Confirm', cancelText: string = 'Cancel'): Promise<boolean> => {\n    return new Promise((resolve) => {\n      setConfirmDialog({\n        title,\n        message,\n        confirmText,\n        cancelText\n      })\n      confirmResolveRef.current = resolve\n    })\n  }\n\n  const resolveConfirm = (result: boolean) => {\n    if (confirmResolveRef.current) {\n      confirmResolveRef.current(result)\n      confirmResolveRef.current = null\n    }\n    setConfirmDialog(null)\n  }\n\n  const value: NotificationContextType = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearAllNotifications,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    confirm,\n    confirmDialog,\n    resolveConfirm,\n    soundEnabled,\n    toggleSound\n  }\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n      {/* Confirmation Dialog */}\n      {confirmDialog && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content confirm-dialog\">\n            <div className=\"modal-header\">\n              <h3>{confirmDialog.title || 'Confirm Action'}</h3>\n            </div>\n            <div className=\"modal-body\">\n              <p>{confirmDialog.message}</p>\n            </div>\n            <div className=\"modal-actions\">\n              <button \n                className=\"btn-secondary\" \n                onClick={() => resolveConfirm(false)}\n              >\n                {confirmDialog.cancelText}\n              </button>\n              <button \n                className=\"btn-primary\" \n                onClick={() => resolveConfirm(true)}\n              >\n                {confirmDialog.confirmText}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </NotificationContext.Provider>\n  )\n}\n\nexport default NotificationProvider\nexport { NotificationProvider, NotificationContext }","import { useContext } from 'react'\nimport { NotificationContext } from '../contexts/NotificationContext'\n\nexport interface Notification {\n  id: string\n  type: 'success' | 'error' | 'warning' | 'info'\n  title?: string\n  message: string\n  duration?: number\n  action?: {\n    label: string\n    onClick: () => void\n  }\n}\n\ninterface ConfirmDialogState {\n  title: string\n  message: string\n  confirmText: string\n  cancelText: string\n}\n\nexport interface NotificationContextType {\n  notifications: Notification[]\n  addNotification: (notification: Omit<Notification, 'id'>) => void\n  removeNotification: (id: string) => void\n  clearAllNotifications: () => void\n  showSuccess: (message: string, title?: string, duration?: number) => void\n  showError: (message: string, title?: string, duration?: number) => void\n  showWarning: (message: string, title?: string, duration?: number) => void\n  showInfo: (message: string, title?: string, duration?: number) => void\n  confirm: (title: string, message: string, confirmText?: string, cancelText?: string) => Promise<boolean>\n  confirmDialog: ConfirmDialogState | null\n  resolveConfirm: (result: boolean) => void\n  soundEnabled: boolean\n  toggleSound: () => void\n}\n\nexport const useNotifications = (): NotificationContextType => {\n  const context = useContext(NotificationContext)\n  if (context === undefined) {\n    throw new Error('useNotifications must be used within a NotificationProvider')\n  }\n  return context\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport { cartService } from '../services/cartService'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { CartItem, CartTotals } from '../services/cartService'\n\nimport { log } from '../services/loggingService'\nimport '../css/cart.css'\n\ninterface ShoppingCartProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst ShoppingCart: React.FC<ShoppingCartProps> = ({ isOpen, onClose }) => {\n  const { isConnected, login, purchaseNFT, batchPurchaseNFTs } = useWallet()\n  const { showError, showSuccess, showWarning } = useNotifications()\n  // Transaction tracking now handled directly by WharfKit through WalletProvider\n  const [cartItems, setCartItems] = useState<CartItem[]>([])\n  const [totals, setTotals] = useState<CartTotals>({ totalWAX: '0.0000 WAX', totalUSD: '$0.00', itemCount: 0 })\n  const [isLoading, setIsLoading] = useState(false)\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n  const [itemsPerTx, setItemsPerTx] = useState(20)\n  const [useBatchPurchase, setUseBatchPurchase] = useState(true)\n\n  const loadCartData = useCallback(async () => {\n    setIsLoading(true)\n    try {\n      // Check availability of items\n      await cartService.checkAvailability()\n      \n      const cart = cartService.getCart()\n      setCartItems(cart)\n      // Sync selection state with cart service\n      setSelectedItems(new Set(cart.filter(item => item.selected).map(item => item.nft.asset_id)))\n      \n      // Calculate totals inline to avoid circular dependency\n      try {\n        const newTotals = await cartService.calculateTotals()\n        setTotals(newTotals)\n      } catch (totalsError) {\n        log.error('Failed to calculate totals', 'ShoppingCart', totalsError as Error)\n        showError('Calculation Error', 'Unable to calculate cart totals. Some prices may be outdated.')\n      }\n    } catch (error) {\n      log.error('Failed to load cart data', 'ShoppingCart', error as Error)\n      showError('Cart Error', 'Unable to load cart data. Please try refreshing the page.')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [showError])\n\n  useEffect(() => {\n    if (isOpen) {\n      loadCartData()\n    }\n\n    const handleCartChange = (cart: CartItem[]) => {\n      setCartItems(cart)\n      // Calculate totals directly here to avoid circular dependency\n      cartService.calculateTotals().then(newTotals => {\n        setTotals(newTotals)\n      }).catch(error => {\n        log.error('Failed to calculate totals in cart change handler', 'ShoppingCart', error)\n      })\n    }\n\n    cartService.addListener(handleCartChange)\n    return () => cartService.removeListener(handleCartChange)\n  }, [isOpen, loadCartData])\n\n\n\n  const handleRemoveItem = (assetId: string) => {\n    cartService.removeFromCart(assetId)\n    setSelectedItems(prev => {\n      const newSet = new Set(prev)\n      newSet.delete(assetId)\n      return newSet\n    })\n  }\n\n  const handleToggleSelection = (assetId: string) => {\n    cartService.toggleSelection(assetId)\n    // Update local state to reflect cart service state\n    const cart = cartService.getCart()\n    setCartItems(cart)\n    setSelectedItems(new Set(cart.filter(item => item.selected).map(item => item.nft.asset_id)))\n  }\n\n  const handleSelectAll = () => {\n    const availableItems = cartItems.filter(item => item.isAvailable !== false)\n    const availableSelectedCount = availableItems.filter(item => item.selected).length\n    \n    if (availableSelectedCount === availableItems.length && availableItems.length > 0) {\n      cartService.deselectAll()\n    } else {\n      cartService.selectAll()\n    }\n    \n    // Update local state\n    const cart = cartService.getCart()\n    setCartItems(cart)\n    setSelectedItems(new Set(cart.filter(item => item.selected).map(item => item.nft.asset_id)))\n  }\n\n  const handleCleanupUnavailable = () => {\n    cartService.cleanupUnavailableItems()\n  }\n\n  const handleClearCart = () => {\n    if (confirm('Are you sure you want to clear your entire cart?')) {\n      cartService.clearCart()\n      setSelectedItems(new Set())\n    }\n  }\n\n  const handleBuySelected = async () => {\n    const selectedItemsList = cartService.getSelectedItems().filter(item => \n      item.isAvailable !== false\n    )\n    \n    if (selectedItemsList.length === 0) {\n      showError('Please select items to purchase', 'No Items Selected')\n      return\n    }\n\n    if (!isConnected) {\n      try {\n        await login()\n      } catch (error) {\n        log.error('Login failed', 'ShoppingCart', error as Error)\n        showError('Login Failed', 'Please connect your wallet to purchase NFTs')\n        return\n      }\n    }\n\n    let successCount = 0\n    const failedItems: string[] = []\n    \n    if (useBatchPurchase && selectedItemsList.length > 1) {\n      // Process in batches\n      const batches = []\n      for (let i = 0; i < selectedItemsList.length; i += itemsPerTx) {\n        batches.push(selectedItemsList.slice(i, i + itemsPerTx))\n      }\n      \n      for (let batchIndex = 0; batchIndex < batches.length; batchIndex++) {\n        const batch = batches[batchIndex]\n        const batchPurchases = batch\n          .filter(item => item.nft.sale_id && item.nft.price)\n          .map(item => ({\n            saleId: item.nft.sale_id!,\n            price: item.nft.price!.replace(' WAX', '')\n          }))\n        \n        if (batchPurchases.length === 0) {\n          batch.forEach(item => {\n            if (!item.nft.sale_id) {\n              failedItems.push(`${item.nft.name} (not for sale)`)\n            }\n          })\n          continue\n        }\n        \n        try {\n          await batchPurchaseNFTs(batchPurchases)\n          \n          // Remove successfully purchased items from cart\n          batch.forEach(item => {\n            if (item.nft.sale_id) {\n              cartService.removeFromCart(item.nft.asset_id)\n              setSelectedItems(prev => {\n                const newSet = new Set(prev)\n                newSet.delete(item.nft.asset_id)\n                return newSet\n              })\n              successCount++\n            }\n          })\n          \n          // Small delay between batches\n          if (batchIndex < batches.length - 1) {\n            await new Promise(resolve => setTimeout(resolve, 2000))\n          }\n          \n        } catch (error) {\n          log.error('Batch purchase failed', 'ShoppingCart', error as Error)\n          showError('Batch Purchase Failed', `Failed to purchase batch of ${batch.length} items`)\n          batch.forEach(item => {\n            failedItems.push(`${item.nft.name} (batch failed: ${error instanceof Error ? error.message : 'Unknown error'})`)\n          })\n        }\n      }\n    } else {\n      // Process sequentially (original behavior)\n      for (const item of selectedItemsList) {\n        try {\n          if (!item.nft.sale_id || !item.nft.price) {\n            failedItems.push(`${item.nft.name} (not for sale)`)\n            continue\n          }\n          \n          // Execute purchase transaction directly with WharfKit\n          await purchaseNFT(item.nft.sale_id, item.nft.price.replace(' WAX', ''))\n          successCount++\n          \n          // Remove successfully purchased item from cart\n          cartService.removeFromCart(item.nft.asset_id)\n          setSelectedItems(prev => {\n            const newSet = new Set(prev)\n            newSet.delete(item.nft.asset_id)\n            return newSet\n          })\n          \n          // Small delay between purchases to prevent rate limiting\n          if (selectedItemsList.length > 1) {\n            await new Promise(resolve => setTimeout(resolve, 1000))\n          }\n          \n        } catch (error) {\n          log.error(`Purchase failed for ${item.nft.name}`, 'ShoppingCart', error as Error)\n          showError('Purchase Failed', `Failed to purchase ${item.nft.name}`)\n          failedItems.push(`${item.nft.name} (${error instanceof Error ? error.message : 'Unknown error'})`)\n        }\n      }\n    }\n    \n    // Show results\n    if (successCount > 0 && failedItems.length === 0) {\n      showSuccess(`Successfully purchased ${successCount} item${successCount !== 1 ? 's' : ''}!`, 'Purchase Complete')\n    } else if (successCount > 0 && failedItems.length > 0) {\n      showWarning(\n        `Partially completed: ${successCount} successful, ${failedItems.length} failed. Failed items: ${failedItems.join(', ')}`,\n        'Purchase Partially Complete',\n        8000\n      )\n    } else {\n      showError(`All purchases failed. Items: ${failedItems.join(', ')}`, 'Purchase Failed')\n    }\n  }\n\n  const availableItems = cartItems.filter(item => item.isAvailable !== false)\n  const unavailableItems = cartItems.filter(item => item.isAvailable === false)\n\n  if (!isOpen) return null\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose()\n    }\n  }\n\n  return (\n    <div \n      className=\"modal-backdrop\" \n      onClick={handleBackdropClick}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby=\"cart-title\"\n    >\n      <div className=\"modal-content shopping-cart-modal\">\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\" id=\"cart-title\">\n            Shopping Cart ({totals.itemCount} {totals.itemCount === 1 ? 'item' : 'items'})\n          </h2>\n          <button \n            className=\"modal-close\" \n            onClick={onClose}\n            aria-label=\"Close shopping cart\"\n            type=\"button\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body cart-body\">\n          {isLoading ? (\n            <div className=\"cart-loading\">\n              <div className=\"loading-spinner\"></div>\n              <p>Checking item availability...</p>\n            </div>\n          ) : cartItems.length === 0 ? (\n            <div className=\"cart-empty\">\n              <div className=\"empty-cart-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                  <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                  <path d=\"m1 1 4 4 2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                </svg>\n              </div>\n              <h3>Your cart is empty</h3>\n              <p>Add some NFTs from the marketplace to get started!</p>\n            </div>\n          ) : (\n            <>\n              {/* Cart Controls */}\n              <div className=\"cart-controls\">\n                <div className=\"cart-actions-left\">\n                  <button \n                    className=\"btn-select-all\"\n                    onClick={handleSelectAll}\n                    aria-label={selectedItems.size === availableItems.length && availableItems.length > 0 \n                      ? `Deselect all ${availableItems.length} items` \n                      : `Select all ${availableItems.length} items`\n                    }\n                    type=\"button\"\n                  >\n                    {selectedItems.size === availableItems.length && availableItems.length > 0 \n                      ? 'Deselect All' \n                      : 'Select All'\n                    }\n                  </button>\n                  {unavailableItems.length > 0 && (\n                    <button \n                      className=\"btn-cleanup\"\n                      onClick={handleCleanupUnavailable}\n                      aria-label={`Remove ${unavailableItems.length} unavailable items from cart`}\n                      type=\"button\"\n                    >\n                      Remove Unavailable ({unavailableItems.length})\n                    </button>\n                  )}\n                </div>\n                <button \n                  className=\"btn-clear-cart\"\n                  onClick={handleClearCart}\n                  aria-label=\"Clear all items from cart\"\n                  type=\"button\"\n                >\n                  Clear Cart\n                </button>\n              </div>\n\n              {/* Batch Purchase Settings */}\n              {availableItems.length > 1 && (\n                <div className=\"batch-settings\" role=\"group\" aria-labelledby=\"batch-settings-label\">\n                  <div className=\"batch-toggle\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={useBatchPurchase}\n                        onChange={(e) => setUseBatchPurchase(e.target.checked)}\n                        aria-describedby=\"batch-purchase-description\"\n                      />\n                      <span id=\"batch-settings-label\">Use batch purchasing</span>\n                    </label>\n                    <div id=\"batch-purchase-description\" className=\"sr-only\">\n                      Batch purchasing allows you to buy multiple items in a single transaction, which is faster and more efficient.\n                    </div>\n                  </div>\n                  {useBatchPurchase && (\n                    <div className=\"batch-controls\">\n                      <label htmlFor=\"items-per-tx\">Items per transaction:</label>\n                      <div className=\"batch-slider\">\n                        <input\n                          id=\"items-per-tx\"\n                          type=\"range\"\n                          min=\"1\"\n                          max=\"50\"\n                          value={itemsPerTx}\n                          onChange={(e) => setItemsPerTx(parseInt(e.target.value))}\n                        />\n                        <span className=\"batch-value\">{itemsPerTx}</span>\n                      </div>\n                      <div className=\"batch-info\">\n                        {selectedItems.size > itemsPerTx && (\n                          <small>\n                            Will create {Math.ceil(selectedItems.size / itemsPerTx)} transaction{Math.ceil(selectedItems.size / itemsPerTx) > 1 ? 's' : ''}\n                          </small>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Available Items */}\n              {availableItems.length > 0 && (\n                <div className=\"cart-section\">\n                  <h3 className=\"section-title\">Available Items</h3>\n                  <div className=\"cart-items\">\n                    {availableItems.map((item) => (\n                      <div key={item.nft.asset_id} className=\"cart-item\">\n                        <div className=\"item-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedItems.has(item.nft.asset_id)}\n                            onChange={() => handleToggleSelection(item.nft.asset_id)}\n                            aria-label={`Select ${item.nft.name} for purchase`}\n                            id={`item-${item.nft.asset_id}`}\n                          />\n                        </div>\n                        <div className=\"item-image\">\n                          {item.nft.video ? (\n                            <video \n                              src={item.nft.video} \n                              className=\"cart-item-media\"\n                              muted\n                              onError={(e) => {\n                                const img = document.createElement('img')\n                                img.src = item.nft.image\n                                img.className = 'cart-item-media'\n                                img.alt = item.nft.name\n                                e.currentTarget.parentNode?.replaceChild(img, e.currentTarget)\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src={item.nft.image} \n                              alt={`${item.nft.name} from ${item.nft.collection}`}\n                              className=\"cart-item-media\"\n                            />\n                          )}\n                        </div>\n                        <div className=\"item-details\">\n                          <h4 className=\"item-name\">{item.nft.name}</h4>\n                          <p className=\"item-collection\">{item.nft.collection}</p>\n                          <div className=\"item-price\" aria-label={`Price: ${item.nft.price}`}>\n                            <span className=\"price-wax\">{item.nft.price}</span>\n                          </div>\n                        </div>\n                        <button \n                          className=\"btn-remove\"\n                          onClick={() => handleRemoveItem(item.nft.asset_id)}\n                          title=\"Remove from cart\"\n                          aria-label={`Remove ${item.nft.name} from cart`}\n                          type=\"button\"\n                        >\n                          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n                            <polyline points=\"3,6 5,6 21,6\"></polyline>\n                            <path d=\"m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2\"></path>\n                          </svg>\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Unavailable Items */}\n              {unavailableItems.length > 0 && (\n                <div className=\"cart-section\">\n                  <h3 className=\"section-title unavailable-title\">\n                    Unavailable Items ({unavailableItems.length})\n                  </h3>\n                  <div className=\"cart-items unavailable-items\">\n                    {unavailableItems.map((item) => (\n                      <div key={item.nft.asset_id} className=\"cart-item unavailable\">\n                        <div className=\"item-image\">\n                          <img \n                            src={item.nft.image} \n                            alt={item.nft.name}\n                            className=\"cart-item-media\"\n                          />\n                          <div className=\"unavailable-overlay\">Unavailable</div>\n                        </div>\n                        <div className=\"item-details\">\n                          <h4 className=\"item-name\">{item.nft.name}</h4>\n                          <p className=\"item-collection\">{item.nft.collection}</p>\n                          <div className=\"item-price\">\n                            <span className=\"price-wax\">{item.nft.price}</span>\n                          </div>\n                        </div>\n                        <button \n                          className=\"btn-remove\"\n                          onClick={() => handleRemoveItem(item.nft.asset_id)}\n                          title=\"Remove from cart\"\n                        >\n                          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                            <polyline points=\"3,6 5,6 21,6\"></polyline>\n                            <path d=\"m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2\"></path>\n                          </svg>\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n\n        {cartItems.length > 0 && (\n          <div className=\"modal-footer cart-footer\">\n            <div className=\"cart-totals\">\n              <div className=\"total-line\">\n                <span className=\"total-label\">Total ({selectedItems.size} selected):</span>\n                <div className=\"total-prices\">\n                  <span className=\"total-wax\">{totals.totalWAX}</span>\n                  <span className=\"total-usd\">{totals.totalUSD}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"cart-actions\">\n              <button \n                className=\"btn-secondary\" \n                onClick={onClose}\n                type=\"button\"\n                aria-label=\"Continue shopping and close cart\"\n              >\n                Continue Shopping\n              </button>\n              <button \n                className=\"btn-primary\"\n                onClick={handleBuySelected}\n                disabled={selectedItems.size === 0}\n                type=\"button\"\n                aria-label={`Buy ${selectedItems.size} selected items`}\n                aria-describedby=\"cart-totals\"\n              >\n                Buy Selected ({selectedItems.size})\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ShoppingCart","// Accessibility service for managing ARIA labels, focus management, and accessibility features\nimport { monitoringService } from './monitoringService'\nimport { logger } from './loggingService'\n\nexport interface AccessibilityPreferences {\n  reducedMotion: boolean\n  highContrast: boolean\n  largeText: boolean\n  screenReader: boolean\n  keyboardNavigation: boolean\n}\n\ninterface FocusableElement {\n  element: HTMLElement\n  tabIndex: number\n  originalTabIndex?: number\n}\n\nclass AccessibilityService {\n  private preferences: AccessibilityPreferences\n  private focusStack: HTMLElement[] = []\n  private trapFocusElements: FocusableElement[] = []\n  private isInitialized: boolean = false\n  private mediaQueryListeners: MediaQueryList[] = []\n  private keyboardNavigationActive: boolean = false\n\n  constructor() {\n    this.preferences = this.getDefaultPreferences()\n    this.detectSystemPreferences()\n  }\n\n  private getDefaultPreferences(): AccessibilityPreferences {\n    return {\n      reducedMotion: false,\n      highContrast: false,\n      largeText: false,\n      screenReader: false,\n      keyboardNavigation: true\n    }\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return\n\n    try {\n      // Load saved preferences\n      this.loadPreferences()\n      \n      // Set up system preference detection\n      this.setupMediaQueryListeners()\n      \n      // Set up keyboard navigation detection\n      this.setupKeyboardNavigation()\n      \n      // Apply initial accessibility settings\n      this.applyAccessibilitySettings()\n      \n      // Set up focus management\n      this.setupFocusManagement()\n      \n      this.isInitialized = true\n      \n      monitoringService.trackEvent('accessibility_service_initialized', {\n        preferences: this.preferences,\n        systemPreferences: this.detectSystemPreferences()\n      })\n      \n      logger.info('Accessibility service initialized', 'ACCESSIBILITY')\n    } catch (error) {\n      logger.error('Failed to initialize accessibility service', 'ACCESSIBILITY', error as Error)\n      monitoringService.reportError(error as Error, 'accessibility_init_error')\n    }\n  }\n\n  private detectSystemPreferences(): Partial<AccessibilityPreferences> {\n    const systemPrefs: Partial<AccessibilityPreferences> = {}\n\n    // Detect reduced motion preference\n    if (window.matchMedia) {\n      systemPrefs.reducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches\n      systemPrefs.highContrast = window.matchMedia('(prefers-contrast: high)').matches\n    }\n\n    // Detect screen reader (basic detection)\n    systemPrefs.screenReader = this.detectScreenReader()\n\n    return systemPrefs\n  }\n\n  private detectScreenReader(): boolean {\n    // Basic screen reader detection\n    return (\n      navigator.userAgent.includes('NVDA') ||\n      navigator.userAgent.includes('JAWS') ||\n      navigator.userAgent.includes('VoiceOver') ||\n      window.speechSynthesis !== undefined\n    )\n  }\n\n  private setupMediaQueryListeners(): void {\n    if (!window.matchMedia) return\n\n    // Reduced motion listener\n    const reducedMotionMQ = window.matchMedia('(prefers-reduced-motion: reduce)')\n    reducedMotionMQ.addEventListener('change', (e) => {\n      this.updatePreference('reducedMotion', e.matches)\n    })\n    this.mediaQueryListeners.push(reducedMotionMQ)\n\n    // High contrast listener\n    const highContrastMQ = window.matchMedia('(prefers-contrast: high)')\n    highContrastMQ.addEventListener('change', (e) => {\n      this.updatePreference('highContrast', e.matches)\n    })\n    this.mediaQueryListeners.push(highContrastMQ)\n  }\n\n  private setupKeyboardNavigation(): void {\n    // Detect keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Tab') {\n        this.keyboardNavigationActive = true\n        document.body.classList.add('a11y-keyboard-navigation')\n      }\n    })\n\n    document.addEventListener('mousedown', () => {\n      this.keyboardNavigationActive = false\n      document.body.classList.remove('a11y-keyboard-navigation')\n    })\n  }\n\n  private setupFocusManagement(): void {\n    // Track focus changes for better focus management\n    document.addEventListener('focusin', (e) => {\n      const target = e.target as HTMLElement\n      if (target && this.keyboardNavigationActive) {\n        this.announceToScreenReader(`Focused on ${this.getElementDescription(target)}`)\n      }\n    })\n  }\n\n  private applyAccessibilitySettings(): void {\n    const root = document.documentElement\n\n    // Apply reduced motion\n    if (this.preferences.reducedMotion) {\n      root.classList.add('a11y-reduce-motion')\n    } else {\n      root.classList.remove('a11y-reduce-motion')\n    }\n\n    // Apply high contrast\n    if (this.preferences.highContrast) {\n      root.classList.add('a11y-high-contrast')\n    } else {\n      root.classList.remove('a11y-high-contrast')\n    }\n\n    // Apply large text\n    if (this.preferences.largeText) {\n      root.classList.add('a11y-large-text')\n    } else {\n      root.classList.remove('a11y-large-text')\n    }\n\n    // Apply screen reader optimizations\n    if (this.preferences.screenReader) {\n      root.classList.add('a11y-screen-reader-active')\n    } else {\n      root.classList.remove('a11y-screen-reader-active')\n    }\n  }\n\n  // Public API methods\n  updatePreference<K extends keyof AccessibilityPreferences>(\n    key: K, \n    value: AccessibilityPreferences[K]\n  ): void {\n    this.preferences[key] = value\n    this.applyAccessibilitySettings()\n    this.savePreferences()\n    \n    monitoringService.trackEvent('accessibility_preference_changed', {\n      preference: key,\n      value,\n      allPreferences: this.preferences\n    })\n  }\n\n  getPreferences(): AccessibilityPreferences {\n    return { ...this.preferences }\n  }\n\n  // ARIA label management\n  setAriaLabel(element: HTMLElement, label: string): void {\n    element.setAttribute('aria-label', label)\n  }\n\n  setAriaDescribedBy(element: HTMLElement, describedById: string): void {\n    element.setAttribute('aria-describedby', describedById)\n  }\n\n  setAriaExpanded(element: HTMLElement, expanded: boolean): void {\n    element.setAttribute('aria-expanded', expanded.toString())\n  }\n\n  setAriaSelected(element: HTMLElement, selected: boolean): void {\n    element.setAttribute('aria-selected', selected.toString())\n  }\n\n  setAriaChecked(element: HTMLElement, checked: boolean | 'mixed'): void {\n    element.setAttribute('aria-checked', checked.toString())\n  }\n\n  setAriaHidden(element: HTMLElement, hidden: boolean): void {\n    element.setAttribute('aria-hidden', hidden.toString())\n  }\n\n  // Focus management\n  focusElement(element: HTMLElement, options?: FocusOptions): void {\n    try {\n      element.focus(options)\n      this.focusStack.push(element)\n    } catch (error) {\n      logger.warn('Failed to focus element', 'ACCESSIBILITY', error)\n    }\n  }\n\n  restoreFocus(): void {\n    const lastFocused = this.focusStack.pop()\n    if (lastFocused && document.contains(lastFocused)) {\n      this.focusElement(lastFocused)\n    }\n  }\n\n  // Focus trap for modals and dialogs\n  trapFocus(container: HTMLElement): void {\n    const focusableElements = this.getFocusableElements(container)\n    \n    focusableElements.forEach((el, index) => {\n      this.trapFocusElements.push({\n        element: el,\n        tabIndex: index,\n        originalTabIndex: el.tabIndex\n      })\n    })\n\n    // Focus first element\n    if (focusableElements.length > 0) {\n      this.focusElement(focusableElements[0])\n    }\n\n    // Set up tab trapping\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        const firstElement = focusableElements[0]\n        const lastElement = focusableElements[focusableElements.length - 1]\n\n        if (e.shiftKey) {\n          if (document.activeElement === firstElement) {\n            e.preventDefault()\n            this.focusElement(lastElement)\n          }\n        } else {\n          if (document.activeElement === lastElement) {\n            e.preventDefault()\n            this.focusElement(firstElement)\n          }\n        }\n      }\n\n      if (e.key === 'Escape') {\n        this.releaseFocusTrap()\n      }\n    }\n\n    container.addEventListener('keydown', handleKeyDown)\n    container.setAttribute('data-focus-trap-active', 'true')\n  }\n\n  releaseFocusTrap(): void {\n    // Restore original tab indices\n    this.trapFocusElements.forEach(({ element, originalTabIndex }) => {\n      if (originalTabIndex !== undefined) {\n        element.tabIndex = originalTabIndex\n      }\n    })\n\n    this.trapFocusElements = []\n\n    // Remove focus trap indicators\n    document.querySelectorAll('[data-focus-trap-active]').forEach(el => {\n      el.removeAttribute('data-focus-trap-active')\n    })\n\n    this.restoreFocus()\n  }\n\n  private getFocusableElements(container: HTMLElement): HTMLElement[] {\n    const focusableSelectors = [\n      'button:not([disabled])',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      'a[href]',\n      '[tabindex]:not([tabindex=\"-1\"])',\n      '[contenteditable=\"true\"]'\n    ].join(', ')\n\n    return Array.from(container.querySelectorAll(focusableSelectors))\n      .filter(el => {\n        const element = el as HTMLElement\n        return element.offsetParent !== null && !element.hasAttribute('aria-hidden')\n      }) as HTMLElement[]\n  }\n\n  // Screen reader announcements\n  announceToScreenReader(message: string, priority: 'polite' | 'assertive' = 'polite'): void {\n    const announcement = document.createElement('div')\n    announcement.setAttribute('aria-live', priority)\n    announcement.setAttribute('aria-atomic', 'true')\n    announcement.className = 'sr-only'\n    announcement.textContent = message\n\n    document.body.appendChild(announcement)\n\n    // Remove after announcement\n    setTimeout(() => {\n      if (document.body.contains(announcement)) {\n        document.body.removeChild(announcement)\n      }\n    }, 1000)\n  }\n\n  // Element description for screen readers\n  private getElementDescription(element: HTMLElement): string {\n    // Try aria-label first\n    const ariaLabel = element.getAttribute('aria-label')\n    if (ariaLabel) return ariaLabel\n\n    // Try text content\n    const textContent = element.textContent?.trim()\n    if (textContent) return textContent\n\n    // Try alt text for images\n    if (element.tagName === 'IMG') {\n      const alt = (element as HTMLImageElement).alt\n      if (alt) return alt\n    }\n\n    // Try title attribute\n    const title = element.getAttribute('title')\n    if (title) return title\n\n    // Fallback to tag name and role\n    const role = element.getAttribute('role') || element.tagName.toLowerCase()\n    return `${role} element`\n  }\n\n  // Keyboard shortcuts management\n  registerKeyboardShortcut(\n    key: string, \n    callback: (e: KeyboardEvent) => void, \n    description: string\n  ): void {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (this.matchesShortcut(e, key)) {\n        e.preventDefault()\n        callback(e)\n        \n        monitoringService.trackEvent('keyboard_shortcut_used', {\n          shortcut: key,\n          description\n        })\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n  }\n\n  private matchesShortcut(event: KeyboardEvent, shortcut: string): boolean {\n    const parts = shortcut.toLowerCase().split('+')\n    const key = parts.pop()\n    \n    const modifiers = {\n      ctrl: event.ctrlKey,\n      alt: event.altKey,\n      shift: event.shiftKey,\n      meta: event.metaKey\n    }\n\n    // Check if all required modifiers are pressed\n    for (const part of parts) {\n      if (!(modifiers as Record<string, boolean>)[part]) {\n        return false\n      }\n    }\n\n    return event.key.toLowerCase() === key\n  }\n\n  // Color contrast utilities\n  private calculateLuminance(r: number, g: number, b: number): number {\n    // Convert RGB to relative luminance using WCAG 2.1 formula\n    // https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html\n    \n    // Normalize RGB values to 0-1 range\n    const [rNorm, gNorm, bNorm] = [r, g, b].map(c => c / 255)\n    \n    // Apply gamma correction\n    const [rLinear, gLinear, bLinear] = [rNorm, gNorm, bNorm].map(c => {\n      if (c <= 0.03928) {\n        return c / 12.92\n      } else {\n        return Math.pow((c + 0.055) / 1.055, 2.4)\n      }\n    })\n    \n    // Calculate relative luminance using ITU-R BT.709 coefficients\n    // These coefficients account for human eye sensitivity to different colors\n    return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear\n  }\n\n  /**\n   * Calculate contrast ratio between two colors\n   * @param color1 First color in hex format (#RRGGBB)\n   * @param color2 Second color in hex format (#RRGGBB)\n   * @returns Contrast ratio (1:1 to 21:1)\n   */\n  calculateContrastRatio(color1: string, color2: string): number {\n    const rgb1 = this.hexToRgb(color1)\n    const rgb2 = this.hexToRgb(color2)\n    \n    if (!rgb1 || !rgb2) {\n      return 1 // Return minimum contrast if colors are invalid\n    }\n    \n    const lum1 = this.calculateLuminance(rgb1.r, rgb1.g, rgb1.b)\n    const lum2 = this.calculateLuminance(rgb2.r, rgb2.g, rgb2.b)\n    \n    // Ensure lighter color is in numerator\n    const lighter = Math.max(lum1, lum2)\n    const darker = Math.min(lum1, lum2)\n    \n    return (lighter + 0.05) / (darker + 0.05)\n  }\n\n  checkColorContrast(foreground: string, background: string): number {\n    return this.calculateContrastRatio(foreground, background)\n  }\n\n  /**\n   * Convert hex color to RGB values\n   * @param hex Hex color string (#RRGGBB or #RGB)\n   * @returns RGB object or null if invalid\n   */\n  private hexToRgb(hex: string): { r: number; g: number; b: number } | null {\n    // Remove # if present\n    hex = hex.replace('#', '')\n    \n    // Handle 3-digit hex codes\n    if (hex.length === 3) {\n      hex = hex.split('').map(char => char + char).join('')\n    }\n    \n    // Validate hex format\n    if (hex.length !== 6 || !/^[0-9A-Fa-f]{6}$/.test(hex)) {\n      return null\n    }\n    \n    return {\n      r: parseInt(hex.substr(0, 2), 16),\n      g: parseInt(hex.substr(2, 2), 16),\n      b: parseInt(hex.substr(4, 2), 16)\n    }\n  }\n\n  /**\n   * Check if color combination meets WCAG contrast requirements\n   * @param foreground Foreground color in hex\n   * @param background Background color in hex\n   * @param level WCAG level ('AA' or 'AAA')\n   * @param size Text size ('normal' or 'large')\n   * @returns Whether the combination meets requirements\n   */\n  meetsContrastRequirements(\n    foreground: string, \n    background: string, \n    level: 'AA' | 'AAA' = 'AA',\n    size: 'normal' | 'large' = 'normal'\n  ): boolean {\n    const ratio = this.calculateContrastRatio(foreground, background)\n    \n    const requirements = {\n      AA: { normal: 4.5, large: 3 },\n      AAA: { normal: 7, large: 4.5 }\n    }\n    \n    return ratio >= requirements[level][size]\n  }\n\n  /**\n   * Suggest accessible color alternatives\n   * @param foreground Current foreground color\n   * @param background Current background color\n   * @param level Target WCAG level\n   * @returns Suggested accessible colors\n   */\n  suggestAccessibleColors(\n    foreground: string, \n    background: string, \n    level: 'AA' | 'AAA' = 'AA'\n  ): { foreground: string; background: string; ratio: number }[] {\n    const suggestions: { foreground: string; background: string; ratio: number }[] = []\n    \n    // Try darkening/lightening the foreground\n    const fgRgb = this.hexToRgb(foreground)\n    const bgRgb = this.hexToRgb(background)\n    \n    if (!fgRgb || !bgRgb) {\n      return suggestions\n    }\n    \n    // Generate variations by adjusting brightness\n    const variations = [-60, -40, -20, 20, 40, 60, 80, 100]\n    \n    variations.forEach(adjustment => {\n      const newFg = this.adjustBrightness(foreground, adjustment)\n      const ratio = this.calculateContrastRatio(newFg, background)\n      \n      if (this.meetsContrastRequirements(newFg, background, level)) {\n        suggestions.push({\n          foreground: newFg,\n          background,\n          ratio\n        })\n      }\n    })\n    \n    // Sort by contrast ratio (higher is better)\n    return suggestions.sort((a, b) => b.ratio - a.ratio).slice(0, 5)\n  }\n\n  /**\n   * Adjust color brightness\n   * @param hex Original hex color\n   * @param adjustment Brightness adjustment (-100 to 100)\n   * @returns Adjusted hex color\n   */\n  private adjustBrightness(hex: string, adjustment: number): string {\n    const rgb = this.hexToRgb(hex)\n    if (!rgb) return hex\n    \n    const factor = adjustment / 100\n    \n    const adjust = (value: number) => {\n      if (factor > 0) {\n        // Lighten\n        return Math.min(255, value + (255 - value) * factor)\n      } else {\n        // Darken\n        return Math.max(0, value + value * factor)\n      }\n    }\n    \n    const newR = Math.round(adjust(rgb.r))\n    const newG = Math.round(adjust(rgb.g))\n    const newB = Math.round(adjust(rgb.b))\n    \n    return `#${newR.toString(16).padStart(2, '0')}${newG.toString(16).padStart(2, '0')}${newB.toString(16).padStart(2, '0')}`\n  }\n\n  // Persistence\n  private savePreferences(): void {\n    try {\n      localStorage.setItem('accessibility_preferences', JSON.stringify(this.preferences))\n    } catch (error) {\n      logger.warn('Failed to save accessibility preferences', 'ACCESSIBILITY', error)\n    }\n  }\n\n  private loadPreferences(): void {\n    try {\n      const saved = localStorage.getItem('accessibility_preferences')\n      if (saved) {\n        const parsed = JSON.parse(saved)\n        this.preferences = { ...this.preferences, ...parsed }\n      }\n    } catch (error) {\n      logger.warn('Failed to load accessibility preferences', 'ACCESSIBILITY', error)\n    }\n  }\n\n  // Cleanup\n  destroy(): void {\n    this.mediaQueryListeners.forEach(mq => {\n      mq.removeEventListener('change', () => {})\n    })\n    this.mediaQueryListeners = []\n    this.releaseFocusTrap()\n    this.focusStack = []\n  }\n}\n\n// Export singleton instance\nexport const accessibilityService = new AccessibilityService()\n\n// Export types\nexport type {\n  FocusableElement\n}","import React, { useState, useEffect } from 'react'\nimport { accessibilityService, type AccessibilityPreferences } from '../services/accessibilityService'\nimport { monitoringService } from '../services/monitoringService'\nimport '../css/accessibility-modal.css'\n\ninterface AccessibilitySettingsProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst AccessibilitySettings: React.FC<AccessibilitySettingsProps> = ({ isOpen, onClose }) => {\n  const [preferences, setPreferences] = useState<AccessibilityPreferences>({\n    reducedMotion: false,\n    highContrast: false,\n    largeText: false,\n    screenReader: false,\n    keyboardNavigation: true\n  })\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    if (isOpen) {\n      // Load current preferences when modal opens\n      const currentPrefs = accessibilityService.getPreferences()\n      setPreferences(currentPrefs)\n      \n      // Focus trap setup\n      accessibilityService.announceToScreenReader('Accessibility settings dialog opened')\n      \n      // Focus the first interactive element\n      const firstButton = document.querySelector('.accessibility-modal button') as HTMLElement\n      if (firstButton) {\n        accessibilityService.focusElement(firstButton)\n      }\n    }\n  }, [isOpen])\n\n  const handlePreferenceChange = async (key: keyof AccessibilityPreferences, value: boolean) => {\n    setIsLoading(true)\n    \n    try {\n      // Update local state immediately for responsive UI\n      const newPreferences = { ...preferences, [key]: value }\n      setPreferences(newPreferences)\n      \n      // Update the service\n      accessibilityService.updatePreference(key, value)\n      \n      // Announce the change to screen readers\n      const preferenceNames = {\n        reducedMotion: 'Reduced motion',\n        highContrast: 'High contrast',\n        largeText: 'Large text',\n        screenReader: 'Screen reader optimizations',\n        keyboardNavigation: 'Keyboard navigation'\n      }\n      \n      accessibilityService.announceToScreenReader(\n        `${preferenceNames[key]} ${value ? 'enabled' : 'disabled'}`,\n        'assertive'\n      )\n      \n      monitoringService.trackEvent('accessibility_preference_changed', {\n        preference: key,\n        value,\n        source: 'settings_modal'\n      }) \n      \n    } catch (error) {\n      console.error('Failed to update accessibility preference:', error as Error)\n      monitoringService.reportError(error as Error, 'accessibility_preference_update_error')\n      \n      // Revert local state on error\n      setPreferences(prev => ({ ...prev, [key]: !value }))\n      \n      accessibilityService.announceToScreenReader(\n        'Failed to update preference. Please try again.',\n        'assertive'\n      )\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleClose = () => {\n    accessibilityService.announceToScreenReader('Accessibility settings dialog closed')\n    accessibilityService.restoreFocus()\n    onClose()\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      handleClose()\n    }\n  }\n\n  const resetToDefaults = () => {\n    const defaults: AccessibilityPreferences = {\n      reducedMotion: false,\n      highContrast: false,\n      largeText: false,\n      screenReader: false,\n      keyboardNavigation: true\n    }\n    \n    setPreferences(defaults)\n    \n    // Update all preferences\n    Object.entries(defaults).forEach(([key, value]) => {\n      accessibilityService.updatePreference(key as keyof AccessibilityPreferences, value)\n    })\n    \n    accessibilityService.announceToScreenReader('Accessibility settings reset to defaults', 'assertive')\n    \n    monitoringService.trackEvent('accessibility_settings_reset', {\n      source: 'settings_modal'\n    })\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div \n        className=\"accessibility-modal-backdrop\" \n        onClick={handleClose}\n        aria-hidden=\"true\"\n      />\n      \n      {/* Modal */}\n      <div\n         className={`accessibility-modal ${isLoading ? 'loading' : ''}`}\n         role=\"dialog\"\n         aria-modal=\"true\"\n        aria-labelledby=\"accessibility-settings-title\"\n        aria-describedby=\"accessibility-settings-description\"\n        onKeyDown={handleKeyDown}\n      >\n        <div className=\"accessibility-modal-content\">\n          {/* Header */}\n          <div className=\"accessibility-modal-header\">\n            <h2 \n              id=\"accessibility-settings-title\" \n              className=\"accessibility-modal-title\"\n            >\n              Accessibility Settings\n            </h2>\n            <button\n              onClick={handleClose}\n              className=\"accessibility-modal-close\"\n              aria-label=\"Close accessibility settings\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Description */}\n          <p \n            id=\"accessibility-settings-description\" \n            className=\"accessibility-modal-description\"\n          >\n            Customize your accessibility preferences to improve your experience with the application.\n          </p>\n          \n          {/* Settings */}\n          <div className=\"accessibility-settings-list\">\n            {/* Reduced Motion */}\n            <div className=\"accessibility-setting-item\">\n              <div className=\"accessibility-setting-info\">\n                <label className=\"accessibility-setting-label\">\n                  Reduced Motion\n                </label>\n                <p className=\"accessibility-setting-description\">\n                  Minimize animations and transitions for a calmer experience.\n                </p>\n              </div>\n              <button\n                onClick={() => handlePreferenceChange('reducedMotion', !preferences.reducedMotion)}\n                className={`accessibility-toggle ${preferences.reducedMotion ? 'active' : ''}`}\n                role=\"switch\"\n                aria-checked={preferences.reducedMotion}\n                disabled={isLoading}\n              >\n                <span className=\"accessibility-toggle-thumb\" />\n              </button>\n            </div>\n            \n            {/* High Contrast */}\n            <div className=\"accessibility-setting-item\">\n              <div className=\"accessibility-setting-info\">\n                <label className=\"accessibility-setting-label\">\n                  High Contrast\n                </label>\n                <p className=\"accessibility-setting-description\">\n                  Increase color contrast for better visibility\n                </p>\n              </div>\n              <button\n                onClick={() => handlePreferenceChange('highContrast', !preferences.highContrast)}\n                className={`accessibility-toggle ${preferences.highContrast ? 'active' : ''}`}\n                role=\"switch\"\n                aria-checked={preferences.highContrast}\n                disabled={isLoading}\n              >\n                <span className=\"accessibility-toggle-thumb\" />\n              </button>\n            </div>\n            \n            {/* Large Text */}\n            <div className=\"accessibility-setting-item\">\n              <div className=\"accessibility-setting-info\">\n                <label className=\"accessibility-setting-label\">\n                  Large Text\n                </label>\n                <p className=\"accessibility-setting-description\">\n                  Increase text size throughout the application\n                </p>\n              </div>\n              <button\n                onClick={() => handlePreferenceChange('largeText', !preferences.largeText)}\n                className={`accessibility-toggle ${preferences.largeText ? 'active' : ''}`}\n                role=\"switch\"\n                aria-checked={preferences.largeText}\n                disabled={isLoading}\n              >\n                <span className=\"accessibility-toggle-thumb\" />\n              </button>\n            </div>\n            \n            {/* Screen Reader Optimizations */}\n            <div className=\"accessibility-setting-item\">\n              <div className=\"accessibility-setting-info\">\n                <label className=\"accessibility-setting-label\">\n                  Screen Reader Optimizations\n                </label>\n                <p className=\"accessibility-setting-description\">\n                  Optimize interface for screen reader users\n                </p>\n              </div>\n              <button\n                onClick={() => handlePreferenceChange('screenReader', !preferences.screenReader)}\n                className={`accessibility-toggle ${preferences.screenReader ? 'active' : ''}`}\n                role=\"switch\"\n                aria-checked={preferences.screenReader}\n                disabled={isLoading}\n              >\n                <span className=\"accessibility-toggle-thumb\" />\n              </button>\n            </div>\n            \n            {/* Keyboard Navigation */}\n            <div className=\"accessibility-setting-item\">\n              <div className=\"accessibility-setting-info\">\n                <label className=\"accessibility-setting-label\">\n                  Enhanced Keyboard Navigation\n                </label>\n                <p className=\"accessibility-setting-description\">\n                  Show focus indicators and enable keyboard shortcuts\n                </p>\n              </div>\n              <button\n                onClick={() => handlePreferenceChange('keyboardNavigation', !preferences.keyboardNavigation)}\n                className={`accessibility-toggle ${preferences.keyboardNavigation ? 'active' : ''}`}\n                role=\"switch\"\n                aria-checked={preferences.keyboardNavigation}\n                disabled={isLoading}\n              >\n                <span className=\"accessibility-toggle-thumb\" />\n              </button>\n            </div>\n          </div>\n          \n          {/* Actions */}\n          <div className=\"accessibility-modal-actions\">\n            <button\n              onClick={resetToDefaults}\n              disabled={isLoading}\n              className=\"accessibility-modal-reset\"\n            >\n              Reset to Defaults\n            </button>\n            <div className=\"accessibility-modal-buttons\">\n              <button\n                onClick={handleClose}\n                disabled={isLoading}\n                className=\"accessibility-modal-cancel\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleClose}\n                disabled={isLoading}\n                className=\"accessibility-modal-done\"\n              >\n                {isLoading ? 'Saving...' : 'Done'}\n              </button>\n            </div>\n          </div>\n          \n          {/* Keyboard Shortcuts Info */}\n          <div className=\"accessibility-shortcuts\">\n            <h3 className=\"accessibility-shortcuts-title\">\n              Keyboard Shortcuts\n            </h3>\n            <div className=\"accessibility-shortcuts-list\">\n              <div className=\"accessibility-shortcut\">\n                <span>Close modal</span>\n                <kbd className=\"accessibility-kbd\">Esc</kbd>\n              </div>\n              <div className=\"accessibility-shortcut\">\n                <span>Navigate settings</span>\n                <kbd className=\"accessibility-kbd\">Tab</kbd>\n              </div>\n              <div className=\"accessibility-shortcut\">\n                <span>Toggle setting</span>\n                <kbd className=\"accessibility-kbd\">Space</kbd>\n              </div>\n              <div className=\"accessibility-shortcut\">\n                <span>Activate buttons</span>\n                <kbd className=\"accessibility-kbd\">Enter</kbd>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AccessibilitySettings","import { useState, useEffect, useRef, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useWallet } from '../hooks/useWallet'\nimport { cartService } from '../services/cartService'\n\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { badgeService } from '../services/badgeService'\nimport { balanceService } from '../services/balanceService'\nimport type { UserBadge } from '../services/badgeService'\nimport ShoppingCart from './ShoppingCart'\nimport AccessibilitySettings from './AccessibilitySettings'\nimport { accessibilityService } from '../services/accessibilityService'\nimport { log } from '../services/loggingService'\nimport '../css/cart.css'\n\ninterface NavigationProps {\n  currentPage: string\n  onPageChange: (page: string) => void\n}\n\nconst Navigation: React.FC<NavigationProps> = ({ currentPage }) => {\n  const { isConnected, isLoading, login, logout, account } = useWallet()\n  \n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [cartCount, setCartCount] = useState(0)\n  const [isCartOpen, setIsCartOpen] = useState(false)\n  const [isWalletDropdownOpen, setIsWalletDropdownOpen] = useState(false)\n  const [isAccessibilitySettingsOpen, setIsAccessibilitySettingsOpen] = useState(false)\n\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Check for user-specific settings first, then fallback to global darkMode\n    if (account) {\n      const userSettings = localStorage.getItem(`userSettings_${account}`)\n      if (userSettings) {\n        const parsed = JSON.parse(userSettings)\n        return parsed.darkMode !== undefined ? parsed.darkMode : true\n      }\n    }\n    const saved = localStorage.getItem('darkMode')\n    return saved ? JSON.parse(saved) : true\n  })\n  \n  // Use display settings context\n  const { settings, updateSetting } = useDisplaySettings()\n  \n  const [waxBalance, setWaxBalance] = useState<string>('0.0000')\n  const [userBadges, setUserBadges] = useState<UserBadge[]>([])  \n  const [lastBalanceUpdate, setLastBalanceUpdate] = useState<number>(0)\n  const [isDisplayOptionsExpanded, setIsDisplayOptionsExpanded] = useState(false)\n  const [isMoreDropdownOpen, setIsMoreDropdownOpen] = useState(false)\n  const [isBadgeCategoryExpanded, setIsBadgeCategoryExpanded] = useState(false)\n  const walletDropdownRef = useRef<HTMLDivElement>(null)\n  const moreDropdownRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 10)\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light')\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode))\n    \n    // Also update user-specific settings if account is connected\n    if (account) {\n      const userSettings = localStorage.getItem(`userSettings_${account}`)\n      if (userSettings) {\n        const parsed = JSON.parse(userSettings)\n        const updated = { ...parsed, darkMode: isDarkMode }\n        localStorage.setItem(`userSettings_${account}`, JSON.stringify(updated))\n      }\n    }\n  }, [isDarkMode, account])\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode\n    setIsDarkMode(newDarkMode)\n    \n    // Immediately update user-specific settings if account is connected\n    if (account) {\n      const userSettings = localStorage.getItem(`userSettings_${account}`)\n      if (userSettings) {\n        const parsed = JSON.parse(userSettings)\n        const updated = { ...parsed, darkMode: newDarkMode }\n        localStorage.setItem(`userSettings_${account}`, JSON.stringify(updated))\n      } else {\n        // Create initial user settings if they don't exist\n        const initialSettings = {\n          emailNotifications: true,\n          priceAlerts: true,\n          marketingEmails: false,\n          darkMode: newDarkMode,\n          language: 'en',\n          currency: 'WAX'\n        }\n        localStorage.setItem(`userSettings_${account}`, JSON.stringify(initialSettings))\n      }\n    }\n  }\n\n  // Cart count effect\n  useEffect(() => {\n    const updateCartCount = () => {\n      setCartCount(cartService.getCartCount())\n    }\n\n    // Initial count\n    updateCartCount()\n\n    // Listen for cart changes\n    cartService.addListener(updateCartCount)\n    return () => cartService.removeListener(updateCartCount)\n  }, []) // Empty dependency array is correct here - we only want to set up listeners once\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen)\n  }\n\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false)\n  }\n\n  // Handle wallet dropdown\n  const toggleWalletDropdown = () => {\n    setIsWalletDropdownOpen(!isWalletDropdownOpen)\n    \n    // Refresh balance if dropdown is opening and it's been more than 30 seconds\n    if (!isWalletDropdownOpen && isConnected && account) {\n      const now = Date.now()\n      if (now - lastBalanceUpdate > 30000) { // 30 seconds\n        fetchWaxBalance()\n      }\n    }\n  }\n\n  const closeWalletDropdown = () => {\n    setIsWalletDropdownOpen(false)\n  }\n\n  // Fetch WAX balance using shared balance service\n  const fetchWaxBalance = useCallback(async (forceRefresh: boolean = false) => {\n    if (!account || !isConnected) return\n    \n    try {\n      const balance = await balanceService.getWaxBalance(account, forceRefresh)\n      setWaxBalance(balance)\n      setLastBalanceUpdate(Date.now())\n    } catch (error) {\n      log.error('Failed to fetch WAX balance', 'Navigation', error as Error)\n    }\n  }, [account, isConnected])\n\n  // Check for user badges using badge service\n  const checkUserBadges = useCallback(async () => {\n    if (!account || !isConnected) return\n    \n    try {\n      const badgeResult = await badgeService.checkUserBadges(account)\n      setUserBadges(badgeResult.badges)\n    } catch (error) {\n      log.error('Failed to check user badges', 'Navigation', error as Error)\n    }\n  }, [account, isConnected])\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (walletDropdownRef.current && !walletDropdownRef.current.contains(event.target as Node)) {\n        closeWalletDropdown()\n      }\n      if (moreDropdownRef.current && !moreDropdownRef.current.contains(event.target as Node)) {\n        setIsMoreDropdownOpen(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [])\n\n  // Fetch balance and badges when connected\n  useEffect(() => {\n    if (isConnected && account) {\n      fetchWaxBalance()\n      checkUserBadges()\n    } else {\n      setWaxBalance('0.0000')\n      setUserBadges([])\n    }\n  }, [isConnected, account, fetchWaxBalance, checkUserBadges])\n\n\n\n  return (\n    <>\n      {/* Skip Links for Accessibility */}\n      <a href=\"#main-content\" className=\"a11y-skip-link\">\n        Skip to main content\n      </a>\n      <a href=\"#navigation\" className=\"a11y-skip-link\">\n        Skip to navigation\n      </a>\n      \n      <nav \n        className={`navbar ${isScrolled ? 'scrolled' : ''}`}\n        role=\"navigation\"\n        aria-label=\"Main navigation\"\n        id=\"navigation\"\n      >\n        <div className=\"navbar-container\">\n          {/* Logo */}\n          <Link \n            to=\"/marketplace\" \n            className=\"navbar-logo\"\n            aria-label=\"PxMarket - Go to marketplace home\"\n          >\n            <img \n              src=\"https://pixeljourney.xyz/img/logo.png\" \n              alt=\"PxMarket logo\" \n              className=\"logo-image\"\n            />\n            <span className=\"logo-text\">PxMarket</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n            <div className=\"navbar-nav\" role=\"menubar\" aria-label=\"Main menu\">\n              <Link \n                 to=\"/rwax\"\n                 className={`nav-link ${currentPage === 'rwax' ? 'active' : ''}`}\n                 role=\"menuitem\"\n                 aria-current={currentPage === 'rwax' ? 'page' : undefined}\n               >\n                 RWAX\n               </Link>\n              <Link \n                 to=\"/collections\"\n                 className={`nav-link ${currentPage === 'collections' ? 'active' : ''}`}\n                 role=\"menuitem\"\n                 aria-current={currentPage === 'collections' ? 'page' : undefined}\n               >\n                 Collections\n               </Link>\n            {/* More Dropdown */}\n            <div className=\"nav-dropdown\" ref={moreDropdownRef}>\n              <button \n                className={`nav-link dropdown-toggle ${isMoreDropdownOpen ? 'active' : ''}`}\n                onClick={() => setIsMoreDropdownOpen(!isMoreDropdownOpen)}\n                aria-expanded={isMoreDropdownOpen}\n                aria-haspopup=\"true\"\n              >\n                More\n                <svg className=\"dropdown-arrow\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {isMoreDropdownOpen && (\n                <div className=\"dropdown-menu\" role=\"menu\">\n                  <div className=\"dropdown-section\">\n                    <h4 className=\"dropdown-section-title\">Marketplace</h4>\n                    <Link \n                      to=\"/auctions\"\n                      className={`dropdown-item ${currentPage === 'auctions' ? 'active' : ''}`}\n                      role=\"menuitem\"\n                      onClick={() => setIsMoreDropdownOpen(false)}\n                    >\n                      Auctions\n                    </Link>\n                    <Link \n                      to=\"/activity\"\n                      className={`dropdown-item ${currentPage === 'activity' ? 'active' : ''}`}\n                      role=\"menuitem\"\n                      onClick={() => setIsMoreDropdownOpen(false)}\n                    >\n                      Activity\n                    </Link>\n                  </div>\n                  \n                  <div className=\"dropdown-section\">\n                    <h4 className=\"dropdown-section-title\">Tools & Features</h4>\n                    <Link \n                      to=\"/pxcrafting\"\n                      className={`dropdown-item ${currentPage === 'pxcrafting' ? 'active' : ''}`}\n                      role=\"menuitem\"\n                      onClick={() => setIsMoreDropdownOpen(false)}\n                    >\n                      PxCraft\n                    </Link>\n                    <Link \n                      to=\"/pxswap\"\n                      className={`dropdown-item ${currentPage === 'pxswap' ? 'active' : ''}`}\n                      role=\"menuitem\"\n                      onClick={() => setIsMoreDropdownOpen(false)}\n                    >\n                      PxSwap\n                    </Link>\n                    <Link \n                      to=\"/journeymap\"\n                      className={`dropdown-item ${currentPage === 'journeymap' ? 'active' : ''}`}\n                      role=\"menuitem\"\n                      onClick={() => setIsMoreDropdownOpen(false)}\n                    >\n                      JourneyMap\n                    </Link>\n                    <Link \n                      to=\"/staking\"\n                      className={`dropdown-item ${currentPage === 'pxstaking' ? 'active' : ''}`}\n                      role=\"menuitem\"\n                      onClick={() => setIsMoreDropdownOpen(false)}\n                    >\n                      PxStaking\n                    </Link>\n                  </div>\n                  \n                  <div className=\"dropdown-section social-section\">\n                    <h4 className=\"dropdown-section-title\">Community</h4>\n                    <a \n                      href=\"http://discord.gg/pixel-journey-1130670500776005734\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"dropdown-item nav-social-link\"\n                      role=\"menuitem\"\n                    >\n                      <svg className=\"social-icon\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z\"/>\n                      </svg>\n                      Join Discord\n                    </a>\n                    <a \n                      href=\"https://x.com/PxJourney\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"dropdown-item nav-social-link\"\n                      role=\"menuitem\"\n                    >\n                      <svg className=\"social-icon\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"/>\n                      </svg>\n                      Follow on X\n                    </a>\n                  </div>\n                </div>\n              )}\n            </div>\n            <Link \n              to=\"/learn\"\n              className={`nav-link ${currentPage === 'learn' ? 'active' : ''}`}\n              role=\"menuitem\"\n              aria-current={currentPage === 'learn' ? 'page' : undefined}\n            >\n              Learn\n            </Link>\n\n            <Link \n              to=\"/rewards\"\n              className={`nav-link ${currentPage === 'rewards' ? 'active' : ''}`}\n              role=\"menuitem\"\n              aria-current={currentPage === 'rewards' ? 'page' : undefined}\n            >\n              Rewards\n            </Link>\n          </div>\n\n          {/* Actions */}\n          <div className=\"navbar-actions\">\n            {/* Accessibility Settings Button */}\n            <button \n              onClick={() => setIsAccessibilitySettingsOpen(true)}\n              className=\"accessibility-btn\"\n              aria-label=\"Open accessibility settings\"\n              title=\"Accessibility Settings\"\n            >\n              <svg className=\"accessibility-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z\" />\n              </svg>\n            </button>\n\n            {/* Shopping Cart Button - Only show when logged in and cart has items */}\n            {isConnected && cartCount > 0 && (\n              <button \n                onClick={() => setIsCartOpen(true)}\n                className=\"cart-btn\"\n                aria-label={`Open Shopping Cart (${cartCount} items)`}\n                aria-describedby=\"cart-count\"\n              >\n                <svg className=\"cart-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                  <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                  <path d=\"m1 1 4 4 2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                </svg>\n                <span className=\"cart-badge\" id=\"cart-count\" aria-label={`${cartCount} items in cart`}>{cartCount}</span>\n                <span className=\"cart-text\">Cart</span>\n              </button>\n            )}\n\n\n\n            {/* Wallet Button */}\n            <div className=\"wallet-container\" ref={walletDropdownRef}>\n              <button \n                className={`wallet-btn ${isConnected ? 'connected' : ''}`}\n                onClick={isConnected ? toggleWalletDropdown : login}\n                disabled={isLoading}\n                aria-label={isConnected ? `Wallet connected: ${account}. Click to open wallet menu` : 'Connect wallet'}\n                aria-expanded={isConnected && isWalletDropdownOpen}\n                aria-haspopup=\"menu\"\n              >\n                {isLoading ? (\n                  <span className=\"loading-spinner\">⟳</span>\n                ) : isConnected ? (\n                  <>\n                    <svg className=\"wallet-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n                    </svg>\n                    {account || 'Connected'}\n                  </>\n                ) : (\n                  'Connect'\n                )}\n              </button>\n              \n              {/* Wallet Dropdown */}\n              {isConnected && isWalletDropdownOpen && (\n                <div \n                  className=\"wallet-dropdown\" \n                  role=\"menu\" \n                  aria-label=\"Wallet menu\"\n                  onKeyDown={(e) => {\n                    if (e.key === 'Escape') {\n                      closeWalletDropdown()\n                      accessibilityService.announceToScreenReader('Wallet menu closed')\n                    }\n                  }}\n                >\n                  <div className=\"wallet-dropdown-header\" role=\"group\" aria-label=\"Wallet information\">\n                    <div className=\"wallet-account\" aria-label={`Wallet account: ${account}`}>{account}</div>\n                  </div>\n                  \n                  {/* Inventory Button */}\n                  <Link \n                    to=\"/inventory\"\n                    className=\"wallet-inventory-btn\"\n                    aria-label=\"Open Inventory\"\n                    onClick={() => setIsWalletDropdownOpen(false)}\n                    role=\"menuitem\"\n                  >\n                    <svg className=\"inventory-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                      <path d=\"M9 9h6v6H9z\"></path>\n                    </svg>\n                    <span>My Inventory</span>\n                  </Link>\n                  \n                  {/* Profile Button */}\n                  <Link \n                    to=\"/profile\"\n                    className=\"wallet-inventory-btn\"\n                    aria-label=\"View Profile\"\n                    onClick={() => setIsWalletDropdownOpen(false)}\n                    role=\"menuitem\"\n                  >\n                    <svg className=\"inventory-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                    <span>My Profile</span>\n                  </Link>\n                  \n\n                  \n                  {/* Watchlist Button */}\n                  <Link \n                    to=\"/watchlist\"\n                    className=\"wallet-inventory-btn\"\n                    aria-label=\"View Watchlist\"\n                    onClick={() => setIsWalletDropdownOpen(false)}\n                    role=\"menuitem\"\n                  >\n                    <svg className=\"inventory-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                      <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>\n                    </svg>\n                    <span>My Watchlist</span>\n                  </Link>\n                  \n                  <div className=\"wallet-balance\" role=\"group\" aria-label=\"Wallet balance information\">\n                    <span className=\"balance-label\">WAX Balance:</span>\n                    <span className=\"nav-balance-amount\" aria-label={`Balance: ${waxBalance} WAX`}>{waxBalance}</span>\n                  </div>\n                  \n                  {/* Badge Category - Collapsible */}\n                  <div className=\"wallet-badges\" role=\"group\" aria-label=\"User badges\">\n                    <div \n                      className=\"badges-header\"\n                      onClick={() => setIsBadgeCategoryExpanded(!isBadgeCategoryExpanded)}\n                      style={{ cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: '8px 0' }}\n                    >\n                      <span className=\"badges-label\">PxBadges:</span>\n                      <span style={{ fontSize: '12px', color: '#888' }}>\n                        {isBadgeCategoryExpanded ? '▼' : '▶'}\n                      </span>\n                    </div>\n                    \n                    {!isBadgeCategoryExpanded ? (\n                      // Collapsed view - show earned badge icons only\n                      <div className=\"badges-collapsed\" style={{ display: 'flex', gap: '4px', flexWrap: 'wrap' }}>\n                        {badgeService.getAllBadgeDefinitions()\n                          .filter((badgeDef) => userBadges.some(badge => badge.id === badgeDef.id))\n                          .map((badgeDef) => {\n                            return (\n                              <span \n                                key={badgeDef.id}\n                                className=\"badge-icon earned\"\n                                style={{\n                                  fontSize: '16px',\n                                  padding: '4px',\n                                  borderRadius: '4px',\n                                  background: `${badgeDef.color}20`,\n                                  color: badgeDef.color,\n                                  border: `1px solid ${badgeDef.borderColor}`,\n                                  cursor: 'pointer'\n                                }}\n                                title={`${badgeDef.name}: ${badgeDef.description} ✓ Earned`}\n                              >\n                                {badgeDef.icon}\n                              </span>\n                            )\n                          })}\n                        {userBadges.length === 0 && (\n                          <span style={{ fontSize: '12px', color: '#888', fontStyle: 'italic' }}>\n                            No badges earned yet\n                          </span>\n                        )}\n                      </div>\n                    ) : (\n                      // Expanded view - show full badge details with buy buttons\n                      <div className=\"badges-expanded\" style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n                        {badgeService.getAllBadgeDefinitions().map((badgeDef) => {\n                          const isEarned = userBadges.some(badge => badge.id === badgeDef.id)\n                          return (\n                            <div \n                              key={badgeDef.id}\n                              className={`badge-item ${isEarned ? 'earned' : 'unearned'}`}\n                              style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'space-between',\n                                padding: '8px',\n                                borderRadius: '6px',\n                                background: isEarned ? `${badgeDef.color}15` : 'rgba(128, 128, 128, 0.05)',\n                                border: `1px solid ${isEarned ? badgeDef.borderColor : 'rgba(128, 128, 128, 0.1)'}`\n                              }}\n                            >\n                              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                                <span style={{ fontSize: '16px', opacity: isEarned ? 1 : 0.5 }}>\n                                  {badgeDef.icon}\n                                </span>\n                                <div>\n                                  <div style={{ fontSize: '12px', fontWeight: '500', color: isEarned ? badgeDef.color : '#666' }}>\n                                    {badgeDef.name} {isEarned && '✓'}\n                                  </div>\n                                  <div style={{ fontSize: '10px', color: '#888' }}>\n                                    {badgeDef.requirements}\n                                  </div>\n                                </div>\n                              </div>\n                              {!isEarned && (\n                                <button\n                                  onClick={() => {\n                                    if (badgeDef.id === 'pxj-whale' || badgeDef.id === 'pxj-holder') {\n                                      window.open('https://waxonedge.app/swap/WAX_eosio.token/PXJ_pixeljourney', '_blank')\n                                    } else if (badgeDef.id === 'pixal-pfp') {\n                                      window.location.href = '/marketplace?collection=pixeljourney&template=781515'\n                                    } else if (badgeDef.id === 'waxrock') {\n                                      window.location.href = '/marketplace?category=waxrock'\n                                    } else if (badgeDef.id === 'ingredients') {\n                                      window.location.href = '/marketplace?category=ingredients'\n                                    } else {\n                                      window.location.href = '/marketplace?collection=pixeljourney'\n                                    }\n                                  }}\n                                  style={{\n                                    fontSize: '10px',\n                                    padding: '4px 8px',\n                                    background: badgeDef.color,\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer',\n                                    transition: 'opacity 0.2s'\n                                  }}\n                                  onMouseEnter={(e) => (e.target as HTMLButtonElement).style.opacity = '0.8'}\n                                   onMouseLeave={(e) => (e.target as HTMLButtonElement).style.opacity = '1'}\n                                >\n                                  Buy\n                                </button>\n                              )}\n                            </div>\n                          )\n                        })}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Display Options - Collapsible */}\n                  <div className=\"wallet-settings\">\n                    <div className=\"settings-menu\">\n                      <div className=\"settings-section\">\n                        <div \n                          className=\"settings-header\"\n                          onClick={() => setIsDisplayOptionsExpanded(!isDisplayOptionsExpanded)}\n                          style={{ cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: '8px 0' }}\n                        >\n                          <h4>Display Options</h4>\n                          <span style={{ fontSize: '12px', color: '#888' }}>\n                            {isDisplayOptionsExpanded ? '▼' : '▶'}\n                          </span>\n                        </div>\n                        \n                        {!isDisplayOptionsExpanded ? (\n                          // Collapsed view - only show dark mode toggle\n                          <div className=\"theme-toggle-option\" style={{ marginTop: '8px' }}>\n                            <span>Dark Mode</span>\n                            <button \n                              className={`theme-toggle ${isDarkMode ? 'active' : ''}`}\n                              onClick={toggleDarkMode}\n                            >\n                              <div className=\"toggle-slider\">\n                                <svg className=\"sun-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                                  <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                                  <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                                  <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                                  <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                                  <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                                  <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                                  <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                                  <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                                  <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                                </svg>\n                                <svg className=\"moon-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                                  <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                                </svg>\n                              </div>\n                            </button>\n                          </div>\n                        ) : (\n                          // Expanded view - show all options\n                          <div className=\"filter-options\">\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.showOtherCollections}\n                              onChange={(e) => updateSetting('showOtherCollections', e.target.checked)}\n                            />\n                            <span>Show other collections</span>\n                          </label>\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.showWhitelistedOnly}\n                              onChange={(e) => updateSetting('showWhitelistedOnly', e.target.checked)}\n                            />\n                            <span>Displays only whitelisted collections in overviews</span>\n                          </label>\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.enableAnimatedNFTs}\n                              onChange={(e) => updateSetting('enableAnimatedNFTs', e.target.checked)}\n                            />\n                            <span>Enables animated NFTs to play in overviews</span>\n                          </label>\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.showExplicitContent}\n                              onChange={(e) => updateSetting('showExplicitContent', e.target.checked)}\n                            />\n                            <span>Enables explicit content to be shown in overviews</span>\n                          </label>\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.showChatButton}\n                              onChange={(e) => updateSetting('showChatButton', e.target.checked)}\n                            />\n                            <span>Show chat button</span>\n                          </label>\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.blockNSFW}\n                              onChange={(e) => updateSetting('blockNSFW', e.target.checked)}\n                            />\n                            <span>Blocks NSFW collections from the platform</span>\n                          </label>\n                          <label className=\"filter-option\">\n                            <input \n                              type=\"checkbox\" \n                              checked={settings.blockAI}\n                              onChange={(e) => updateSetting('blockAI', e.target.checked)}\n                            />\n                            <span>Blocks AI collections from the platform</span>\n                          </label>\n                          \n                          <div className=\"theme-toggle-option\">\n                            <span>Dark Mode</span>\n                            <button \n                              className={`theme-toggle ${isDarkMode ? 'active' : ''}`}\n                              onClick={toggleDarkMode}\n                            >\n                              <div className=\"toggle-slider\">\n                                <svg className=\"sun-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                                  <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                                  <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                                  <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                                  <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                                  <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                                  <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                                  <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                                  <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                                  <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                                </svg>\n                                <svg className=\"moon-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                                  <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                                </svg>\n                              </div>\n                               </button>\n                             </div>\n                             <label className=\"filter-option\">\n                               <input \n                                 type=\"checkbox\" \n                                 checked={settings.showPricesInUSD}\n                                 onChange={(e) => updateSetting('showPricesInUSD', e.target.checked)}\n                               />\n                               <span>Show Prices in USD</span>\n                             </label>\n                             \n                             {/* Currency Selection */}\n                             <div className=\"currency-selection\">\n                               <label>Currency Comparison:</label>\n                               <select \n                                 value={settings.selectedCurrency}\n                                 onChange={(e) => updateSetting('selectedCurrency', e.target.value)}\n                                 className=\"currency-select\"\n                               >\n                                 <option value=\"USD\">USD - US Dollar</option>\n                                 <option value=\"EUR\">EUR - Euro</option>\n                                 <option value=\"DKK\">DKK - Danish Krone</option>\n                                 <option value=\"AED\">AED - UAE Dirham</option>\n                                 <option value=\"INR\">INR - Indian Rupee</option>\n                                 <option value=\"RUB\">RUB - Russian Ruble</option>\n                                 <option value=\"CNY\">CNY - Chinese Yuan</option>\n                                 <option value=\"JPY\">JPY - Japanese Yen</option>\n                                 <option value=\"BTC\">BTC - Bitcoin</option>\n                                 <option value=\"ETH\">ETH - Ethereum</option>\n                               </select>\n                             </div>\n                             \n                             <label className=\"filter-option\">\n                               <input \n                                 type=\"checkbox\" \n                                 checked={settings.showRarityRankings}\n                                 onChange={(e) => updateSetting('showRarityRankings', e.target.checked)}\n                               />\n                               <span>Show Rarity Rankings</span>\n                             </label>\n                           </div>\n                         )}\n                       </div>\n                     </div>\n                   </div>\n                  \n                  <button className=\"logout-btn\" onClick={logout} role=\"menuitem\" aria-label=\"Logout from wallet\">\n                    <span className=\"logout-icon\" aria-hidden=\"true\">🚪</span>\n                    Logout\n                  </button>\n                </div>\n              )}\n            </div>\n            {/* Mobile Menu Button */}\n            <button \n              onClick={toggleMobileMenu}\n              className={`mobile-menu-btn ${isMobileMenuOpen ? 'active' : ''}`}\n              aria-label={isMobileMenuOpen ? 'Close Menu' : 'Open Menu'}\n              aria-expanded={isMobileMenuOpen}\n              aria-controls=\"mobile-menu\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault()\n                  toggleMobileMenu()\n                  accessibilityService.announceToScreenReader(\n                    isMobileMenuOpen ? 'Mobile menu closed' : 'Mobile menu opened'\n                  )\n                }\n              }}\n            >\n              <div className=\"hamburger\" aria-hidden=\"true\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Menu Overlay */}\n      <div \n        className={`mobile-menu ${isMobileMenuOpen ? 'open' : ''}`}\n        id=\"mobile-menu\"\n        role=\"navigation\"\n        aria-expanded={isMobileMenuOpen}\n        aria-label=\"Mobile navigation menu\"\n        onKeyDown={(e) => {\n          if (e.key === 'Escape') {\n            closeMobileMenu()\n            accessibilityService.announceToScreenReader('Mobile menu closed')\n          }\n        }}\n      >\n\n        <nav className=\"mobile-nav-links\" role=\"navigation\" aria-label=\"Mobile menu links\">\n          {/* Main Navigation */}\n          <div className=\"mobile-nav-section\">\n            <h3 className=\"mobile-nav-section-title\">Main</h3>\n            <div className=\"mobile-nav-grid\">\n              <Link \n                to=\"/\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'marketplace' || currentPage === '' ? 'active' : ''}`}\n              >\n                Marketplace\n              </Link>\n              <Link \n                to=\"/rwax\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'rwax' ? 'active' : ''}`}\n              >\n                RWAX\n              </Link>\n              <Link \n                to=\"/collections\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'collections' ? 'active' : ''}`}\n              >\n                Collections\n              </Link>\n              <Link \n                to=\"/learn\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'learn' ? 'active' : ''}`}\n              >\n                Learn\n              </Link>\n              <Link \n                to=\"/rewards\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'rewards' ? 'active' : ''}`}\n              >\n                Rewards\n              </Link>\n            </div>\n          </div>\n\n          {/* Trading & Tools */}\n          <div className=\"mobile-nav-section\">\n            <h3 className=\"mobile-nav-section-title\">Trading & Tools</h3>\n            <div className=\"mobile-nav-grid\">\n              <Link \n                to=\"/auctions\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'auctions' ? 'active' : ''}`}\n              >\n                Auctions\n              </Link>\n              <Link \n                to=\"/activity\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'activity' ? 'active' : ''}`}\n              >\n                Activity\n              </Link>\n              <Link \n                to=\"/pxcrafting\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'pxcrafting' ? 'active' : ''}`}\n              >\n                PxCraft\n              </Link>\n              <Link \n                to=\"/pxswap\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'pxswap' ? 'active' : ''}`}\n              >\n                PxSwap\n              </Link>\n              <Link \n                to=\"/journeymap\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'journeymap' ? 'active' : ''}`}\n              >\n                JourneyMap\n              </Link>\n              <Link \n                to=\"/staking\"\n                onClick={closeMobileMenu}\n                className={`mobile-nav-link ${currentPage === 'pxstaking' ? 'active' : ''}`}\n              >\n                PxStaking\n              </Link>\n            </div>\n          </div>\n\n          {/* Social Links */}\n          <div className=\"mobile-nav-section\">\n            <h3 className=\"mobile-nav-section-title\">Community</h3>\n            <div className=\"mobile-social-section\">\n              <a \n                href=\"http://discord.gg/pixel-journey-1130670500776005734\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mobile-social-link\"\n                onClick={closeMobileMenu}\n              >\n                <svg className=\"social-icon\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z\"/>\n                </svg>\n                Discord\n              </a>\n              <a \n                href=\"https://x.com/PxJourney\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mobile-social-link\"\n                onClick={closeMobileMenu}\n              >\n                <svg className=\"social-icon\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"/>\n                </svg>\n                X (Twitter)\n              </a>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"mobile-menu-actions\">\n          {/* Mobile Cart Button - Only show when logged in and cart has items */}\n          {isConnected && cartCount > 0 && (\n            <button \n              onClick={() => {\n                setIsCartOpen(true)\n                closeMobileMenu()\n              }}\n              className=\"mobile-cart-btn\"\n              aria-label={`Open Shopping Cart (${cartCount} items)`}\n            >\n              <svg className=\"cart-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                <path d=\"m1 1 4 4 2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n              </svg>\n              Shopping Cart ({cartCount})\n            </button>\n          )}\n\n          {isConnected && (\n            <>\n              <Link \n                to=\"/inventory\"\n                onClick={closeMobileMenu}\n                className=\"mobile-inventory-btn\"\n              >\n                <svg className=\"inventory-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                </svg>\n                My Inventory\n              </Link>\n              \n              <Link \n                to=\"/profile\"\n                onClick={closeMobileMenu}\n                className=\"mobile-inventory-btn\"\n              >\n                <svg className=\"inventory-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n                My Profile\n              </Link>\n              \n\n              \n              <Link \n                to=\"/watchlist\"\n                onClick={closeMobileMenu}\n                className=\"mobile-inventory-btn\"\n              >\n                <svg className=\"inventory-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>\n                </svg>\n                My Watchlist\n              </Link>\n            </>\n          )}\n          \n          {/* Login/Logout Button */}\n          <div className=\"mobile-auth-section\">\n            {isConnected ? (\n              <button \n                onClick={() => {\n                  logout()\n                  closeMobileMenu()\n                  accessibilityService.announceToScreenReader('Logged out successfully')\n                }}\n                className=\"mobile-auth-btn logout-btn\"\n              >\n                <svg className=\"auth-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n                Logout\n              </button>\n            ) : (\n              <button \n                onClick={() => {\n                  login()\n                  closeMobileMenu()\n                  accessibilityService.announceToScreenReader('Login initiated')\n                }}\n                className=\"mobile-auth-btn login-btn\"\n              >\n                <svg className=\"auth-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\" />\n                </svg>\n                Login\n              </button>\n            )}\n          </div>\n\n        </div>\n      </div>\n\n      {/* Mobile Menu Backdrop */}\n      {isMobileMenuOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-[998]\" \n          onClick={closeMobileMenu}\n        />\n      )}\n\n      {/* Shopping Cart Modal */}\n      <ShoppingCart \n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n      />\n      \n      {/* Accessibility Settings Modal */}\n      <AccessibilitySettings \n        isOpen={isAccessibilitySettingsOpen}\n        onClose={() => setIsAccessibilitySettingsOpen(false)}\n      />\n    </>\n  )\n}\n\nexport default Navigation","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './LandingPage.css';\n\nconst LandingPage: React.FC = () => {\n  return (\n    <div className=\"landing-page\">\n      <div className=\"hero-section\">\n        <div className=\"hero-content\">\n          <h1 className=\"hero-title\">\n            Welcome to <span className=\"brand-highlight\">PxMarket</span>\n          </h1>\n          <p className=\"hero-subtitle\">\n            by Pixel Journey\n          </p>\n          <p className=\"hero-description\">\n            Discover, trade, and collect unique digital assets in the ultimate NFT marketplace experience.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"cta-section\">\n        <div className=\"cta-container\">\n          <div className=\"cta-card marketplace-card\">\n            <div className=\"cta-icon\">\n              🏪\n            </div>\n            <h2 className=\"cta-title\">Explore Marketplace</h2>\n            <p className=\"cta-description\">\n              Browse thousands of unique NFTs, discover rare collectibles, and find your next digital (pixel?!) treasure.\n            </p>\n            <Link to=\"/marketplace\" className=\"cta-button primary\">\n              Enter Marketplace\n            </Link>\n          </div>\n\n          <div className=\"cta-card rwax-card\">\n            <div className=\"cta-icon\">\n              🎭\n            </div>\n            <h2 className=\"cta-title\">Get Your Pixal PFP via R-WAX</h2>\n            <p className=\"cta-description\">\n              Pick up your unique pixel-perfect Pixal Profile Picture using WPIXAL on the R-WAX Markets and join the Pixel Journey community!\n            </p>\n            <Link to=\"/rwax\" className=\"cta-button secondary\">\n              Browse RWAX Pixals\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"features-section\">\n        <div className=\"features-container\">\n          <div className=\"feature-item\">\n            <div className=\"feature-icon\">⚡</div>\n            <h3>Lightning Fast</h3>\n            <p>Instant transactions on the WAX blockchain</p>\n          </div>\n          <div className=\"feature-item\">\n            <div className=\"feature-icon\">🔒</div>\n            <h3>Secure Trading</h3>\n            <p>Safe and transparent blockchain transactions</p>\n          </div>\n          <div className=\"feature-item\">\n            <div className=\"feature-icon\">🌟</div>\n            <h3>Premium Quality</h3>\n            <p>Curated collection of high-quality digital assets</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;","// Push notification service for managing subscriptions and notifications\nimport { ErrorMessageService } from './errorMessageService'\nimport { monitoringService } from './monitoringService'\nimport { log } from './loggingService'\n\ninterface NotificationPayload {\n  title: string\n  body: string\n  icon?: string\n  badge?: string\n  tag?: string\n  data?: Record<string, unknown>\n  requireInteraction?: boolean\n  silent?: boolean\n  timestamp?: number\n}\n\ninterface PushSubscriptionData {\n  endpoint: string\n  keys: {\n    p256dh: string\n    auth: string\n  }\n  userId?: string\n  subscriptionTime: number\n}\n\ninterface NotificationPermissionState {\n  permission: NotificationPermission\n  supported: boolean\n  serviceWorkerReady: boolean\n  subscribed: boolean\n}\n\ninterface NotificationPreferences {\n  priceAlerts: boolean\n  auctionUpdates: boolean\n  newListings: boolean\n  marketTrends: boolean\n  systemNotifications: boolean\n}\n\nclass PushNotificationService {\n  private serviceWorkerRegistration: ServiceWorkerRegistration | null = null\n  private pushSubscription: PushSubscription | null = null\n  private vapidPublicKey: string = '' // Should be set from environment or config\n  private isInitialized: boolean = false\n  private permissionState: NotificationPermissionState = {\n    permission: 'default',\n    supported: false,\n    serviceWorkerReady: false,\n    subscribed: false\n  }\n\n  constructor() {\n    this.checkSupport()\n  }\n\n  private checkSupport(): void {\n    this.permissionState.supported = \n      'serviceWorker' in navigator &&\n      'PushManager' in window &&\n      'Notification' in window\n\n    if (this.permissionState.supported) {\n      this.permissionState.permission = Notification.permission\n    }\n  }\n\n  async initialize(): Promise<boolean> {\n    if (this.isInitialized) {\n      return true\n    }\n\n    try {\n      if (!this.permissionState.supported) {\n        log.warn('Push notifications not supported in this browser')\n        return false\n      }\n\n      // Register service worker\n      await this.registerServiceWorker()\n      \n      // Check existing subscription\n      await this.checkExistingSubscription()\n      \n      this.isInitialized = true\n      \n      monitoringService.trackEvent('push_notification_service_initialized', {\n        supported: this.permissionState.supported,\n        permission: this.permissionState.permission,\n        subscribed: this.permissionState.subscribed\n      })\n      \n      return true\n    } catch (error) {\n      log.error('Failed to initialize push notification service', 'PushNotificationService.initialize', error as Error)\n      monitoringService.reportError(error as Error, 'push_notification_init_error')\n      return false\n    }\n  }\n\n  private async registerServiceWorker(): Promise<void> {\n    try {\n      // Detect environment based on hostname and protocol\n      const isDevelopment = location.hostname === 'localhost' || location.hostname === '127.0.0.1' || location.protocol === 'http:'\n      const swFile = isDevelopment ? '/sw-dev.js' : '/sw.js'\n      \n      this.serviceWorkerRegistration = await navigator.serviceWorker.register(swFile, {\n        scope: '/'\n      })\n\n      // Wait for service worker to be ready\n      await navigator.serviceWorker.ready\n      this.permissionState.serviceWorkerReady = true\n\n      log.info(`Service Worker registered successfully: ${swFile}`)\n      \n      // Listen for service worker messages\n      navigator.serviceWorker.addEventListener('message', this.handleServiceWorkerMessage.bind(this))\n      \n    } catch (error) {\n      log.error('Failed to register service worker', 'PushNotificationService.registerServiceWorker', error as Error)\n      throw error\n    }\n  }\n\n  private handleServiceWorkerMessage(event: MessageEvent): void {\n    const { type, data } = event.data || {}\n    \n    switch (type) {\n      case 'NOTIFICATION_CLICKED':\n        monitoringService.trackEvent('notification_clicked', data)\n        break\n      case 'NOTIFICATION_CLOSED':\n        monitoringService.trackEvent('notification_closed', data)\n        break\n      default:\n        log.debug('Unknown service worker message:', type)\n    }\n  }\n\n  private async checkExistingSubscription(): Promise<void> {\n    if (!this.serviceWorkerRegistration) {\n      return\n    }\n\n    try {\n      this.pushSubscription = await this.serviceWorkerRegistration.pushManager.getSubscription()\n      this.permissionState.subscribed = !!this.pushSubscription\n      \n      if (this.pushSubscription) {\n        log.info('Existing push subscription found')\n        // Optionally validate subscription with server\n        await this.validateSubscription()\n      }\n    } catch (error) {\n      log.error('Failed to check existing subscription', 'PushNotificationService.checkExistingSubscription', error as Error)\n    }\n  }\n\n  async requestPermission(): Promise<NotificationPermission> {\n    if (!this.permissionState.supported) {\n      throw new Error('Push notifications not supported')\n    }\n\n    try {\n      const permission = await Notification.requestPermission()\n      this.permissionState.permission = permission\n      \n      monitoringService.trackEvent('notification_permission_requested', {\n        permission,\n        previousPermission: this.permissionState.permission\n      })\n      \n      return permission\n    } catch (error) {\n      ErrorMessageService.logError('PushNotificationService.requestPermission', error as Error)\n      monitoringService.reportError(error as Error, 'notification_permission_error')\n      throw error\n    }\n  }\n\n  async subscribe(userId?: string): Promise<PushSubscription | null> {\n    if (!this.isInitialized) {\n      await this.initialize()\n    }\n\n    if (!this.serviceWorkerRegistration) {\n      throw new Error('Service worker not registered')\n    }\n\n    if (this.permissionState.permission !== 'granted') {\n      const permission = await this.requestPermission()\n      if (permission !== 'granted') {\n        throw new Error('Notification permission denied')\n      }\n    }\n\n    try {\n      // Unsubscribe existing subscription if any\n      if (this.pushSubscription) {\n        await this.unsubscribe()\n      }\n\n      // Create new subscription\n      const subscribeOptions: PushSubscriptionOptionsInit = {\n        userVisibleOnly: true,\n        applicationServerKey: this.vapidPublicKey ? this.urlBase64ToUint8Array(this.vapidPublicKey) : undefined\n      }\n\n      this.pushSubscription = await this.serviceWorkerRegistration.pushManager.subscribe(subscribeOptions)\n      this.permissionState.subscribed = true\n\n      // Store subscription data\n      const subscriptionData: PushSubscriptionData = {\n        endpoint: this.pushSubscription.endpoint,\n        keys: {\n          p256dh: this.arrayBufferToBase64(this.pushSubscription.getKey('p256dh')!),\n          auth: this.arrayBufferToBase64(this.pushSubscription.getKey('auth')!)\n        },\n        userId,\n        subscriptionTime: Date.now()\n      }\n\n      // Store in localStorage for persistence\n      localStorage.setItem('push_subscription', JSON.stringify(subscriptionData))\n\n      // Send subscription to server (implement based on your backend)\n      await this.sendSubscriptionToServer(subscriptionData)\n\n      monitoringService.trackEvent('push_notification_subscribed', {\n        userId,\n        endpoint: this.pushSubscription.endpoint\n      })\n\n      log.info('Push notification subscription successful')\n      return this.pushSubscription\n    } catch (error) {\n      log.error('Failed to subscribe to push notifications', 'PushNotificationService.subscribe', error as Error)\n      monitoringService.reportError(error as Error, 'push_subscription_error', { userId })\n      throw error\n    }\n  }\n\n  async unsubscribe(): Promise<boolean> {\n    if (!this.pushSubscription) {\n      return true\n    }\n\n    try {\n      const success = await this.pushSubscription.unsubscribe()\n      \n      if (success) {\n        this.pushSubscription = null\n        this.permissionState.subscribed = false\n        \n        // Remove from localStorage\n        localStorage.removeItem('push_subscription')\n        \n        // Notify server about unsubscription\n        await this.removeSubscriptionFromServer()\n        \n        monitoringService.trackEvent('push_notification_unsubscribed')\n        log.info('Push notification unsubscribed successfully')\n      }\n      \n      return success\n    } catch (error) {\n      ErrorMessageService.logError('PushNotificationService.unsubscribe', error as Error)\n      monitoringService.reportError(error as Error, 'push_unsubscription_error')\n      return false\n    }\n  }\n\n  async showLocalNotification(payload: NotificationPayload): Promise<void> {\n    if (!this.permissionState.supported || this.permissionState.permission !== 'granted') {\n      throw new Error('Notifications not available')\n    }\n\n    try {\n      const options: NotificationOptions = {\n        body: payload.body,\n        icon: payload.icon || '/logo.png',\n        badge: payload.badge || '/logo.png',\n        tag: payload.tag,\n        data: payload.data,\n        requireInteraction: payload.requireInteraction || false,\n        silent: payload.silent || false\n      }\n\n      const notification = new Notification(payload.title, options)\n      \n      // Track notification events\n      notification.onclick = () => {\n        monitoringService.trackEvent('local_notification_clicked', {\n          tag: payload.tag,\n          title: payload.title\n        })\n        notification.close()\n      }\n\n      notification.onclose = () => {\n        monitoringService.trackEvent('local_notification_closed', {\n          tag: payload.tag,\n          title: payload.title\n        })\n      }\n\n      monitoringService.trackEvent('local_notification_shown', {\n        tag: payload.tag,\n        title: payload.title\n      })\n      \n    } catch (error) {\n      log.error('Failed to show local notification', 'PushNotificationService.showLocalNotification', error as Error)\n      monitoringService.reportError(error as Error, 'local_notification_error', { title: payload.title })\n      throw error\n    }\n  }\n\n  // Utility methods\n  private urlBase64ToUint8Array(base64String: string): Uint8Array {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4)\n    const base64 = (base64String + padding)\n      .replace(/-/g, '+')\n      .replace(/_/g, '/')\n\n    const rawData = window.atob(base64)\n    const outputArray = new Uint8Array(rawData.length)\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i)\n    }\n    return outputArray\n  }\n\n  private arrayBufferToBase64(buffer: ArrayBuffer): string {\n    const bytes = new Uint8Array(buffer)\n    let binary = ''\n    for (let i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i])\n    }\n    return window.btoa(binary)\n  }\n\n  private getAuthToken(): string {\n    // Get authentication token from localStorage or session storage\n    return localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token') || ''\n  }\n\n  private getNotificationPreferences(): NotificationPreferences {\n    const stored = localStorage.getItem('notification_preferences')\n    if (stored) {\n      try {\n        return JSON.parse(stored)\n      } catch (error) {\n        log.warn('Failed to parse notification preferences:', 'pushNotificationService.getNotificationPreferences', error)\n      }\n    }\n    \n    // Return default preferences\n    return {\n      priceAlerts: true,\n      auctionUpdates: true,\n      newListings: false,\n      marketTrends: false,\n      systemNotifications: true\n    }\n  }\n\n  private async validateSubscription(): Promise<boolean> {\n    if (!this.pushSubscription) {\n      return false\n    }\n\n    try {\n      const subscriptionData = {\n        endpoint: this.pushSubscription.endpoint,\n        keys: {\n          p256dh: this.arrayBufferToBase64(this.pushSubscription.getKey('p256dh')!),\n          auth: this.arrayBufferToBase64(this.pushSubscription.getKey('auth')!)\n        }\n      }\n\n      const response = await fetch('/api/push/validate-subscription', {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.getAuthToken()}`\n        },\n        body: JSON.stringify({ subscription: subscriptionData })\n      })\n\n      if (!response.ok) {\n        throw new Error(`Validation failed: ${response.status} ${response.statusText}`)\n      }\n\n      const result = await response.json()\n      return result.valid === true\n    } catch (error) {\n      log.warn('Subscription validation failed:', 'pushNotificationService.validateSubscription', error as Error)\n      return false\n    }\n  }\n\n  private async sendSubscriptionToServer(subscriptionData: PushSubscriptionData): Promise<void> {\n    try {\n      const response = await fetch('/api/push/subscribe', {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.getAuthToken()}`\n        },\n        body: JSON.stringify({\n          ...subscriptionData,\n          userAgent: navigator.userAgent,\n          timestamp: Date.now(),\n          preferences: this.getNotificationPreferences()\n        })\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        throw new Error(`Failed to save subscription: ${response.status} ${response.statusText} - ${errorData.message || 'Unknown error'}`)\n      }\n\n      const result = await response.json()\n      log.info('Subscription successfully saved to server:', result.subscriptionId)\n      \n      // Store server subscription ID for future reference\n      localStorage.setItem('push_subscription_id', result.subscriptionId)\n      \n    } catch (error) {\n      log.error('Failed to send subscription to server:', 'pushNotificationService.sendSubscriptionToServer', error as Error, {\n        endpoint: subscriptionData.endpoint,\n        userId: subscriptionData.userId\n      })\n      // Re-throw to handle in calling function\n      throw error\n    }\n  }\n\n  private async removeSubscriptionFromServer(): Promise<void> {\n    try {\n      const subscriptionId = localStorage.getItem('push_subscription_id')\n      const subscriptionData = localStorage.getItem('push_subscription')\n      \n      if (!subscriptionId && !subscriptionData) {\n        log.info('No subscription to remove from server')\n        return\n      }\n\n      const response = await fetch('/api/push/unsubscribe', {\n        method: 'DELETE',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.getAuthToken()}`\n        },\n        body: JSON.stringify({\n          subscriptionId,\n          endpoint: this.pushSubscription?.endpoint,\n          timestamp: Date.now()\n        })\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        throw new Error(`Failed to remove subscription: ${response.status} ${response.statusText} - ${errorData.message || 'Unknown error'}`)\n      }\n\n      // Clean up local storage\n      localStorage.removeItem('push_subscription_id')\n      log.info('Subscription successfully removed from server')\n      \n    } catch (error) {\n      log.error('Failed to remove subscription from server:', 'pushNotificationService.removeSubscriptionFromServer', error as Error)\n      // Don't throw here to avoid breaking the unsubscription process\n    }\n  }\n\n  // Public API methods\n  getPermissionState(): NotificationPermissionState {\n    return { ...this.permissionState }\n  }\n\n  isSubscribed(): boolean {\n    return this.permissionState.subscribed\n  }\n\n  getSubscription(): PushSubscription | null {\n    return this.pushSubscription\n  }\n\n  setVapidKey(key: string): void {\n    this.vapidPublicKey = key\n  }\n\n  async testNotification(): Promise<void> {\n    await this.showLocalNotification({\n      title: 'PxMarket Test Notification',\n      body: 'Push notifications are working correctly!',\n      tag: 'test-notification',\n      data: { test: true }\n    })\n  }\n\n  // Integration with watchlist service for price alerts\n  async sendPriceAlert(assetName: string, currentPrice: string, targetPrice: string): Promise<void> {\n    await this.showLocalNotification({\n      title: 'Price Alert',\n      body: `${assetName} is now ${currentPrice} (target: ${targetPrice})`,\n      tag: 'price-alert',\n      icon: '/logo.png',\n      requireInteraction: true,\n      data: {\n        type: 'price_alert',\n        assetName,\n        currentPrice,\n        targetPrice\n      }\n    })\n  }\n\n  // Integration with cart service for transaction notifications\n  async sendTransactionNotification(type: 'success' | 'error', message: string, transactionId?: string): Promise<void> {\n    await this.showLocalNotification({\n      title: type === 'success' ? 'Transaction Successful' : 'Transaction Failed',\n      body: message,\n      tag: `transaction-${type}`,\n      icon: '/logo.png',\n      data: {\n        type: 'transaction',\n        status: type,\n        transactionId\n      }\n    })\n  }\n}\n\n// Export singleton instance\nexport const pushNotificationService = new PushNotificationService()\n\n// Export types\nexport type {\n  NotificationPayload,\n  PushSubscriptionData,\n  NotificationPermissionState,\n  NotificationPreferences\n}","import type { NFTAsset } from './api'\nimport { ErrorMessageService } from './errorMessageService'\nimport { pushNotificationService } from './pushNotificationService'\nimport { storageService } from './storageService'\nimport { log } from './loggingService'\n\ninterface WatchlistItem {\n  nft: NFTAsset\n  targetPrice?: number\n  alertType: 'below' | 'above' | 'any'\n  addedAt: number\n  lastPrice: number\n  priceChange?: number\n}\n\ninterface PriceAlert {\n  targetPrice: number\n  alertType: 'below' | 'above' | 'any'\n  enabled: boolean\n  lastTriggered?: number\n}\n\ninterface NotificationSettings {\n  browser: boolean\n  email: boolean\n  sound: boolean\n}\n\nclass WatchlistService {\n  private watchlist: WatchlistItem[] = []\n  private priceAlerts: Record<string, PriceAlert> = {}\n  private notifications: NotificationSettings = {\n    browser: true,\n    email: false,\n    sound: true\n  }\n  private listeners: ((watchlist: WatchlistItem[]) => void)[] = []\n  private priceCheckInterval: NodeJS.Timeout | null = null\n  private readonly STORAGE_KEY = 'pixeljourney_watchlist'\n  private readonly ALERTS_KEY = 'pixeljourney_price_alerts'\n  private readonly NOTIFICATIONS_KEY = 'pixeljourney_notifications'\n  \n  // Price caching to reduce API requests\n  private priceCache: Record<string, { price: number, timestamp: number }> = {}\n  private readonly CACHE_DURATION = 2 * 60 * 1000 // 2 minutes cache\n  \n  // Endpoint failure tracking\n  private endpointFailures: Record<string, { count: number, lastFailure: number, disabled: boolean }> = {}\n  private readonly MAX_FAILURES = 3\n  private readonly FAILURE_WINDOW = 5 * 60 * 1000 // 5 minutes\n  private readonly DISABLE_DURATION = 15 * 60 * 1000 // 15 minutes\n\n  constructor() {\n    this.loadFromStorage()\n    this.startPriceMonitoring()\n    this.requestNotificationPermission()\n  }\n\n  // Load data from storage with proper error handling\n  private loadFromStorage(): void {\n    try {\n      this.watchlist = storageService.getJSON(this.STORAGE_KEY, [])\n      this.priceAlerts = storageService.getJSON(this.ALERTS_KEY, {})\n      this.notifications = storageService.getJSON(this.NOTIFICATIONS_KEY, {\n        browser: true,\n        email: false,\n        sound: true\n      })\n    } catch (error) {\n      ErrorMessageService.logError('WatchlistService.loadFromStorage', error, { storageKeys: [this.STORAGE_KEY, this.ALERTS_KEY, this.NOTIFICATIONS_KEY] })\n    }\n  }\n\n  // Save data to storage with proper error handling\n  private saveToStorage(): void {\n    try {\n      const success = storageService.setJSON(this.STORAGE_KEY, this.watchlist) &&\n                     storageService.setJSON(this.ALERTS_KEY, this.priceAlerts) &&\n                     storageService.setJSON(this.NOTIFICATIONS_KEY, this.notifications)\n      \n      if (!success) {\n        ErrorMessageService.logError('WatchlistService.saveToStorage', new Error('Failed to save to storage'), { \n          watchlistSize: this.watchlist.length, \n          alertsCount: Object.keys(this.priceAlerts).length \n        })\n      }\n      \n      this.notifyListeners()\n    } catch (error) {\n      ErrorMessageService.logError('WatchlistService.saveToStorage', error, { watchlistSize: this.watchlist.length, alertsCount: Object.keys(this.priceAlerts).length })\n    }\n  }\n\n  // Request browser notification permission\n  private async requestNotificationPermission(): Promise<void> {\n    if ('Notification' in window && Notification.permission === 'default') {\n      await Notification.requestPermission()\n    }\n  }\n\n  // Add listener for watchlist changes\n  addListener(listener: (watchlist: WatchlistItem[]) => void): void {\n    this.listeners.push(listener)\n  }\n\n  // Remove listener\n  removeListener(listener: (watchlist: WatchlistItem[]) => void): void {\n    this.listeners = this.listeners.filter(l => l !== listener)\n  }\n\n  // Notify all listeners\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => listener([...this.watchlist]))\n  }\n\n  // Add NFT to watchlist\n  async addToWatchlist(nft: NFTAsset): Promise<boolean> {\n    // Check if already in watchlist\n    const existingIndex = this.watchlist.findIndex(item => item.nft.asset_id === nft.asset_id)\n    if (existingIndex !== -1) {\n      return false\n    }\n\n    const watchlistItem: WatchlistItem = {\n      nft,\n      alertType: 'any',\n      addedAt: Date.now(),\n      lastPrice: nft.price ? parseFloat(nft.price) : 0\n    }\n\n    this.watchlist.push(watchlistItem)\n    this.saveToStorage()\n    this.notifyListeners()\n    return true\n  }\n\n  // Remove NFT from watchlist\n  async removeFromWatchlist(assetId: string): Promise<void> {\n    this.watchlist = this.watchlist.filter(item => item.nft.asset_id !== assetId)\n    delete this.priceAlerts[assetId]\n    this.saveToStorage()\n    this.notifyListeners()\n  }\n\n  // Get watchlist\n  async getWatchlist(): Promise<WatchlistItem[]> {\n    return [...this.watchlist]\n  }\n\n  // Check if NFT is in watchlist\n  isInWatchlist(assetId: string): boolean {\n    return this.watchlist.some(item => item.nft.asset_id === assetId)\n  }\n\n  // Set price alert for an NFT\n  async setPriceAlert(assetId: string, alert: Omit<PriceAlert, 'lastTriggered'>): Promise<void> {\n    this.priceAlerts[assetId] = {\n      ...alert,\n      lastTriggered: undefined\n    }\n    this.saveToStorage()\n  }\n\n  // Remove price alert\n  async removePriceAlert(assetId: string): Promise<void> {\n    delete this.priceAlerts[assetId]\n    this.saveToStorage()\n  }\n\n  // Get price alert for an NFT\n  getPriceAlert(assetId: string): PriceAlert | undefined {\n    return this.priceAlerts[assetId]\n  }\n\n  // Update notification settings\n  updateNotificationSettings(settings: Partial<NotificationSettings>): void {\n    this.notifications = { ...this.notifications, ...settings }\n    this.saveToStorage()\n  }\n\n  // Get notification settings\n  getNotificationSettings(): NotificationSettings {\n    return { ...this.notifications }\n  }\n\n  // Circuit breaker methods\n  private isEndpointDisabled(endpoint: string): boolean {\n    const failure = this.endpointFailures[endpoint]\n    if (!failure || !failure.disabled) return false\n    \n    // Check if disable duration has passed\n    if (Date.now() - failure.lastFailure > this.DISABLE_DURATION) {\n      failure.disabled = false\n      failure.count = 0\n      return false\n    }\n    \n    return true\n  }\n\n  private recordEndpointFailure(endpoint: string): void {\n    const now = Date.now()\n    const failure = this.endpointFailures[endpoint] || { count: 0, lastFailure: 0, disabled: false }\n    \n    // Reset count if failure window has passed\n    if (now - failure.lastFailure > this.FAILURE_WINDOW) {\n      failure.count = 0\n    }\n    \n    failure.count++\n    failure.lastFailure = now\n    \n    // Disable endpoint if max failures reached\n    if (failure.count >= this.MAX_FAILURES) {\n      failure.disabled = true\n      log.warn(`Endpoint ${endpoint} disabled due to ${failure.count} failures`, 'WatchlistService.recordEndpointFailure')\n    }\n    \n    this.endpointFailures[endpoint] = failure\n  }\n\n  private recordEndpointSuccess(endpoint: string): void {\n    const failure = this.endpointFailures[endpoint]\n    if (failure) {\n      failure.count = 0\n      failure.disabled = false\n    }\n  }\n\n  private notifyEndpointsDisabled(): void {\n    // Only show notification once every 15 minutes to avoid spam\n    const lastNotification = localStorage.getItem('watchlist_endpoints_disabled_notification')\n    const now = Date.now()\n    \n    if (lastNotification && (now - parseInt(lastNotification)) < 15 * 60 * 1000) {\n      return\n    }\n    \n    localStorage.setItem('watchlist_endpoints_disabled_notification', now.toString())\n    \n    // Dispatch event for UI to handle\n    window.dispatchEvent(new CustomEvent('watchlistEndpointsDisabled', {\n      detail: {\n        message: 'Price monitoring temporarily disabled due to API issues. Will retry automatically.',\n        disabledEndpoints: Object.keys(this.endpointFailures).filter(k => this.endpointFailures[k].disabled),\n        retryTime: Math.max(...Object.values(this.endpointFailures).map(f => f.lastFailure + this.DISABLE_DURATION))\n      }\n    }))\n  }\n\n  // Get endpoint health status for debugging\n  getEndpointStatus(): Record<string, { healthy: boolean, failures: number, disabledUntil?: number }> {\n    const status: Record<string, { healthy: boolean, failures: number, disabledUntil?: number }> = {}\n    \n    for (const [endpoint, failure] of Object.entries(this.endpointFailures)) {\n      status[endpoint] = {\n        healthy: !failure.disabled,\n        failures: failure.count,\n        disabledUntil: failure.disabled ? failure.lastFailure + this.DISABLE_DURATION : undefined\n      }\n    }\n    \n    return status\n  }\n\n  // Start price monitoring\n  private startPriceMonitoring(): void {\n    // Check prices every 3 minutes to reduce API load\n    this.priceCheckInterval = setInterval(() => {\n      this.checkPriceAlerts()\n    }, 3 * 60 * 1000)\n\n    // Initial check after 1 minute\n    setTimeout(() => {\n      this.checkPriceAlerts()\n    }, 60000)\n  }\n\n\n\n  // Stop price monitoring\n  stopPriceMonitoring(): void {\n    if (this.priceCheckInterval) {\n      clearInterval(this.priceCheckInterval)\n      this.priceCheckInterval = null\n    }\n  }\n\n  // Check price alerts with improved error handling and batching\n  private async checkPriceAlerts(): Promise<void> {\n    if (this.watchlist.length === 0) return\n\n    // Check if all endpoints are disabled\n    const allEndpointsDisabled = ['atomichub', 'neftyblocks'].every(endpoint => \n      this.isEndpointDisabled(endpoint)\n    )\n    \n    if (allEndpointsDisabled) {\n      log.warn('All price endpoints are disabled, skipping price check', 'WatchlistService.checkPrices')\n      this.notifyEndpointsDisabled()\n      return\n    }\n\n    try {\n      // Process items in smaller batches with delays to reduce API load\n      const disabledCount = Object.values(this.endpointFailures).filter(f => f.disabled).length\n      const batchSize = disabledCount > 0 ? 2 : 3 // Smaller batches\n      const batches = []\n      \n      for (let i = 0; i < this.watchlist.length; i += batchSize) {\n        batches.push(this.watchlist.slice(i, i + batchSize))\n      }\n\n      for (let i = 0; i < batches.length; i++) {\n        const batch = batches[i]\n        \n        // Add delay between batches to reduce API pressure\n        if (i > 0) {\n          await new Promise(resolve => setTimeout(resolve, 2000)) // 2 second delay\n        }\n        \n        const pricePromises = batch.map(async (item) => {\n          try {\n            const currentPrice = await this.fetchCurrentPrice(item)\n            const priceChange = item.lastPrice > 0 \n              ? ((currentPrice - item.lastPrice) / item.lastPrice) * 100\n              : 0\n            \n            // Update watchlist item\n            item.lastPrice = currentPrice\n            item.priceChange = priceChange\n            \n            // Check if alert should be triggered\n            const alert = this.priceAlerts[item.nft.asset_id]\n            if (alert && alert.enabled && currentPrice > 0) {\n              await this.checkAlertCondition(item, alert, currentPrice)\n            }\n            \n            return item\n          } catch (error) {\n            ErrorMessageService.logError('WatchlistService.checkPriceAlerts.priceCheck', error, { \n              assetId: item.nft.asset_id, \n              nftName: item.nft.name \n            })\n            return item\n          }\n        })\n\n        await Promise.allSettled(pricePromises)\n        \n        // Add longer delay between batches when endpoints are failing\n        if (batches.indexOf(batch) < batches.length - 1) {\n          const delay = disabledCount > 0 ? 2000 : 1000\n          await new Promise(resolve => setTimeout(resolve, delay))\n        }\n      }\n\n      this.saveToStorage()\n    } catch (error) {\n      ErrorMessageService.logError('WatchlistService.checkPriceAlerts', error, { \n        watchlistSize: this.watchlist.length,\n        disabledEndpoints: Object.keys(this.endpointFailures).filter(k => this.endpointFailures[k].disabled)\n      })\n    }\n  }\n\n  // Fetch current price for a watchlist item with caching\n  private async fetchCurrentPrice(item: WatchlistItem): Promise<number> {\n    const assetId = item.nft.asset_id\n    const now = Date.now()\n    \n    // Check cache first\n    const cached = this.priceCache[assetId]\n    if (cached && (now - cached.timestamp) < this.CACHE_DURATION) {\n      return cached.price\n    }\n    \n    // Fetch new price\n    const price = await this.getCurrentPrice(assetId)\n    \n    // Cache the result\n    this.priceCache[assetId] = {\n      price,\n      timestamp: now\n    }\n    \n    return price\n  }\n\n  // Get current price for an NFT using single endpoint (sequential, not parallel)\n  private async getCurrentPrice(assetId: string): Promise<number> {\n    try {\n      // Try endpoints one by one instead of parallel requests to reduce load\n      const endpoints = ['atomichub', 'neftyblocks']\n      \n      for (const endpoint of endpoints) {\n        if (this.isEndpointDisabled(endpoint)) continue\n        \n        try {\n          let price = 0\n          \n          switch (endpoint) {\n            case 'atomichub':\n              price = await this.fetchAtomicHubPrice(assetId)\n              break\n            case 'neftyblocks':\n              price = await this.fetchNeftyBlocksPrice(assetId)\n              break\n          }\n          \n          if (price > 0) {\n            this.recordEndpointSuccess(endpoint)\n            return price\n          }\n        } catch (error) {\n          this.recordEndpointFailure(endpoint)\n          log.warn(`Failed to fetch price from ${endpoint}:`, 'WatchlistService.getCurrentPrice', { endpoint, error })\n          // Continue to next endpoint\n        }\n      }\n      \n      // If all endpoints failed, try template floor price as fallback\n      log.warn('All price endpoints failed, using template floor price fallback', 'WatchlistService.getCurrentPrice')\n      return await this.fetchTemplateFloorPrice(assetId)\n\n    } catch (error) {\n      ErrorMessageService.logError('WatchlistService.getCurrentPrice', error, { assetId })\n      // Return last known price as fallback\n      const item = this.watchlist.find(w => w.nft.asset_id === assetId)\n      return item?.lastPrice || 0\n    }\n  }\n\n  // Fetch price from AtomicHub marketplace\n  private async fetchAtomicHubPrice(assetId: string): Promise<number> {\n    const endpoint = 'atomichub'\n    \n    try {\n      const { apiService } = await import('./api')\n      \n      // Check if asset is currently for sale\n      const url = `${apiService.atomicMarketAPI}/atomicmarket/v1/sales?state=1&asset_id=${assetId}&limit=1`\n      const response = await apiService.fetchWithRetry(url)\n      const data = await response.json()\n      \n      if (data.success && data.data && data.data.length > 0) {\n        const sale = data.data[0]\n        if (sale.price && sale.price.amount) {\n          this.recordEndpointSuccess(endpoint)\n          return parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision || 8)\n        }\n      }\n      \n      return 0\n    } catch (error) {\n      this.recordEndpointFailure(endpoint)\n      ErrorMessageService.logError('WatchlistService.fetchAtomicHubPrice', error, { \n        assetId, \n        endpoint,\n        failureCount: this.endpointFailures[endpoint]?.count || 0\n      })\n      return 0\n    }\n  }\n\n  // Fetch price from NeftyBlocks marketplace\n  private async fetchNeftyBlocksPrice(assetId: string): Promise<number> {\n    const endpoint = 'neftyblocks'\n    \n    try {\n      const { apiService } = await import('./api')\n      \n      // Use NeftyBlocks AtomicMarket API endpoint\n      const url = `https://aa-wax-public1.neftyblocks.com/atomicmarket/v1/sales?state=1&asset_id=${assetId}&limit=1`\n      const response = await apiService.fetchWithRetry(url)\n      const data = await response.json()\n      \n      if (data.success && data.data && data.data.length > 0) {\n        const sale = data.data[0]\n        if (sale.price && sale.price.amount) {\n          this.recordEndpointSuccess(endpoint)\n          return parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision || 8)\n        }\n      }\n      \n      return 0\n    } catch (error) {\n      this.recordEndpointFailure(endpoint)\n      ErrorMessageService.logError('WatchlistService.fetchNeftyBlocksPrice', error, { \n        assetId, \n        endpoint,\n        failureCount: this.endpointFailures[endpoint]?.count || 0\n      })\n      return 0\n    }\n  }\n\n\n\n  // Fetch template floor price as fallback\n  private async fetchTemplateFloorPrice(assetId: string): Promise<number> {\n    try {\n      const { apiService } = await import('./api')\n      \n      // First get the asset to find its template\n      const assetUrl = `${apiService.atomicAssetsAPI}/atomicassets/v1/assets/${assetId}`\n      const assetResponse = await apiService.fetchWithRetry(assetUrl)\n      const assetData = await assetResponse.json()\n      \n      if (assetData.success && assetData.data && assetData.data.template) {\n        const templateId = assetData.data.template.template_id\n        \n        // Get floor price for this template\n        const floorUrl = `${apiService.atomicMarketAPI}/atomicmarket/v1/sales?state=1&template_id=${templateId}&sort=price&order=asc&limit=1`\n        const floorResponse = await apiService.fetchWithRetry(floorUrl)\n        const floorData = await floorResponse.json()\n        \n        if (floorData.success && floorData.data && floorData.data.length > 0) {\n          const sale = floorData.data[0]\n          if (sale.price && sale.price.amount) {\n            return parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision || 8)\n          }\n        }\n      }\n      \n      return 0\n    } catch {\n      return 0\n    }\n  }\n\n  // Check if alert condition is met\n  private async checkAlertCondition(item: WatchlistItem, alert: PriceAlert, currentPrice: number): Promise<void> {\n    const now = Date.now()\n    const cooldownPeriod = 60 * 60 * 1000 // 1 hour cooldown\n    \n    // Check cooldown\n    if (alert.lastTriggered && (now - alert.lastTriggered) < cooldownPeriod) {\n      return\n    }\n\n    let shouldTrigger = false\n    let message = ''\n\n    switch (alert.alertType) {\n      case 'below':\n        if (currentPrice <= alert.targetPrice) {\n          shouldTrigger = true\n          message = `${item.nft.name} price dropped to ${currentPrice.toFixed(2)} WAX (target: ${alert.targetPrice} WAX)`\n        }\n        break\n      case 'above':\n        if (currentPrice >= alert.targetPrice) {\n          shouldTrigger = true\n          message = `${item.nft.name} price rose to ${currentPrice.toFixed(2)} WAX (target: ${alert.targetPrice} WAX)`\n        }\n        break\n      case 'any': {\n        const changePercent = Math.abs(item.priceChange || 0)\n        if (changePercent >= 5) { // 5% change threshold\n          shouldTrigger = true\n          const direction = (item.priceChange || 0) > 0 ? 'increased' : 'decreased'\n          message = `${item.nft.name} price ${direction} by ${changePercent.toFixed(1)}% to ${currentPrice.toFixed(2)} WAX`\n        }\n        break\n      }\n    }\n\n    if (shouldTrigger) {\n      await this.triggerAlert(item, message)\n      alert.lastTriggered = now\n    }\n  }\n\n  // Trigger alert notification\n  private async triggerAlert(item: WatchlistItem, message: string): Promise<void> {\n    // Browser notification\n    if (this.notifications.browser && 'Notification' in window && Notification.permission === 'granted') {\n      new Notification('Price Alert - Pixel Journey', {\n        body: message,\n        icon: item.nft.image || '/logo.png',\n        tag: `price-alert-${item.nft.asset_id}`,\n        requireInteraction: true\n      })\n    }\n\n    // Sound notification\n    if (this.notifications.sound) {\n      this.playNotificationSound()\n    }\n\n    // Send push notification if available\n     try {\n       await pushNotificationService.sendPriceAlert(\n         item.nft.name,\n         `${item.lastPrice} WAX`,\n         message\n       )\n     } catch (error) {\n       log.warn('Failed to send push notification for price alert:', 'WatchlistService.sendPriceAlert', { error })\n     }\n\n    // Dispatch custom event for the UI to handle\n    window.dispatchEvent(new CustomEvent('priceAlert', {\n      detail: { item, message }\n    }))\n  }\n\n  // Play notification sound\n  private playNotificationSound(): void {\n    try {\n      const audio = new Audio('/notification.mp3')\n      audio.volume = 0.3\n      audio.play().catch(error => {\n        log.debug('Could not play notification sound:', 'WatchlistService.playNotificationSound', { error })\n      })\n    } catch (error) {\n      log.debug('Notification sound not available:', 'WatchlistService.playNotificationSound', { error })\n    }\n  }\n\n  // Get watchlist statistics\n  getWatchlistStats(): {\n    totalItems: number\n    activeAlerts: number\n    averagePriceChange: number\n  } {\n    const totalItems = this.watchlist.length\n    const activeAlerts = Object.keys(this.priceAlerts).filter(\n      key => this.priceAlerts[key].enabled\n    ).length\n    \n    const priceChanges = this.watchlist\n      .map(item => item.priceChange || 0)\n      .filter(change => change !== 0)\n    \n    const averagePriceChange = priceChanges.length > 0\n      ? priceChanges.reduce((sum, change) => sum + change, 0) / priceChanges.length\n      : 0\n\n    return {\n      totalItems,\n      activeAlerts,\n      averagePriceChange\n    }\n  }\n\n  // Clear all watchlist data\n  clearWatchlist(): void {\n    this.watchlist = []\n    this.priceAlerts = {}\n    this.saveToStorage()\n  }\n\n  // Subscribe to watchlist changes\n  subscribe(callback: (watchlist: WatchlistItem[]) => void): () => void {\n    this.listeners.push(callback)\n    return () => {\n      const index = this.listeners.indexOf(callback)\n      if (index > -1) {\n        this.listeners.splice(index, 1)\n      }\n    }\n  }\n\n  // Export watchlist data\n  exportWatchlist(): string {\n    return JSON.stringify({\n      watchlist: this.watchlist,\n      priceAlerts: this.priceAlerts,\n      exportedAt: Date.now()\n    }, null, 2)\n  }\n\n  // Import watchlist data\n  importWatchlist(data: string): boolean {\n    try {\n      const parsed = JSON.parse(data)\n      if (parsed.watchlist && Array.isArray(parsed.watchlist)) {\n        this.watchlist = parsed.watchlist\n        this.priceAlerts = parsed.priceAlerts || {}\n        this.saveToStorage()\n        return true\n      }\n      return false\n    } catch (error) {\n      ErrorMessageService.logError('WatchlistService.importWatchlist', error, { dataLength: data.length })\n      return false\n    }\n  }\n}\n\n// Export singleton instance\nexport const watchlistService = new WatchlistService()\nexport default watchlistService","/**\n * @wharfkit/transact-plugin-autocorrect v1.4.0\n * https://github.com/wharfkit/transact-plugin-autocorrect\n *\n * @license\n * Copyright (c) 2021 FFF00 Agents AB & Greymass Inc. All Rights Reserved.\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n *  1. Redistribution of source code must retain the above copyright notice, this\n *     list of conditions and the following disclaimer.\n * \n *  2. Redistribution in binary form must reproduce the above copyright notice,\n *     this list of conditions and the following disclaimer in the documentation\n *     and/or other materials provided with the distribution.\n * \n *  3. Neither the name of the copyright holder nor the names of its contributors\n *     may be used to endorse or promote products derived from this software without\n *     specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR INTENDED FOR USE\n * IN THE DESIGN, CONSTRUCTION, OPERATION OR MAINTENANCE OF ANY MILITARY FACILITY.\n */\nimport { Struct, Name, UInt32, Int64, Asset, AbstractTransactPlugin, TransactHookTypes, Action, prependAction } from '@wharfkit/session';\nimport { Resources } from '@wharfkit/resources';\nimport { __decorate } from 'tslib';\n\nfunction getException(response) {\n    if (response.error) {\n        return response.error;\n    }\n    if (response.processed.except) {\n        return response.processed.except;\n    }\n    return null;\n}\n\nlet Powerup = class Powerup extends Struct {\n};\n__decorate([\n    Struct.field(Name)\n], Powerup.prototype, \"payer\", void 0);\n__decorate([\n    Struct.field(Name)\n], Powerup.prototype, \"receiver\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], Powerup.prototype, \"days\", void 0);\n__decorate([\n    Struct.field(Int64)\n], Powerup.prototype, \"net_frac\", void 0);\n__decorate([\n    Struct.field(Int64)\n], Powerup.prototype, \"cpu_frac\", void 0);\n__decorate([\n    Struct.field(Asset)\n], Powerup.prototype, \"max_payment\", void 0);\nPowerup = __decorate([\n    Struct.type('powerup')\n], Powerup);\nlet Buyrambytes = class Buyrambytes extends Struct {\n};\n__decorate([\n    Struct.field(Name)\n], Buyrambytes.prototype, \"payer\", void 0);\n__decorate([\n    Struct.field(Name)\n], Buyrambytes.prototype, \"receiver\", void 0);\n__decorate([\n    Struct.field(UInt32)\n], Buyrambytes.prototype, \"bytes\", void 0);\nBuyrambytes = __decorate([\n    Struct.type('buyrambytes')\n], Buyrambytes);\n\nvar checking$3 = \"Checking transaction\";\nvar fee$3 = {\n\ttitle: \"Accept Transaction Fee?\",\n\tbody: \"Additional resources ({{resource}}) are required for your account to perform this transaction. Would you like to automatically purchase these resources from the network and proceed?\",\n\tcost: \"Cost of {{resource}}\"\n};\nvar resolving$3 = \"Resolving transaction\";\nvar en = {\n\tchecking: checking$3,\n\tfee: fee$3,\n\tresolving: resolving$3\n};\n\nvar checking$2 = \"거래 확인\";\nvar fee$2 = {\n\ttitle: \"거래 수수료를 수락하시겠습니까?\",\n\tbody: \"계정에서 이 거래를 수행하려면 추가 리소스({{resource}})가 필요합니다. 네트워크에서 이러한 리소스를 자동으로 구매하고 계속 진행하시겠습니까?\",\n\tcost: \"{{resource}}의 비용\"\n};\nvar resolving$2 = \"트랜잭션 해결\";\nvar ko = {\n\tchecking: checking$2,\n\tfee: fee$2,\n\tresolving: resolving$2\n};\n\nvar checking$1 = \"正在检查交易\";\nvar fee$1 = {\n\ttitle: \"接受交易费用？\",\n\tbody: \"您的帐户需要其他资源 （{{resource}}） 才能执行此交易。是否要自动从网络购买这些资源并继续？\",\n\tcost: \"{{resource}} 的成本\"\n};\nvar resolving$1 = \"正在解析交易\";\nvar zh_hans = {\n\tchecking: checking$1,\n\tfee: fee$1,\n\tresolving: resolving$1\n};\n\nvar checking = \"正在檢查交易\";\nvar fee = {\n\ttitle: \"接受交易費用？\",\n\tbody: \"您的帳戶需要其他資源 （{{resource}}） 才能執行此交易。是否要自動從網路購買這些資源並繼續？\",\n\tcost: \"{{resource}} 的成本\"\n};\nvar resolving = \"正在解析交易\";\nvar zh_hant = {\n\tchecking: checking,\n\tfee: fee,\n\tresolving: resolving\n};\n\nvar defaultTranslations = {\n    en,\n    ko,\n    'zh-Hans': zh_hans,\n    'zh-Hant': zh_hant,\n};\n\nvar ChainFeatures;\n(function (ChainFeatures) {\n    /** eosio.buyram / eosio.buyrambytes https://github.com/EOSIO/eosio.contracts/blob/master/contracts/eosio.system/src/delegate_bandwidth.cpp#L43 */\n    ChainFeatures[ChainFeatures[\"BuyRAM\"] = 0] = \"BuyRAM\";\n    /** FIO Bundled Transactions https://fio.wiki/knowledge-base/protocol/bundling-and-fees/ */\n    // FIOBundledFees, // NYI\n    /** eosio.powerup https://github.com/EOSIO/eosio.contracts/pull/397 */\n    ChainFeatures[ChainFeatures[\"PowerUp\"] = 1] = \"PowerUp\";\n    /** eosio.rentcpu / eosio.rentnet https://github.com/EOSIO/eosio.contracts/blob/master/contracts/eosio.system/src/powerup.cpp */\n    // REX, // NYI\n    /** eosio.delegatebw https://github.com/EOSIO/eosio.contracts/blob/master/contracts/eosio.system/src/delegate_bandwidth.cpp#L372 */\n    // Staking, // NYI\n})(ChainFeatures || (ChainFeatures = {}));\nconst chains = {\n    // EOS\n    aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906: {\n        features: [ChainFeatures.BuyRAM, ChainFeatures.PowerUp],\n        sampleAccount: 'eosio.reserv',\n        symbol: Asset.Symbol.from('4,EOS'),\n    },\n    // Jungle 4\n    '73e4385a2708e6d7048834fbc1079f2fabb17b3c125b146af438971e90716c4d': {\n        features: [ChainFeatures.BuyRAM, ChainFeatures.PowerUp],\n        sampleAccount: 'eosio.reserv',\n        symbol: Asset.Symbol.from('4,EOS'),\n    },\n    // WAX\n    '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4': {\n        features: [ChainFeatures.BuyRAM, ChainFeatures.PowerUp],\n        sampleAccount: 'boost.wax',\n        symbol: Asset.Symbol.from('8,WAX'),\n    },\n};\n/** Multiply all resource purchases to provide extra based on inaccurate estimates */\nconst multiplier = 1.5;\nclass TransactPluginAutoCorrect extends AbstractTransactPlugin {\n    constructor() {\n        super(...arguments);\n        this.id = 'transact-plugin-autocorrect';\n        this.translations = defaultTranslations;\n        this.sample = null;\n        this.price = null;\n        this.resources = [];\n        this.iterations = 0;\n    }\n    register(context) {\n        if (!context.ui) {\n            throw new Error('The TransactPluginAutoCorrect plugin requires a UI to be present.');\n        }\n        context.addHook(TransactHookTypes.beforeSign, async (request, context) => this.run(request, context));\n    }\n    async run(request, context) {\n        // Abort if no UI is present\n        if (!context.ui) {\n            return { request };\n        }\n        // Reset internal state between transactions\n        this.price = null;\n        this.resources = [];\n        this.iterations = 0;\n        // Retrieve translation helper from the UI, passing the app ID\n        const t = context.ui.getTranslate(this.id);\n        // Notifify the UI that we are checking the transaction\n        const checkingPromise = context.ui\n            .prompt({\n            title: t('checking', { default: 'Checking transaction' }),\n            body: '',\n            elements: [],\n        })\n            .catch((error) => {\n            // Throw if what we caught was a cancelation\n            if (error) {\n                throw error;\n            }\n            // Otherwise return the original if no error occurred but this was rejected\n            return { request };\n        });\n        // Retrieve account data for the current account\n        const account = await context.client.v1.chain.get_account(context.permissionLevel.actor);\n        // Attempt to correct this transaction\n        const correctedPromise = this.correct(request, context, account);\n        const modified = await Promise.race([checkingPromise, correctedPromise]);\n        // If the request wasn't modified and no price exists, just return\n        if (modified === request && !this.price) {\n            return { request };\n        }\n        // Create unique set of resources that will be purchased\n        const resources = Array.from(new Set(this.resources)).join('/');\n        // Initiate a new cancelable prompt to inform the user of the fee required\n        return context.ui\n            .prompt({\n            title: t('fee.title', { default: 'Accept Transaction Fee?' }),\n            body: t('fee.body', {\n                default: 'Additional resources ({{resource}}) are required for your account to perform this transaction. Would you like to automatically purchase these resources from the network and proceed?',\n                resource: resources,\n            }),\n            elements: [\n                {\n                    type: 'asset',\n                    data: {\n                        label: t('fee.cost', {\n                            default: 'Cost of {{resource}}',\n                            resource: resources,\n                        }),\n                        value: this.price,\n                    },\n                },\n                {\n                    type: 'accept',\n                },\n            ],\n        })\n            .then(() => ({ request: modified }))\n            .catch((error) => {\n            // Throw if what we caught was a cancelation\n            if (error) {\n                throw error;\n            }\n            // Otherwise return the original if no error occurred but this was rejected\n            return { request };\n        });\n    }\n    async correct(request, context, account) {\n        // TODO: Remove this once we are confident it won't create infinite loops against bad APIs\n        // Keep track of how many interations have been done\n        this.iterations++;\n        if (this.iterations > 3) {\n            throw new Error('Too many iterations. Please report this bug if you see it.');\n        }\n        // If the chain is not configured to correct issues or no UI is present, abort.\n        const config = chains[String(context.chain.id)];\n        if (!config || !context.ui) {\n            return request;\n        }\n        // Set instance of resource library\n        const resources = new Resources({\n            api: context.client,\n            sampleAccount: config.sampleAccount,\n        });\n        // Resolve any placeholders and complete the transaction for compute.\n        const resolved = await context.resolve(request);\n        // Call compute_transaction against the resolved transaction to detect any issues.\n        return context.client.v1.chain\n            .compute_transaction(resolved.transaction)\n            .then((response) => {\n            // Extract any exceptions from the response\n            const exception = getException(response);\n            // Handling of exception when no error is thrown\n            if (exception && exception.stack && typeof exception.stack[0] === 'object') {\n                switch (exception.name) {\n                    case 'tx_net_usage_exceeded': {\n                        const { net_usage } = exception.stack[0].data;\n                        const needed = net_usage * multiplier;\n                        if (config.features.includes(ChainFeatures.PowerUp)) {\n                            return this.powerup(context, resolved, account, resources, 0, needed);\n                        }\n                        break;\n                    }\n                    case 'tx_cpu_usage_exceeded': {\n                        const { billed, billable } = exception.stack[0].data;\n                        const needed = (billed - billable) * multiplier;\n                        if (config.features.includes(ChainFeatures.PowerUp)) {\n                            return this.powerup(context, resolved, account, resources, needed, 0);\n                        }\n                        break;\n                    }\n                    case 'ram_usage_exceeded': {\n                        const { available, needs } = exception.stack[0].data;\n                        const needed = (needs - available) * multiplier;\n                        if (config.features.includes(ChainFeatures.BuyRAM)) {\n                            return this.buyram(context, resolved, account, resources, needed);\n                        }\n                        break;\n                    }\n                }\n            }\n            return request;\n        })\n            .catch((response) => {\n            // Extract any exceptions from the response\n            if (response.error) {\n                // Handling of exception when it is thrown\n                switch (response.error.name) {\n                    case 'tx_net_usage_exceeded': {\n                        const [, net_usage] = response.error.details[0].message.match(/transaction net usage is too high: (\\d+) > (\\d+)/);\n                        const needed = Number(net_usage) * multiplier;\n                        if (config.features.includes(ChainFeatures.PowerUp)) {\n                            return this.powerup(context, resolved, account, resources, 0, needed);\n                        }\n                        break;\n                    }\n                    case 'tx_cpu_usage_exceeded': {\n                        const [, cpu_usage] = response.error.details[0].message.match(/billed CPU time \\((\\d+) us\\) is greater than the maximum billable CPU time for the transaction/);\n                        const needed = Number(cpu_usage) * multiplier;\n                        if (config.features.includes(ChainFeatures.PowerUp)) {\n                            return this.powerup(context, resolved, account, resources, needed, 0);\n                        }\n                        break;\n                    }\n                    case 'ram_usage_exceeded': {\n                        const [, , needs, has] = response.error.details[0].message.match(/account (\\w.+) has insufficient ram; needs (\\d+) bytes has (\\d+) bytes/);\n                        const needed = (Number(needs) - Number(has)) * multiplier + 2;\n                        if (config.features.includes(ChainFeatures.BuyRAM)) {\n                            return this.buyram(context, resolved, account, resources, needed);\n                        }\n                        break;\n                    }\n                    default: {\n                        // an unknown error was detected\n                        console.log('unknown error', response);\n                        break;\n                    }\n                }\n            }\n            // Return the request\n            return request;\n        });\n    }\n    async buyram(context, resolved, account, resources, needed) {\n        // Get state of the blockchain and determine RAM price\n        const config = chains[String(context.chain.id)];\n        const ram = await resources.v1.ram.get_state();\n        if (!this.sample) {\n            this.sample = await resources.getSampledUsage();\n        }\n        // Determine price of resources\n        const price = Asset.from(ram.price_per(needed).value, config.symbol);\n        // Keep a running total of the price\n        if (this.price) {\n            this.price.units.add(price.units);\n        }\n        else {\n            this.price = price;\n        }\n        // And which resources are being paid for by this fee\n        this.resources.push('RAM');\n        // TODO: Implement maximum RAM fee to ensure potential bugs don't cause massive fees\n        // How to determine a normal price per network?\n        // const maxFee = 1\n        // if (this.price.value > maxFee) {\n        //     throw new Error('Fee is too high')\n        // }\n        // Create a new buyrambytes action to append\n        const newAction = Action.from({\n            account: 'eosio',\n            name: 'buyrambytes',\n            authorization: [resolved.signer],\n            data: Buyrambytes.from({\n                payer: resolved.signer.actor,\n                receiver: resolved.signer.actor,\n                bytes: needed,\n            }),\n        });\n        // Create a new request based on this full transaction\n        const newRequest = prependAction(resolved.request, newAction);\n        // Attempt to correct the new request\n        return this.correct(newRequest, context, account);\n    }\n    async powerup(context, resolved, account, resources, cpu, net) {\n        // Get state of the blockchain and determine powerup price\n        const config = chains[String(context.chain.id)];\n        const powerup = await resources.v1.powerup.get_state();\n        if (!this.sample) {\n            this.sample = await resources.getSampledUsage();\n        }\n        // If powering up, always set a minimum to avoid API speed variance\n        if (cpu < 2500) {\n            cpu = 2500;\n        }\n        if (net < 10000) {\n            net = 10000;\n        }\n        // Determine price of resources\n        const price = Asset.from(Number(powerup.cpu.price_per(this.sample, cpu)) +\n            Number(powerup.net.price_per(this.sample, net)) * multiplier, config.symbol);\n        // Keep a running total of the price\n        if (this.price) {\n            this.price.units.add(price.units);\n        }\n        else {\n            this.price = price;\n        }\n        // And which resources are being paid for by this fee\n        this.resources.push('CPU', 'NET');\n        // TODO: Implement maximum RAM fee to ensure potential bugs don't cause massive fees\n        // How to determine a normal price per network?\n        // const maxFee = 1\n        // if (this.price.value > maxFee) {\n        //     throw new Error('Fee is too high')\n        // }\n        // Create a new powerup action to append\n        const newAction = Action.from({\n            account: 'eosio',\n            name: 'powerup',\n            authorization: [resolved.signer],\n            data: Powerup.from({\n                payer: resolved.signer.actor,\n                receiver: resolved.signer.actor,\n                days: 1,\n                net_frac: powerup.net.frac(this.sample, net),\n                cpu_frac: powerup.cpu.frac(this.sample, cpu),\n                max_payment: price,\n            }),\n        });\n        // Create a new request based on this full transaction\n        let modifiedRequest = prependAction(resolved.request, newAction);\n        // Determine if the account has enough RAM to powerup\n        const ram_needed = 410; // 405 appears to be the exact amount, but purchase an additional small buffer\n        if (Number(account.ram_quota) - Number(account.ram_usage) < ram_needed) {\n            // Get state of the blockchain and determine RAM price\n            const config = chains[String(context.chain.id)];\n            const ram = await resources.v1.ram.get_state();\n            if (!this.sample) {\n                this.sample = await resources.getSampledUsage();\n            }\n            // Create a new buyrambytes action to append\n            const ramAction = Action.from({\n                account: 'eosio',\n                name: 'buyrambytes',\n                authorization: [resolved.signer],\n                data: Buyrambytes.from({\n                    payer: resolved.signer.actor,\n                    receiver: resolved.signer.actor,\n                    bytes: ram_needed,\n                }),\n            });\n            // Modify the account object to prevent multiple purchases during recurrsion\n            account.ram_quota.add(ram_needed);\n            // Modify the request\n            modifiedRequest = prependAction(modifiedRequest, ramAction);\n            // Determine price of resources\n            const ramPrice = Asset.from(ram.price_per(ram_needed).value, config.symbol);\n            this.price.units.add(ramPrice.units);\n            // Notify that RAM is also being purchased\n            this.resources.push('RAM');\n        }\n        // Attempt to correct the new request\n        return this.correct(modifiedRequest, context, account);\n    }\n}\n\nexport { TransactPluginAutoCorrect };\n//# sourceMappingURL=transact-plugin-autocorrect.m.js.map\n","import { wharfKitService } from './wharfkit'\nimport { log } from './loggingService'\n\n// Transaction Types\nexport type TransactionType = \n  | 'nft_purchase'\n  | 'nft_sale'\n  | 'nft_transfer'\n  | 'nft_listing'\n  | 'nft_cancel_listing'\n  | 'token_transfer'\n  | 'token_receive'\n  | 'crafting'\n  | 'blend'\n  | 'burn'\n  | 'recycle'\n  | 'unpack'\n  | 'auction_bid'\n  | 'auction_create'\n  | 'tokenization'\n  | 'bulk_operation'\n\n// Transaction Status\nexport type TransactionStatus = \n  | 'pending'\n  | 'processing'\n  | 'confirming'\n  | 'success'\n  | 'failed'\n  | 'cancelled'\n\n// Transaction Data Interface\nexport interface TransactionData {\n  id: string\n  type: TransactionType\n  status: TransactionStatus\n  timestamp: number\n  account: string\n  actions: TransactionAction[]\n  metadata?: Record<string, unknown>\n  error?: string\n  transactionId?: string\n  blockNum?: number\n  cpuUsage?: number\n  netUsage?: number\n  retryCount?: number\n  maxRetries?: number\n}\n\n// Transaction Action Interface\nexport interface TransactionAction {\n  account: string\n  name: string\n  authorization: Array<{ actor: string; permission: string }>\n  data: Record<string, unknown>\n}\n\n// Transaction Result Interface\nexport interface TransactionResult {\n  success: boolean\n  transactionId?: string\n  blockNum?: number\n  error?: string\n  cpuUsage?: number\n  netUsage?: number\n}\n\n// Transaction Options\nexport interface TransactionOptions {\n  maxRetries?: number\n  retryDelay?: number\n  timeout?: number\n  skipConfirmation?: boolean\n  metadata?: Record<string, unknown>\n}\n\n// Transaction Event Types\nexport type TransactionEventType = \n  | 'transaction_started'\n  | 'transaction_processing'\n  | 'transaction_confirming'\n  | 'transaction_success'\n  | 'transaction_failed'\n  | 'transaction_cancelled'\n  | 'transaction_retry'\n\n// Transaction Event Interface\nexport interface TransactionEvent {\n  type: TransactionEventType\n  transaction: TransactionData\n  timestamp: number\n}\n\n// Transaction Listener\nexport type TransactionListener = (event: TransactionEvent) => void\n\n/**\n * Centralized Transaction Service\n * Handles all blockchain transactions with consistent state management,\n * error handling, retry logic, and event notifications\n */\nclass TransactionService {\n  private transactions = new Map<string, TransactionData>()\n  private listeners = new Set<TransactionListener>()\n  private retryTimeouts = new Map<string, NodeJS.Timeout>()\n\n  /**\n   * Execute a transaction with full state management\n   */\n  async executeTransaction(\n    type: TransactionType,\n    actions: TransactionAction[],\n    options: TransactionOptions = {}\n  ): Promise<TransactionResult> {\n    const transactionId = this.generateTransactionId()\n    const account = wharfKitService.getAccountName()\n    \n    if (!account) {\n      throw new Error('Wallet not connected')\n    }\n\n    const transaction: TransactionData = {\n      id: transactionId,\n      type,\n      status: 'pending',\n      timestamp: Date.now(),\n      account,\n      actions,\n      metadata: options.metadata,\n      retryCount: 0,\n      maxRetries: options.maxRetries ?? 3\n    }\n\n    // Store transaction and notify listeners\n    this.transactions.set(transactionId, transaction)\n    this.emitEvent('transaction_started', transaction)\n\n    try {\n      // Update status to processing\n      this.updateTransactionStatus(transactionId, 'processing')\n      \n      // Execute the transaction\n      const result = await this.performTransaction(actions, options.timeout)\n      \n      // Update transaction with result\n      transaction.transactionId = result.transactionId\n      transaction.blockNum = result.blockNum\n      transaction.cpuUsage = result.cpuUsage\n      transaction.netUsage = result.netUsage\n      \n      if (result.success) {\n        // Update status to confirming if not skipping confirmation\n        if (!options.skipConfirmation) {\n          this.updateTransactionStatus(transactionId, 'confirming')\n          await this.waitForConfirmation(result.transactionId!)\n        }\n        \n        // Mark as successful\n        this.updateTransactionStatus(transactionId, 'success')\n        \n        log.info('Transaction successful', 'TransactionService', {\n          transactionId: result.transactionId,\n          type,\n          account\n        })\n        \n        return result\n      } else {\n        throw new Error(result.error || 'Transaction failed')\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n      transaction.error = errorMessage\n      \n      log.error('Transaction failed', 'TransactionService', error instanceof Error ? error : new Error(errorMessage), {\n        transactionId,\n        type,\n        account\n      })\n      \n      // Attempt retry if configured and maxRetries > 0\n      if (transaction.maxRetries! > 0 && transaction.retryCount! < transaction.maxRetries!) {\n        return this.retryTransaction(transactionId, options)\n      } else {\n        this.updateTransactionStatus(transactionId, 'failed')\n        return {\n          success: false,\n          error: errorMessage\n        }\n      }\n    }\n  }\n\n  /**\n   * Retry a failed transaction\n   */\n  private async retryTransaction(\n    transactionId: string,\n    options: TransactionOptions\n  ): Promise<TransactionResult> {\n    const transaction = this.transactions.get(transactionId)\n    if (!transaction) {\n      throw new Error('Transaction not found')\n    }\n\n    transaction.retryCount = (transaction.retryCount || 0) + 1\n    this.emitEvent('transaction_retry', transaction)\n\n    // Wait before retry\n    const retryDelay = options.retryDelay ?? 2000 * transaction.retryCount\n    await new Promise(resolve => {\n      const timeout = setTimeout(resolve, retryDelay)\n      this.retryTimeouts.set(transactionId, timeout)\n    })\n\n    // Remove retry timeout\n    this.retryTimeouts.delete(transactionId)\n\n    // Create new transaction ID for retry to avoid conflicts\n    const newTransactionId = this.generateTransactionId()\n    const newTransaction: TransactionData = {\n      ...transaction,\n      id: newTransactionId,\n      status: 'pending',\n      timestamp: Date.now(),\n      error: undefined,\n      transactionId: undefined,\n      blockNum: undefined,\n      cpuUsage: undefined,\n      netUsage: undefined\n    }\n\n    // Store new transaction\n    this.transactions.set(newTransactionId, newTransaction)\n    this.emitEvent('transaction_started', newTransaction)\n\n    try {\n      // Update status to processing\n      this.updateTransactionStatus(newTransactionId, 'processing')\n      \n      // Execute the transaction\n      const result = await this.performTransaction(transaction.actions, options.timeout)\n      \n      // Update transaction with result\n      newTransaction.transactionId = result.transactionId\n      newTransaction.blockNum = result.blockNum\n      newTransaction.cpuUsage = result.cpuUsage\n      newTransaction.netUsage = result.netUsage\n      \n      if (result.success) {\n        // Update status to confirming if not skipping confirmation\n        if (!options.skipConfirmation) {\n          this.updateTransactionStatus(newTransactionId, 'confirming')\n          await this.waitForConfirmation(result.transactionId!)\n        }\n        \n        // Mark as successful\n        this.updateTransactionStatus(newTransactionId, 'success')\n        \n        log.info('Transaction retry successful', 'TransactionService', {\n          transactionId: result.transactionId,\n          type: transaction.type,\n          account: transaction.account,\n          retryCount: transaction.retryCount\n        })\n        \n        return result\n      } else {\n        throw new Error(result.error || 'Transaction failed')\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n      newTransaction.error = errorMessage\n      \n      log.error('Transaction retry failed', 'TransactionService', error instanceof Error ? error : new Error(errorMessage), {\n        transactionId: newTransactionId,\n        type: transaction.type,\n        account: transaction.account,\n        retryCount: transaction.retryCount\n      })\n      \n      // Check if we should retry again\n      if (transaction.maxRetries! > 0 && transaction.retryCount! < transaction.maxRetries!) {\n        return this.retryTransaction(transactionId, options)\n      } else {\n        this.updateTransactionStatus(newTransactionId, 'failed')\n        return {\n          success: false,\n          error: errorMessage\n        }\n      }\n    }\n  }\n\n  /**\n   * Cancel a pending transaction\n   */\n  cancelTransaction(transactionId: string): boolean {\n    const transaction = this.transactions.get(transactionId)\n    if (!transaction || transaction.status !== 'pending') {\n      return false\n    }\n\n    // Clear retry timeout if exists\n    const timeout = this.retryTimeouts.get(transactionId)\n    if (timeout) {\n      clearTimeout(timeout)\n      this.retryTimeouts.delete(transactionId)\n    }\n\n    this.updateTransactionStatus(transactionId, 'cancelled')\n    return true\n  }\n\n  /**\n   * Get transaction by ID\n   */\n  getTransaction(transactionId: string): TransactionData | undefined {\n    return this.transactions.get(transactionId)\n  }\n\n  /**\n   * Get all transactions for an account\n   */\n  getTransactionsByAccount(account: string): TransactionData[] {\n    return Array.from(this.transactions.values())\n      .filter(tx => tx.account === account)\n      .sort((a, b) => b.timestamp - a.timestamp)\n  }\n\n  /**\n   * Get transactions by type\n   */\n  getTransactionsByType(type: TransactionType): TransactionData[] {\n    return Array.from(this.transactions.values())\n      .filter(tx => tx.type === type)\n      .sort((a, b) => b.timestamp - a.timestamp)\n  }\n\n  /**\n   * Get pending transactions\n   */\n  getPendingTransactions(): TransactionData[] {\n    return Array.from(this.transactions.values())\n      .filter(tx => ['pending', 'processing', 'confirming'].includes(tx.status))\n      .sort((a, b) => b.timestamp - a.timestamp)\n  }\n\n  /**\n   * Clear old transactions (keep last 100)\n   */\n  clearOldTransactions(): void {\n    const allTransactions = Array.from(this.transactions.values())\n      .sort((a, b) => b.timestamp - a.timestamp)\n    \n    if (allTransactions.length > 100) {\n      const toRemove = allTransactions.slice(100)\n      toRemove.forEach(tx => this.transactions.delete(tx.id))\n    }\n  }\n\n  /**\n   * Add transaction event listener\n   */\n  addListener(listener: TransactionListener): void {\n    this.listeners.add(listener)\n  }\n\n  /**\n   * Remove transaction event listener\n   */\n  removeListener(listener: TransactionListener): void {\n    this.listeners.delete(listener)\n  }\n\n  /**\n   * Clear all listeners\n   */\n  clearListeners(): void {\n    this.listeners.clear()\n  }\n\n  // Private helper methods\n\n  private generateTransactionId(): string {\n    return `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private updateTransactionStatus(transactionId: string, status: TransactionStatus): void {\n    const transaction = this.transactions.get(transactionId)\n    if (transaction) {\n      transaction.status = status\n      this.emitEvent(`transaction_${status}` as TransactionEventType, transaction)\n    }\n  }\n\n  private emitEvent(type: TransactionEventType, transaction: TransactionData): void {\n    const event: TransactionEvent = {\n      type,\n      transaction,\n      timestamp: Date.now()\n    }\n    \n    this.listeners.forEach(listener => {\n      try {\n        listener(event)\n      } catch (error) {\n        log.error('Transaction listener error', 'TransactionService', error instanceof Error ? error : new Error(String(error)))\n      }\n    })\n  }\n\n  private async performTransaction(\n    actions: TransactionAction[],\n    _timeout?: number\n  ): Promise<TransactionResult> {\n    try {\n      // Use WharfKit service to execute the transaction\n      const result = await wharfKitService.transact(actions)\n      \n      // Extract transaction details from result\n      // Note: This depends on WharfKit's response format\n      if (result && typeof result === 'object') {\n        const txResult = result as any\n        return {\n          success: true,\n          transactionId: txResult.transaction_id || txResult.id,\n          blockNum: txResult.block_num,\n          cpuUsage: txResult.cpu_usage_us,\n          netUsage: txResult.net_usage_words\n        }\n      }\n      \n      return { success: true }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Transaction failed'\n      }\n    }\n  }\n\n  private async waitForConfirmation(_transactionId: string): Promise<void> {\n    // Wait for transaction confirmation\n    // This is a simplified implementation - in production you'd want to\n    // poll the blockchain to confirm the transaction was included in a block\n    await new Promise(resolve => setTimeout(resolve, 3000))\n  }\n}\n\n// Export singleton instance\nexport const transactionService = new TransactionService()\nexport default transactionService","import { SessionKit, Session } from '@wharfkit/session'\nimport { WebRenderer } from '@wharfkit/web-renderer'\nimport { WalletPluginAnchor } from '@wharfkit/wallet-plugin-anchor'\nimport { WalletPluginCloudWallet } from '@wharfkit/wallet-plugin-cloudwallet'\nimport { WalletPluginWombat } from '@wharfkit/wallet-plugin-wombat'\nimport { TransactPluginAutoCorrect } from '@wharfkit/transact-plugin-autocorrect'\nimport { APIClient } from '@wharfkit/antelope'\n// Removed unused TransactPluginResourceProvider import\nimport { ErrorMessageService } from './errorMessageService'\nimport { logger } from './loggingService'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\nimport { transactionService, type TransactionType } from './transactionService'\nimport { buildPurchaseActions, buildTokenTransferActions } from './transactionBuilders'\nimport type { WalletContextType } from '../contexts/WalletContextDefinition'\n\ninterface TransactionAction {\n  account: string\n  name: string\n  authorization: Array<{\n    actor: string\n    permission: string\n  }>\n  data: Record<string, unknown>\n}\n\ninterface CraftingData {\n  recipe: string\n  quantity: number\n  ingredientAssets: Array<{ templateId: number; assetIds: string[] }>\n  pxjCost: number\n}\n\nclass WharfKitService {\n  private sessionKit: SessionKit | null = null\n  private currentSession: Session | null = null\n  private listeners: ((context: WalletContextType) => void)[] = []\n\n  constructor() {\n    this.initializeSessionKit()\n    this.restoreSession()\n  }\n\n  private initializeSessionKit() {\n    try {\n      const config = {\n        appName: 'PxMarket2',\n        chains: [{\n          id: '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4',\n          url: API_ENDPOINTS.WAX_CHAIN.GREYMASS\n        }],\n        ui: new WebRenderer(),\n        walletPlugins: [\n          new WalletPluginAnchor(),\n          new WalletPluginCloudWallet(),\n          new WalletPluginWombat()\n        ]\n      }\n\n      const options = {\n        transactPlugins: [\n          new TransactPluginAutoCorrect()\n        ]\n      }\n\n      this.sessionKit = new SessionKit(config, options)\n      // WharfKit SessionKit initialized successfully\n    } catch (error) {\n      ErrorMessageService.logError('WharfKitService.initialize', error)\n    }\n  }\n\n  private async restoreSession() {\n    if (!this.sessionKit) return\n\n    try {\n      const restored = await this.sessionKit.restore()\n      if (restored) {\n        this.currentSession = restored\n        // Session restored for user: this.currentSession.actor\n        this.notifyListeners()\n      }\n    } catch (error) {\n      ErrorMessageService.logError('WharfKitService.restoreSession', error)\n    }\n  }\n\n  async login(): Promise<Session | null> {\n    if (!this.sessionKit) {\n      ErrorMessageService.logError('WharfKitService.login', new Error('SessionKit not initialized'))\n      return null\n    }\n\n    try {\n      const response = await this.sessionKit.login()\n      if (response.session) {\n        this.currentSession = response.session\n        // Login successful for user: this.currentSession.actor\n        this.notifyListeners()\n        return this.currentSession\n      }\n    } catch (error) {\n      ErrorMessageService.logError('WharfKitService.login', error)\n      throw error\n    }\n\n    return null\n  }\n\n  async logout(): Promise<void> {\n    if (!this.sessionKit || !this.currentSession) return\n\n    try {\n      await this.sessionKit.logout(this.currentSession)\n      this.currentSession = null\n      // Logout successful\n      this.notifyListeners()\n    } catch (error) {\n      ErrorMessageService.logError('WharfKitService.logout', error)\n      throw error\n    }\n  }\n\n  isLoggedIn(): boolean {\n    return this.currentSession !== null\n  }\n\n  getSession(): Session | null {\n    return this.currentSession\n  }\n\n  getActor(): string | null {\n    return this.currentSession?.actor?.toString() || null\n  }\n\n  getAccountName(): string | null {\n    return this.currentSession?.actor?.toString() || null\n  }\n\n  getPermission(): string {\n    return this.currentSession?.permission?.toString() || 'active'\n  }\n\n  // Safe session property access helpers\n  static safeGetActor(session: Session | null): string {\n    return session?.actor?.toString() || ''\n  }\n\n  static safeGetPermission(session: Session | null): string {\n    return session?.permission?.toString() || 'active'\n  }\n\n  async transact(actions: TransactionAction[]): Promise<unknown> {\n    if (!this.currentSession) {\n      throw new Error('No active session. Please login first.')\n    }\n\n    try {\n      logger.debug('Sending transaction with actions', 'WHARFKIT', { actionsCount: actions.length })\n      const result = await this.currentSession.transact({\n        actions\n      }, {\n        broadcast: true,\n        expireSeconds: 120\n      })\n      logger.info('Transaction successful', 'WHARFKIT', { result })\n      return result\n    } catch (error) {\n      ErrorMessageService.logError('WharfKitService.transact', error, { actions })\n      throw error\n    }\n  }\n\n  // Purchase NFT transaction\n  async purchaseNFT(saleId: string, price: string): Promise<unknown> {\n    if (!this.currentSession) {\n      throw new Error('Please login to purchase NFTs')\n    }\n\n    const actions = [\n      {\n        account: 'eosio.token',\n        name: 'transfer',\n        authorization: [{\n          actor: this.currentSession?.actor?.toString() || '',\n          permission: 'active'\n        }],\n        data: {\n          from: this.currentSession?.actor?.toString() || '',\n          to: 'atomicmarket',\n          quantity: `${parseFloat(price).toFixed(8)} WAX`,\n          memo: `deposit`\n        }\n      },\n      {\n        account: 'atomicmarket',\n        name: 'purchasesale',\n        authorization: [{\n          actor: this.currentSession?.actor?.toString() || '',\n          permission: 'active'\n        }],\n        data: {\n          buyer: this.currentSession?.actor?.toString() || '',\n          sale_id: saleId,\n          intended_delphi_median: 0,\n          taker_marketplace: 'market.pxj'\n        }\n      }\n    ]\n\n    logger.debug('Crafting transaction actions', 'WHARFKIT', { actionsCount: actions.length })\n    return this.transact(actions)\n  }\n\n  // Batch purchase multiple NFTs in a single transaction\n  async batchPurchaseNFTs(purchases: Array<{saleId: string, price: string}>): Promise<unknown> {\n    if (!this.currentSession) {\n      throw new Error('Please login to purchase NFTs')\n    }\n\n    if (purchases.length === 0) {\n      throw new Error('No items to purchase')\n    }\n\n    const actions: TransactionAction[] = []\n\n    // Calculate total price for the batch\n    const totalPrice = purchases.reduce((sum, purchase) => {\n      return sum + parseFloat(purchase.price)\n    }, 0)\n\n    // Add single transfer action for the total amount\n    actions.push({\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: this.currentSession.actor.toString(),\n        permission: 'active'\n      }],\n      data: {\n        from: this.currentSession.actor.toString(),\n        to: 'atomicmarket',\n        quantity: `${totalPrice.toFixed(8)} WAX`,\n        memo: `deposit`\n      }\n    })\n\n    // Add purchase actions for each NFT\n    purchases.forEach(purchase => {\n      actions.push({\n        account: 'atomicmarket',\n        name: 'purchasesale',\n        authorization: [{\n          actor: this.currentSession?.actor.toString() || '',\n          permission: 'active'\n        }],\n        data: {\n          buyer: this.currentSession?.actor.toString() || '',\n          sale_id: purchase.saleId,\n          intended_delphi_median: 0,\n          taker_marketplace: 'market.pxj'\n        }\n      })\n    })\n\n    return this.transact(actions)\n  }\n\n  // Transfer tokens (PXJ, WAX, etc.)\n  async transferTokens(to: string, amount: string, currency: string = 'PXJ', memo: string = ''): Promise<unknown> {\n    if (!this.currentSession) {\n      throw new Error('Please login to transfer tokens')\n    }\n\n    const actions = buildTokenTransferActions(\n      this.currentSession?.actor?.toString() || '',\n      to,\n      amount,\n      currency,\n      memo\n    )\n\n    logger.debug('Token transfer transaction actions', 'WHARFKIT', { \n      actionsCount: actions.length,\n      to,\n      amount,\n      currency,\n      memo\n    })\n    \n    return this.transact(actions)\n  }\n\n  // Bulk transfer multiple NFTs to a single recipient\n  async bulkTransferNFT(recipient: string, assetIds: string[], memo: string = ''): Promise<unknown> {\n    if (!this.currentSession) {\n      throw new Error('Please login to transfer NFTs')\n    }\n\n    if (!assetIds || assetIds.length === 0) {\n      throw new Error('No assets to transfer')\n    }\n\n    const actions: TransactionAction[] = assetIds.map(assetId => ({\n      account: 'atomicassets',\n      name: 'transfer',\n      authorization: [{\n        actor: this.currentSession?.actor?.toString() || '',\n        permission: 'active'\n      }],\n      data: {\n        from: this.currentSession?.actor?.toString() || '',\n        to: recipient,\n        asset_ids: [assetId],\n        memo: memo\n      }\n    }))\n\n    logger.debug('Bulk NFT transfer transaction actions', 'WHARFKIT', {\n      actionsCount: actions.length,\n      recipient,\n      assetIds: assetIds.length,\n      memo\n    })\n\n    return this.transact(actions)\n  }\n\n  // Execute crafting transaction\n  async executeCraftingTransaction(craftingData: CraftingData): Promise<unknown> {\n    if (!this.currentSession) {\n      throw new Error('No active session')\n    }\n\n    const actions: TransactionAction[] = []\n    const account = this.currentSession?.actor?.toString() || ''\n\n    // Map recipe IDs to craft_ids based on the provided mapping\n    const recipeToCraftId: Record<string, number> = {\n      'craft_green': 1832,\n      'craft_orange': 1833,\n      'craft_purple': 1834,\n      'craft_amber': 1835,\n      'craft_chartreuse': 1836,\n      'craft_violet': 1837,\n      'craft_teal': 1838,\n      'craft_vermillion': 1839,\n      'craft_magenta': 1841\n    }\n\n    const craftId = recipeToCraftId[craftingData.recipe]\n    if (!craftId) {\n      throw new Error(`Unknown recipe: ${craftingData.recipe}`)\n    }\n\n    // Use full recipe cost for each individual craft\n    const individualPxjCost = craftingData.pxjCost\n\n    // Add nft.hive boost action (only once per transaction)\n    actions.push({\n      account: 'nft.hive',\n      name: 'boost',\n      authorization: [{\n        actor: account,\n        permission: 'active'\n      }],\n      data: {\n        booster: account\n      }\n    })\n\n    // Create separate craft actions for each individual craft\n    for (let i = 0; i < craftingData.quantity; i++) {\n      // Get asset IDs for this individual craft\n      const craftAssetIds: string[] = []\n      for (const ingredient of craftingData.ingredientAssets) {\n        // Take the required number of assets for one craft from each ingredient\n        const assetsPerCraft = ingredient.assetIds.length / craftingData.quantity\n        const startIndex = i * assetsPerCraft\n        const endIndex = startIndex + assetsPerCraft\n        craftAssetIds.push(...ingredient.assetIds.slice(startIndex, endIndex))\n      }\n\n      // Transfer ingredient NFTs to crafting contract for this craft\n      if (craftAssetIds.length > 0) {\n        actions.push({\n          account: 'atomicassets',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'nfthivecraft',\n            asset_ids: craftAssetIds,\n            memo: 'craft'\n          }\n        })\n      }\n\n      // Transfer PXJ for this individual craft\n      if (individualPxjCost > 0) {\n        actions.push({\n          account: 'pixeljourney',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'nfthivecraft',\n            quantity: `${individualPxjCost.toFixed(8)} PXJ`,\n            memo: 'craft'\n          }\n        })\n      }\n\n      // Execute individual crafting action\n      actions.push({\n        account: 'nfthivecraft',\n        name: 'craft',\n        authorization: [{\n          actor: account,\n          permission: 'active'\n        }],\n        data: {\n          craft_id: craftId,\n          user_name: account,\n          collection_name: 'pixeljourney',\n          timestamp: Date.now().toString(),\n          asset_ids: craftAssetIds,\n          tokens: [`${individualPxjCost.toFixed(8)} PXJ`]\n        }\n      })\n    }\n\n    return this.transact(actions)\n  }\n\n  // Subscribe to wallet state changes\n  subscribe(callback: (context: WalletContextType) => void): () => void {\n    this.listeners.push(callback)\n    \n    // Call immediately with current state\n    callback(this.getWalletContext())\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(callback)\n      if (index > -1) {\n        this.listeners.splice(index, 1)\n      }\n    }\n  }\n\n  private notifyListeners() {\n    const context = this.getWalletContext()\n    this.listeners.forEach(callback => callback(context))\n  }\n\n  private getWalletContext(): WalletContextType {\n    return {\n      isConnected: this.isLoggedIn(),\n      account: this.getAccountName(),\n      session: this.currentSession,\n      login: this.login.bind(this),\n      logout: this.logout.bind(this),\n      transact: this.transact.bind(this),\n      purchaseNFT: this.purchaseNFT.bind(this),\n      batchPurchaseNFTs: this.batchPurchaseNFTs.bind(this),\n      executeCraftingTransaction: this.executeCraftingTransaction.bind(this),\n      isLoading: false, // WharfKit handles its own loading states\n      executeTransaction: this.executeTransaction.bind(this),\n      getTransaction: undefined, // Optional method not implemented\n      cancelTransaction: undefined, // Optional method not implemented\n      getTransactionHistory: undefined, // Optional method not implemented\n      transferNFT: undefined, // Optional method not implemented\n      bulkTransferNFT: this.bulkTransferNFT.bind(this),\n      transferTokens: this.transferTokens.bind(this)\n    }\n  }\n\n  // Execute transaction using the centralized transaction service\n  async executeTransaction(type: TransactionType, data: any): Promise<string> {\n    if (!this.currentSession) {\n      throw new Error('No active session. Please login first.')\n    }\n\n    try {\n      let actions: TransactionAction[] = []\n      \n      // Build actions based on transaction type\n      switch (type) {\n        case 'nft_purchase':\n          if (data.saleId && data.price) {\n            actions = buildPurchaseActions(this.currentSession?.actor?.toString() || '', data.saleId, data.price)\n          } else {\n            throw new Error('Missing saleId or price for NFT purchase')\n          }\n          break\n        case 'crafting': {\n          // Use existing crafting method and extract transaction ID\n          const craftingResult = await this.executeCraftingTransaction(data)\n          if (craftingResult && typeof craftingResult === 'object' && 'transaction_id' in craftingResult) {\n            return (craftingResult as any).transaction_id\n          }\n          return 'crafting_completed'\n        }\n        default:\n          throw new Error(`Transaction type '${type}' not supported yet`)\n      }\n      \n      // Execute through centralized transaction service\n      const result = await transactionService.executeTransaction(type, actions)\n      \n      if (result.success && result.transactionId) {\n        return result.transactionId\n      } else {\n        throw new Error(result.error || 'Transaction failed')\n      }\n    } catch (error) {\n      logger.error('Transaction execution failed', 'WharfKitService.executeTransaction', error instanceof Error ? error : new Error(String(error)), { type, data })\n      throw error\n    }\n  }\n\n  // Get API client for blockchain queries\n  getAPIClient(): APIClient {\n    return new APIClient({\n      url: API_ENDPOINTS.WAX_CHAIN.GREYMASS\n    })\n  }\n}\n\n// Export both the class and singleton instance\nexport { WharfKitService }\nexport const wharfKitService = new WharfKitService()\nexport default wharfKitService","import type { TransactionAction, TransactionType } from './transactionService'\n\n/**\n * Transaction Action Builders\n * Provides type-safe builders for common transaction types\n */\n\n// Marketplace Purchase Actions\nexport const buildPurchaseActions = (\n  buyer: string,\n  saleId: string,\n  price: string,\n  currency: string = 'WAX',\n  marketContract: string = 'atomicmarket'\n): TransactionAction[] => {\n  const actions: TransactionAction[] = []\n\n  // Transfer payment to marketplace\n  const tokenContract = currency === 'WAX' ? 'eosio.token' : 'token.rwax'\n  actions.push({\n    account: tokenContract,\n    name: 'transfer',\n    authorization: [{ actor: buyer, permission: 'active' }],\n    data: {\n      from: buyer,\n      to: marketContract,\n      quantity: `${price} ${currency}`,\n      memo: 'deposit'\n    }\n  })\n\n  // Purchase the NFT\n  actions.push({\n    account: marketContract,\n    name: 'purchasesale',\n    authorization: [{ actor: buyer, permission: 'active' }],\n    data: {\n      buyer,\n      sale_id: saleId,\n      intended_delphi_median: 0,\n      taker_marketplace: 'market.pxj'\n    }\n  })\n\n  return actions\n}\n\n// NFT Purchase Actions\nexport const buildNFTPurchaseActions = (\n  buyer: string,\n  seller: string,\n  assetId: string,\n  price: string,\n  currency: string = 'WAX'\n): TransactionAction[] => {\n  const actions: TransactionAction[] = []\n\n  // Transfer payment to seller\n  if (currency === 'WAX') {\n    actions.push({\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{ actor: buyer, permission: 'active' }],\n      data: {\n        from: buyer,\n        to: seller,\n        quantity: `${price} WAX`,\n        memo: `Purchase NFT ${assetId}`\n      }\n    })\n  }\n\n  // Transfer NFT to buyer\n  actions.push({\n    account: 'atomicassets',\n    name: 'transfer',\n    authorization: [{ actor: seller, permission: 'active' }],\n    data: {\n      from: seller,\n      to: buyer,\n      asset_ids: [assetId],\n      memo: `Sale to ${buyer}`\n    }\n  })\n\n  return actions\n}\n\n// NFT Transfer Actions\nexport const buildNFTTransferActions = (\n  from: string,\n  to: string,\n  assetIds: string[],\n  memo: string = ''\n): TransactionAction[] => {\n  return [{\n    account: 'atomicassets',\n    name: 'transfer',\n    authorization: [{ actor: from, permission: 'active' }],\n    data: {\n      from,\n      to,\n      asset_ids: assetIds,\n      memo\n    }\n  }]\n}\n\n// Token Transfer Actions\nexport const buildTokenTransferActions = (\n  from: string,\n  to: string,\n  amount: string,\n  currency: string = 'WAX',\n  memo: string = ''\n): TransactionAction[] => {\n  let tokenContract: string\n  \n  switch (currency) {\n    case 'WAX':\n      tokenContract = 'eosio.token'\n      break\n    case 'RWAX':\n      tokenContract = 'token.rwax'\n      break\n    case 'PXJ':\n      tokenContract = 'pixeljourney'\n      break\n    default:\n      tokenContract = 'eosio.token' // Default to WAX contract\n  }\n  \n  return [{\n    account: tokenContract,\n    name: 'transfer',\n    authorization: [{ actor: from, permission: 'active' }],\n    data: {\n      from,\n      to,\n      quantity: `${amount} ${currency}`,\n      memo\n    }\n  }]\n}\n\n// NFT Listing Actions (AtomicMarket)\nexport const buildNFTListingActions = (\n  seller: string,\n  assetId: string,\n  price: string,\n  currency: string = 'WAX',\n  marketContract: string = 'atomicmarket'\n): TransactionAction[] => {\n  return [\n    // Announce sale\n    {\n      account: marketContract,\n      name: 'announcesale',\n      authorization: [{ actor: seller, permission: 'active' }],\n      data: {\n        seller,\n        asset_ids: [assetId],\n        listing_price_per_asset: `${price} ${currency}`,\n        settlement_symbol: `4,${currency}`,\n        maker_marketplace: 'pxmarket'\n      }\n    }\n  ]\n}\n\n// Cancel NFT Listing Actions\nexport const buildCancelListingActions = (\n  seller: string,\n  saleId: string,\n  marketContract: string = 'atomicmarket'\n): TransactionAction[] => {\n  return [{\n    account: marketContract,\n    name: 'cancelsale',\n    authorization: [{ actor: seller, permission: 'active' }],\n    data: {\n      sale_id: saleId\n    }\n  }]\n}\n\n// Crafting Actions\nexport const buildCraftingActions = (\n  crafter: string,\n  schemaName: string,\n  templateId: string,\n  ingredientAssets: string[],\n  craftingContract: string = 'atomicassets'\n): TransactionAction[] => {\n  return [\n    // Burn ingredient assets\n    {\n      account: craftingContract,\n      name: 'burnasset',\n      authorization: [{ actor: crafter, permission: 'active' }],\n      data: {\n        asset_owner: crafter,\n        asset_ids: ingredientAssets\n      }\n    },\n    // Mint new asset\n    {\n      account: craftingContract,\n      name: 'mintasset',\n      authorization: [{ actor: craftingContract, permission: 'active' }],\n      data: {\n        authorized_minter: craftingContract,\n        collection_name: 'pixeljourney',\n        schema_name: schemaName,\n        template_id: templateId,\n        new_asset_owner: crafter,\n        immutable_data: [],\n        mutable_data: [],\n        tokens_to_back: []\n      }\n    }\n  ]\n}\n\n// Blend Actions (NeftyBlocks)\nexport const buildBlendActions = (\n  blender: string,\n  blendId: string,\n  ingredientAssets: string[],\n  blendContract: string = 'blend.nefty'\n): TransactionAction[] => {\n  return [\n    // Transfer assets to blend contract\n    {\n      account: 'atomicassets',\n      name: 'transfer',\n      authorization: [{ actor: blender, permission: 'active' }],\n      data: {\n        from: blender,\n        to: blendContract,\n        asset_ids: ingredientAssets,\n        memo: `blend:${blendId}`\n      }\n    },\n    // Execute blend\n    {\n      account: blendContract,\n      name: 'claimblend',\n      authorization: [{ actor: blender, permission: 'active' }],\n      data: {\n        claimer: blender,\n        blend_id: blendId,\n        asset_ids: ingredientAssets\n      }\n    }\n  ]\n}\n\n// Burn Actions\nexport const buildBurnActions = (\n  owner: string,\n  assetIds: string[]\n): TransactionAction[] => {\n  return [{\n    account: 'atomicassets',\n    name: 'burnasset',\n    authorization: [{ actor: owner, permission: 'active' }],\n    data: {\n      asset_owner: owner,\n      asset_ids: assetIds\n    }\n  }]\n}\n\n// Unpack Actions\nexport const buildUnpackActions = (\n  unpacker: string,\n  packAssetId: string,\n  unpackContract: string = 'atomicpacks'\n): TransactionAction[] => {\n  return [\n    // Transfer pack to unpack contract\n    {\n      account: 'atomicassets',\n      name: 'transfer',\n      authorization: [{ actor: unpacker, permission: 'active' }],\n      data: {\n        from: unpacker,\n        to: unpackContract,\n        asset_ids: [packAssetId],\n        memo: 'unpack'\n      }\n    },\n    // Claim unpacked assets\n    {\n      account: unpackContract,\n      name: 'claimunpack',\n      authorization: [{ actor: unpacker, permission: 'active' }],\n      data: {\n        pack_asset_id: packAssetId,\n        unpack_to: unpacker\n      }\n    }\n  ]\n}\n\n// Auction Bid Actions\nexport const buildAuctionBidActions = (\n  bidder: string,\n  auctionId: string,\n  bidAmount: string,\n  currency: string = 'WAX',\n  auctionContract: string = 'atomicmarket'\n): TransactionAction[] => {\n  const actions: TransactionAction[] = []\n\n  // Transfer bid amount to auction contract\n  const tokenContract = currency === 'WAX' ? 'eosio.token' : 'token.rwax'\n  actions.push({\n    account: tokenContract,\n    name: 'transfer',\n    authorization: [{ actor: bidder, permission: 'active' }],\n    data: {\n      from: bidder,\n      to: auctionContract,\n      quantity: `${bidAmount} ${currency}`,\n      memo: `auction bid ${auctionId}`\n    }\n  })\n\n  // Place bid\n  actions.push({\n    account: auctionContract,\n    name: 'auctionbid',\n    authorization: [{ actor: bidder, permission: 'active' }],\n    data: {\n      bidder,\n      auction_id: auctionId,\n      bid: `${bidAmount} ${currency}`,\n      taker_marketplace: 'pxmarket'\n    }\n  })\n\n  return actions\n}\n\n// Tokenization Actions (RWAX)\nexport const buildTokenizationActions = (\n  tokenizer: string,\n  waxAmount: string,\n  rwaxContract: string = 'token.rwax'\n): TransactionAction[] => {\n  return [\n    // Transfer WAX to RWAX contract\n    {\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{ actor: tokenizer, permission: 'active' }],\n      data: {\n        from: tokenizer,\n        to: rwaxContract,\n        quantity: `${waxAmount} WAX`,\n        memo: 'tokenize'\n      }\n    }\n  ]\n}\n\n// Batch Purchase Actions\nexport const buildBatchPurchaseActions = (\n  buyer: string,\n  purchases: Array<{\n    seller: string\n    assetId: string\n    price: string\n    currency?: string\n  }>\n): TransactionAction[] => {\n  const actions: TransactionAction[] = []\n  \n  // Group by currency and seller for efficient transfers\n  const transfersBySellerAndCurrency = new Map<string, Map<string, string>>()\n  \n  purchases.forEach(({ seller, price, currency = 'WAX' }) => {\n    if (!transfersBySellerAndCurrency.has(seller)) {\n      transfersBySellerAndCurrency.set(seller, new Map())\n    }\n    \n    const sellerTransfers = transfersBySellerAndCurrency.get(seller)!\n    const currentAmount = sellerTransfers.get(currency) || '0'\n    const newAmount = (parseFloat(currentAmount) + parseFloat(price)).toFixed(8)\n    sellerTransfers.set(currency, newAmount)\n  })\n  \n  // Add payment transfers\n  transfersBySellerAndCurrency.forEach((currencies, seller) => {\n    currencies.forEach((amount, currency) => {\n      const tokenContract = currency === 'WAX' ? 'eosio.token' : 'token.rwax'\n      actions.push({\n        account: tokenContract,\n        name: 'transfer',\n        authorization: [{ actor: buyer, permission: 'active' }],\n        data: {\n          from: buyer,\n          to: seller,\n          quantity: `${amount} ${currency}`,\n          memo: 'Batch NFT purchase'\n        }\n      })\n    })\n  })\n  \n  // Add NFT transfers\n  const transfersBySeller = new Map<string, string[]>()\n  purchases.forEach(({ seller, assetId }) => {\n    if (!transfersBySeller.has(seller)) {\n      transfersBySeller.set(seller, [])\n    }\n    transfersBySeller.get(seller)!.push(assetId)\n  })\n  \n  transfersBySeller.forEach((assetIds, seller) => {\n    actions.push({\n      account: 'atomicassets',\n      name: 'transfer',\n      authorization: [{ actor: seller, permission: 'active' }],\n      data: {\n        from: seller,\n        to: buyer,\n        asset_ids: assetIds,\n        memo: `Batch sale to ${buyer}`\n      }\n    })\n  })\n  \n  return actions\n}\n\n/**\n * Transaction Builder Factory\n * Provides a unified interface for building different transaction types\n */\nexport class TransactionBuilder {\n  static nftPurchase(buyer: string, seller: string, assetId: string, price: string, currency?: string) {\n    return {\n      type: 'nft_purchase' as TransactionType,\n      actions: buildNFTPurchaseActions(buyer, seller, assetId, price, currency)\n    }\n  }\n  \n  static nftTransfer(from: string, to: string, assetIds: string[], memo?: string) {\n    return {\n      type: 'nft_transfer' as TransactionType,\n      actions: buildNFTTransferActions(from, to, assetIds, memo)\n    }\n  }\n  \n  static tokenTransfer(from: string, to: string, amount: string, currency?: string, memo?: string) {\n    return {\n      type: 'token_transfer' as TransactionType,\n      actions: buildTokenTransferActions(from, to, amount, currency, memo)\n    }\n  }\n  \n  static nftListing(seller: string, assetId: string, price: string, currency?: string) {\n    return {\n      type: 'nft_listing' as TransactionType,\n      actions: buildNFTListingActions(seller, assetId, price, currency)\n    }\n  }\n  \n  static cancelListing(seller: string, saleId: string) {\n    return {\n      type: 'nft_cancel_listing' as TransactionType,\n      actions: buildCancelListingActions(seller, saleId)\n    }\n  }\n  \n  static crafting(crafter: string, schemaName: string, templateId: string, ingredientAssets: string[]) {\n    return {\n      type: 'crafting' as TransactionType,\n      actions: buildCraftingActions(crafter, schemaName, templateId, ingredientAssets)\n    }\n  }\n  \n  static blend(blender: string, blendId: string, ingredientAssets: string[]) {\n    return {\n      type: 'blend' as TransactionType,\n      actions: buildBlendActions(blender, blendId, ingredientAssets)\n    }\n  }\n  \n  static burn(owner: string, assetIds: string[]) {\n    return {\n      type: 'burn' as TransactionType,\n      actions: buildBurnActions(owner, assetIds)\n    }\n  }\n  \n  static unpack(unpacker: string, packAssetId: string) {\n    return {\n      type: 'unpack' as TransactionType,\n      actions: buildUnpackActions(unpacker, packAssetId)\n    }\n  }\n  \n  static auctionBid(bidder: string, auctionId: string, bidAmount: string, currency?: string) {\n    return {\n      type: 'auction_bid' as TransactionType,\n      actions: buildAuctionBidActions(bidder, auctionId, bidAmount, currency)\n    }\n  }\n  \n  static tokenization(tokenizer: string, waxAmount: string) {\n    return {\n      type: 'tokenization' as TransactionType,\n      actions: buildTokenizationActions(tokenizer, waxAmount)\n    }\n  }\n  \n  static batchPurchase(buyer: string, purchases: Array<{ seller: string; assetId: string; price: string; currency?: string }>) {\n    return {\n      type: 'bulk_operation' as TransactionType,\n      actions: buildBatchPurchaseActions(buyer, purchases)\n    }\n  }\n}\n\nexport default TransactionBuilder","import React from 'react'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\ninterface MediaRendererProps {\n  imageUrl?: string\n  videoUrl?: string | null\n  alt: string\n  className?: string\n  controls?: boolean\n  muted?: boolean\n  loop?: boolean\n  autoPlay?: boolean\n  loading?: 'lazy' | 'eager'\n  fallbackSrc?: string\n  enableAnimations?: boolean\n}\n\nconst MediaRenderer: React.FC<MediaRendererProps> = React.memo(({\n  imageUrl,\n  videoUrl,\n  alt,\n  className = '',\n  controls = true,\n  muted = true,\n  loop = false,\n  autoPlay = false,\n  loading = 'lazy',\n  enableAnimations = true\n}) => {\n  // Helper function to process URLs (handle IPFS, etc.)\n  const processUrl = (url: string | undefined | null): string | null => {\n    if (!url) return null\n    if (typeof url !== 'string') return null\n    if (url.startsWith('http')) return url\n    if (url.startsWith('Qm')) return `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${url}`\n    return url\n  }\n\n  const processedVideoUrl = processUrl(videoUrl)\n  const processedImageUrl = processUrl(imageUrl)\n  \n  // Create a placeholder for NFTs without images\n  const getPlaceholderSrc = () => {\n    // Create a simple SVG placeholder\n    const svg = `<svg width=\"200\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"200\" height=\"200\" fill=\"#f3f4f6\"/>\n      <text x=\"100\" y=\"90\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"14\" fill=\"#6b7280\">NFT</text>\n      <text x=\"100\" y=\"110\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"12\" fill=\"#9ca3af\">No Image</text>\n      <text x=\"100\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"10\" fill=\"#d1d5db\">Available</text>\n    </svg>`\n    return `data:image/svg+xml;base64,${btoa(svg)}`\n  }\n  \n  const finalImageUrl = processedImageUrl || getPlaceholderSrc()\n\n  // If we have a video URL and animations are enabled, render video with image as poster\n  if (processedVideoUrl && enableAnimations) {\n    return (\n      <video \n        className={className}\n        controls={controls}\n        muted={muted}\n        loop={loop}\n        autoPlay={autoPlay}\n        poster={processedImageUrl ? processedImageUrl : undefined}\n        onError={(e) => {\n          // If video fails to load, replace with image\n          const target = e.target as HTMLVideoElement\n          const img = document.createElement('img')\n          img.src = finalImageUrl\n          img.alt = alt\n          img.className = className\n          img.loading = loading\n          target.parentNode?.replaceChild(img, target)\n        }}\n      >\n        <source src={processedVideoUrl} type=\"video/mp4\" />\n        <source src={processedVideoUrl} type=\"video/webm\" />\n        Your browser does not support the video tag.\n      </video>\n    )\n  }\n  \n  // If animations are disabled but we have a video, show just the image\n  if (processedVideoUrl && !enableAnimations) {\n    return (\n      <img \n        src={finalImageUrl}\n        alt={alt}\n        className={className}\n        loading={loading}\n        onError={(e) => {\n          // If image fails to load, use placeholder\n          const target = e.target as HTMLImageElement\n          const placeholder = getPlaceholderSrc()\n          if (target.src !== placeholder) {\n            target.src = placeholder\n          }\n        }}\n      />\n    )\n  }\n\n  // Otherwise render image\n  return (\n    <img \n      src={finalImageUrl}\n      alt={alt}\n      className={className}\n      loading={loading}\n      onError={(e) => {\n        // If image fails to load, use placeholder\n        const target = e.target as HTMLImageElement\n        const placeholder = getPlaceholderSrc()\n        if (target.src !== placeholder) {\n          target.src = placeholder\n        }\n      }}\n    />\n  )\n})\n\nMediaRenderer.displayName = 'MediaRenderer'\n\nexport default MediaRenderer","import type { UserBadge } from '../services/badgeService'\n\ninterface ShareImageConfig {\n  width?: number\n  height?: number\n  backgroundColor?: string\n  textColor?: string\n  accentColor?: string\n}\n\ninterface InventoryItem {\n  id: string\n  name: string\n  collection: string\n  rarity: string\n  quantity: number\n  image?: string\n}\n\nclass ShareImageGenerator {\n  private readonly defaultConfig: Required<ShareImageConfig> = {\n    width: 1200,\n    height: 630,\n    backgroundColor: '#1a1a2e',\n    textColor: '#ffffff',\n    accentColor: '#ffd700'\n  }\n\n  /**\n   * Generate share image for achievements\n   */\n  generateAchievementShareImage(\n    badges: UserBadge[],\n    totalBadges: number,\n    legendaryCount: number,\n    username: string,\n    config: ShareImageConfig = {}\n  ): string {\n    const { width, height, textColor, accentColor } = {\n      ...this.defaultConfig,\n      ...config\n    }\n\n    // Get top 3 most prestigious badges\n    const topBadges = badges\n      .filter(b => b.unlockedAt)\n      .sort((a, b) => {\n        const rarityOrder = { legendary: 4, epic: 3, rare: 2, common: 1 }\n        return (rarityOrder[b.rarity || 'common'] || 1) - (rarityOrder[a.rarity || 'common'] || 1)\n      })\n      .slice(0, 3)\n\n    const svg = `\n      <svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <linearGradient id=\"bgGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop offset=\"0%\" style=\"stop-color:#1a1a2e;stop-opacity:1\" />\n            <stop offset=\"50%\" style=\"stop-color:#16213e;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#0f3460;stop-opacity:1\" />\n          </linearGradient>\n          <linearGradient id=\"titleGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:#ffd700;stop-opacity:1\" />\n            <stop offset=\"50%\" style=\"stop-color:#ffed4e;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#ffd700;stop-opacity:1\" />\n          </linearGradient>\n        </defs>\n        \n        <!-- Background -->\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#bgGradient)\"/>\n        \n        <!-- Header -->\n        <text x=\"${width/2}\" y=\"80\" font-family=\"system-ui, -apple-system, sans-serif\" font-size=\"48\" font-weight=\"bold\" fill=\"url(#titleGradient)\" text-anchor=\"middle\">\n          ${username}'s Achievements\n        </text>\n        \n        <!-- Stats Section -->\n        <g transform=\"translate(${width/2 - 300}, 150)\">\n          <!-- Total Badges -->\n          <rect x=\"0\" y=\"0\" width=\"180\" height=\"120\" rx=\"15\" fill=\"rgba(255,255,255,0.1)\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"1\"/>\n          <text x=\"90\" y=\"40\" font-family=\"system-ui\" font-size=\"36\" font-weight=\"bold\" fill=\"${accentColor}\" text-anchor=\"middle\">${totalBadges}</text>\n          <text x=\"90\" y=\"70\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Total</text>\n          <text x=\"90\" y=\"90\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Badges</text>\n          \n          <!-- Legendary Badges -->\n          <rect x=\"210\" y=\"0\" width=\"180\" height=\"120\" rx=\"15\" fill=\"rgba(255,140,0,0.2)\" stroke=\"#ff8c00\" stroke-width=\"2\"/>\n          <text x=\"300\" y=\"40\" font-family=\"system-ui\" font-size=\"36\" font-weight=\"bold\" fill=\"#ff8c00\" text-anchor=\"middle\">${legendaryCount}</text>\n          <text x=\"300\" y=\"70\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Legendary</text>\n          <text x=\"300\" y=\"90\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Badges</text>\n          \n          <!-- Progress -->\n          <rect x=\"420\" y=\"0\" width=\"180\" height=\"120\" rx=\"15\" fill=\"rgba(255,255,255,0.1)\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"1\"/>\n          <text x=\"510\" y=\"40\" font-family=\"system-ui\" font-size=\"36\" font-weight=\"bold\" fill=\"${accentColor}\" text-anchor=\"middle\">${badges.filter(b => b.progress && !b.unlockedAt).length}</text>\n          <text x=\"510\" y=\"70\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">In</text>\n          <text x=\"510\" y=\"90\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Progress</text>\n        </g>\n        \n        <!-- Top Badges Section -->\n        ${topBadges.length > 0 ? `\n        <text x=\"${width/2}\" y=\"350\" font-family=\"system-ui\" font-size=\"24\" font-weight=\"600\" fill=\"${textColor}\" text-anchor=\"middle\">\n          Featured Achievements\n        </text>\n        \n        <g transform=\"translate(${width/2 - (topBadges.length * 150)}, 380)\">\n          ${topBadges.map((badge, index) => {\n            const x = index * 300\n            const rarityColor = badge.rarity === 'legendary' ? '#ff8c00' : \n                               badge.rarity === 'epic' ? '#a335ee' : \n                               badge.rarity === 'rare' ? '#0070dd' : '#ffd700'\n            return `\n            <g transform=\"translate(${x}, 0)\">\n              <rect x=\"0\" y=\"0\" width=\"280\" height=\"180\" rx=\"15\" fill=\"rgba(255,255,255,0.1)\" stroke=\"${rarityColor}\" stroke-width=\"2\"/>\n              <text x=\"140\" y=\"30\" font-family=\"system-ui\" font-size=\"32\" text-anchor=\"middle\">${badge.icon}</text>\n              <text x=\"140\" y=\"70\" font-family=\"system-ui\" font-size=\"18\" font-weight=\"600\" fill=\"${rarityColor}\" text-anchor=\"middle\">${badge.name}</text>\n              <text x=\"140\" y=\"100\" font-family=\"system-ui\" font-size=\"14\" fill=\"#b0b0b0\" text-anchor=\"middle\">${badge.rarity?.toUpperCase() || 'COMMON'}</text>\n              ${badge.tier ? `<text x=\"140\" y=\"130\" font-family=\"system-ui\" font-size=\"12\" fill=\"#888\" text-anchor=\"middle\">Tier ${badge.tier}</text>` : ''}\n              <text x=\"140\" y=\"160\" font-family=\"system-ui\" font-size=\"10\" fill=\"#666\" text-anchor=\"middle\">${badge.unlockedAt ? new Date(badge.unlockedAt).toLocaleDateString() : ''}</text>\n            </g>\n            `\n          }).join('')}\n        </g>\n        ` : ''}\n        \n        <!-- Footer -->\n        <text x=\"${width/2}\" y=\"${height - 40}\" font-family=\"system-ui\" font-size=\"18\" fill=\"#888\" text-anchor=\"middle\">\n          Pixel Journey Ecosystem • PxMarket\n        </text>\n      </svg>\n    `\n\n    return `data:image/svg+xml;base64,${btoa(svg)}`\n  }\n\n  /**\n   * Generate share image for inventory selection\n   */\n  generateInventoryShareImage(\n    selectedItems: InventoryItem[],\n    totalValue: string,\n    username: string,\n    config: ShareImageConfig = {}\n  ): string {\n    const { width, height, textColor, accentColor } = {\n      ...this.defaultConfig,\n      ...config\n    }\n\n    // Get top 6 items by rarity\n    const topItems = selectedItems\n      .sort((a, b) => {\n        const rarityOrder = { legendary: 4, epic: 3, rare: 2, common: 1 }\n        return (rarityOrder[b.rarity as keyof typeof rarityOrder] || 1) - (rarityOrder[a.rarity as keyof typeof rarityOrder] || 1)\n      })\n      .slice(0, 6)\n\n    const svg = `\n      <svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <linearGradient id=\"bgGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop offset=\"0%\" style=\"stop-color:#1a1a2e;stop-opacity:1\" />\n            <stop offset=\"50%\" style=\"stop-color:#16213e;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#0f3460;stop-opacity:1\" />\n          </linearGradient>\n          <linearGradient id=\"titleGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:#ffd700;stop-opacity:1\" />\n            <stop offset=\"50%\" style=\"stop-color:#ffed4e;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#ffd700;stop-opacity:1\" />\n          </linearGradient>\n        </defs>\n        \n        <!-- Background -->\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#bgGradient)\"/>\n        \n        <!-- Header -->\n        <text x=\"${width/2}\" y=\"80\" font-family=\"system-ui, -apple-system, sans-serif\" font-size=\"48\" font-weight=\"bold\" fill=\"url(#titleGradient)\" text-anchor=\"middle\">\n          ${username}'s Collection\n        </text>\n        \n        <!-- Stats -->\n        <g transform=\"translate(${width/2 - 200}, 130)\">\n          <rect x=\"0\" y=\"0\" width=\"180\" height=\"100\" rx=\"15\" fill=\"rgba(255,255,255,0.1)\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"1\"/>\n          <text x=\"90\" y=\"35\" font-family=\"system-ui\" font-size=\"32\" font-weight=\"bold\" fill=\"${accentColor}\" text-anchor=\"middle\">${selectedItems.length}</text>\n          <text x=\"90\" y=\"60\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Selected</text>\n          <text x=\"90\" y=\"80\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Items</text>\n          \n          <rect x=\"220\" y=\"0\" width=\"180\" height=\"100\" rx=\"15\" fill=\"rgba(0,212,255,0.2)\" stroke=\"#00d4ff\" stroke-width=\"2\"/>\n          <text x=\"310\" y=\"35\" font-family=\"system-ui\" font-size=\"24\" font-weight=\"bold\" fill=\"#00d4ff\" text-anchor=\"middle\">${totalValue}</text>\n          <text x=\"310\" y=\"60\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Total</text>\n          <text x=\"310\" y=\"80\" font-family=\"system-ui\" font-size=\"16\" fill=\"#b0b0b0\" text-anchor=\"middle\">Value</text>\n        </g>\n        \n        <!-- Items Grid -->\n        ${topItems.length > 0 ? `\n        <text x=\"${width/2}\" y=\"290\" font-family=\"system-ui\" font-size=\"24\" font-weight=\"600\" fill=\"${textColor}\" text-anchor=\"middle\">\n          Featured Items\n        </text>\n        \n        <g transform=\"translate(${width/2 - (Math.min(topItems.length, 3) * 120)}, 320)\">\n          ${topItems.slice(0, 3).map((item, index) => {\n            const x = index * 240\n            const rarityColor = item.rarity === 'legendary' ? '#ff8c00' : \n                               item.rarity === 'epic' ? '#a335ee' : \n                               item.rarity === 'rare' ? '#0070dd' : '#ffd700'\n            return `\n            <g transform=\"translate(${x}, 0)\">\n              <rect x=\"0\" y=\"0\" width=\"220\" height=\"160\" rx=\"15\" fill=\"rgba(255,255,255,0.1)\" stroke=\"${rarityColor}\" stroke-width=\"2\"/>\n              <rect x=\"10\" y=\"10\" width=\"60\" height=\"60\" rx=\"8\" fill=\"rgba(0,0,0,0.3)\" stroke=\"${rarityColor}\" stroke-width=\"1\"/>\n              <text x=\"40\" y=\"50\" font-family=\"system-ui\" font-size=\"24\" text-anchor=\"middle\">🎨</text>\n              <text x=\"90\" y=\"30\" font-family=\"system-ui\" font-size=\"16\" font-weight=\"600\" fill=\"${textColor}\">${item.name.length > 15 ? item.name.substring(0, 15) + '...' : item.name}</text>\n              <text x=\"90\" y=\"50\" font-family=\"system-ui\" font-size=\"14\" fill=\"#b0b0b0\">${item.collection}</text>\n              <text x=\"90\" y=\"70\" font-family=\"system-ui\" font-size=\"12\" fill=\"${rarityColor}\">${item.rarity.toUpperCase()}</text>\n              ${item.quantity > 1 ? `<text x=\"200\" y=\"30\" font-family=\"system-ui\" font-size=\"14\" fill=\"${accentColor}\" text-anchor=\"end\">x${item.quantity}</text>` : ''}\n            </g>\n            `\n          }).join('')}\n        </g>\n        \n        ${topItems.length > 3 ? `\n        <g transform=\"translate(${width/2 - (Math.min(topItems.length - 3, 3) * 120)}, 500)\">\n          ${topItems.slice(3, 6).map((item, index) => {\n            const x = index * 240\n            const rarityColor = item.rarity === 'legendary' ? '#ff8c00' : \n                               item.rarity === 'epic' ? '#a335ee' : \n                               item.rarity === 'rare' ? '#0070dd' : '#ffd700'\n            return `\n            <g transform=\"translate(${x}, 0)\">\n              <rect x=\"0\" y=\"0\" width=\"220\" height=\"100\" rx=\"15\" fill=\"rgba(255,255,255,0.1)\" stroke=\"${rarityColor}\" stroke-width=\"2\"/>\n              <rect x=\"10\" y=\"10\" width=\"40\" height=\"40\" rx=\"6\" fill=\"rgba(0,0,0,0.3)\" stroke=\"${rarityColor}\" stroke-width=\"1\"/>\n              <text x=\"30\" y=\"35\" font-family=\"system-ui\" font-size=\"16\" text-anchor=\"middle\">🎨</text>\n              <text x=\"65\" y=\"25\" font-family=\"system-ui\" font-size=\"14\" font-weight=\"600\" fill=\"${textColor}\">${item.name.length > 12 ? item.name.substring(0, 12) + '...' : item.name}</text>\n              <text x=\"65\" y=\"45\" font-family=\"system-ui\" font-size=\"12\" fill=\"${rarityColor}\">${item.rarity.toUpperCase()}</text>\n              ${item.quantity > 1 ? `<text x=\"200\" y=\"25\" font-family=\"system-ui\" font-size=\"12\" fill=\"${accentColor}\" text-anchor=\"end\">x${item.quantity}</text>` : ''}\n            </g>\n            `\n          }).join('')}\n        </g>\n        ` : ''}\n        ` : ''}\n        \n        <!-- Footer -->\n        <text x=\"${width/2}\" y=\"${height - 40}\" font-family=\"system-ui\" font-size=\"18\" fill=\"#888\" text-anchor=\"middle\">\n          Pixel Journey Ecosystem • PxMarket\n        </text>\n      </svg>\n    `\n\n    return `data:image/svg+xml;base64,${btoa(svg)}`\n  }\n\n  /**\n   * Download generated image\n   */\n  downloadImage(dataUrl: string, filename: string): void {\n    const link = document.createElement('a')\n    link.download = filename\n    link.href = dataUrl\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  /**\n   * Convert SVG data URL to PNG (requires canvas)\n   */\n  async convertToPNG(svgDataUrl: string, width: number = 1200, height: number = 630): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      img.onload = () => {\n        const canvas = document.createElement('canvas')\n        canvas.width = width\n        canvas.height = height\n        const ctx = canvas.getContext('2d')\n        \n        if (!ctx) {\n          reject(new Error('Could not get canvas context'))\n          return\n        }\n        \n        ctx.drawImage(img, 0, 0, width, height)\n        resolve(canvas.toDataURL('image/png'))\n      }\n      img.onerror = reject\n      img.src = svgDataUrl\n    })\n  }\n}\n\n// Export singleton instance\nexport const shareImageGenerator = new ShareImageGenerator()\n\n// Export utility functions\nexport const generateAchievementShareImage = (\n  badges: UserBadge[],\n  totalBadges: number,\n  legendaryCount: number,\n  username: string,\n  config?: ShareImageConfig\n) => {\n  return shareImageGenerator.generateAchievementShareImage(badges, totalBadges, legendaryCount, username, config)\n}\n\nexport const generateInventoryShareImage = (\n  selectedItems: InventoryItem[],\n  totalValue: string,\n  username: string,\n  config?: ShareImageConfig\n) => {\n  return shareImageGenerator.generateInventoryShareImage(selectedItems, totalValue, username, config)\n}\n\nexport const downloadShareImage = (dataUrl: string, filename: string) => {\n  return shareImageGenerator.downloadImage(dataUrl, filename)\n}\n\nexport const convertShareImageToPNG = (svgDataUrl: string, width?: number, height?: number) => {\n  return shareImageGenerator.convertToPNG(svgDataUrl, width, height)\n}","import React, { useState } from 'react'\nimport { generateAchievementShareImage, generateInventoryShareImage, downloadShareImage, convertShareImageToPNG } from '../utils/shareImageGenerator'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\nimport type { UserBadge } from '../services/badgeService'\nimport '../css/social-share.css'\n\ninterface InventoryItem {\n  id: string\n  name: string\n  collection: string\n  rarity: string\n  quantity: number\n  image?: string\n}\n\ninterface ShareModalProps {\n  isOpen: boolean\n  onClose: () => void\n  title: string\n  description?: string\n  imageUrl?: string\n  shareUrl: string\n  defaultShareText: string\n  type?: 'nft' | 'collection' | 'template' | 'achievement' | 'inventory'\n  // Achievement-specific props\n  badges?: UserBadge[]\n  totalBadges?: number\n  legendaryCount?: number\n  username?: string\n  // Inventory-specific props\n  selectedItems?: InventoryItem[]\n  totalValue?: string\n}\n\nconst ShareModal: React.FC<ShareModalProps> = ({ \n  isOpen, \n  onClose, \n  title, \n  description, \n  imageUrl, \n  shareUrl, \n  defaultShareText,\n  type = 'nft',\n  badges,\n  totalBadges,\n  legendaryCount,\n  username,\n  selectedItems,\n  totalValue\n}) => {\n  const [copied, setCopied] = useState(false)\n  const [shareText, setShareText] = useState('')\n  const [generatingImage, setGeneratingImage] = useState(false)\n  const { showSuccess } = useNotifications()\n\n  // Generate randomized share messages based on content type\n  const getRandomizedShareText = () => {\n    let messages: string[] = []\n    \n    switch (type) {\n      case 'nft':\n        messages = [\n          `🎨 Check out this amazing NFT: ${title}! ✨`,\n          `🔥 Discovered this incredible ${title} NFT! 🚀`,\n          `✨ Look at this stunning ${title}! NFT art at its finest 🎭`,\n          `🌟 Found a gem! ${title} is absolutely beautiful 💎`,\n          `🎯 This ${title} NFT caught my eye! Amazing artwork 🎨`,\n          `💫 Showcasing ${title} - a true masterpiece! 🖼️`,\n          `🚀 Blown away by this ${title} NFT! ⭐`,\n          `🎪 Step right up and see ${title}! Fantastic NFT art 🎊`\n        ]\n        break\n      case 'collection':\n        messages = [\n          `🏛️ Explore the amazing ${title} collection! 🎨`,\n          `🔥 This ${title} collection is absolutely fire! 🚀`,\n          `✨ Dive into the world of ${title}! Incredible NFT collection 🌟`,\n          `💎 Discovered this gem of a collection: ${title}! 🎭`,\n          `🎯 ${title} collection has some amazing pieces! 🖼️`,\n          `🌈 The ${title} collection is a work of art! ✨`,\n          `🚀 Check out the stunning ${title} collection! ⭐`,\n          `🎪 Welcome to ${title} - an NFT wonderland! 🎊`\n        ]\n        break\n      case 'template':\n        messages = [\n          `🎨 Check out this ${title} template! Perfect for collectors ✨`,\n          `🔥 This ${title} template is incredible! 🚀`,\n          `✨ Found an amazing ${title} template! 🎭`,\n          `🌟 ${title} template - a collector's dream! 💎`,\n          `🎯 This ${title} template caught my attention! 🎨`,\n          `💫 Showcasing the ${title} template! 🖼️`,\n          `🚀 Amazing ${title} template available! ⭐`,\n          `🎪 Don't miss this ${title} template! 🎊`\n        ]\n        break\n      case 'achievement':\n        messages = [\n          `🏆 Just unlocked some amazing achievements! 🎉`,\n          `🔥 Check out my gaming achievements! 🚀`,\n          `✨ Proud of my latest achievements! 🎭`,\n          `🌟 Achievement unlocked! Gaming milestones reached 💎`,\n          `🎯 Showcasing my gaming achievements! 🎨`,\n          `💫 Level up! New achievements earned! 🖼️`,\n          `🚀 Gaming achievements on display! ⭐`,\n          `🎪 Celebrating my gaming milestones! 🎊`\n        ]\n        break\n      default:\n        messages = [defaultShareText]\n    }\n    \n    const randomIndex = Math.floor(Math.random() * messages.length)\n    return messages[randomIndex]\n  }\n  \n  // State for current randomized message\n  const [currentRandomText, setCurrentRandomText] = useState(() => \n    defaultShareText || getRandomizedShareText()\n  )\n  \n  // Use randomized text if no custom defaultShareText provided\n  const finalDefaultText = defaultShareText || currentRandomText\n  \n  // Ensure we have a proper share URL\n  const finalShareUrl = shareUrl || window.location.href\n  \n  // Function to regenerate random message\n  const regenerateMessage = () => {\n    if (!defaultShareText) {\n      setCurrentRandomText(getRandomizedShareText())\n    }\n  }\n\n  if (!isOpen) return null\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopied(true)\n      setTimeout(() => setCopied(false), 2000)\n    } catch (error) {\n      log.error('Failed to copy to clipboard', 'ShareModal', error as Error, { type, shareText })\n    }\n  }\n\n  const shareToTwitter = () => {\n    const text = shareText || finalDefaultText\n    const hashtags = type === 'collection' ? 'NFTCollection,WAX,PixelJourney' : \n                    type === 'template' ? 'NFTTemplate,WAX,PixelJourney' :\n                    type === 'achievement' ? 'Achievement,Gaming,PixelJourney' :\n                    'NFT,WAX,PixelJourney'\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(finalShareUrl)}&hashtags=${hashtags}`\n    window.open(twitterUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareToFacebook = () => {\n    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(finalShareUrl)}`\n    window.open(facebookUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareToReddit = () => {\n    const text = shareText || finalDefaultText\n    const redditUrl = `https://reddit.com/submit?url=${encodeURIComponent(finalShareUrl)}&title=${encodeURIComponent(text)}`\n    window.open(redditUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareToDiscord = () => {\n    const text = `${shareText || finalDefaultText}\\n${finalShareUrl}`\n    copyToClipboard(text)\n    showSuccess('Share text copied to clipboard! You can now paste it in Discord.', 'Copied to Clipboard')\n  }\n\n  const shareToTelegram = () => {\n    const text = shareText || finalDefaultText\n    const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(finalShareUrl)}&text=${encodeURIComponent(text)}`\n    window.open(telegramUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareViaEmail = () => {\n    const subject = `Check out: ${title}`\n    const body = `${shareText || finalDefaultText}\\n\\nView it here: ${finalShareUrl}`\n    const emailUrl = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`\n    window.location.href = emailUrl\n  }\n\n  const generateAndDownloadShareImage = async () => {\n    if (!username) return\n    \n    try {\n      setGeneratingImage(true)\n      let imageDataUrl: string\n      let filename: string\n      \n      if (type === 'achievement' && badges && totalBadges !== undefined && legendaryCount !== undefined) {\n        imageDataUrl = generateAchievementShareImage(badges, totalBadges, legendaryCount, username)\n        filename = `${username}-achievements-${Date.now()}.svg`\n      } else if (type === 'inventory' && selectedItems && totalValue) {\n        imageDataUrl = generateInventoryShareImage(selectedItems, totalValue, username)\n        filename = `${username}-inventory-${Date.now()}.svg`\n      } else {\n        return\n      }\n      \n      downloadShareImage(imageDataUrl, filename)\n    } catch (error) {\n      log.error('Error generating share image', 'ShareModal', error as Error, { type, username })\n    } finally {\n      setGeneratingImage(false)\n    }\n  }\n\n  const generateAndDownloadPNG = async () => {\n    if (!username) return\n    \n    try {\n      setGeneratingImage(true)\n      let svgDataUrl: string\n      let filename: string\n      \n      if (type === 'achievement' && badges && totalBadges !== undefined && legendaryCount !== undefined) {\n        svgDataUrl = generateAchievementShareImage(badges, totalBadges, legendaryCount, username)\n        filename = `${username}-achievements-${Date.now()}.png`\n      } else if (type === 'inventory' && selectedItems && totalValue) {\n        svgDataUrl = generateInventoryShareImage(selectedItems, totalValue, username)\n        filename = `${username}-inventory-${Date.now()}.png`\n      } else {\n        return\n      }\n      \n      const pngDataUrl = await convertShareImageToPNG(svgDataUrl)\n      downloadShareImage(pngDataUrl, filename)\n    } catch (error) {\n      log.error('Error generating PNG share image', 'ShareModal', error as Error, { type, username })\n    } finally {\n      setGeneratingImage(false)\n    }\n  }\n\n  return (\n    <div className=\"social-share-overlay\" onClick={onClose}>\n      <div className=\"social-share-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"share-header\">\n          <h3>Share {type === 'collection' ? 'Collection' : type === 'template' ? 'Template' : type === 'achievement' ? 'Achievement' : 'NFT'}</h3>\n          <button className=\"close-btn\" onClick={onClose}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"share-content\">\n          {imageUrl && (\n            <div className=\"nft-preview share-modal-preview\">\n              <img src={imageUrl} alt={title} className=\"nft-image\" />\n              <div className=\"nft-info\">\n                <h4>{title}</h4>\n                {description && <p>{description}</p>}\n              </div>\n            </div>\n          )}\n\n          <div className=\"share-text-section\">\n            <div className=\"share-text-header\">\n              <label htmlFor=\"share-text\">Customize your message:</label>\n              {!defaultShareText && (\n                <button \n                  className=\"refresh-message-btn\" \n                  onClick={regenerateMessage}\n                  title=\"Generate new random message\"\n                >\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                </button>\n              )}\n            </div>\n            <textarea\n              id=\"share-text\"\n              value={shareText}\n              onChange={(e) => setShareText(e.target.value)}\n              placeholder={finalDefaultText}\n              className=\"share-textarea\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"share-url-section\">\n            <label>Share URL:</label>\n            <div className=\"url-input-container\">\n              <input\n                type=\"text\"\n                value={finalShareUrl}\n                readOnly\n                className=\"url-input\"\n              />\n              <button\n                className={`copy-btn ${copied ? 'copied' : ''}`}\n                onClick={() => copyToClipboard(finalShareUrl)}\n              >\n                {copied ? (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                ) : (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n                    <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\n                  </svg>\n                )}\n                {copied ? 'Copied!' : 'Copy'}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"social-buttons\">\n            <button className=\"social-btn twitter\" onClick={shareToTwitter}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n              </svg>\n              Twitter\n            </button>\n\n            <button className=\"social-btn facebook\" onClick={shareToFacebook}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n              </svg>\n              Facebook\n            </button>\n\n            <button className=\"social-btn reddit\" onClick={shareToReddit}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z\"/>\n              </svg>\n              Reddit\n            </button>\n\n            <button className=\"social-btn discord\" onClick={shareToDiscord}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419-.0190 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1568 2.4189Z\"/>\n              </svg>\n              Discord\n            </button>\n\n            <button className=\"social-btn telegram\" onClick={shareToTelegram}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z\"/>\n              </svg>\n              Telegram\n            </button>\n\n            <button className=\"social-btn email\" onClick={shareViaEmail}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n              </svg>\n              Email\n            </button>\n          </div>\n\n          {(type === 'achievement' || type === 'inventory') && username && (\n            <div className=\"share-image-section\">\n              <h4>Generate Share Image</h4>\n              <div className=\"image-buttons\">\n                <button \n                  className=\"generate-btn svg\" \n                  onClick={generateAndDownloadShareImage}\n                  disabled={generatingImage}\n                >\n                  {generatingImage ? 'Generating...' : 'Download SVG'}\n                </button>\n                <button \n                  className=\"generate-btn png\" \n                  onClick={generateAndDownloadPNG}\n                  disabled={generatingImage}\n                >\n                  {generatingImage ? 'Generating...' : 'Download PNG'}\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ShareModal","import { apiService } from './api'\r\nimport { wharfKitService } from './wharfkit'\r\nimport { ErrorMessageService } from './errorMessageService'\r\nimport { log } from './loggingService'\r\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\r\n\r\nexport interface ChatMessage {\r\n  id: string\r\n  sender: string\r\n  message: string\r\n  timestamp: string\r\n  pxjAmount: string\r\n  transactionId: string\r\n  isSponsored: boolean\r\n  collectionTag?: string\r\n  messageType: 'normal' | 'sponsored' | 'premium'\r\n  characterCount: number\r\n}\r\n\r\nexport interface ChatCostInfo {\r\n  baseCost: number\r\n  characterCost: number\r\n  totalCost: number\r\n  hasPixalPFP: boolean\r\n  discount: number\r\n  isSponsored?: boolean\r\n}\r\n\r\nexport interface ChatFilters {\r\n  collection?: string\r\n  minPxjAmount?: number\r\n  maxPxjAmount?: number\r\n  hideSpam?: boolean\r\n  showOnlySponsored?: boolean\r\n}\r\n\r\nexport interface ModerationSettings {\r\n  blacklistedAccounts: string[]\r\n  bannedWords: string[]\r\n  trustedDomains: string[]\r\n  maxMessageLength: number\r\n  minTimeBetweenMessages: number // seconds\r\n}\r\n\r\nclass ChatService {\r\n  private readonly CHAT_ACCOUNT = 'chat.pxj'\r\n  private readonly PXJ_CONTRACT = 'pixeljourney'\r\n  private readonly PXJ_SYMBOL = 'PXJ'\r\n  \r\n  // Pricing constants\r\n  private readonly BASE_COST_PIXAL_HOLDER = 100 // 100 PXJ for Pixal holders\r\n  private readonly BASE_COST_NON_HOLDER = 10000 // 10,000 PXJ for non-holders\r\n  private readonly SPONSORED_COST_PIXAL_HOLDER = 10000 // 1000 PXJ for Pixal holders (10k PXJ)\r\n  private readonly SPONSORED_COST_NON_HOLDER = 25000 // 25000 PXJ for non-holders (25k PXJ)\r\n  \r\n  // Spam prevention\r\n  private readonly MIN_MESSAGE_COST = 100 // 100 PXJ minimum (aligned with holder base cost)\r\n\r\n  \r\n  private messageCache: Map<string, ChatMessage[]> = new Map()\r\n  private userRateLimit: Map<string, number[]> = new Map()\r\n  private blacklistedAccounts: Set<string> = new Set()\r\n  // Removed duplicate bannedWords - now using moderationSettings\r\n  \r\n  private moderationSettings: ModerationSettings = {\r\n    blacklistedAccounts: [],\r\n    bannedWords: ['spam', 'scam', 'hack', 'phishing'],\r\n    trustedDomains: ['wax.io', 'atomichub.io', 'wax.bloks.io', 'pixeljourney.io'],\r\n    maxMessageLength: 240,\r\n    minTimeBetweenMessages: 5\r\n  }\r\n  \r\n  private userLastMessageTime: Map<string, number> = new Map()\r\n  \r\n  /**\r\n   * Calculate the cost to send a message based on length and user privileges\r\n   */\r\n  async calculateMessageCost(message: string, userAccount: string, isSponsored: boolean = false): Promise<ChatCostInfo> {\r\n    const characterCount = message.length\r\n    const hasPixalPFP = await this.checkPixalPFPOwnership(userAccount)\r\n    \r\n    // Handle sponsored messages with fixed pricing\r\n    if (isSponsored) {\r\n      const sponsoredCost = hasPixalPFP ? this.SPONSORED_COST_PIXAL_HOLDER : this.SPONSORED_COST_NON_HOLDER\r\n      const discount = hasPixalPFP ? 60 : 0 // 60% discount for Pixal PFP holders (from 25k to 10k PXJ)\r\n      \r\n      return {\r\n        baseCost: sponsoredCost,\r\n        characterCost: 0,\r\n        totalCost: sponsoredCost,\r\n        hasPixalPFP,\r\n        discount,\r\n        isSponsored: true\r\n      }\r\n    }\r\n    \r\n    const baseCost = hasPixalPFP ? this.BASE_COST_PIXAL_HOLDER : this.BASE_COST_NON_HOLDER\r\n    \r\n    // Improved scaling: cost increases more significantly with character count\r\n    let characterMultiplier = 1\r\n    if (characterCount > 50) {\r\n      characterMultiplier = 1 + (characterCount - 50) / 50 // Increases by 100% per 50 chars\r\n    }\r\n    \r\n    const characterCost = Math.floor(baseCost * (characterMultiplier - 1))\r\n    const totalCost = Math.max(this.MIN_MESSAGE_COST, baseCost + characterCost)\r\n    \r\n    // Cap the maximum cost for holders at 500 PXJ (50000 units)\r\n    const maxCostForHolders = hasPixalPFP ? 50000 : totalCost\r\n    const finalCost = hasPixalPFP ? Math.min(totalCost, maxCostForHolders) : totalCost\r\n    \r\n    const discount = hasPixalPFP ? 99 : 0 // 99% discount for Pixal PFP holders (from 10k to 100 PXJ)\r\n    \r\n    return {\r\n      baseCost,\r\n      characterCost,\r\n      totalCost: finalCost,\r\n      hasPixalPFP,\r\n      discount,\r\n      isSponsored: false\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Check if user owns a Pixal PFP NFT (template 781515)\r\n   */\r\n  private async checkPixalPFPOwnership(userAccount: string): Promise<boolean> {\r\n    try {\r\n      const assets = await apiService.getUserInventory(userAccount)\r\n      if (!assets || assets.length === 0) {\r\n        return false\r\n      }\r\n      \r\n      // Check for Pixal PFP template 781515\r\n      const hasPixalPFP = assets.some(asset => \r\n        asset.template_id === '781515'\r\n      )\r\n      \r\n      return hasPixalPFP\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ChatService.checkPixalPFPOwnership', error, { userAccount })\r\n      return false\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Send a chat message by transferring PXJ with memo\r\n   */\r\n  async sendMessage(\r\n    message: string, \r\n    userAccount: string, \r\n    collectionTag?: string,\r\n    isSponsored: boolean = false\r\n  ): Promise<string> {\r\n    // Enhanced validation and moderation\r\n    this.validateMessageForSending(message, userAccount)\r\n    \r\n    const costInfo = await this.calculateMessageCost(message, userAccount)\r\n    let finalCost = costInfo.totalCost\r\n    let memo = message\r\n    \r\n    // Handle sponsored messages\r\n    if (isSponsored) {\r\n      const hasPixalPFP = await this.checkPixalPFPOwnership(userAccount)\r\n      finalCost = hasPixalPFP ? this.SPONSORED_COST_PIXAL_HOLDER : this.SPONSORED_COST_NON_HOLDER\r\n      memo = `::sponsored:: ${message}`\r\n    }\r\n    \r\n    // Add collection tag if specified\r\n    if (collectionTag) {\r\n      memo = `::col:${collectionTag}:: ${memo}`\r\n    }\r\n    \r\n    // Update last message time for rate limiting\r\n    this.userLastMessageTime.set(userAccount, Date.now())\r\n    \r\n    // Prepare transfer action\r\n    const transferAction = {\r\n      account: this.PXJ_CONTRACT,\r\n      name: 'transfer',\r\n      authorization: [{\r\n        actor: userAccount,\r\n        permission: 'active'\r\n      }],\r\n      data: {\r\n        from: userAccount,\r\n        to: this.CHAT_ACCOUNT,\r\n        quantity: `${(finalCost).toFixed(8)} ${this.PXJ_SYMBOL}`,\r\n        memo: memo\r\n      }\r\n    }\r\n    \r\n    try {\r\n      const result = await wharfKitService.transact([transferAction]) as any\r\n      \r\n      // Extract transaction ID from various possible response formats\r\n      let transactionId: string | null = null\r\n      \r\n      if (result) {\r\n        // Try different possible properties where transaction ID might be stored\r\n        transactionId = result.transaction_id || \r\n                       result.id || \r\n                       result.processed?.id || \r\n                       result.processed?.transaction_id ||\r\n                       (result.response && result.response.transaction_id) ||\r\n                       (result.transaction && result.transaction.id)\r\n      }\r\n      \r\n      if (transactionId) {\r\n        // Update rate limit\r\n        this.updateRateLimit(userAccount)\r\n        \r\n        // Clear cache to force refresh\r\n        this.messageCache.clear()\r\n        \r\n        return transactionId\r\n      } else {\r\n        // Log the actual result structure for debugging\r\n        log.warn('Unexpected transaction result format', 'ChatService.sendMessage', { result })\r\n        throw new Error('Transaction completed but transaction ID not found in response')\r\n      }\r\n    } catch (error) {\r\n      // Only show error if it's actually a transaction failure, not a parsing issue\r\n      if (error instanceof Error && error.message.includes('transaction ID not found')) {\r\n        // This might still be a successful transaction, just with unexpected response format\r\n        log.warn('Transaction may have succeeded but response format was unexpected', 'ChatService.sendMessage', { error })\r\n      }\r\n      ErrorMessageService.logError('ChatService.sendMessage', error, { messageLength: message.length })\r\n      throw new Error(`Failed to send message: ${error instanceof Error ? error.message : 'Unknown error'}`)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Fetch chat messages from blockchain\r\n   */\r\n  async getMessages(\r\n    filters: ChatFilters = {},\r\n    limit: number = 50,\r\n    offset: number = 0\r\n  ): Promise<ChatMessage[]> {\r\n    const cacheKey = JSON.stringify({ filters, limit, offset })\r\n    \r\n    // Check cache first\r\n    if (this.messageCache.has(cacheKey)) {\r\n      return this.messageCache.get(cacheKey)!\r\n    }\r\n    \r\n    try {\r\n      // Fetch transfers to chat account\r\n      const transfers = await apiService.getAccountTransfers(\r\n        this.CHAT_ACCOUNT,\r\n        this.PXJ_CONTRACT,\r\n        this.PXJ_SYMBOL,\r\n        limit,\r\n        offset\r\n      )\r\n      \r\n      if (!transfers || transfers.length === 0) {\r\n        return []\r\n      }\r\n      \r\n      const messages: ChatMessage[] = []\r\n      \r\n      for (const transfer of transfers) {\r\n        const message = this.parseTransferToMessage(transfer)\r\n        if (message && this.applyFilters(message, filters) && !this.isMessageBlockedByModeration(message)) {\r\n          messages.push(message)\r\n        }\r\n      }\r\n      \r\n      // Sort by timestamp (newest first)\r\n      messages.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\r\n      \r\n      // Cache the results\r\n      this.messageCache.set(cacheKey, messages)\r\n      \r\n      return messages\r\n    } catch (error) {\r\n      ErrorMessageService.logError('ChatService.loadMessages', error)\r\n      return []\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Parse a blockchain transfer into a chat message\r\n   */\r\n  private parseTransferToMessage(transfer: {\r\n    memo?: string\r\n    from: string\r\n    quantity: string\r\n    timestamp: string\r\n    transaction_id: string\r\n  }): ChatMessage | null {\r\n    try {\r\n      const memo = String(transfer.memo || '')\r\n      const sender = transfer.from\r\n      const amount = transfer.quantity\r\n      const timestamp = transfer.timestamp\r\n      const transactionId = transfer.transaction_id\r\n      \r\n      // Skip if sender is blacklisted\r\n      if (this.blacklistedAccounts.has(sender)) {\r\n        return null\r\n      }\r\n      \r\n      // Parse memo for special tags\r\n      let message = memo\r\n      let isSponsored = false\r\n      let collectionTag: string | undefined\r\n      let messageType: 'normal' | 'sponsored' | 'premium' = 'normal'\r\n      \r\n      // Check for sponsored tag\r\n      if (memo.startsWith('::sponsored::')) {\r\n        // Validate that the PXJ amount meets the minimum for sponsored messages\r\n        const pxjAmount = parseFloat(amount.split(' ')[0])\r\n        const minSponsoredAmount = 1000 // 1000 PXJ minimum (10k PXJ in base units)\r\n        \r\n        if (pxjAmount >= minSponsoredAmount) {\r\n          isSponsored = true\r\n          messageType = 'sponsored'\r\n          message = memo.replace('::sponsored::', '').trim()\r\n        } else {\r\n          // If insufficient PXJ for sponsored, treat as normal message but remove the sponsored tag\r\n          message = memo.replace('::sponsored::', '').trim()\r\n        }\r\n      }\r\n      \r\n      // Check for collection tag\r\n      const collectionMatch = memo.match(/::col:([^:]+)::/)\r\n      if (collectionMatch) {\r\n        collectionTag = collectionMatch[1]\r\n        message = message.replace(collectionMatch[0], '').trim()\r\n      }\r\n      \r\n      // Determine message type based on PXJ amount\r\n      const pxjAmount = parseFloat(amount.split(' ')[0])\r\n      if (pxjAmount >= 10) { // 10+ PXJ = premium message\r\n        messageType = 'premium'\r\n      }\r\n      \r\n      return {\r\n        id: `${transactionId}_${sender}`,\r\n        sender,\r\n        message,\r\n        timestamp,\r\n        pxjAmount: amount,\r\n        transactionId,\r\n        isSponsored,\r\n        collectionTag,\r\n        messageType,\r\n        characterCount: message.length\r\n      }\r\n    } catch (error) {\r\n      const errorObj = error instanceof Error ? error : new Error('Failed to parse transfer to message')\r\n      ErrorMessageService.logError('ChatService.parseTransferToMessage', errorObj, {\r\n        transfer: transfer?.transaction_id || 'unknown'\r\n      })\r\n      return null\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Apply filters to messages\r\n   */\r\n  private applyFilters(message: ChatMessage, filters: ChatFilters): boolean {\r\n    // Collection filter\r\n    if (filters.collection && message.collectionTag !== filters.collection) {\r\n      return false\r\n    }\r\n    \r\n    // Minimum PXJ amount filter\r\n    if (filters.minPxjAmount) {\r\n      const amount = parseFloat(message.pxjAmount.split(' ')[0])\r\n      if (amount < filters.minPxjAmount) {\r\n        return false\r\n      }\r\n    }\r\n    \r\n    // Maximum PXJ amount filter\r\n    if (filters.maxPxjAmount) {\r\n      const amount = parseFloat(message.pxjAmount.split(' ')[0])\r\n      if (amount > filters.maxPxjAmount) {\r\n        return false\r\n      }\r\n    }\r\n    \r\n    // Hide spam filter\r\n    if (filters.hideSpam && this.isSpamMessage(message)) {\r\n      return false\r\n    }\r\n    \r\n    // Show only sponsored filter\r\n    if (filters.showOnlySponsored && !message.isSponsored) {\r\n      return false\r\n    }\r\n    \r\n    return true\r\n  }\r\n  \r\n  /**\r\n   * Check if message is spam\r\n   */\r\n  private isSpamMessage(message: ChatMessage): boolean {\r\n    const text = message.message.toLowerCase()\r\n    return this.moderationSettings.bannedWords.some((word: string) => text.includes(word))\r\n  }\r\n  \r\n\r\n  \r\n  /**\r\n   * Update rate limit for user\r\n   */\r\n  private updateRateLimit(userAccount: string): void {\r\n    const now = Date.now()\r\n    const userMessages = this.userRateLimit.get(userAccount) || []\r\n    userMessages.push(now)\r\n    this.userRateLimit.set(userAccount, userMessages)\r\n  }\r\n  \r\n\r\n  \r\n  /**\r\n   * Add account to blacklist\r\n   */\r\n  blacklistAccount(account: string): void {\r\n    this.blacklistedAccounts.add(account)\r\n  }\r\n  \r\n  /**\r\n   * Remove account from blacklist\r\n   */\r\n  unblacklistAccount(account: string): void {\r\n    this.blacklistedAccounts.delete(account)\r\n  }\r\n  \r\n  /**\r\n   * Clear message cache\r\n   */\r\n  clearCache(): void {\r\n    this.messageCache.clear()\r\n  }\r\n  \r\n  /**\r\n   * Get user's avatar URL (Wax profile or Pixal PFP)\r\n   */\r\n  async getUserAvatar(userAccount: string): Promise<string> {\r\n    try {\r\n      // First try to get Pixal PFP\r\n      const inventory = await apiService.getUserInventory(userAccount)\r\n      const pixalAssets = inventory.filter(asset => asset.collection === 'pixeljourney' && asset.schema === 'Pixal')\r\n      if (pixalAssets && pixalAssets.length > 0) {\r\n        const asset = pixalAssets[0]\r\n        if (asset.traits && asset.traits.img && typeof asset.traits.img === 'string') {\r\n          return `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${asset.traits.img.startsWith('Qm') ? asset.traits.img : asset.traits.img}`\r\n        }\r\n      }\r\n      \r\n      // Fallback to default avatar\r\n      return `${API_ENDPOINTS.AVATAR.DICEBEAR}?seed=${userAccount}`\r\n    } catch (error) {\r\n      const errorObj = error instanceof Error ? error : new Error('Failed to get user avatar')\r\n      ErrorMessageService.logError('ChatService.getUserAvatar', errorObj, {\r\n        userAccount\r\n      })\r\n      return `${API_ENDPOINTS.AVATAR.DICEBEAR}?seed=${userAccount}`\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Enhanced message validation for sending\r\n   */\r\n  private validateMessageForSending(message: string, userAccount: string): void {\r\n    // Check if account is blacklisted\r\n    if (this.moderationSettings.blacklistedAccounts.includes(userAccount)) {\r\n      throw new Error('Account is blacklisted from sending messages.')\r\n    }\r\n    \r\n    // Check message length\r\n    if (message.length > this.moderationSettings.maxMessageLength) {\r\n      throw new Error(`Message too long. Maximum ${this.moderationSettings.maxMessageLength} characters allowed.`)\r\n    }\r\n    \r\n    // Check for banned words\r\n    const lowerMessage = message.toLowerCase()\r\n    for (const bannedWord of this.moderationSettings.bannedWords) {\r\n      if (lowerMessage.includes(bannedWord.toLowerCase())) {\r\n        throw new Error('Message contains prohibited content.')\r\n      }\r\n    }\r\n    \r\n    // Check time between messages\r\n    const lastMessageTime = this.userLastMessageTime.get(userAccount)\r\n    if (lastMessageTime) {\r\n      const timeDiff = (Date.now() - lastMessageTime) / 1000\r\n      if (timeDiff < this.moderationSettings.minTimeBetweenMessages) {\r\n        throw new Error(`Please wait ${this.moderationSettings.minTimeBetweenMessages - Math.floor(timeDiff)} more seconds before sending another message.`)\r\n      }\r\n    }\r\n    \r\n    // Verify links against trusted domains\r\n    this.verifyLinksInMessage(message)\r\n  }\r\n  \r\n  /**\r\n   * Check if message is blocked by moderation settings\r\n   */\r\n  private isMessageBlockedByModeration(message: ChatMessage): boolean {\r\n    // Check if sender is blacklisted\r\n    if (this.moderationSettings.blacklistedAccounts.includes(message.sender)) {\r\n      return true\r\n    }\r\n    \r\n    // Check for banned words\r\n    const lowerMessage = message.message.toLowerCase()\r\n    for (const bannedWord of this.moderationSettings.bannedWords) {\r\n      if (lowerMessage.includes(bannedWord.toLowerCase())) {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    return false\r\n  }\r\n  \r\n  /**\r\n   * Verify links in message against trusted domains\r\n   */\r\n  private verifyLinksInMessage(message: string): void {\r\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g\r\n    const urls = message.match(urlRegex)\r\n    \r\n    if (urls) {\r\n      for (const url of urls) {\r\n        try {\r\n          const urlObj = new URL(url)\r\n          const domain = urlObj.hostname.toLowerCase()\r\n          \r\n          // Check if domain is in trusted list\r\n          const isTrusted = this.moderationSettings.trustedDomains.some(trustedDomain => \r\n            domain === trustedDomain.toLowerCase() || domain.endsWith('.' + trustedDomain.toLowerCase())\r\n          )\r\n          \r\n          if (!isTrusted) {\r\n            throw new Error(`Links to ${domain} are not allowed. Only trusted domains are permitted.`)\r\n          }\r\n        } catch (error) {\r\n          if (error instanceof Error && error.message.includes('not allowed')) {\r\n            throw error\r\n          }\r\n          throw new Error('Invalid URL detected in message.')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update moderation settings\r\n   */\r\n  updateModerationSettings(settings: Partial<ModerationSettings>): void {\r\n    this.moderationSettings = { ...this.moderationSettings, ...settings }\r\n  }\r\n  \r\n  /**\r\n   * Get current moderation settings\r\n   */\r\n  getModerationSettings(): ModerationSettings {\r\n    return { ...this.moderationSettings }\r\n  }\r\n}\r\n\r\nexport const chatService = new ChatService()\r\nexport default chatService","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { chatService, type ChatMessage, type ChatCostInfo } from '../services/chatService'\nimport { formatSafeMarkdown } from '../utils/sanitize'\nimport { WharfKitService } from '../services/wharfkit'\nimport type { NFTAsset } from '../services/api'\nimport '../css/listing-chat-modal.css'\n\ninterface ListingChatModalProps {\n  isOpen: boolean\n  onClose: () => void\n  nft: NFTAsset\n}\n\nexport const ListingChatModal: React.FC<ListingChatModalProps> = ({ isOpen, onClose, nft }) => {\n  const { account, session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  \n  const [messages, setMessages] = useState<ChatMessage[]>([])\n  const [newMessage, setNewMessage] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSending, setIsSending] = useState(false)\n  const [costInfo, setCostInfo] = useState<ChatCostInfo | null>(null)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  \n  // Create listing-specific tag\n  const listingTag = `listing:${nft.sale_id || nft.asset_id}`\n  \n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }, [])\n  \n  const loadMessages = useCallback(async (refresh = false) => {\n    if (!refresh && messages.length > 0) return\n    \n    setIsLoading(true)\n    try {\n      // Load messages with listing-specific filter\n      const listingMessages = await chatService.getMessages({\n        collection: listingTag,\n        hideSpam: true\n      }, 50)\n      \n      setMessages(listingMessages)\n    } catch (error) {\n      console.error('Error loading listing messages:', error)\n      showError('Failed to load messages')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [listingTag, messages.length, showError])\n  \n  const updateCostInfo = useCallback(async () => {\n    if (!account || !newMessage.trim()) {\n      setCostInfo(null)\n      return\n    }\n    \n    try {\n      const cost = await chatService.calculateMessageCost(newMessage, account)\n      setCostInfo(cost)\n    } catch (error) {\n      console.error('Error calculating cost:', error)\n    }\n  }, [account, newMessage])\n  \n  const sendMessage = async () => {\n    if (!account || !newMessage.trim() || !session) {\n      showError('Please connect your wallet to send messages')\n      return\n    }\n    \n    if (!nft.seller) {\n      showError('Seller information not available')\n      return\n    }\n    \n    if (nft.seller === WharfKitService.safeGetActor(session)) {\n      showError('You cannot message yourself')\n      return\n    }\n    \n    setIsSending(true)\n    \n    try {\n      // Format message with listing tag and seller reference\n      const messageWithTags = `${listingTag} :${nft.seller}: ${newMessage.trim()}`\n      \n      const txId = await chatService.sendMessage(\n        messageWithTags,\n        account\n      )\n      \n      showSuccess('Message sent!', `Transaction: ${txId.substring(0, 8)}...`)\n      setNewMessage('')\n      setCostInfo(null)\n      \n      // Refresh messages after a short delay\n      setTimeout(() => {\n        loadMessages(true)\n      }, 2000)\n      \n    } catch (error) {\n      console.error('Error sending message:', error)\n      \n      // Check if this might be a successful transaction with unexpected response format\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n      if (errorMessage.includes('transaction ID not found')) {\n        showError(\n          'Message Status Unclear', \n          'Your message may have been sent successfully. Please check your transaction history or refresh the chat to confirm.'\n        )\n      } else {\n        showError('Failed to send message', errorMessage)\n      }\n    } finally {\n      setIsSending(false)\n    }\n  }\n  \n  // Load messages when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      loadMessages()\n    }\n  }, [isOpen, loadMessages])\n  \n  // Update cost info when message changes\n  useEffect(() => {\n    const debounceTimer = setTimeout(updateCostInfo, 300)\n    return () => clearTimeout(debounceTimer)\n  }, [updateCostInfo])\n  \n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages, scrollToBottom])\n  \n  // Handle escape key to close modal\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose()\n      }\n    }\n    \n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n      return () => document.removeEventListener('keydown', handleEscape)\n    }\n  }, [isOpen, onClose])\n  \n  if (!isOpen) return null\n  \n  return (\n    <div className=\"listing-chat-modal-backdrop\" onClick={onClose}>\n      <div className=\"listing-chat-modal\" onClick={(e) => e.stopPropagation()}>\n        {/* Header */}\n        <div className=\"listing-chat-header\">\n          <div className=\"listing-chat-header-left\">\n            <div className=\"listing-info\">\n              <img \n                src={nft.image || '/placeholder-nft.png'} \n                alt={nft.name}\n                className=\"listing-nft-image\"\n              />\n              <div className=\"listing-details\">\n                <h3 className=\"listing-title\">{nft.name}</h3>\n                <p className=\"listing-seller\">Seller: {nft.seller}</p>\n                {nft.price && (\n                  <p className=\"listing-price\">{nft.price}</p>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"listing-chat-header-right\">\n            <button \n              className=\"chat_btn chat_btn--icon\"\n              onClick={() => loadMessages(true)}\n              disabled={isLoading}\n              title=\"Refresh messages\"\n            >\n              <span className={`chat_refresh-icon ${isLoading ? 'chat_refresh-icon--spinning' : ''}`}>🔄</span>\n            </button>\n            <button \n              className=\"chat_btn chat_btn--icon\"\n              onClick={onClose}\n              title=\"Close chat\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n        \n        {/* Messages */}\n        <div className=\"listing-chat-messages\">\n          {isLoading && messages.length === 0 ? (\n            <div className=\"chat_loading\">Loading messages...</div>\n          ) : messages.length === 0 ? (\n            <div className=\"chat_empty\">\n              <p>No messages yet for this listing.</p>\n              <p>Be the first to start the conversation!</p>\n            </div>\n          ) : (\n            messages.map((message) => (\n              <div key={message.id} className={`chat_message chat_message--${message.messageType || 'normal'}`}>\n                <div className=\"chat_message-header\">\n                  <div className=\"chat_message-avatar\">\n                    <img \n                      src={`https://wax.atomichub.io/v1/accounts/${message.sender}/avatar`}\n                      alt={message.sender}\n                      className=\"chat_avatar\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement\n                        target.src = '/default-avatar.png'\n                      }}\n                    />\n                  </div>\n                  <div className=\"chat_message-info\">\n                    <span className=\"chat_sender\">{message.sender}</span>\n                    <span className=\"chat_timestamp\">\n                      {new Date(message.timestamp).toLocaleString()}\n                    </span>\n                    {message.pxjAmount && (\n                      <span className=\"chat_amount\">{message.pxjAmount}</span>\n                    )}\n                  </div>\n                  <div className=\"chat_message-actions\">\n                    {message.transactionId && (\n                      <a \n                        href={`https://waxblock.io/transaction/${message.transactionId}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"chat_tx-link\"\n                        title=\"View transaction\"\n                      >\n                        🔗\n                      </a>\n                    )}\n                  </div>\n                </div>\n                <div \n                  className=\"chat_message-content\"\n                  dangerouslySetInnerHTML={{ __html: formatSafeMarkdown(message.message) }}\n                />\n              </div>\n            ))\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n        \n        {/* Input Section */}\n        <div className=\"listing-chat-input-section\">\n          {costInfo && (\n            <div className=\"chat_cost-info\">\n              <div className=\"chat_cost-display\">\n                <span>Message Cost: <span className=\"chat_cost-amount\">{(costInfo.totalCost / 10000).toFixed(4)} PXJ</span></span>\n                <button \n                  className=\"chat_info-btn\"\n                  onClick={() => setShowPriceInfo(!showPriceInfo)}\n                  title=\"View price breakdown\"\n                >\n                  ℹ️\n                </button>\n              </div>\n              {costInfo.hasPixalPFP && (\n                <span className=\"chat_discount\">Pixal PFP Discount: {costInfo.discount}%</span>\n              )}\n              <span className=\"chat_char-count\">\n                {newMessage.length}/240 chars\n              </span>\n              {showPriceInfo && (\n                <div className=\"chat_price-tooltip\">\n                  <div className=\"chat_price-content\">\n                    <h4>Price Breakdown</h4>\n                    <div className=\"price-factor\">\n                      <span>Base Cost:</span>\n                      <span>{(costInfo.baseCost / 10000).toFixed(4)} PXJ</span>\n                    </div>\n                    <div className=\"price-factor\">\n                      <span>Character Cost ({newMessage.length} chars):</span>\n                      <span>{((costInfo.totalCost - costInfo.baseCost) / 10000).toFixed(4)} PXJ</span>\n                    </div>\n                    {costInfo.hasPixalPFP && (\n                      <div className=\"price-factor discount\">\n                        <span>Pixal PFP Discount ({costInfo.discount}%):</span>\n                        <span>-{((costInfo.baseCost + (costInfo.totalCost - costInfo.baseCost)) * (costInfo.discount / 100) / 10000).toFixed(4)} PXJ</span>\n                      </div>\n                    )}\n                    <div className=\"price-factor total\">\n                      <span>Total:</span>\n                      <span>{(costInfo.totalCost / 10000).toFixed(4)} PXJ</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          \n          <div className=\"listing-chat-input-wrapper\">\n            <textarea\n              className=\"listing-chat-input\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder={`Send a message about ${nft.name}...`}\n              maxLength={240}\n              rows={3}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault()\n                  sendMessage()\n                }\n              }}\n            />\n            <button \n              className=\"listing-chat-send-btn\"\n              onClick={sendMessage}\n              disabled={!newMessage.trim() || isSending || !account}\n            >\n              {isSending ? '⏳' : '📤'}\n            </button>\n          </div>\n          \n          {!account && (\n            <div className=\"listing-chat-connect-notice\">\n              Please connect your wallet to send messages\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ListingChatModal","// Utility functions for extracting media URLs from different data structures\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\n// Type definitions for media extraction\nexport interface MediaAsset {\n  asset_id?: string\n  image?: string\n  video?: string\n  img?: string\n  data?: Record<string, unknown> | {\n    img?: string\n    video?: string\n    rarity?: string\n  }\n  template?: {\n    template_id: string\n    max_supply: string\n    immutable_data?: Record<string, unknown> & {\n      img?: string\n      video?: string\n      rarity?: string\n      name?: string\n    }\n  }\n}\n\nexport interface SaleWithAssets {\n  assets?: MediaAsset[]\n}\n\n// IPFS gateway with fallback support\nconst getIPFSUrl = (hash: string): string => {\n  // Use a random gateway for load balancing and better reliability\n  const gateways = API_ENDPOINTS.IPFS.GATEWAYS\n  const randomGateway = gateways[Math.floor(Math.random() * gateways.length)]\n  return `${randomGateway}${hash}`\n}\n\nexport const getAssetImageUrl = (asset: MediaAsset | null | undefined): string | undefined => {\n  if (!asset) return undefined\n  \n  // First check if the asset already has a processed image URL (for marketplace NFTs)\n  if (asset.image && typeof asset.image === 'string') {\n    return asset.image\n  }\n  \n  // Then check the raw data structure (for inventory/collection NFTs)\n  let imgData: string | undefined\n  if (asset.data && typeof asset.data === 'object' && 'img' in asset.data) {\n    imgData = asset.data.img as string\n  }\n  if (!imgData) {\n    imgData = asset.template?.immutable_data?.img || asset.img\n  }\n  if (!imgData) return undefined\n  if (typeof imgData === 'string') {\n    if (imgData.startsWith('http')) return imgData\n    if (imgData.startsWith('Qm')) return getIPFSUrl(imgData)\n    return imgData\n  }\n  return undefined\n}\n\nexport const getAssetVideoUrl = (asset: MediaAsset | null | undefined): string | null => {\n  if (!asset) return null\n  \n  // First check if the asset already has a processed video URL (for marketplace NFTs)\n  if (asset.video && typeof asset.video === 'string') {\n    return asset.video\n  }\n  \n  // Then check the raw data structure (for inventory/collection NFTs)\n  let videoData: string | undefined\n  if (asset.data && typeof asset.data === 'object' && 'video' in asset.data) {\n    videoData = asset.data.video as string\n  }\n  if (!videoData) {\n    videoData = asset.template?.immutable_data?.video || asset.video\n  }\n  if (!videoData) return null\n  if (typeof videoData === 'string') {\n    if (videoData.startsWith('http')) return videoData\n    if (videoData.startsWith('Qm')) return getIPFSUrl(videoData)\n    return videoData\n  }\n  return null\n}\n\n// Template-specific media functions\nexport const getTemplateImageUrl = (template: { immutable_data?: Record<string, unknown>; data?: { img?: string }; img?: string; template?: { immutable_data?: { img?: string } } }): string | undefined => {\n  if (!template) return undefined\n  \n  const imgData = template.immutable_data?.img || template.data?.img || template.img || template.template?.immutable_data?.img\n  if (!imgData) return undefined\n  if (typeof imgData === 'string') {\n    if (imgData.startsWith('http')) return imgData\n    if (imgData.startsWith('Qm')) return getIPFSUrl(imgData)\n    return imgData\n  }\n  return undefined\n}\n\nexport const getTemplateVideoUrl = (template: { immutable_data?: Record<string, unknown>; data?: { video?: string }; video?: string; template?: { immutable_data?: { video?: string } } }): string | null => {\n  if (!template) return null\n  \n  const videoData = template.immutable_data?.video || template.data?.video || template.video || template.template?.immutable_data?.video\n  if (!videoData) return null\n  if (typeof videoData === 'string') {\n    if (videoData.startsWith('http')) return videoData\n    if (videoData.startsWith('Qm')) return getIPFSUrl(videoData)\n    return videoData\n  }\n  return null\n}\n\nexport const getSaleAssetImageUrl = (sale: SaleWithAssets | null | undefined): string | undefined => {\n  const asset = sale?.assets?.[0]\n  return getAssetImageUrl(asset)\n}\n\nexport const getSaleAssetVideoUrl = (sale: SaleWithAssets | null | undefined): string | null => {\n  const asset = sale?.assets?.[0]\n  return getAssetVideoUrl(asset)\n}\n\n// Utility function to create IPFS URLs with fallback support\nexport const createIPFSUrl = (hash: string): string => {\n  if (!hash) return ''\n  if (hash.startsWith('http')) return hash\n  return getIPFSUrl(hash)\n}\n\n// Utility function to get image URL with IPFS fallback\nexport const getImageUrlWithFallback = (imgPath: string | undefined, fallback?: string): string => {\n  if (!imgPath) return fallback || API_ENDPOINTS.IPFS.GATEWAYS[0] + 'placeholder'\n  if (imgPath.startsWith('http')) return imgPath\n  if (imgPath.startsWith('Qm')) return getIPFSUrl(imgPath)\n  return imgPath\n}","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport type { NFTAsset } from '../services/api'\nimport { apiService } from '../services/api'\nimport { priceService } from '../services/priceService'\nimport { cartService } from '../services/cartService'\nimport watchlistService from '../services/watchlistService'\nimport { wharfKitService, WharfKitService } from '../services/wharfkit'\nimport { useWallet } from '../hooks/useWallet'\nimport SendOfferModal from './SendOfferModal'\nimport ShareModal from './ShareModal'\nimport ListingChatModal from './ListingChatModal'\nimport MediaRenderer from './MediaRenderer'\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\n\ninterface NFTDetailsModalProps {\n  nft: NFTAsset | null\n  isOpen: boolean\n  onClose: () => void\n  usdPrice?: string\n}\n\nconst NFTDetailsModal: React.FC<NFTDetailsModalProps> = ({ nft, isOpen, onClose, usdPrice }) => {\n  const navigate = useNavigate()\n  const { settings } = useDisplaySettings()\n  const [localUsdPrice, setLocalUsdPrice] = useState<string>('$0.00')\n  const [isInCart, setIsInCart] = useState(false)\n  const [isInWatchlist, setIsInWatchlist] = useState(false)\n  const [showShareModal, setShowShareModal] = useState(false)\n  const [showSendOfferModal, setShowSendOfferModal] = useState(false)\n  const [showChatModal, setShowChatModal] = useState(false)\n  \n  interface SessionData {\n    actor?: {\n      toString(): string\n    }\n    [key: string]: unknown\n  }\n  \n  const [session, setSession] = useState<SessionData | null>(null)\n  const { isConnected, purchaseNFT, login } = useWallet()\n  const { showSuccess, showError, showWarning } = useNotifications()\n  // Transaction tracking now handled directly by WharfKit through WalletProvider\n\n  const [collectionStats, setCollectionStats] = useState<{\n    floorPrice: string\n    volume24h: string\n    totalSales: string\n    avgPrice: string\n  } | null>(null)\n  const [recentActivity, setRecentActivity] = useState<Array<{\n    type: 'sale' | 'listing'\n    price: string\n    time: string\n  }>>([])\n  const [priceHistory, setPriceHistory] = useState<Array<{\n    timestamp: number\n    price: number\n    volume: number\n  }>>([])\n\n  // Initialize session\n  useEffect(() => {\n    const initSession = async () => {\n      try {\n        const currentSession = wharfKitService.getSession()\n        if (currentSession) {\n          setSession({\n            ...currentSession,\n            actor: WharfKitService.safeGetActor(currentSession)\n          })\n        } else {\n          setSession(null)\n        }\n      } catch (error) {\n        log.info('No active session', 'NFTDetailsModal', error)\n      }\n    }\n    initSession()\n  }, [])\n\n  // Fetch collection stats and activity when modal opens\n  useEffect(() => {\n    if (isOpen && nft) {\n      fetchCollectionStats()\n      fetchRecentActivity()\n      fetchPriceHistory()\n    }\n  }, [isOpen, nft])\n  \n  const fetchCollectionStats = async () => {\n    if (!nft?.collection) return\n    \n    try {\n      // Get collection stats from API\n      const stats = await apiService.getCollectionStats(nft.collection)\n      if (stats) {\n        setCollectionStats({\n          floorPrice: stats.floor_price || '0',\n          volume24h: stats.volume_24h || '0',\n          totalSales: stats.sales || '0',\n          avgPrice: stats.averagePrice || '0'\n        })\n      }\n    } catch (error) {\n      log.error('Error fetching collection stats', 'NFTDetailsModal', error as Error)\n    }\n  }\n  \n  const fetchRecentActivity = async () => {\n    if (!nft?.collection) return\n    \n    try {\n      // Get recent sales for this collection\n      const recentSales = await apiService.getSales({\n        collection_name: nft.collection,\n        state: '3', // completed sales\n        limit: 5,\n        sort: 'updated',\n        order: 'desc'\n      })\n      \n      if (recentSales.success && recentSales.data) {\n        const activities = recentSales.data.map(sale => ({\n          type: 'sale',\n          price: `${(parseFloat(sale.price?.amount || '0') / Math.pow(10, sale.price?.token_precision || 8)).toFixed(4)} ${sale.price?.token_symbol || 'WAX'}`,\n          time: new Date(parseInt(sale.updated_at_time) * 1000).toLocaleString()\n        }))\n        setRecentActivity(activities as Array<{type: 'sale' | 'listing', price: string, time: string}>)\n      }\n    } catch (error) {\n      log.error('Error fetching recent activity', 'NFTDetailsModal', error as Error)\n    }\n  }\n\n  const fetchPriceHistory = async () => {\n    if (!nft?.collection) return\n    \n    try {\n      const history = await apiService.getCollectionPriceHistory(nft.collection, '7d')\n      setPriceHistory(history)\n    } catch (error) {\n      log.error('Error fetching price history', 'NFTDetailsModal', error as Error)\n      setPriceHistory([])\n    }\n  }\n\n  // Handle direct messaging to seller\n  const handleMessageSeller = () => {\n    setShowChatModal(true)\n  }\n\n  useEffect(() => {\n    if (nft && !usdPrice && nft.price) {\n      priceService.convertWaxToUSDAsync(nft.price).then(setLocalUsdPrice)\n    }\n  }, [nft, usdPrice])\n\n  useEffect(() => {\n    const checkStatus = async () => {\n      if (nft) {\n        const cart = cartService.getCart()\n        setIsInCart(cart.some(item => item.nft.asset_id === nft.asset_id))\n        \n        const watchlist = await watchlistService.getWatchlist()\n        setIsInWatchlist(watchlist.some((item) => item.nft.asset_id === nft.asset_id))\n      }\n    }\n    checkStatus()\n  }, [nft])\n\n  useEffect(() => {\n    const updateCartStatus = () => {\n      if (nft) {\n        const cart = cartService.getCart()\n        setIsInCart(cart.some(item => item.nft.asset_id === nft.asset_id))\n      }\n    }\n\n    const updateWatchlistStatus = async () => {\n      if (nft) {\n        const watchlist = await watchlistService.getWatchlist()\n        setIsInWatchlist(watchlist.some((item) => item.nft.asset_id === nft.asset_id))\n      }\n    }\n\n    cartService.addListener(updateCartStatus)\n    const unsubscribeWatchlist = watchlistService.subscribe(updateWatchlistStatus)\n    \n    return () => {\n      cartService.removeListener(updateCartStatus)\n      unsubscribeWatchlist()\n    }\n  }, [nft])\n\n // Navigation functions\n  const handleCollectionClick = () => {\n    if (!nft) return\n    onClose()\n    navigate(`/collections/${nft.collection}`)\n  }\n\n  const handleSchemaClick = () => {\n    if (!nft) return\n    window.open(`https://wax.atomichub.io/explorer/schema/wax-mainnet/${nft.collection}/${nft.schema}`, '_blank')\n  }\n\n  const handleAssetClick = () => {\n    if (!nft) return\n    onClose()\n    navigate(`/assets/${nft.asset_id}`)\n  }\n\n  const handleSellerClick = () => {\n    if (!nft || !nft.seller) return\n    onClose()\n    navigate(`/user-profile-lookup?user=${encodeURIComponent(nft.seller)}`)\n  }\n\n  if (!isOpen || !nft) return null\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose()\n    }\n  }\n\n  const formatTraits = (traits: Record<string, string | number | boolean | null | undefined>) => {\n    return Object.entries(traits).filter(([key, value]) => \n      key !== 'img' && key !== 'video' && key !== 'name' && value !== null && value !== undefined\n    )\n  }\n\n  const handleBuyNow = async () => {\n    if (!isConnected) {\n      try {\n        await login()\n      } catch (error) {\n        log.error('Login failed', 'NFTDetailsModal', error as Error)\n        return\n      }\n    }\n\n    if (!nft.sale_id) {\n      showWarning('This NFT is not for sale')\n      return\n    }\n\n    if (!nft.sale_id || !nft.price) {\n      showError('NFT is not available for purchase')\n      return\n    }\n\n    try {\n      const priceValue = nft.price.replace(' WAX', '')\n      \n      await purchaseNFT(nft.sale_id, priceValue)\n      showSuccess('Purchase successful!')\n      onClose()\n    } catch (error) {\n      log.error('Purchase failed', 'NFTDetailsModal', error as Error)\n      showError('Purchase failed. Please try again.')\n    }\n  }\n\n\n\n  return (\n    <div className=\"modal-backdrop\" onClick={handleBackdropClick}>\n      <div className=\"modal-content nft-details-modal\">\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">{nft.name}</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"nft-details-container\">\n            {/* Top Section - Image and Basic Info */}\n            <div className=\"nft-details-top\">\n              {/* Left Column - Image/Video */}\n              <div className=\"nft-media-section\">\n                <div className=\"nft-media-container\">\n                  <MediaRenderer\n                    imageUrl={getAssetImageUrl(nft)}\n                    videoUrl={getAssetVideoUrl(nft)}\n                    alt={nft.name}\n                    className=\"nft-media\"\n                    controls={true}\n                    loop={true}\n                    muted={true}\n                    enableAnimations={settings.enableAnimatedNFTs}\n                  />\n                  {(nft.template_mint || nft.max_supply) && (\n                    <div className=\"mint-info\">\n                      Mint: {nft.template_mint !== undefined && nft.template_mint !== null ? nft.template_mint : '?'} / {nft.max_supply === '0' || nft.max_supply === undefined || nft.max_supply === null ? '∞' : nft.max_supply}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Right Column - Basic Info */}\n              <div className=\"nft-info-section\">\n                <div className=\"info-card\">\n                  <h3 className=\"info-title\">Basic Information</h3>\n                  <div className=\"info-grid\">\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Collection:</span>\n                      <span className=\"info-value info-link\" onClick={handleCollectionClick} title=\"View collection on AtomicHub\">\n                        {nft.collection}\n                      </span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Schema:</span>\n                      <span className=\"info-value info-link\" onClick={handleSchemaClick} title=\"View schema on AtomicHub\">\n                        {nft.schema}\n                      </span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Asset ID:</span>\n                      <span className=\"info-value info-link\" onClick={handleAssetClick} title=\"View asset on AtomicHub\">\n                        {nft.asset_id}\n                      </span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Seller:</span>\n                      <span className=\"info-value info-link\" onClick={handleSellerClick} title=\"View seller profile\">\n                        {nft.seller}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Price Info */}\n                <div className=\"info-card\">\n                  <h3 className=\"info-title\">Price Information</h3>\n                  <div className=\"price-display\">\n                    <div className=\"price-main\">{nft.price}</div>\n                    <div className=\"price-usd\">{usdPrice || localUsdPrice}</div>\n                  </div>\n                </div>\n\n                {/* Attributes */}\n                {nft.traits && Object.keys(nft.traits).length > 0 && (\n                  <div className=\"info-card\">\n                    <h3 className=\"info-title\">Attributes</h3>\n                    <div className=\"attributes-grid\">\n                      {formatTraits(nft.traits).map(([key, value]) => (\n                        <div key={key} className=\"attribute-item\">\n                          <div className=\"attribute-label\">{key}</div>\n                          <div className=\"attribute-value\">{String(value)}</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Statistics */}\n                <div className=\"info-card\">\n                  <h3 className=\"info-title\">Statistics</h3>\n                  <div className=\"nft-statistics\">\n                    <div className=\"stats-grid\">\n                      <div className=\"stat-item\">\n                        <span className=\"stat-label\">Floor Price</span>\n                        <span className=\"stat-value\">\n                          {collectionStats ? `${parseFloat(collectionStats.floorPrice).toFixed(4)} WAX` : 'Loading...'}\n                        </span>\n                      </div>\n                      <div className=\"stat-item\">\n                        <span className=\"stat-label\">24h Volume</span>\n                        <span className=\"stat-value\">\n                          {collectionStats ? `${parseFloat(collectionStats.volume24h).toFixed(2)} WAX` : 'Loading...'}\n                        </span>\n                      </div>\n                      <div className=\"stat-item\">\n                        <span className=\"stat-label\">Total Sales</span>\n                        <span className=\"stat-value\">\n                          {collectionStats ? collectionStats.totalSales : 'Loading...'}\n                        </span>\n                      </div>\n                      <div className=\"stat-item\">\n                        <span className=\"stat-label\">Avg Sale Price</span>\n                        <span className=\"stat-value\">\n                          {collectionStats ? `${parseFloat(collectionStats.avgPrice).toFixed(4)} WAX` : 'Loading...'}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            {/* Price History and Activity Section */}\n            <div className=\"nft-details-bottom\">\n              <div className=\"info-card\">\n                <h3 className=\"info-title\">Price History & Activity</h3>\n                <div className=\"nft-statistics\">\n                  <div className=\"price-history-section\">\n                    <h4 className=\"price-history-title\">Recent Price History</h4>\n                    <div className=\"price-history-chart\">\n                        {priceHistory.length > 0 ? (\n                          <div className=\"chart-placeholder\">\n                            <svg viewBox=\"0 0 400 120\" className=\"price-chart\">\n                              {/* Grid lines */}\n                              {[0, 1, 2, 3, 4].map(i => (\n                                <line\n                                  key={`grid-${i}`}\n                                  x1=\"20\"\n                                  y1={20 + i * 20}\n                                  x2=\"380\"\n                                  y2={20 + i * 20}\n                                  stroke=\"var(--border-color)\"\n                                  strokeWidth=\"1\"\n                                  opacity=\"0.3\"\n                                />\n                              ))}\n                              \n                              {/* Price line */}\n                              {priceHistory.length > 1 && (\n                                <polyline\n                                  fill=\"none\"\n                                  stroke=\"var(--accent-color)\"\n                                  strokeWidth=\"2\"\n                                  points={priceHistory.map((point, index) => {\n                                    const x = 20 + (index / (priceHistory.length - 1)) * 360\n                                    const maxPrice = Math.max(...priceHistory.map(p => p.price))\n                                    const minPrice = Math.min(...priceHistory.map(p => p.price))\n                                    const priceRange = maxPrice - minPrice || 1\n                                    const y = 100 - ((point.price - minPrice) / priceRange) * 60\n                                    return `${x},${y}`\n                                  }).join(' ')}\n                                />\n                              )}\n                              \n                              {/* Data points */}\n                              {priceHistory.map((point, index) => {\n                                const x = 20 + (index / (priceHistory.length - 1)) * 360\n                                const maxPrice = Math.max(...priceHistory.map(p => p.price))\n                                const minPrice = Math.min(...priceHistory.map(p => p.price))\n                                const priceRange = maxPrice - minPrice || 1\n                                const y = 100 - ((point.price - minPrice) / priceRange) * 60\n                                return (\n                                  <circle\n                                    key={index}\n                                    cx={x}\n                                    cy={y}\n                                    r=\"3\"\n                                    fill=\"var(--accent-color)\"\n                                  />\n                                )\n                              })}\n                            </svg>\n                            <div className=\"chart-labels\">\n                              <span>{priceHistory.length > 0 ? new Date(priceHistory[0].timestamp).toLocaleDateString() : '7d ago'}</span>\n                              <span>{priceHistory.length > 0 ? new Date(priceHistory[priceHistory.length - 1].timestamp).toLocaleDateString() : 'Now'}</span>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"chart-placeholder\">\n                            <div className=\"loading-chart\">Loading price history...</div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"trading-activity\">\n                      <h4 className=\"activity-title\">Recent Activity</h4>\n                      <div className=\"activity-list\">\n                        {recentActivity.length > 0 ? (\n                          recentActivity.map((activity, index) => (\n                            <div key={index} className=\"activity-item\">\n                              <span className={`activity-type ${activity.type}`}>\n                                {activity.type === 'sale' ? 'Sale' : 'Listed'}\n                              </span>\n                              <span className=\"activity-price\">{activity.price}</span>\n                              <span className=\"activity-time\">{activity.time}</span>\n                            </div>\n                          ))\n                        ) : (\n                          <div className=\"activity-item\">\n                            <span className=\"activity-type\">Loading...</span>\n                            <span className=\"activity-price\">-</span>\n                            <span className=\"activity-time\">-</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <div className=\"modal-actions-left\">\n            {nft.sale_id ? (\n              <>\n                {/* Buy Now Button - Full sized primary button */}\n                <button \n                  className=\"listing-btn-buy-now\"\n                  onClick={handleBuyNow}\n                  title={`Buy now for ${nft.price} WAX`}\n                >\n                 <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\"><path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                  Buy Now\n                </button>\n                \n                {/* Make Offer Button - Full sized secondary button */}\n                <button \n                  className=\"btn-secondary\"\n                  onClick={() => setShowSendOfferModal(true)}\n                  title=\"Make Offer\"\n                >\n                  <svg viewBox=\"0 -8 72 72\" fill=\"currentColor\" style={{width: '24px', height: '24px', marginRight: '8px'}}>\n                  <path d=\"M64,12.78v17s-3.63.71-4.38.81-3.08.85-4.78-.78C52.22,27.25,42.93,18,42.93,18a3.54,3.54,0,0,0-4.18-.21c-2.36,1.24-5.87,3.07-7.33,3.78a3.37,3.37,0,0,1-5.06-2.64,3.44,3.44,0,0,1,2.1-3c3.33-2,10.36-6,13.29-7.52,1.78-1,3.06-1,5.51,1C50.27,12,53,14.27,53,14.27a2.75,2.75,0,0,0,2.26.43C58.63,14,64,12.78,64,12.78ZM27,41.5a3,3,0,0,0-3.55-4.09,3.07,3.07,0,0,0-.64-3,3.13,3.13,0,0,0-3-.75,3.07,3.07,0,0,0-.65-3,3.38,3.38,0,0,0-4.72.13c-1.38,1.32-2.27,3.72-1,5.14s2.64.55,3.72.3c-.3,1.07-1.2,2.07-.09,3.47s2.64.55,3.72.3c-.3,1.07-1.16,2.16-.1,3.46s2.84.61,4,.25c-.45,1.15-1.41,2.39-.18,3.79s4.08.75,5.47-.58a3.32,3.32,0,0,0,.3-4.68A3.18,3.18,0,0,0,27,41.5Zm25.35-8.82L41.62,22a3.53,3.53,0,0,0-3.77-.68c-1.5.66-3.43,1.56-4.89,2.24a8.15,8.15,0,0,1-3.29,1.1,5.59,5.59,0,0,1-3-10.34C29,12.73,34.09,10,34.09,10a6.46,6.46,0,0,0-5-2C25.67,8,18.51,12.7,18.51,12.7a5.61,5.61,0,0,1-4.93.13L8,10.89v19.4s1.59.46,3,1a6.33,6.33,0,0,1,1.56-2.47,6.17,6.17,0,0,1,8.48-.06,5.4,5.4,0,0,1,1.34,2.37,5.49,5.49,0,0,1,2.29,1.4A5.4,5.4,0,0,1,26,34.94a5.47,5.47,0,0,1,3.71,4,5.38,5.38,0,0,1,2.39,1.43,5.65,5.65,0,0,1,1.48,4.89a0,0,0,0,1,0,0s.8.9,1.29,1.39a2.46,2.46,0,0,0,3.48-3.48s2,2.48,4.28,1c2-1.4,1.69-3.06.74-4a3.19,3.19,0,0,0,4.77.13,2.45,2.45,0,0,0,.13-3.3s1.33,1.81,4,.12c1.89-1.6,1-3.43,0-4.39Z\"/>\n                </svg>\n                  Make Offer\n                </button>\n                \n                {/* Add to Cart Button */}\n                <button \n                  className={`btn-secondary ${isInCart ? 'in-cart' : ''}`}\n                  onClick={() => {\n                    if (isInCart) {\n                      cartService.removeFromCart(nft.asset_id)\n                    } else {\n                      const added = cartService.addToCart(nft)\n                      if (!added) {\n                        showWarning('Item is already in your cart!')\n                      }\n                    }\n                  }}\n                  title={isInCart ? 'Remove from cart' : 'Add to cart'}\n                >\n                  <div className=\"cart-icon-container\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" className=\"cart-icon\">\n                      <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                      <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                      <path d=\"m1 1 4 4 2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                    </svg>\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" className=\"cart-action-icon\">\n                      {isInCart ? (\n                        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                      ) : (\n                        <>\n                          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                        </>\n                      )}\n                    </svg>\n                  </div>\n                </button>\n              </>\n            ) : (\n              <button className=\"btn-disabled\" disabled>\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>\n                </svg>\n                Not Available\n              </button>\n            )}\n          </div>\n          \n          <div className=\"modal-actions-right\">\n            {/* View Full Details Button - Icon only */}\n            <button \n              className=\"btn-icon btn-external\"\n              onClick={handleAssetClick}\n              title=\"View full asset details page\"\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n                <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n              </svg>\n            </button>\n            \n            {/* Message Seller Button - Icon only */}\n            {nft?.seller && (\n              <button \n                className=\"btn-icon btn-message\"\n                onClick={() => handleMessageSeller()}\n                title=\"Send Direct Message (1000 PXJ)\"\n                disabled={!session || nft.seller === session?.actor}\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\n                </svg>\n              </button>\n            )}\n            \n            {/* Watchlist Button */}\n            <button \n              className={`btn-icon ${isInWatchlist ? 'in-watchlist' : ''}`}\n              onClick={async () => {\n                if (isInWatchlist) {\n                  await watchlistService.removeFromWatchlist(nft.asset_id)\n                } else {\n                  const added = await watchlistService.addToWatchlist(nft)\n                  if (!added) {\n                    showWarning('Item is already in your watchlist!')\n                  }\n                }\n              }}\n              title={isInWatchlist ? 'Remove from watchlist' : 'Add to watchlist'}\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                {isInWatchlist ? (\n                  <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" fill=\"currentColor\"></path>\n                ) : (\n                  <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>\n                )}\n              </svg>\n            </button>\n            \n            {/* Share Button */}\n            <button \n              className=\"btn-icon\"\n              onClick={() => setShowShareModal(true)}\n              title=\"Share\"\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path>\n                <polyline points=\"16,6 12,2 8,6\"></polyline>\n                <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"></line>\n              </svg>\n            </button>\n            \n            {/* Close Button */}\n            <button \n              className=\"btn-icon\"\n              onClick={onClose}\n              title=\"Close\"\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n\n\n      {/* Share Modal */}\n      {showShareModal && (\n        <ShareModal\n          isOpen={showShareModal}\n          onClose={() => setShowShareModal(false)}\n          title={nft?.name || 'NFT'}\n          description={`Check out this amazing NFT: ${nft?.name || 'Unnamed NFT'}`}\n          imageUrl={getAssetImageUrl(nft)}\n          shareUrl={`${window.location.origin}/assets/${nft?.asset_id}`}\n          defaultShareText={`Check out this NFT: ${nft?.name || 'Unnamed NFT'} on PxMarket! 🎮✨ View it at market.pixeljourney.xyz`}\n          type=\"nft\"\n        />\n      )}\n      \n      {/* Send Offer Modal */}\n      <SendOfferModal \n        isOpen={showSendOfferModal}\n        onClose={() => setShowSendOfferModal(false)}\n        nft={nft}\n      />\n      \n      {/* Listing Chat Modal */}\n      {nft && (\n        <ListingChatModal \n          isOpen={showChatModal}\n          onClose={() => setShowChatModal(false)}\n          nft={nft}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default NFTDetailsModal","import React, { useState, useEffect } from 'react'\nimport { apiService } from '../services/api'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { NFTAsset } from '../services/api'\nimport '../css/nft-comparison.css'\n\ninterface NFTComparisonProps {\n  isOpen: boolean\n  onClose: () => void\n  initialNFTs?: NFTAsset[]\n}\n\nconst NFTComparison: React.FC<NFTComparisonProps> = ({ isOpen, onClose, initialNFTs = [] }) => {\n  const [selectedNFTs, setSelectedNFTs] = useState<NFTAsset[]>(initialNFTs)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [searchResults, setSearchResults] = useState<NFTAsset[]>([])\n  const [isSearching, setIsSearching] = useState(false)\n  const { showWarning } = useNotifications()\n  const [comparisonMetrics, setComparisonMetrics] = useState({\n    showPrice: true,\n    showRarity: true,\n    showAttributes: true,\n    showCollection: true,\n    showSeller: true\n  })\n\n  useEffect(() => {\n    if (initialNFTs.length > 0) {\n      setSelectedNFTs(initialNFTs)\n    }\n  }, [initialNFTs])\n\n  const searchNFTs = async (query: string) => {\n    if (!query.trim()) {\n      setSearchResults([])\n      return\n    }\n\n    setIsSearching(true)\n    try {\n      // Use existing API methods to search for NFTs\n      const [pixelJourney, friedFactory, cryptoMuffins] = await Promise.all([\n        apiService.getWaxRockPixals(20),\n        apiService.getFriedFactoryNFTs(20),\n        apiService.getCryptoMuffinsNFTs(20)\n      ])\n      \n      const allNFTs = [...pixelJourney, ...friedFactory, ...cryptoMuffins]\n      const filtered = allNFTs.filter(nft => \n        nft.name.toLowerCase().includes(query.toLowerCase()) ||\n        nft.collection.toLowerCase().includes(query.toLowerCase())\n      )\n      \n      setSearchResults(filtered.slice(0, 10)) // Limit to 10 results\n    } catch (error) {\n      console.error('Error searching NFTs:', error)\n      setSearchResults([])\n    } finally {\n      setIsSearching(false)\n    }\n  }\n\n  const addNFTToComparison = (nft: NFTAsset) => {\n    if (selectedNFTs.length >= 4) {\n      showWarning('You can compare up to 4 NFTs at once', 'Comparison Limit')\n      return\n    }\n    \n    if (selectedNFTs.find(n => n.asset_id === nft.asset_id)) {\n      showWarning('This NFT is already in the comparison', 'Duplicate NFT')\n      return\n    }\n\n    setSelectedNFTs([...selectedNFTs, nft])\n    setSearchTerm('')\n    setSearchResults([])\n  }\n\n  const removeNFTFromComparison = (assetId: string) => {\n    setSelectedNFTs(selectedNFTs.filter(nft => nft.asset_id !== assetId))\n  }\n\n  const toggleMetric = (metric: keyof typeof comparisonMetrics) => {\n    setComparisonMetrics(prev => ({\n      ...prev,\n      [metric]: !prev[metric]\n    }))\n  }\n\n  const getRarityColor = (rarity?: string) => {\n    if (!rarity) return '#666'\n    switch (rarity.toLowerCase()) {\n      case 'common': return '#9CA3AF'\n      case 'rare': return '#3B82F6'\n      case 'epic': return '#8B5CF6'\n      case 'legendary': return '#F59E0B'\n      case 'mythic': return '#EF4444'\n      default: return '#666'\n    }\n  }\n\n  const getAttributeValue = (nft: NFTAsset, attributeName: string) => {\n    if (!nft.traits) return 'N/A'\n    const attr = nft.traits[attributeName]\n    return attr || 'N/A'\n  }\n\n  const getAllAttributes = () => {\n    const allAttributes = new Set<string>()\n    selectedNFTs.forEach(nft => {\n      if (nft.traits) {\n        Object.keys(nft.traits).forEach(key => {\n          if (key !== 'rarity') {\n            allAttributes.add(key)\n          }\n        })\n      }\n    })\n    return Array.from(allAttributes)\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"nft-comparison-overlay\">\n      <div className=\"nft-comparison-modal\">\n        <div className=\"comparison-header\">\n          <h2>NFT Comparison Tool</h2>\n          <button className=\"close-btn\" onClick={onClose}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"comparison-content\">\n          {/* Search Section */}\n          <div className=\"search-section\">\n            <div className=\"search-input-container\">\n              <input\n                type=\"text\"\n                placeholder=\"Search NFTs to add to comparison...\"\n                value={searchTerm}\n                onChange={(e) => {\n                  setSearchTerm(e.target.value)\n                  searchNFTs(e.target.value)\n                }}\n                className=\"search-input\"\n              />\n              {isSearching && <div className=\"search-loading\">Searching...</div>}\n            </div>\n            \n            {searchResults.length > 0 && (\n              <div className=\"search-results\">\n                {searchResults.map(nft => (\n                  <div key={nft.asset_id} className=\"search-result-item\" onClick={() => addNFTToComparison(nft)}>\n                    <img src={nft.image} alt={nft.name} className=\"result-image\" />\n                    <div className=\"result-info\">\n                      <div className=\"result-name\">{nft.name}</div>\n                      <div className=\"result-collection\">{nft.collection}</div>\n                      <div className=\"result-price\">{nft.price}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Comparison Metrics Toggle */}\n          <div className=\"metrics-toggle\">\n            <h3>Show Comparison Metrics:</h3>\n            <div className=\"toggle-buttons\">\n              {Object.entries(comparisonMetrics).map(([key, value]) => (\n                <button\n                  key={key}\n                  className={`toggle-btn ${value ? 'active' : ''}`}\n                  onClick={() => toggleMetric(key as keyof typeof comparisonMetrics)}\n                >\n                  {key.replace('show', '').replace(/([A-Z])/g, ' $1').trim()}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Comparison Table */}\n          {selectedNFTs.length > 0 ? (\n            <div className=\"comparison-table\">\n              <div className=\"comparison-grid\">\n                {/* Header Row */}\n                <div className=\"comparison-row header-row\">\n                  <div className=\"metric-label\">NFT</div>\n                  {selectedNFTs.map(nft => (\n                    <div key={nft.asset_id} className=\"nft-column\">\n                      <div className=\"nft-header\">\n                        <img src={nft.image} alt={nft.name} className=\"nft-image\" />\n                        <div className=\"nft-info\">\n                          <div className=\"nft-name\">{nft.name}</div>\n                          <div className=\"nft-id\">#{nft.asset_id}</div>\n                        </div>\n                        <button \n                          className=\"remove-nft-btn\"\n                          onClick={() => removeNFTFromComparison(nft.asset_id)}\n                          title=\"Remove from comparison\"\n                        >\n                          ×\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Price Row */}\n                {comparisonMetrics.showPrice && (\n                  <div className=\"comparison-row\">\n                    <div className=\"metric-label\">Price</div>\n                    {selectedNFTs.map(nft => (\n                      <div key={nft.asset_id} className=\"metric-value price\">\n                        {nft.price}\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Rarity Row */}\n                {comparisonMetrics.showRarity && (\n                  <div className=\"comparison-row\">\n                    <div className=\"metric-label\">Rarity</div>\n                    {selectedNFTs.map(nft => (\n                      <div key={nft.asset_id} className=\"metric-value rarity\">\n                        <span \n                          className=\"rarity-badge\"\n                          style={{ backgroundColor: getRarityColor(String(nft.traits?.rarity || 'Unknown')) }}\n                        >\n                          {nft.traits?.rarity || 'Unknown'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Collection Row */}\n                {comparisonMetrics.showCollection && (\n                  <div className=\"comparison-row\">\n                    <div className=\"metric-label\">Collection</div>\n                    {selectedNFTs.map(nft => (\n                      <div key={nft.asset_id} className=\"metric-value\">\n                        {nft.collection}\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Seller Row */}\n                {comparisonMetrics.showSeller && (\n                  <div className=\"comparison-row\">\n                    <div className=\"metric-label\">Seller</div>\n                    {selectedNFTs.map(nft => (\n                      <div key={nft.asset_id} className=\"metric-value\">\n                        {nft.seller}\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Attributes Rows */}\n                {comparisonMetrics.showAttributes && getAllAttributes().map(attributeName => (\n                  <div key={attributeName} className=\"comparison-row\">\n                    <div className=\"metric-label\">{attributeName}</div>\n                    {selectedNFTs.map(nft => (\n                      <div key={nft.asset_id} className=\"metric-value\">\n                        {getAttributeValue(nft, attributeName)}\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div className=\"empty-comparison\">\n              <div className=\"empty-icon\">📊</div>\n              <h3>No NFTs to Compare</h3>\n              <p>Search and add NFTs above to start comparing their attributes, prices, and more.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NFTComparison","import React, { useState } from 'react'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { NFTAsset } from '../services/api'\nimport { log } from '../services/loggingService'\nimport '../css/social-share.css'\n\ninterface SocialShareProps {\n  nft: NFTAsset\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst SocialShare: React.FC<SocialShareProps> = ({ nft, isOpen, onClose }) => {\n  const [copied, setCopied] = useState(false)\n  const [shareText, setShareText] = useState('')\n  const { showSuccess } = useNotifications()\n  \n  // Array of randomized share messages\n  const shareMessages = [\n    `🎨 Check out this amazing NFT: ${nft.name} from ${nft.collection}! ✨`,\n    `🔥 Discovered this incredible ${nft.name} NFT! Part of the ${nft.collection} collection 🚀`,\n    `✨ Look at this stunning ${nft.name} from ${nft.collection}! NFT art at its finest 🎭`,\n    `🌟 Found a gem! ${nft.name} from the ${nft.collection} collection is absolutely beautiful 💎`,\n    `🎯 This ${nft.name} NFT caught my eye! Amazing work from ${nft.collection} 🎨`,\n    `💫 Showcasing ${nft.name} - a masterpiece from ${nft.collection}! 🖼️`,\n    `🚀 Blown away by this ${nft.name} NFT! ${nft.collection} never disappoints ⭐`,\n    `🎪 Step right up and see ${nft.name}! Another fantastic piece from ${nft.collection} 🎊`\n  ]\n  \n  // Get a random message\n  const getRandomShareText = () => {\n    const randomIndex = Math.floor(Math.random() * shareMessages.length)\n    return shareMessages[randomIndex]\n  }\n  \n  const [defaultShareText, setDefaultShareText] = useState(() => getRandomShareText())\n\n  if (!isOpen) return null\n\n  // Generate proper share URL based on current page context\n  const currentPath = window.location.pathname\n  let shareUrl = `${window.location.origin}/assets/${nft.asset_id}`\n  \n  // If we're on a listing page, use the listing URL instead\n  if (currentPath.includes('/listings/')) {\n    shareUrl = window.location.href\n  }\n  \n  // Function to regenerate random message\n  const regenerateMessage = () => {\n    setDefaultShareText(getRandomShareText())\n    if (!shareText) {\n      // If user hasn't typed anything, this will update the placeholder\n    }\n  }\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopied(true)\n      setTimeout(() => setCopied(false), 2000)\n    } catch (error) {\n      log.error('Failed to copy to clipboard', 'SocialShare.copyToClipboard', error as Error)\n    }\n  }\n\n  const shareToTwitter = () => {\n    const text = shareText || defaultShareText\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(shareUrl)}&hashtags=NFT,WAX,PixelJourney`\n    window.open(twitterUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareToFacebook = () => {\n    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`\n    window.open(facebookUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareToReddit = () => {\n    const text = shareText || defaultShareText\n    const redditUrl = `https://reddit.com/submit?url=${encodeURIComponent(shareUrl)}&title=${encodeURIComponent(text)}`\n    window.open(redditUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareToDiscord = () => {\n    const text = `${shareText || defaultShareText}\\n${shareUrl}`\n    copyToClipboard(text)\n    showSuccess('Share text copied to clipboard! You can now paste it in Discord.', 'Copied to Clipboard')\n  }\n\n  const shareToTelegram = () => {\n    const text = shareText || defaultShareText\n    const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(text)}`\n    window.open(telegramUrl, '_blank', 'width=550,height=420')\n  }\n\n  const shareViaEmail = () => {\n    const subject = `Check out this NFT: ${nft.name}`\n    const body = `${shareText || defaultShareText}\\n\\nView it here: ${shareUrl}`\n    const emailUrl = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`\n    window.location.href = emailUrl\n  }\n\n  return (\n    <div className=\"social-share-overlay\" onClick={onClose}>\n      <div className=\"social-share-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"share-header\">\n          <h3>Share NFT</h3>\n          <button className=\"close-btn\" onClick={onClose}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"share-content\">\n          <div className=\"nft-preview\">\n            <img src={nft.image} alt={nft.name} className=\"nft-image\" />\n            <div className=\"nft-info\">\n              <h4>{nft.name}</h4>\n              <p>\n                {typeof nft.collection === 'string'\n                  ? nft.collection\n                  : (nft.collection as { collection_name?: string; name?: string })?.collection_name ||\n                    (nft.collection as { collection_name?: string; name?: string })?.name ||\n                    'Unknown'}\n              </p>\n              <span className=\"nft-price\">{nft.price}</span>\n            </div>\n          </div>\n\n          <div className=\"share-text-section\">\n            <div className=\"share-text-header\">\n              <label htmlFor=\"share-text\">Customize your message:</label>\n              <button \n                className=\"refresh-message-btn\" \n                onClick={regenerateMessage}\n                title=\"Generate new random message\"\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n              </button>\n            </div>\n            <textarea\n              id=\"share-text\"\n              value={shareText}\n              onChange={(e) => setShareText(e.target.value)}\n              placeholder={defaultShareText}\n              className=\"share-textarea\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"share-url-section\">\n            <label>Share URL:</label>\n            <div className=\"url-input-container\">\n              <input\n                type=\"text\"\n                value={shareUrl}\n                readOnly\n                className=\"url-input\"\n              />\n              <button\n                className={`copy-btn ${copied ? 'copied' : ''}`}\n                onClick={() => copyToClipboard(shareUrl)}\n              >\n                {copied ? (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                ) : (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n                    <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\n                  </svg>\n                )}\n                {copied ? 'Copied!' : 'Copy'}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"social-buttons\">\n            <button className=\"social-btn twitter\" onClick={shareToTwitter}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n              </svg>\n              Twitter\n            </button>\n\n            <button className=\"social-btn facebook\" onClick={shareToFacebook}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n              </svg>\n              Facebook\n            </button>\n\n            <button className=\"social-btn reddit\" onClick={shareToReddit}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z\"/>\n              </svg>\n              Reddit\n            </button>\n\n            <button className=\"social-btn discord\" onClick={shareToDiscord}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419-.0190 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1568 2.4189Z\"/>\n              </svg>\n              Discord\n            </button>\n\n            <button className=\"social-btn telegram\" onClick={shareToTelegram}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z\"/>\n              </svg>\n              Telegram\n            </button>\n\n            <button className=\"social-btn email\" onClick={shareViaEmail}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n              </svg>\n              Email\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SocialShare","import React from 'react'\r\nimport '../css/error-message.css'\r\nimport { type ErrorMessageConfig, ErrorMessageService } from '../services/errorMessageService'\r\n\r\ninterface ErrorMessageProps {\r\n  title?: string\r\n  message?: string\r\n  onRetry?: () => void\r\n  showRetry?: boolean\r\n  error?: unknown\r\n  errorConfig?: ErrorMessageConfig\r\n  errorType?: keyof typeof ErrorMessageService.MESSAGES\r\n  isRetrying?: boolean\r\n  retryCount?: number\r\n  maxRetries?: number\r\n}\r\n\r\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({ \r\n  title, \r\n  message,\r\n  onRetry,\r\n  showRetry = true,\r\n  error,\r\n  errorConfig,\r\n  errorType,\r\n  isRetrying = false,\r\n  retryCount = 0,\r\n  maxRetries = 3\r\n}) => {\r\n  // Determine which error configuration to use\r\n  let finalConfig: ErrorMessageConfig\r\n  \r\n  if (errorConfig) {\r\n    finalConfig = errorConfig\r\n  } else if (errorType) {\r\n    finalConfig = ErrorMessageService.getMessage(errorType)\r\n  } else if (error) {\r\n    finalConfig = ErrorMessageService.formatError(error)\r\n  } else {\r\n    finalConfig = {\r\n      title: title || \"Oh no! Something went wrong\",\r\n      message: message || \"We're having trouble loading the data right now. Please try again in a moment.\",\r\n      action: \"Try Again\"\r\n    }\r\n  }\r\n  \r\n  const displayTitle = title || finalConfig.title\r\n  const displayMessage = message || finalConfig.message\r\n  const actionText = isRetrying ? \"Retrying...\" : (finalConfig.action || \"Try Again\")\r\n  \r\n  // Determine error icon based on error type\r\n  const getErrorIcon = () => {\r\n    if (isRetrying) return \"🔄\"\r\n    \r\n    switch (errorType) {\r\n      case 'NETWORK_ERROR':\r\n        return \"📡\"\r\n      case 'TIMEOUT_ERROR':\r\n        return \"⏱️\"\r\n      case 'API_ERROR':\r\n        return \"⚠️\"\r\n      case 'LOAD_FAILED':\r\n        return \"📂\"\r\n      default:\r\n        return \"😅\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={`error-message ${isRetrying ? 'retrying' : ''}`}>\r\n      <div className=\"error-content\">\r\n        <div className={`error-icon ${isRetrying ? 'spinning' : ''}`}>\r\n          {getErrorIcon()}\r\n        </div>\r\n        <h3 className=\"error-title\">{displayTitle}</h3>\r\n        <p className=\"error-text\">{displayMessage}</p>\r\n        \r\n        {retryCount > 0 && !isRetrying && (\r\n          <div className=\"retry-status\">\r\n            <span className=\"retry-count\">Attempt {retryCount} of {maxRetries}</span>\r\n          </div>\r\n        )}\r\n        \r\n        {showRetry && onRetry && (\r\n          <button \r\n            className={`error-retry-btn ${isRetrying ? 'retrying' : ''}`} \r\n            onClick={onRetry}\r\n            disabled={isRetrying || retryCount >= maxRetries}\r\n          >\r\n            {isRetrying && <span className=\"retry-spinner\"></span>}\r\n            {actionText}\r\n          </button>\r\n        )}\r\n        \r\n        {retryCount >= maxRetries && (\r\n          <div className=\"max-retries-reached\">\r\n            <p>Maximum retry attempts reached. Please refresh the page or try again later.</p>\r\n            <button \r\n              className=\"error-refresh-btn\" \r\n              onClick={() => window.location.reload()}\r\n            >\r\n              Refresh Page\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport '../css/advanced-search.css'\n\ninterface SearchSuggestion {\n  text: string\n  type: 'name' | 'collection' | 'schema' | 'history'\n  count?: number\n}\n\ninterface AdvancedSearchProps {\n  searchTerm: string\n  onSearchChange: (term: string) => void\n  suggestions?: SearchSuggestion[]\n  placeholder?: string\n  showFilters?: boolean\n  onFilterChange?: (filters: SearchFilters) => void\n  className?: string\n}\n\ninterface SearchFilters {\n  priceRange: { min: string; max: string }\n  rarities: string[]\n  collections: string[]\n  schemas: string[]\n  sortBy: string\n}\n\nconst SEARCH_HISTORY_KEY = 'pixeljourney_search_history'\nconst MAX_HISTORY_ITEMS = 10\n\nconst AdvancedSearch: React.FC<AdvancedSearchProps> = ({\n  searchTerm,\n  onSearchChange,\n  suggestions = [],\n  placeholder = \"Search NFTs, collections, schemas...\",\n  showFilters = false,\n  onFilterChange,\n  className = ''\n}) => {\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const [searchHistory, setSearchHistory] = useState<string[]>([])\n  const [filters, setFilters] = useState<SearchFilters>({\n    priceRange: { min: '', max: '' },\n    rarities: [],\n    collections: [],\n    schemas: [],\n    sortBy: 'relevance'\n  })\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false)\n  \n  const searchInputRef = useRef<HTMLInputElement>(null)\n  const suggestionsRef = useRef<HTMLDivElement>(null)\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1)\n\n  // Load search history from localStorage\n  useEffect(() => {\n    const savedHistory = localStorage.getItem(SEARCH_HISTORY_KEY)\n    if (savedHistory) {\n      try {\n        setSearchHistory(JSON.parse(savedHistory))\n      } catch (error) {\n        console.error('Failed to parse search history:', error)\n      }\n    }\n  }, [])\n\n  // Save search to history\n  const saveToHistory = useCallback((term: string) => {\n    if (!term.trim() || term.length < 2) return\n    \n    const newHistory = [term, ...searchHistory.filter(item => item !== term)]\n      .slice(0, MAX_HISTORY_ITEMS)\n    \n    setSearchHistory(newHistory)\n    localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(newHistory))\n  }, [searchHistory])\n\n  // Clear search history\n  const clearHistory = useCallback(() => {\n    setSearchHistory([])\n    localStorage.removeItem(SEARCH_HISTORY_KEY)\n  }, [])\n\n  // Handle search input change\n  const handleSearchChange = useCallback((value: string) => {\n    onSearchChange(value)\n    setSelectedSuggestionIndex(-1)\n    \n    if (value.length >= 2) {\n      setShowSuggestions(true)\n    } else {\n      setShowSuggestions(false)\n    }\n  }, [onSearchChange])\n\n  // Handle search submit\n  const handleSearchSubmit = useCallback(() => {\n    if (searchTerm.trim()) {\n      saveToHistory(searchTerm.trim())\n      setShowSuggestions(false)\n      searchInputRef.current?.blur()\n    }\n  }, [searchTerm, saveToHistory])\n\n  // Handle suggestion click\n  const handleSuggestionClick = useCallback((suggestion: SearchSuggestion) => {\n    handleSearchChange(suggestion.text)\n    saveToHistory(suggestion.text)\n    setShowSuggestions(false)\n  }, [handleSearchChange, saveToHistory])\n\n  // Handle keyboard navigation\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (!showSuggestions) return\n\n    const allSuggestions = [\n      ...searchHistory.map(item => ({ text: item, type: 'history' as const })),\n      ...suggestions\n    ]\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault()\n        setSelectedSuggestionIndex(prev => \n          prev < allSuggestions.length - 1 ? prev + 1 : prev\n        )\n        break\n      case 'ArrowUp':\n        e.preventDefault()\n        setSelectedSuggestionIndex(prev => prev > -1 ? prev - 1 : -1)\n        break\n      case 'Enter':\n        e.preventDefault()\n        if (selectedSuggestionIndex >= 0 && allSuggestions[selectedSuggestionIndex]) {\n          handleSuggestionClick(allSuggestions[selectedSuggestionIndex])\n        } else {\n          handleSearchSubmit()\n        }\n        break\n      case 'Escape':\n        setShowSuggestions(false)\n        setSelectedSuggestionIndex(-1)\n        searchInputRef.current?.blur()\n        break\n    }\n  }, [showSuggestions, searchHistory, suggestions, selectedSuggestionIndex, handleSuggestionClick, handleSearchSubmit])\n\n  // Handle filter changes\n  const handleFilterChange = useCallback((newFilters: Partial<SearchFilters>) => {\n    const updatedFilters = { ...filters, ...newFilters }\n    setFilters(updatedFilters)\n    onFilterChange?.(updatedFilters)\n  }, [filters, onFilterChange])\n\n  // Close suggestions when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (suggestionsRef.current && !suggestionsRef.current.contains(event.target as Node) &&\n          searchInputRef.current && !searchInputRef.current.contains(event.target as Node)) {\n        setShowSuggestions(false)\n        setSelectedSuggestionIndex(-1)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [])\n\n  const allSuggestions = [\n    ...searchHistory.map(item => ({ text: item, type: 'history' as const })),\n    ...suggestions\n  ]\n\n  return (\n    <div className={`advanced-search ${className}`}>\n      <div className=\"search-container\">\n        <div className=\"search-input-wrapper\">\n          <svg className=\"search-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"m21 21-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n          \n          <input\n            ref={searchInputRef}\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => handleSearchChange(e.target.value)}\n            onKeyDown={handleKeyDown}\n            onFocus={() => {\n              if (searchTerm.length >= 2 || searchHistory.length > 0) {\n                setShowSuggestions(true)\n              }\n            }}\n            placeholder={placeholder}\n            className=\"search-input\"\n            aria-label=\"Search for NFTs, collections, or schemas\"\n            aria-describedby={showSuggestions ? 'search-suggestions' : undefined}\n            aria-expanded={showSuggestions}\n            aria-autocomplete=\"list\"\n            role=\"combobox\"\n          />\n          \n          {searchTerm && (\n            <button\n              className=\"clear-search\"\n              onClick={() => {\n                handleSearchChange('')\n                setShowSuggestions(false)\n              }}\n              title=\"Clear search\"\n              aria-label=\"Clear search input\"\n              type=\"button\"\n            >\n              <span aria-hidden=\"true\">✕</span>\n            </button>\n          )}\n          \n          {showFilters && (\n            <button\n              className={`filter-toggle ${showAdvancedFilters ? 'active' : ''}`}\n              onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n              title=\"Advanced filters\"\n              aria-label={showAdvancedFilters ? 'Hide advanced filters' : 'Show advanced filters'}\n              aria-expanded={showAdvancedFilters}\n              type=\"button\"\n            >\n              <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n              </svg>\n            </button>\n          )}\n        </div>\n\n        {/* Search Suggestions */}\n        {showSuggestions && allSuggestions.length > 0 && (\n          <div \n            ref={suggestionsRef} \n            className=\"search-suggestions\"\n            id=\"search-suggestions\"\n            role=\"listbox\"\n            aria-label=\"Search suggestions\"\n          >\n            {searchHistory.length > 0 && (\n              <div className=\"suggestions-section\">\n                <div className=\"suggestions-header\">\n                  <span id=\"recent-searches-label\">Recent searches</span>\n                  <button \n                    onClick={clearHistory} \n                    className=\"clear-history\"\n                    aria-label=\"Clear search history\"\n                    type=\"button\"\n                  >\n                    Clear\n                  </button>\n                </div>\n                <div role=\"group\" aria-labelledby=\"recent-searches-label\">\n                  {searchHistory.map((item, index) => (\n                    <div\n                      key={`history-${index}`}\n                      className={`suggestion-item history ${selectedSuggestionIndex === index ? 'selected' : ''}`}\n                      onClick={() => handleSuggestionClick({ text: item, type: 'history' })}\n                      role=\"option\"\n                      aria-selected={selectedSuggestionIndex === index}\n                      tabIndex={-1}\n                    >\n                      <svg className=\"suggestion-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      <span>{item}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {suggestions.length > 0 && (\n              <div className=\"suggestions-section\">\n                {searchHistory.length > 0 && <div className=\"suggestions-divider\" />}\n                <div className=\"suggestions-header\">\n                  <span>Suggestions</span>\n                </div>\n                {suggestions.map((suggestion, index) => {\n                  const actualIndex = searchHistory.length + index\n                  return (\n                    <div\n                      key={`suggestion-${index}`}\n                      className={`suggestion-item ${suggestion.type} ${selectedSuggestionIndex === actualIndex ? 'selected' : ''}`}\n                      onClick={() => handleSuggestionClick(suggestion)}\n                    >\n                      <svg className=\"suggestion-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        {suggestion.type === 'name' && (\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\n                        )}\n                        {suggestion.type === 'collection' && (\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                        )}\n                        {suggestion.type === 'schema' && (\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                        )}\n                      </svg>\n                      <span>{suggestion.text}</span>\n                      {suggestion.count && (\n                        <span className=\"suggestion-count\">{suggestion.count}</span>\n                      )}\n                    </div>\n                  )\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Advanced Filters */}\n      {showFilters && showAdvancedFilters && (\n        <div className=\"advanced-filters\">\n          <div className=\"filters-grid\">\n            {/* Price Range */}\n            <div className=\"filter-group\">\n              <label className=\"filter-label\">Price Range (WAX)</label>\n              <div className=\"price-range\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Min\"\n                  value={filters.priceRange.min}\n                  onChange={(e) => handleFilterChange({\n                    priceRange: { ...filters.priceRange, min: e.target.value }\n                  })}\n                  className=\"price-input\"\n                />\n                <span className=\"price-separator\">to</span>\n                <input\n                  type=\"number\"\n                  placeholder=\"Max\"\n                  value={filters.priceRange.max}\n                  onChange={(e) => handleFilterChange({\n                    priceRange: { ...filters.priceRange, max: e.target.value }\n                  })}\n                  className=\"price-input\"\n                />\n              </div>\n            </div>\n\n            {/* Sort By */}\n            <div className=\"filter-group\">\n              <label className=\"filter-label\">Sort By</label>\n              <select\n                value={filters.sortBy}\n                onChange={(e) => handleFilterChange({ sortBy: e.target.value })}\n                className=\"filter-select\"\n              >\n                <option value=\"relevance\">Relevance</option>\n                <option value=\"price_asc\">Price: Low to High</option>\n                <option value=\"price_desc\">Price: High to Low</option>\n                <option value=\"name_asc\">Name: A to Z</option>\n                <option value=\"name_desc\">Name: Z to A</option>\n                <option value=\"newest\">Newest First</option>\n                <option value=\"oldest\">Oldest First</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"filter-actions\">\n            <button\n              onClick={() => {\n                const resetFilters = {\n                  priceRange: { min: '', max: '' },\n                  rarities: [],\n                  collections: [],\n                  schemas: [],\n                  sortBy: 'relevance'\n                }\n                setFilters(resetFilters)\n                onFilterChange?.(resetFilters)\n              }}\n              className=\"filter-reset\"\n            >\n              Reset Filters\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default AdvancedSearch\nexport type { SearchSuggestion, SearchFilters }","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport type { NFTAsset } from '../services/api'\nimport { priceService } from '../services/priceService'\nimport { cartService } from '../services/cartService'\nimport watchlistService from '../services/watchlistService'\n\nimport { wharfKitService } from '../services/wharfkit'\nimport NFTDetailsModal from './NFTDetailsModal'\nimport NFTComparison from './NFTComparison'\nimport SocialShare from './SocialShare'\nimport SendOfferModal from './SendOfferModal'\nimport ListingChatModal from './ListingChatModal'\nimport ErrorMessage from './ErrorMessage'\nimport MediaRenderer from './MediaRenderer'\n\nimport AdvancedSearch from './AdvancedSearch'\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { useNotifications } from '../hooks/useNotifications'\n\nimport { useWallet } from '../hooks/useWallet'\nimport { ErrorMessageService } from '../services/errorMessageService'\nimport { log } from '../services/loggingService'\nimport '../css/marketplace.css'\nimport '../css/modal.css'\nimport '../css/nft-comparison.css'\nimport '../css/social-share.css'\nimport type { SearchSuggestion, SearchFilters } from './AdvancedSearch'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'error'\ntype NFTCategory = 'pixals' | 'waxrocks' | 'ingredients' | 'bundles' | 'friedfactory' | 'crptomuffins' | 'akufishheads' | 'partners' | 'pxapproved' | 'ah_verified' | 'all_wax'\n\nconst Marketplace: React.FC = React.memo(() => {\n  const navigate = useNavigate()\n  const { settings } = useDisplaySettings()\n  const { showSuccess, showError, showWarning } = useNotifications()\n  const [filteredNfts, setFilteredNfts] = useState<NFTAsset[]>([])\n  const [loading, setLoading] = useState<LoadingState>('idle')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [activeCategory, setActiveCategory] = useState<NFTCategory>('pixals')\n\n  const [usdPrices, setUsdPrices] = useState<Record<string, string>>({})\n  const [selectedNft, setSelectedNft] = useState<NFTAsset | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [cartItems, setCartItems] = useState<Set<string>>(new Set())\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n\n  const [allNfts, setAllNfts] = useState<NFTAsset[]>([])\n  const [isFilterSidebarOpen, setIsFilterSidebarOpen] = useState(false)\n  const [priceRange, setPriceRange] = useState({ min: '', max: '' })\n  const [selectedSchemas, setSelectedSchemas] = useState<Set<string>>(new Set())\n  const [sortBy, setSortBy] = useState('price_asc')\n\n  const [dateRange, setDateRange] = useState({ start: '', end: '' })\n  const [searchSuggestions, setSearchSuggestions] = useState<SearchSuggestion[]>([])\n  const [availableCollections, setAvailableCollections] = useState<string[]>([]) \n  const [availableSchemas, setAvailableSchemas] = useState<string[]>([])\n  const [selectedCollections, setSelectedCollections] = useState<Set<string>>(new Set())\n  const [selectedAttributes, setSelectedAttributes] = useState<Map<string, Set<string>>>(new Map())\n  const [availableAttributes, setAvailableAttributes] = useState<Map<string, string[]>>(new Map())\n  const [collapsedSections, setCollapsedSections] = useState<Set<string>>(new Set())\n  const [watchlistItems, setWatchlistItems] = useState<Set<string>>(new Set())\n  const [loadMoreLoading, setLoadMoreLoading] = useState(false)\n\n  const [isComparisonOpen, setIsComparisonOpen] = useState(false)\n  const [shareNft, setShareNft] = useState<NFTAsset | null>(null)\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false)\n  const [offerNft, setOfferNft] = useState<NFTAsset | null>(null)\n  const [isOfferModalOpen, setIsOfferModalOpen] = useState(false)\n  const [chatNft, setChatNft] = useState<NFTAsset | null>(null)\n  const [isChatModalOpen, setIsChatModalOpen] = useState(false)\n  const [openDropdowns, setOpenDropdowns] = useState<Set<string>>(new Set())\n  \n  // Media zoom functionality (image or video)\n  const [zoomedImage, setZoomedImage] = useState<{ url: string; name: string; type: 'image' | 'video' } | null>(null)\n  const [showImageZoom, setShowImageZoom] = useState(false)\n\n  // Handle direct messaging to seller\n  const handleMessageSeller = (asset: NFTAsset) => {\n    setChatNft(asset)\n    setIsChatModalOpen(true)\n  }\n\n  const toggleDropdown = useCallback((assetId: string) => {\n    setOpenDropdowns(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(assetId)) {\n        newSet.delete(assetId)\n      } else {\n        newSet.clear() // Close all other dropdowns\n        newSet.add(assetId)\n      }\n      return newSet\n    })\n  }, [])\n\n  const closeAllDropdowns = useCallback(() => {\n    setOpenDropdowns(new Set())\n  }, [])\n\n  // Handle media zoom (image or video)\n  const handleMediaZoom = useCallback((imageUrl: string, videoUrl: string | null, name: string) => {\n    // Prefer video over image if available\n    const mediaUrl = videoUrl || imageUrl\n    const mediaType: 'image' | 'video' = videoUrl ? 'video' : 'image'\n    \n    // Process IPFS URLs\n    let processedUrl = mediaUrl\n    if (mediaUrl.startsWith('Qm') || mediaUrl.startsWith('baf')) {\n      processedUrl = `https://ipfs.io/ipfs/${mediaUrl}`\n    } else if (mediaUrl.startsWith('/ipfs/')) {\n      processedUrl = `https://ipfs.io${mediaUrl}`\n    } else if (mediaUrl.startsWith('ipfs://')) {\n      processedUrl = mediaUrl.replace('ipfs://', 'https://ipfs.io/ipfs/')\n    }\n    \n    setZoomedImage({ url: processedUrl, name, type: mediaType })\n    setShowImageZoom(true)\n  }, [])\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => {\n      closeAllDropdowns()\n    }\n    \n    document.addEventListener('click', handleClickOutside)\n    return () => document.removeEventListener('click', handleClickOutside)\n  }, [closeAllDropdowns])\n\n  // Load marketplace data from API with pagination\n  const loadMarketplaceData = async (category: NFTCategory, page: number = 1) => {\n    if (page === 1) {\n      setLoading('loading')\n      setCurrentPage(1)\n      setAllNfts([])\n    } else {\n      setLoadMoreLoading(true)\n    }\n    \n    try {\n      let data: NFTAsset[] = []\n      const limit = 50 // Safe limit to avoid HTTP 400 errors\n      \n      switch (category) {\n        case 'pixals':\n          data = await apiService.getCheapestPixals(limit, page)\n          break\n        case 'waxrocks':\n          data = await apiService.getWaxRockPixals(limit, page)\n          break\n        case 'ingredients':\n          data = await apiService.getPixelIngredients(limit, page)\n          break\n        case 'bundles':\n          data = await apiService.getBundleListings(limit, page)\n          break\n        case 'friedfactory':\n          data = await apiService.getFriedFactoryNFTs(limit, page)\n          break\n        case 'crptomuffins':\n          data = await apiService.getCryptoMuffinsNFTs(limit, page)\n          break\n        case 'akufishheads':\n          data = await apiService.getAkufishheadsNFTs(limit, page)\n          break\n        case 'partners':\n          data = await apiService.getPartnerListings(limit, page)\n          break\n        case 'pxapproved':\n          data = await apiService.getPxApprovedListings(limit, page)\n          break\n        case 'ah_verified':\n          data = await apiService.getAHVerifiedListings(limit, page)\n          break\n        case 'all_wax':\n          data = await apiService.getAllWaxListings(limit, page)\n          break\n        default:\n          data = await apiService.getCheapestPixals(limit, page)\n      }\n      \n      if (page === 1) {\n        setAllNfts(data)\n      } else {\n        setAllNfts(prev => [...prev, ...data])\n        setCurrentPage(page)\n      }\n      \n      // Set total pages based on whether we got a full page of results\n      // If we got less than the limit, we're on the last page\n      if (data.length < limit) {\n        setTotalPages(page)\n      } else {\n        setTotalPages(page + 1) // At least one more page available\n      }\n      \n      setLoading('success')\n      setLoadMoreLoading(false)\n    } catch (error) {\n      const errorObj = error instanceof Error ? error : new Error('Failed to load marketplace data')\n      ErrorMessageService.logError('Marketplace.loadMarketplaceData', errorObj, {\n        category: activeCategory,\n        page,\n        limit: 50\n      })\n      setLoading('error')\n      setLoadMoreLoading(false)\n    }\n  }\n\n  // Load available schemas for filter sidebar\n  const loadAvailableSchemas = useCallback(async () => {\n    try {\n      // Get schemas from pixeljourney collection as the main collection\n      const schemas = await apiService.getCollectionSchemas('pixeljourney')\n      const schemaNames = schemas.map(schema => schema.schema_name)\n      setAvailableSchemas(schemaNames)\n    } catch (error) {\n      log.error('Failed to load available schemas', 'Marketplace', error as Error)\n      // Fallback to empty array if API fails\n      setAvailableSchemas([])\n    }\n  }, [])\n\n  useEffect(() => {\n    loadMarketplaceData(activeCategory)\n    loadAvailableSchemas()\n  }, [activeCategory, loadAvailableSchemas])\n\n\n\n  // Memoized USD price loading function with caching\n  const loadUsdPrices = useCallback(async (nfts: NFTAsset[]) => {\n    const prices: Record<string, string> = {}\n    \n    // Filter out NFTs that already have cached USD prices\n    const nftsNeedingPrices = nfts.filter(nft => nft.price && !usdPrices[nft.asset_id])\n    \n    if (nftsNeedingPrices.length === 0) return\n    \n    // Process in batches to avoid overwhelming the API\n    const batchSize = 10\n    for (let i = 0; i < nftsNeedingPrices.length; i += batchSize) {\n      const batch = nftsNeedingPrices.slice(i, i + batchSize)\n      \n      // Use Promise.allSettled for better error handling\n      const batchResults = await Promise.allSettled(batch.map(async (nft) => {\n        const usdPrice = await priceService.convertWaxToUSDAsync(nft.price!)\n        return { assetId: nft.asset_id, price: usdPrice }\n      }))\n      batchResults.forEach(result => {\n        if (result.status === 'fulfilled' && result.value) {\n          prices[result.value.assetId] = result.value.price\n        }\n      })\n      \n      // Add small delay between batches to prevent API rate limiting\n      if (i + batchSize < nftsNeedingPrices.length) {\n        await new Promise(resolve => setTimeout(resolve, 50))\n      }\n    }\n    \n    // Update state with new prices\n    setUsdPrices(prev => ({ ...prev, ...prices }))\n  }, [])\n\n  // Load USD prices when NFTs change\n  useEffect(() => {\n    if (filteredNfts.length > 0) {\n      loadUsdPrices(filteredNfts)\n    }\n  }, [filteredNfts, loadUsdPrices])\n\n  // Generate search suggestions\n  const generateSearchSuggestions = useCallback((query: string) => {\n    if (!query || query.length < 2) {\n      setSearchSuggestions([])\n      return\n    }\n    \n    const suggestions = new Map<string, SearchSuggestion>()\n    const queryLower = query.toLowerCase()\n    \n    allNfts.forEach(nft => {\n      // NFT name suggestions\n      if (nft.name.toLowerCase().includes(queryLower)) {\n        const key = `name:${nft.name}`\n        if (!suggestions.has(key)) {\n          suggestions.set(key, {\n            text: nft.name,\n            type: 'name',\n            count: 1\n          })\n        } else {\n          const existing = suggestions.get(key)!\n          existing.count = (existing.count || 0) + 1\n        }\n      }\n      \n      // Collection suggestions\n      if (nft.collection.toLowerCase().includes(queryLower)) {\n        const key = `collection:${nft.collection}`\n        if (!suggestions.has(key)) {\n          suggestions.set(key, {\n            text: nft.collection,\n            type: 'collection',\n            count: 1\n          })\n        } else {\n          const existing = suggestions.get(key)!\n          existing.count = (existing.count || 0) + 1\n        }\n      }\n    })\n    \n    const suggestionList = Array.from(suggestions.values())\n      .sort((a, b) => (b.count || 0) - (a.count || 0))\n      .slice(0, 8)\n    \n    setSearchSuggestions(suggestionList)\n  }, [allNfts])\n\n  // Handle advanced filter changes\n  const handleAdvancedFilterChange = useCallback((filters: SearchFilters) => {\n    setPriceRange(filters.priceRange)\n    setSortBy(filters.sortBy as 'price_asc' | 'price_desc' | 'name_asc' | 'name_desc' | 'date_newest' | 'date_oldest' | 'relevance')\n  }, [])\n\n  // Update search suggestions when search term changes\n  useEffect(() => {\n    generateSearchSuggestions(searchTerm)\n  }, [searchTerm, generateSearchSuggestions])\n\n  // Track cart items\n  useEffect(() => {\n    const updateCartItems = () => {\n      const cart = cartService.getCart()\n      setCartItems(new Set(cart.map(item => item.nft.asset_id)))\n    }\n\n    updateCartItems()\n    cartService.addListener(updateCartItems)\n    return () => cartService.removeListener(updateCartItems)\n  }, [])\n\n  // Track watchlist items\n  useEffect(() => {\n    const updateWatchlistItems = async () => {\n      const watchlist = await watchlistService.getWatchlist()\n      setWatchlistItems(new Set(watchlist.map(item => item.nft.asset_id)))\n    }\n\n    updateWatchlistItems()\n    watchlistService.addListener((watchlist) => {\n      setWatchlistItems(new Set(watchlist.map(item => item.nft.asset_id)))\n    })\n  }, [])\n\n\n\n\n\n  // Load more function\n  const handleLoadMore = useCallback(() => {\n    if (currentPage < totalPages && !loadMoreLoading) {\n      loadMarketplaceData(activeCategory, currentPage + 1)\n    }\n  }, [activeCategory, currentPage, totalPages, loadMoreLoading])\n\n  // Filter sidebar handlers\n  const toggleFilterSidebar = () => {\n    setIsFilterSidebarOpen(!isFilterSidebarOpen)\n  }\n\n  const closeFilterSidebar = () => {\n    setIsFilterSidebarOpen(false)\n  }\n\n  const handleSchemaToggle = useCallback((schema: string) => {\n    const newSchemas = new Set(selectedSchemas)\n    if (newSchemas.has(schema)) {\n      newSchemas.delete(schema)\n    } else {\n      newSchemas.add(schema)\n      // Auto-collapse schema section when selection is made\n      const newCollapsed = new Set(collapsedSections)\n      newCollapsed.add('schemas')\n      setCollapsedSections(newCollapsed)\n    }\n    setSelectedSchemas(newSchemas)\n  }, [selectedSchemas, collapsedSections])\n\n\n\n  const handleCollectionToggle = useCallback((collection: string) => {\n    const newSelected = new Set(selectedCollections)\n    if (newSelected.has(collection)) {\n      newSelected.delete(collection)\n    } else {\n      newSelected.add(collection)\n      // Auto-collapse collection section when selection is made\n      const newCollapsed = new Set(collapsedSections)\n      newCollapsed.add('collections')\n      setCollapsedSections(newCollapsed)\n    }\n    setSelectedCollections(newSelected)\n  }, [selectedCollections, collapsedSections])\n\n  const handleAttributeToggle = useCallback((attributeType: string, attributeValue: string) => {\n    const newSelected = new Map(selectedAttributes)\n    const currentValues = newSelected.get(attributeType) || new Set()\n    const newValues = new Set(currentValues)\n    \n    if (newValues.has(attributeValue)) {\n      newValues.delete(attributeValue)\n    } else {\n      newValues.add(attributeValue)\n    }\n    \n    if (newValues.size > 0) {\n      newSelected.set(attributeType, newValues)\n      // Auto-collapse attribute section when selection is made\n      const newCollapsed = new Set(collapsedSections)\n      newCollapsed.add('attributes')\n      setCollapsedSections(newCollapsed)\n    } else {\n      newSelected.delete(attributeType)\n    }\n    \n    setSelectedAttributes(newSelected)\n  }, [selectedAttributes, collapsedSections])\n\n  const toggleSectionCollapse = useCallback((sectionName: string) => {\n    const newCollapsed = new Set(collapsedSections)\n    if (newCollapsed.has(sectionName)) {\n      newCollapsed.delete(sectionName)\n    } else {\n      newCollapsed.add(sectionName)\n    }\n    setCollapsedSections(newCollapsed)\n  }, [collapsedSections])\n\n  const clearAllFilters = () => {\n    setPriceRange({ min: '', max: '' })\n    setSelectedSchemas(new Set())\n    setSelectedCollections(new Set())\n    setSelectedAttributes(new Map())\n    setDateRange({ start: '', end: '' })\n    setSortBy('price_asc')\n  }\n\n  // Memoized filtering and sorting functions for better performance\n  const filteredAndSortedNfts = useMemo(() => {\n    let filtered = [...allNfts]\n    \n    // Apply search filter\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase()\n      filtered = filtered.filter(nft => \n        nft.name.toLowerCase().includes(searchLower) ||\n        nft.collection.toLowerCase().includes(searchLower) ||\n        (nft.schema && nft.schema.toLowerCase().includes(searchLower))\n      )\n    }\n    \n    // Apply price range filter\n    if (priceRange.min || priceRange.max) {\n      filtered = filtered.filter(nft => {\n        if (!nft.price) return false\n        const price = parseFloat(nft.price)\n        const min = priceRange.min ? parseFloat(priceRange.min) : 0\n        const max = priceRange.max ? parseFloat(priceRange.max) : Infinity\n        return price >= min && price <= max\n      })\n    }\n    \n    // Apply schema filter\n    if (selectedSchemas.size > 0) {\n      filtered = filtered.filter(nft => \n        nft.schema && selectedSchemas.has(nft.schema)\n      )\n    }\n    \n\n    \n    // Apply collection filter\n    if (selectedCollections.size > 0) {\n      filtered = filtered.filter(nft => \n        selectedCollections.has(nft.collection)\n      )\n    }\n    \n    // Apply attribute filter\n    if (selectedAttributes.size > 0) {\n      filtered = filtered.filter(nft => {\n        if (!nft.data || !nft.data.attributes || !Array.isArray(nft.data.attributes)) return false\n        \n        for (const [attributeType, selectedValues] of selectedAttributes) {\n          const nftAttribute = nft.data.attributes.find((attr: { key: string; value: string }) => attr.key === attributeType)\n          if (!nftAttribute || !selectedValues.has(nftAttribute.value)) {\n            return false\n          }\n        }\n        return true\n      })\n    }\n    \n    // Apply sorting\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'price_asc':\n          return (parseFloat(a.price || '0')) - (parseFloat(b.price || '0'))\n        case 'price_desc':\n          return (parseFloat(b.price || '0')) - (parseFloat(a.price || '0'))\n        case 'name_asc':\n          return a.name.localeCompare(b.name)\n        case 'name_desc':\n          return b.name.localeCompare(a.name)\n        case 'newest':\n          return new Date(b.created_at_time || 0).getTime() - new Date(a.created_at_time || 0).getTime()\n        case 'oldest':\n          return new Date(a.created_at_time || 0).getTime() - new Date(b.created_at_time || 0).getTime()\n        default:\n          return 0\n      }\n    })\n    \n    return filtered\n  }, [allNfts, searchTerm, priceRange, selectedSchemas, selectedCollections, selectedAttributes, sortBy])\n  \n  // Update filteredNfts when memoized result changes\n  useEffect(() => {\n    setFilteredNfts(filteredAndSortedNfts)\n  }, [filteredAndSortedNfts])\n\n  // Extract available attributes from NFT data (filtered by selected collections and schemas)\n  useEffect(() => {\n    const attributeMap = new Map<string, string[]>()\n    \n    // Filter NFTs based on selected collections and schemas\n    let filteredNfts = allNfts\n    \n    if (selectedCollections.size > 0) {\n      filteredNfts = filteredNfts.filter(nft => selectedCollections.has(nft.collection))\n    }\n    \n    if (selectedSchemas.size > 0) {\n      filteredNfts = filteredNfts.filter(nft => nft.schema && selectedSchemas.has(nft.schema))\n    }\n    \n    filteredNfts.forEach(nft => {\n      if (nft.data && nft.data.attributes && Array.isArray(nft.data.attributes)) {\n        nft.data.attributes.forEach((attr: { key: string; value: string }) => {\n          if (!attributeMap.has(attr.key)) {\n            attributeMap.set(attr.key, [])\n          }\n          const values = attributeMap.get(attr.key)!\n          if (!values.includes(attr.value)) {\n            values.push(attr.value)\n          }\n        })\n      }\n    })\n    \n    // Sort attribute values\n    attributeMap.forEach((values, _key) => {\n      values.sort()\n    })\n    \n    setAvailableAttributes(attributeMap)\n    \n    // Clear selected attributes that are no longer available\n    setSelectedAttributes(prev => {\n      const newSelected = new Map<string, Set<string>>()\n      prev.forEach((values, key) => {\n        if (attributeMap.has(key)) {\n          const availableValues = attributeMap.get(key)!\n          const filteredValues = new Set<string>()\n          values.forEach(value => {\n            if (availableValues.includes(value)) {\n              filteredValues.add(value)\n            }\n          })\n          if (filteredValues.size > 0) {\n            newSelected.set(key, filteredValues)\n          }\n        }\n      })\n      return newSelected\n    })\n  }, [allNfts, selectedCollections, selectedSchemas])\n\n  // Filter available schemas based on selected collections\n  useEffect(() => {\n    if (selectedCollections.size > 0) {\n      const filteredSchemas = [...new Set(\n        allNfts\n          .filter(nft => selectedCollections.has(nft.collection))\n          .map(nft => nft.schema)\n          .filter(schema => schema)\n      )].sort()\n      \n      setAvailableSchemas(filteredSchemas)\n      \n      // Clear selected schemas that are no longer available\n      setSelectedSchemas(prev => {\n        const newSelected = new Set<string>()\n        prev.forEach(schema => {\n          if (filteredSchemas.includes(schema)) {\n            newSelected.add(schema)\n          }\n        })\n        return newSelected\n      })\n    } else {\n      // If no collections selected, show all schemas\n      const allSchemas = [...new Set(\n        allNfts.map(nft => nft.schema).filter(schema => schema)\n      )].sort()\n      \n      setAvailableSchemas(allSchemas)\n    }\n  }, [allNfts, selectedCollections])\n\n  const applyAdvancedFilters = useCallback((nfts: NFTAsset[]) => {\n    let filtered = [...nfts]\n\n    // Price range filter\n    if (priceRange.min || priceRange.max) {\n      filtered = filtered.filter(nft => {\n        if (!nft.price) return false\n        const price = parseFloat(nft.price.replace(' WAX', ''))\n        const min = priceRange.min ? parseFloat(priceRange.min) : 0\n        const max = priceRange.max ? parseFloat(priceRange.max) : Infinity\n        return price >= min && price <= max\n      })\n    }\n\n    // Schema filter\n    if (selectedSchemas.size > 0) {\n      filtered = filtered.filter(nft => selectedSchemas.has(nft.schema))\n    }\n\n\n\n    // Collection filter\n    if (selectedCollections.size > 0) {\n      filtered = filtered.filter(nft => {\n        return selectedCollections.has(nft.collection)\n      })\n    }\n\n    // Date range filter (Note: created_at_time not available in NFTAsset)\n    if (dateRange.start || dateRange.end) {\n      // Skip date filtering as created_at_time is not available in NFTAsset interface\n    }\n\n    // Sort\n    filtered.sort((a, b) => {\n      const priceA = a.price ? parseFloat(a.price.replace(' WAX', '')) : 0\n      const priceB = b.price ? parseFloat(b.price.replace(' WAX', '')) : 0\n      \n      switch (sortBy) {\n        case 'price_asc':\n          return priceA - priceB\n        case 'price_desc':\n          return priceB - priceA\n        case 'name_asc':\n          return a.name.localeCompare(b.name)\n        case 'name_desc':\n          return b.name.localeCompare(a.name)\n        // Rarity sorting removed - Pixal PFPs don't have rarity attributes\n        // WaxRock gems could be sorted by rarity if needed in the future\n        case 'date_newest': {\n          const timeA = 0 // created_at_time not available in NFTAsset\n          const timeB = 0\n          return timeB - timeA\n        }\n        case 'date_oldest': {\n          const timeA = 0 // created_at_time not available in NFTAsset\n          const timeB = 0\n          return timeA - timeB\n        }\n        default:\n          return 0\n      }\n    })\n\n    return filtered\n  }, [priceRange, selectedSchemas, selectedCollections, sortBy])\n\n  // Extract available collections when allNfts changes\n  useEffect(() => {\n    const collections = Array.from(new Set(allNfts.map(nft => nft.collection)))\n    setAvailableCollections(collections)\n  }, [allNfts])\n\n  useEffect(() => {\n    let filtered = allNfts.filter(nft => {\n      const matchesSearch = nft.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           (typeof nft.collection === 'string' ? nft.collection.toLowerCase() : '').includes(searchTerm.toLowerCase())\n      \n      return matchesSearch\n    })\n    \n    // Apply advanced filters\n    filtered = applyAdvancedFilters(filtered)\n    \n    // For load more functionality, show all filtered items\n    setFilteredNfts(filtered)\n  }, [allNfts, searchTerm, priceRange, selectedSchemas, selectedCollections, dateRange, sortBy, applyAdvancedFilters])\n\n  // Transaction tracking is now handled directly by WharfKit\n  const { purchaseNFT } = useWallet()\n\n  const handlePurchase = useCallback(async (nft: NFTAsset) => {\n    try {\n      // Check if user is logged in\n      if (!wharfKitService.isLoggedIn()) {\n        showWarning('Please connect your wallet to purchase NFTs')\n        return\n      }\n\n      // Execute purchase transaction directly with WharfKit\n      log.debug('Purchasing NFT', 'Marketplace', { nft })\n      if (!nft.sale_id || !nft.price) {\n        showError('Purchase Error', 'NFT is not available for purchase')\n        return\n      }\n      \n      // Use direct WharfKit purchase (no duplicate transaction calls)\n      await purchaseNFT(nft.sale_id, nft.price.replace(' WAX', ''))\n      \n      showSuccess(`Successfully purchased ${nft.name}!`)\n      \n      // Refresh marketplace data to reflect the purchase\n      loadMarketplaceData(activeCategory)\n      \n    } catch (error) {\n      log.error('Purchase failed', 'Marketplace', error instanceof Error ? error : new Error(String(error)))\n      showError(`Purchase failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }, [activeCategory, showWarning, showSuccess, showError, loadMarketplaceData])\n\n  const handleSellerClick = useCallback((seller: string) => {\n    navigate(`/user-profile-lookup?user=${encodeURIComponent(seller)}`)\n  }, [navigate])\n\n  const handleCollectionClick = useCallback((collection: string) => {\n    navigate(`/collections/${encodeURIComponent(collection)}`)\n  }, [navigate])\n\n  const handleAssetClick = useCallback((nft: NFTAsset) => {\n    // If items are selected, toggle selection instead of navigating\n    if (selectedItems.size > 0) {\n      handleSelectItem(nft.asset_id)\n      return\n    }\n    \n    // Navigate to listing detail page if it's a marketplace listing\n    if (nft.sale_id) {\n      navigate(`/listings/${nft.sale_id}`)\n    } else {\n      // Fallback to asset detail page for non-marketplace items\n      navigate(`/assets/${nft.asset_id}`)\n    }\n  }, [navigate, selectedItems.size])\n\n  const handleSelectItem = useCallback((assetId: string) => {\n    const newSelected = new Set(selectedItems)\n    if (newSelected.has(assetId)) {\n      newSelected.delete(assetId)\n    } else {\n      newSelected.add(assetId)\n    }\n    setSelectedItems(newSelected)\n  }, [selectedItems])\n\n  const handleSelectAll = useCallback(() => {\n    if (selectedItems.size === filteredNfts.length) {\n      setSelectedItems(new Set())\n    } else {\n      setSelectedItems(new Set(filteredNfts.map(nft => nft.asset_id)))\n    }\n  }, [selectedItems, filteredNfts])\n\n  const handleBulkAddToCart = useCallback(() => {\n    const selectedNfts = filteredNfts.filter(nft => selectedItems.has(nft.asset_id))\n    selectedNfts.forEach(nft => {\n      if (!cartItems.has(nft.asset_id)) {\n        cartService.addToCart(nft)\n      }\n    })\n    setSelectedItems(new Set())\n  }, [filteredNfts, selectedItems, cartItems])\n\n  return (\n    <div className=\"marketplace\">\n      <div className=\"container\">\n        {/* Header */}\n        <div className=\"marketplace-header\">\n          <div className=\"marketplace-header-content\">\n            <div className=\"marketplace-header-text\">\n              <h1 className=\"marketplace-title\">Pixel Journey Marketplace</h1>\n              <p className=\"marketplace-subtitle\">\n                Discover, collect, and trade unique digital assets from the Pixel Journey ecosystem. \n                This marketplace serves all WAX users, with full market access unlocked for Pixal PFP holders.\n              </p>\n            </div>\n\n          </div>\n        </div>\n\n        {/* Filters and Search */}\n        <div className=\"marketplace-filters\">\n          <AdvancedSearch\n            searchTerm={searchTerm}\n            onSearchChange={setSearchTerm}\n            suggestions={searchSuggestions}\n            placeholder=\"Search items, collections...\"\n            showFilters={true}\n            onFilterChange={handleAdvancedFilterChange}\n            className=\"marketplace-search\"\n          />\n          \n          <div className=\"marketplace-controls\">\n            <div className=\"category-tabs-container\">\n              <h3 className=\"category-section-title\">Listings</h3>\n              <div className=\"category-tabs-wrapper\">\n                <div className=\"category-tabs\">\n                <button \n                  className={`category-tab ${activeCategory === 'pixals' ? 'active' : ''}`}\n                  onClick={() => setActiveCategory('pixals')}\n                  aria-label=\"Filter by Pixals category\"\n                  aria-pressed={activeCategory === 'pixals'}\n                >\n                  Pixals\n                </button>\n                <button \n                  className={`category-tab ${activeCategory === 'waxrocks' ? 'active' : ''}`}\n                  onClick={() => setActiveCategory('waxrocks')}\n                  aria-label=\"Filter by WaxRocks category\"\n                  aria-pressed={activeCategory === 'waxrocks'}\n                >\n                  WaxRocks\n                </button>\n                <button \n                  className={`category-tab ${activeCategory === 'ingredients' ? 'active' : ''}`}\n                  onClick={() => setActiveCategory('ingredients')}\n                  aria-label=\"Filter by Ingredients category\"\n                  aria-pressed={activeCategory === 'ingredients'}\n                >\n                  Ingredients\n                </button>\n                <button \n                  className={`category-tab ${activeCategory === 'bundles' ? 'active' : ''}`}\n                  onClick={() => setActiveCategory('bundles')}\n                  aria-label=\"Filter by Bundles category\"\n                  aria-pressed={activeCategory === 'bundles'}\n                >\n                  📦 Bundles\n                </button>\n                <select \n                  className=\"others-select\"\n                  value={['friedfactory', 'crptomuffins', 'akufishheads', 'partners', 'pxapproved', 'ah_verified', 'all_wax'].includes(activeCategory) ? activeCategory : 'others'}\n                  onChange={(e) => {\n                    const value = e.target.value\n                    if (value !== 'others') {\n                      setActiveCategory(value as NFTCategory)\n                    }\n                  }}\n                  aria-label=\"Select additional marketplace categories\"\n                >\n                  <option value=\"others\">Others</option>\n                  <optgroup label=\"Marketplace\">\n                    <option value=\"pxapproved\">PxApproved</option>\n                    <option value=\"ah_verified\">All AH Verified (Pixals holders+ only)</option>\n                    <option value=\"all_wax\">All Wax Listings (Pixals holders+ only)</option>\n                  </optgroup>\n                  <optgroup label=\"Partners\">\n                    <option value=\"friedfactory\">Fried Factory</option>\n                    <option value=\"crptomuffins\">CryptoMuffins</option>\n                    <option value=\"akufishheads\">Aku Fish Heads</option>\n                  </optgroup>\n                </select>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"filter-sort-section\">\n              <h3 className=\"filter-sort-title\">Filter & Sort</h3>\n              <div className=\"filter-sort-controls\">\n                <select \n                  className=\"sort-dropdown\"\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value as 'price_asc' | 'price_desc' | 'name_asc' | 'name_desc' | 'date_newest' | 'date_oldest')}\n                >\n                  <option value=\"price_asc\">Price: Low to High</option>\n                  <option value=\"price_desc\">Price: High to Low</option>\n                  <option value=\"name_asc\">Name: A to Z</option>\n                  <option value=\"name_desc\">Name: Z to A</option>\n                  {/* Rarity sorting removed - Pixal PFPs don't have rarity attributes */}\n                  <option value=\"date_newest\">Newest Listings</option>\n                  <option value=\"date_oldest\">Oldest Listings</option>\n                </select>\n                \n                <button \n                  className=\"filter-toggle-btn\"\n                  onClick={toggleFilterSidebar}\n                  title=\"Advanced Filters\"\n                >\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Loading State */}\n        {loading === 'loading' && (\n          <div className=\"loading-grid\">\n            {Array.from({ length: 8 }).map((_, index) => (\n              <div key={index} className=\"nft-card loading\">\n                <div className=\"nft-image-placeholder\"></div>\n                <div className=\"nft-info\">\n                  <div className=\"loading-text\"></div>\n                  <div className=\"loading-text short\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Error State */}\n        {loading === 'error' && (\n          <ErrorMessage \n            errorType=\"LOAD_FAILED\"\n            onRetry={() => loadMarketplaceData(activeCategory)}\n            showRetry={true}\n          />\n        )}\n\n        {/* Bulk Actions Bar */}\n        {selectedItems.size > 0 && (\n          <div className=\"bulk-actions-bar\">\n            <div className=\"bulk-actions-info\">\n              <span>{selectedItems.size} item{selectedItems.size !== 1 ? 's' : ''} selected</span>\n            </div>\n            <div className=\"bulk-actions-buttons\">\n              <button \n                className=\"bulk-btn bulk-cart\"\n                onClick={handleBulkAddToCart}\n                aria-label={`Add ${selectedItems.size} selected items to cart`}\n              >\n                Add Selected to Cart\n              </button>\n              <button \n                className=\"bulk-btn bulk-compare\"\n                onClick={() => setIsComparisonOpen(true)}\n                disabled={selectedItems.size < 2 || selectedItems.size > 4}\n                title={selectedItems.size < 2 ? 'Select 2-4 items to compare' : selectedItems.size > 4 ? 'Maximum 4 items can be compared' : 'Compare selected items'}\n                aria-label={`Compare ${selectedItems.size} selected items`}\n              >\n                Compare ({selectedItems.size})\n              </button>\n              <button \n                className=\"bulk-btn bulk-clear\"\n                onClick={() => setSelectedItems(new Set())}\n                aria-label=\"Clear all selected items\"\n              >\n                Clear Selection\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Select All and Load More Buttons */}\n        {loading === 'success' && filteredNfts.length > 0 && (\n          <div className=\"select-all-container\">\n            <button \n              className=\"select-all-btn\"\n              onClick={handleSelectAll}\n              aria-label={selectedItems.size === filteredNfts.length ? `Deselect all ${filteredNfts.length} items` : `Select all ${filteredNfts.length} items`}\n            >\n              {selectedItems.size === filteredNfts.length ? 'Deselect All' : 'Select All'}\n            </button>\n            {currentPage < totalPages && (\n              <button \n                className=\"load-more-btn load-more-top\"\n                onClick={handleLoadMore}\n                disabled={loadMoreLoading}\n                aria-label={loadMoreLoading ? 'Loading more items' : 'Load more marketplace items'}\n              >\n                {loadMoreLoading ? 'Loading...' : 'Load More'}\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* NFT Grid */}\n        {loading === 'success' && (\n          <div className=\"nft-grid\">\n            {filteredNfts.map((nft) => (\n              <div key={nft.asset_id} className={`nft-card ${selectedItems.has(nft.asset_id) ? 'selected' : ''}`}>\n                <div className=\"nft-select-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    checked={selectedItems.has(nft.asset_id)}\n                    onChange={() => handleSelectItem(nft.asset_id)}\n                    className=\"select-checkbox\"\n                  />\n                </div>\n                <div className=\"nft-image-container\">\n                  <MediaRenderer\n                    imageUrl={getAssetImageUrl(nft)}\n                    videoUrl={getAssetVideoUrl(nft)}\n                    className=\"nft-image\"\n                    alt={nft.name}\n                    autoPlay={true}\n                    loop={true}\n                    enableAnimations={settings.enableAnimatedNFTs}\n                  />\n                  <div \n                    className=\"zoom-overlay\"\n                    onClick={() => handleMediaZoom(getAssetImageUrl(nft) || '', getAssetVideoUrl(nft) || '', nft.name || `Asset #${nft.asset_id}`)}\n                    title=\"Click to zoom\"\n                  >\n                    <svg className=\"zoom-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                      <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                      <path d=\"m21 21-4.35-4.35\"></path>\n                      <path d=\"M11 8v6M8 11h6\"></path>\n                    </svg>\n                  </div>\n                  {(nft.template_mint || nft.max_supply !== undefined) && (\n                    <div className=\"mint-badge\">\n                      {nft.template_mint !== undefined && nft.template_mint !== null ? nft.template_mint : '?'}/{nft.max_supply === '0' || nft.max_supply === undefined || nft.max_supply === null ? '∞' : nft.max_supply}\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"nft-info\">\n                  <div className=\"nft-header\">\n                    <h3 className=\"nft-name\"><span className=\"asset-link\" onClick={() => handleAssetClick(nft)}>{nft.name}</span></h3>\n                    <p className=\"nft-collection\"><span className=\"collection-link\" onClick={() => handleCollectionClick(nft.collection)}>{nft.collection}</span></p>\n                  </div>\n                  <div className=\"nft-price-container\">\n                    <div className=\"nft-prices-div\">\n                    <div className=\"nft-price\">{nft.price}</div>\n                    <div className=\"nft-price-usd\">{usdPrices[nft.asset_id] || '$0.00'}</div>\n                  </div>\n                    {nft.seller && <p className=\"nft-seller\">🧑‍💼 <span className=\"seller-link\" onClick={() => handleSellerClick(nft.seller!)}>{nft.seller}</span></p>}\n                  \n                  </div>\n                  \n                  <div className=\"nft-actions\">\n                    <div className=\"nft-actions-row nft-actions-main\">\n                      <button \n                        className=\"btn-buy-now\"\n                        onClick={() => handlePurchase(nft)}\n                        title=\"Buy now\"\n                        aria-label={`Buy ${nft.name} for ${nft.price}`}\n                        type=\"button\"\n                      >\n                        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n                          <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                        </svg>\n                        Buy Now\n                      </button>\n                      <button \n                        className=\"details-btn\"\n                        onClick={() => {\n                          setSelectedNft(nft)\n                          setIsModalOpen(true)\n                        }}\n                        title=\"View Details\"\n                        aria-label={`View details for ${nft.name}`}\n                        type=\"button\"\n                      >\n                        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n                          <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                          <path d=\"m21 21-4.35-4.35\"></path>\n                        </svg>\n                        Info\n                      </button>\n                    </div>\n                    <div className=\"nft-actions-row nft-actions-icons\">\n                      <button \n                        className={`btn-cart ${cartItems.has(nft.asset_id) ? 'in-cart' : ''}`}\n                        onClick={() => {\n                          if (cartItems.has(nft.asset_id)) {\n                            cartService.removeFromCart(nft.asset_id)\n                          } else {\n                            const added = cartService.addToCart(nft)\n                            if (!added) {\n                              showWarning('Item is already in your cart!')\n                            }\n                          }\n                        }}\n                        title={cartItems.has(nft.asset_id) ? 'Remove from cart' : 'Add to cart'}\n                        aria-label={cartItems.has(nft.asset_id) ? `Remove ${nft.name} from cart` : `Add ${nft.name} to cart`}\n                        type=\"button\"\n                      >\n                        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n                          {cartItems.has(nft.asset_id) ? (\n                            <>\n                              <polyline points=\"3,6 5,6 21,6\"></polyline>\n                              <path d=\"m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2\"></path>\n                            </>\n                          ) : (\n                            <>\n                              <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                              <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                              <path d=\"m1 1 4 4 2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                            </>\n                          )}\n                        </svg>\n                      </button>\n                      <button \n                        className=\"btn-make-offer\"\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          setOfferNft(nft)\n                          setIsOfferModalOpen(true)\n                        }}\n                        title=\"Make Offer\"\n                        type=\"button\"\n                      >\n                        <svg viewBox=\"0 -8 72 72\" fill=\"currentColor\">\n                  <path d=\"M64,12.78v17s-3.63.71-4.38.81-3.08.85-4.78-.78C52.22,27.25,42.93,18,42.93,18a3.54,3.54,0,0,0-4.18-.21c-2.36,1.24-5.87,3.07-7.33,3.78a3.37,3.37,0,0,1-5.06-2.64,3.44,3.44,0,0,1,2.1-3c3.33-2,10.36-6,13.29-7.52,1.78-1,3.06-1,5.51,1C50.27,12,53,14.27,53,14.27a2.75,2.75,0,0,0,2.26.43C58.63,14,64,12.78,64,12.78ZM27,41.5a3,3,0,0,0-3.55-4.09,3.07,3.07,0,0,0-.64-3,3.13,3.13,0,0,0-3-.75,3.07,3.07,0,0,0-.65-3,3.38,3.38,0,0,0-4.72.13c-1.38,1.32-2.27,3.72-1,5.14s2.64.55,3.72.3c-.3,1.07-1.2,2.07-.09,3.47s2.64.55,3.72.3c-.3,1.07-1.16,2.16-.1,3.46s2.84.61,4,.25c-.45,1.15-1.41,2.39-.18,3.79s4.08.75,5.47-.58a3.32,3.32,0,0,0,.3-4.68A3.18,3.18,0,0,0,27,41.5Zm25.35-8.82L41.62,22a3.53,3.53,0,0,0-3.77-.68c-1.5.66-3.43,1.56-4.89,2.24a8.15,8.15,0,0,1-3.29,1.1,5.59,5.59,0,0,1-3-10.34C29,12.73,34.09,10,34.09,10a6.46,6.46,0,0,0-5-2C25.67,8,18.51,12.7,18.51,12.7a5.61,5.61,0,0,1-4.93.13L8,10.89v19.4s1.59.46,3,1a6.33,6.33,0,0,1,1.56-2.47,6.17,6.17,0,0,1,8.48-.06,5.4,5.4,0,0,1,1.34,2.37,5.49,5.49,0,0,1,2.29,1.4A5.4,5.4,0,0,1,26,34.94a5.47,5.47,0,0,1,3.71,4,5.38,5.38,0,0,1,2.39,1.43,5.65,5.65,0,0,1,1.48,4.89a0,0,0,0,1,0,0s.8.9,1.29,1.39a2.46,2.46,0,0,0,3.48-3.48s2,2.48,4.28,1c2-1.4,1.69-3.06.74-4a3.19,3.19,0,0,0,4.77.13,2.45,2.45,0,0,0,.13-3.3s1.33,1.81,4,.12c1.89-1.6,1-3.43,0-4.39Z\"/>\n                </svg>\n                      </button>\n                                            <button \n                        className=\"btn-message\"\n                        onClick={() => handleMessageSeller(nft)}\n                        title=\"Send Direct Message (1000 PXJ)\"\n                        disabled={!nft.seller}\n                      >\n                        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                          <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\n                        </svg>\n                      </button>\n                      <div className=\"other-actions-dropdown\">\n                        <button \n                          className=\"btn-other-actions\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            toggleDropdown(nft.asset_id)\n                          }}\n                          title=\"More Actions\"\n                        >\n                          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                            <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                            <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n                            <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n                          </svg>\n                        </button>\n                        <div className={`other-actions-menu ${openDropdowns.has(nft.asset_id) ? 'open' : ''}`}>\n                          <button \n                            className=\"other-actions-item\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleAssetClick(nft)\n                              closeAllDropdowns()\n                            }}\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                              <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n                              <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                            </svg>\n                            View Full Listing\n                          </button>\n                          <button \n                            className=\"other-actions-item\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              setShareNft(nft)\n                              setIsShareModalOpen(true)\n                              closeAllDropdowns()\n                            }}\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                              <path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path>\n                              <polyline points=\"16,6 12,2 8,6\"></polyline>\n                              <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"></line>\n                            </svg>\n                            Share NFT\n                          </button>\n                          <button \n                            className={`other-actions-item ${watchlistItems.has(nft.asset_id) ? 'in-watchlist' : ''}`}\n                            onClick={async (e) => {\n                              e.stopPropagation()\n                              if (watchlistItems.has(nft.asset_id)) {\n                                await watchlistService.removeFromWatchlist(nft.asset_id)\n                              } else {\n                                const added = await watchlistService.addToWatchlist(nft)\n                                if (!added) {\n                                  showWarning('Item is already in your watchlist!')\n                                }\n                              }\n                              closeAllDropdowns()\n                            }}\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                              {watchlistItems.has(nft.asset_id) ? (\n                                <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" fill=\"currentColor\"></path>\n                              ) : (\n                                <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>\n                              )}\n                            </svg>\n                            {watchlistItems.has(nft.asset_id) ? 'Remove from Watchlist' : 'Add to Watchlist'}\n                          </button>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {loading === 'success' && filteredNfts.length === 0 && (\n          <div className=\"marketplace-empty\">\n            <svg className=\"empty-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n            <h3>No items found</h3>\n            <p>Try adjusting your search or filter criteria</p>\n          </div>\n        )}\n\n        {/* Load More Button */}\n        {loading === 'success' && currentPage < totalPages && (\n          <div className=\"load-more-container\">\n            <button \n              className=\"load-more-btn\"\n              onClick={() => loadMarketplaceData(activeCategory, currentPage + 1)}\n              disabled={loadMoreLoading}\n            >\n              {loadMoreLoading ? 'Loading...' : 'Load More'}\n            </button>\n            <div className=\"pagination-info\">\n              Showing {filteredNfts.length} items • Loaded {currentPage} of {totalPages > currentPage ? totalPages + '+' : totalPages} pages\n            </div>\n          </div>\n        )}\n\n        {/* Show total count when all items are loaded */}\n        {loading === 'success' && currentPage >= totalPages && filteredNfts.length > 0 && (\n          <div className=\"load-more-container\">\n            <div className=\"pagination-info\">\n              Showing all {filteredNfts.length} items\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Filter Sidebar */}\n      {isFilterSidebarOpen && (\n        <>\n          <div className=\"filter-sidebar-overlay\" onClick={closeFilterSidebar}></div>\n          <div className=\"filter-sidebar\">\n            <div className=\"filter-sidebar-header\">\n              <h3>Advanced Filters</h3>\n              <button className=\"close-sidebar-btn\" onClick={closeFilterSidebar}>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"filter-section\">\n              <div className=\"filter-section-header\" onClick={() => toggleSectionCollapse('collections')}>\n                <h4>Collections</h4>\n                <button className=\"collapse-toggle\">\n                  <svg \n                    width=\"16\" \n                    height=\"16\" \n                    viewBox=\"0 0 24 24\" \n                    fill=\"none\" \n                    stroke=\"currentColor\"\n                    className={collapsedSections.has('collections') ? 'collapsed' : ''}\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n              </div>\n              {!collapsedSections.has('collections') && (\n                <div className=\"collection-checkboxes\">\n                {availableCollections.slice(0, 8).map(collection => (\n                  <div key={collection} className=\"collection-item\">\n                    <label className=\"collection-checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedCollections.has(collection)}\n                        onChange={() => handleCollectionToggle(collection)}\n                      />\n                      <span className=\"checkmark\"></span>\n                      {collection}\n                    </label>\n                    <a \n                      href={`/analytics/${encodeURIComponent(collection)}`}\n                      className=\"analytics-link\"\n                      title={`View ${collection} analytics`}\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      📊\n                    </a>\n                  </div>\n                ))}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"filter-section\">\n              <div className=\"filter-section-header\" onClick={() => toggleSectionCollapse('schemas')}>\n                <h4>Schema Type</h4>\n                <button className=\"collapse-toggle\">\n                  <svg \n                    width=\"16\" \n                    height=\"16\" \n                    viewBox=\"0 0 24 24\" \n                    fill=\"none\" \n                    stroke=\"currentColor\"\n                    className={collapsedSections.has('schemas') ? 'collapsed' : ''}\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n              </div>\n              {!collapsedSections.has('schemas') && (\n                <div className=\"schema-checkboxes\">\n                {availableSchemas.length > 0 ? (\n                  availableSchemas.map(schema => (\n                    <label key={schema} className=\"schema-checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedSchemas.has(schema)}\n                        onChange={() => handleSchemaToggle(schema)}\n                      />\n                      <span className=\"checkmark\"></span>\n                      {schema.charAt(0).toUpperCase() + schema.slice(1)}\n                    </label>\n                  ))\n                ) : (\n                  <div className=\"loading-schemas\">Loading schemas...</div>\n                )}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"filter-section\">\n              <div className=\"filter-section-header\" onClick={() => toggleSectionCollapse('price')}>\n                <h4>Price Range (WAX)</h4>\n                <button className=\"collapse-toggle\">\n                  <svg \n                    width=\"16\" \n                    height=\"16\" \n                    viewBox=\"0 0 24 24\" \n                    fill=\"none\" \n                    stroke=\"currentColor\"\n                    className={collapsedSections.has('price') ? 'collapsed' : ''}\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n              </div>\n              {!collapsedSections.has('price') && (\n                <div className=\"price-range-inputs\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Min\"\n                  value={priceRange.min}\n                  onChange={(e) => setPriceRange(prev => ({ ...prev, min: e.target.value }))}\n                  className=\"price-input\"\n                />\n                <span>to</span>\n                <input\n                  type=\"number\"\n                  placeholder=\"Max\"\n                  value={priceRange.max}\n                  onChange={(e) => setPriceRange(prev => ({ ...prev, max: e.target.value }))}\n                  className=\"price-input\"\n                />\n                </div>\n              )}\n            </div>\n            \n            <div className=\"filter-section\">\n              <div className=\"filter-section-header\" onClick={() => toggleSectionCollapse('attributes')}>\n                <h4>Attribute Filters</h4>\n                <button className=\"collapse-toggle\">\n                  <svg \n                    width=\"16\" \n                    height=\"16\" \n                    viewBox=\"0 0 24 24\" \n                    fill=\"none\" \n                    stroke=\"currentColor\"\n                    className={collapsedSections.has('attributes') ? 'collapsed' : ''}\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n              </div>\n              {!collapsedSections.has('attributes') && (\n                <div className=\"attribute-filters\">\n                {Array.from(availableAttributes.entries()).map(([attributeType, values]) => (\n                  <div key={attributeType} className=\"attribute-group\">\n                    <h5 className=\"attribute-type\">{attributeType}</h5>\n                    <div className=\"attribute-values\">\n                      {values.map(value => (\n                        <label key={value} className=\"attribute-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedAttributes.get(attributeType)?.has(value) || false}\n                            onChange={() => handleAttributeToggle(attributeType, value)}\n                          />\n                          <span className=\"checkmark\"></span>\n                          {value}\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n                {availableAttributes.size === 0 && (\n                  <div className=\"no-attributes\">No attributes available</div>\n                )}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"filter-section\">\n              <h4>Date Range</h4>\n              <div className=\"date-range-inputs\">\n                <input\n                  type=\"date\"\n                  value={dateRange.start}\n                  onChange={(e) => setDateRange(prev => ({ ...prev, start: e.target.value }))}\n                  className=\"date-input\"\n                  placeholder=\"Start Date\"\n                />\n                <span>to</span>\n                <input\n                  type=\"date\"\n                  value={dateRange.end}\n                  onChange={(e) => setDateRange(prev => ({ ...prev, end: e.target.value }))}\n                  className=\"date-input\"\n                  placeholder=\"End Date\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"filter-section\">\n              <h4>Sort By</h4>\n              <select \n                value={sortBy} \n                onChange={(e) => setSortBy(e.target.value as 'price_asc' | 'price_desc' | 'name_asc' | 'name_desc' | 'date_newest' | 'date_oldest')}\n                className=\"sort-select\"\n              >\n                <option value=\"price_asc\">Price: Low to High</option>\n                <option value=\"price_desc\">Price: High to Low</option>\n                <option value=\"name_asc\">Name: A to Z</option>\n                <option value=\"name_desc\">Name: Z to A</option>\n                {/* Rarity sorting removed - Pixal PFPs don't have rarity attributes */}\n                <option value=\"date_newest\">Newest Listings</option>\n                <option value=\"date_oldest\">Oldest Listings</option>\n              </select>\n            </div>\n            \n            <div className=\"filter-actions\">\n              <button className=\"clear-filters-btn\" onClick={clearAllFilters}>\n                Clear All\n              </button>\n              <button className=\"apply-filters-btn\" onClick={closeFilterSidebar}>\n                Apply Filters\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n\n      <NFTDetailsModal \n        nft={selectedNft}\n        isOpen={isModalOpen}\n        onClose={() => {\n          setIsModalOpen(false)\n          setSelectedNft(null)\n        }}\n      />\n      \n      <NFTComparison \n         initialNFTs={filteredNfts.filter(nft => selectedItems.has(nft.asset_id))}\n         isOpen={isComparisonOpen}\n         onClose={() => setIsComparisonOpen(false)}\n       />\n      \n      {shareNft && (\n         <SocialShare \n           nft={shareNft}\n           isOpen={isShareModalOpen}\n           onClose={() => {\n             setIsShareModalOpen(false)\n             setShareNft(null)\n           }}\n         />\n       )}\n      \n      {offerNft && (\n         <SendOfferModal \n           nft={offerNft}\n           isOpen={isOfferModalOpen}\n           onClose={() => {\n             setIsOfferModalOpen(false)\n             setOfferNft(null)\n           }}\n         />\n       )}\n      \n      {chatNft && (\n         <ListingChatModal \n           nft={chatNft}\n           isOpen={isChatModalOpen}\n           onClose={() => {\n             setIsChatModalOpen(false)\n             setChatNft(null)\n           }}\n         />\n       )}\n      \n      {/* Media Zoom Modal */}\n      {showImageZoom && zoomedImage && (\n        <div className=\"image-zoom-modal\" onClick={() => setShowImageZoom(false)}>\n          <div className=\"zoom-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button \n              className=\"zoom-modal-close\"\n              onClick={() => setShowImageZoom(false)}\n              aria-label=\"Close zoom modal\"\n            >\n              ×\n            </button>\n            {zoomedImage.type === 'video' ? (\n              <video \n                src={zoomedImage.url} \n                className=\"zoom-modal-video\"\n                controls\n                autoPlay\n                loop\n                muted\n              />\n            ) : (\n              <img \n                src={zoomedImage.url} \n                alt={zoomedImage.name} \n                className=\"zoom-modal-image\"\n              />\n            )}\n            <div className=\"zoom-modal-title\">{zoomedImage.name}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default Marketplace","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Rewards: React.FC = () => {\n  return (\n    <div className=\"rewards-container\">\n      <div className=\"rewards-header\">\n        <h1 className=\"rewards-title\">Trading Rewards</h1>\n        <p className=\"rewards-subtitle\">\n          Earn PXJ tokens and Pixel Ingredients for every trade you make on Pixel Market\n        </p>\n      </div>\n\n      <div className=\"rewards-content\">\n        <div className=\"reward-card\">\n          <div className=\"reward-icon pxj-icon\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </div>\n          <h3 className=\"reward-title\">PXJ Token Rewards</h3>\n          <p className=\"reward-description\">\n            Earn PXJ tokens based on your trading volume. The more you trade, the more you earn!\n          </p>\n          <ul className=\"reward-benefits\">\n            <li>0.1% of trade value in PXJ tokens</li>\n            <li>Bonus multipliers for high-volume traders</li>\n            <li>Weekly bonus distributions</li>\n            <li>Governance voting rights</li>\n          </ul>\n        </div>\n\n        <div className=\"reward-card\">\n          <div className=\"reward-icon ingredient-icon\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n            </svg>\n          </div>\n          <h3 className=\"reward-title\">Pixel Ingredients</h3>\n          <p className=\"reward-description\">\n            Collect rare Pixel Ingredients that can be used for crafting and enhancing your NFTs. <strong>Available to Pixal PFP holders and Fried Factory trait holders only.</strong>\n          </p>\n          <ul className=\"reward-benefits\">\n            <li>Random ingredient drops with each trade</li>\n            <li>Rare ingredients for large transactions</li>\n            <li>Craft unique items and upgrades</li>\n            <li>Trade ingredients with other players</li>\n          </ul>\n        </div>\n\n        <div className=\"reward-card full-width\">\n          <div className=\"reward-icon volume-icon\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path d=\"M3 3v18h18\"/>\n              <path d=\"M7 12l4-4 4 4 6-6\"/>\n            </svg>\n          </div>\n          <h3 className=\"reward-title\">Volume-Based Bonuses</h3>\n          <p className=\"reward-description\">\n            Unlock additional rewards and benefits as your trading volume increases.\n          </p>\n          <div className=\"volume-tiers\">\n            <div className=\"tier\">\n              <h4>Bronze Trader</h4>\n              <p>1+ WAX volume</p>\n              <span className=\"tier-bonus\">1x rewards</span>\n            </div>\n            <div className=\"tier\">\n              <h4>Silver Trader</h4>\n              <p>100+ WAX volume</p>\n              <span className=\"tier-bonus\">1.5x rewards</span>\n            </div>\n            <div className=\"tier\">\n              <h4>Gold Trader</h4>\n              <p>1,000+ WAX volume</p>\n              <span className=\"tier-bonus\">2x rewards</span>\n            </div>\n            <div className=\"tier\">\n              <h4>Diamond Trader</h4>\n              <p>10,000+ WAX volume</p>\n              <span className=\"tier-bonus\">3x rewards</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"rewards-cta\">\n        <h3>Start Trading Today!</h3>\n        <p>Connect your wallet and start earning rewards with every transaction.</p>\n        <Link \n          to=\"/marketplace\"\n          className=\"cta-button\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n          </svg>\n          Go to Marketplace\n        </Link>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Rewards","import React, { useState } from 'react'\r\nimport { useWallet } from '../hooks/useWallet'\r\nimport { useNotifications } from '../hooks/useNotifications'\r\nimport type { InventoryNFT } from '../types/inventory'\r\nimport MediaRenderer from './MediaRenderer'\r\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\r\nimport { log } from '../services/loggingService'\r\nimport { WharfKitService } from '../services/wharfkit'\r\nimport '../css/modal.css'\r\n\r\ninterface ListingModalProps {\r\n  nft: InventoryNFT | null\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onSuccess?: () => void\r\n  bundleNfts?: InventoryNFT[] // Optional bundle NFTs\r\n}\r\n\r\nconst ListingModal: React.FC<ListingModalProps> = ({ nft, isOpen, onClose, onSuccess, bundleNfts = [] }) => {\r\n  const [price, setPrice] = useState('')\r\n  const [isBundle, setIsBundle] = useState(false)\r\n  const [bundleName, setBundleName] = useState('')\r\n  const [isListing, setIsListing] = useState(false)\r\n  const { session } = useWallet()\r\n  const { showSuccess, showError } = useNotifications()\r\n\r\n  // AtomicMarket only supports WAX listings\r\n  const waxCurrency = { symbol: 'WAX', contract: 'eosio.token', precision: 8 }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!nft || !session || !price) {\r\n      showError('Please fill in all required fields')\r\n      return\r\n    }\r\n\r\n    if (isBundle && !bundleName.trim()) {\r\n      showError('Please enter a bundle name')\r\n      return\r\n    }\r\n\r\n    const priceFloat = parseFloat(price)\r\n    if (isNaN(priceFloat) || priceFloat <= 0) {\r\n      showError('Please enter a valid price')\r\n      return\r\n    }\r\n\r\n    setIsListing(true)\r\n\r\n    try {\r\n      const selectedCurrency = waxCurrency\r\n\r\n      // Format price with proper precision\r\n      const formattedPrice = priceFloat.toFixed(selectedCurrency.precision)\r\n      const priceString = `${formattedPrice} ${selectedCurrency.symbol}`\r\n\r\n      // Determine asset IDs for listing\r\n      const assetIds = isBundle && bundleNfts.length > 0 \r\n        ? [nft.asset_id, ...bundleNfts.map(bundleNft => bundleNft.asset_id)]\r\n        : [nft.asset_id]\r\n\r\n      // AtomicMarket listing action\r\n      const action = {\r\n        account: 'atomicmarket',\r\n        name: 'announcesale',\r\n        authorization: [{\r\n          actor: WharfKitService.safeGetActor(session),\r\n          permission: WharfKitService.safeGetPermission(session)\r\n        }],\r\n        data: {\r\n          seller: WharfKitService.safeGetActor(session),\r\n          asset_ids: assetIds,\r\n          listing_price: priceString,\r\n          settlement_symbol: `${selectedCurrency.precision},${selectedCurrency.symbol}`,\r\n          maker_marketplace: 'market.pxj'\r\n        }\r\n      }\r\n\r\n      const result = await session.transact({ actions: [action] })\r\n      \r\n      if (result) {\r\n        const listingType = isBundle ? 'Bundle' : 'NFT'\r\n        showSuccess(`${listingType} listed successfully!`)\r\n        onSuccess?.()\r\n        onClose()\r\n        setPrice('')\r\n      }\r\n    } catch (error) {\r\n      log.error('Listing failed', 'ListingModal', error instanceof Error ? error : new Error(String(error)))\r\n      showError(`Listing failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\r\n    } finally {\r\n      setIsListing(false)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    if (!isListing) {\r\n      setPrice('')\r\n      setIsBundle(false)\r\n      setBundleName('')\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  if (!isOpen || !nft) return null\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={handleClose}>\r\n      <div className=\"modal-content listing-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>List NFT for Sale</h2>\r\n          <button \r\n            className=\"modal-close\" \r\n            onClick={handleClose}\r\n            disabled={isListing}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"nft-preview enhanced-preview\">\r\n            <div className=\"nft-image\">\r\n              <MediaRenderer\r\n                imageUrl={getAssetImageUrl(nft)}\r\n                videoUrl={getAssetVideoUrl(nft)}\r\n                alt={nft.name || `Asset #${nft.asset_id}`}\r\n                className=\"nft-media\"\r\n              />\r\n            </div>\r\n            <div className=\"nft-info\">\r\n              <h3>{nft.name}</h3>\r\n              <p className=\"nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.name || nft.collection?.collection_name || 'Unknown'}</p>\r\n              <p className=\"nft-schema\">{nft.schema.schema_name}</p>\r\n              {nft.mint_number && (\r\n                <p className=\"nft-mint\">Mint #{nft.mint_number}</p>\r\n              )}\r\n              {isBundle && bundleNfts.length > 0 && (\r\n                <p className=\"bundle-info\">+ {bundleNfts.length} additional NFT{bundleNfts.length > 1 ? 's' : ''}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Bundle Creation Section */}\r\n          {bundleNfts.length > 0 && (\r\n            <div className=\"bundle-section\">\r\n              <div className=\"bundle-toggle\">\r\n                <label className=\"checkbox-label\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={isBundle}\r\n                    onChange={(e) => setIsBundle(e.target.checked)}\r\n                    disabled={isListing}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                  Create Bundle with {bundleNfts.length} additional NFT{bundleNfts.length > 1 ? 's' : ''}\r\n                </label>\r\n              </div>\r\n              \r\n              {isBundle && (\r\n                <div className=\"bundle-details\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"bundleName\">Bundle Name *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"bundleName\"\r\n                      value={bundleName}\r\n                      onChange={(e) => setBundleName(e.target.value)}\r\n                      placeholder=\"Enter bundle name\"\r\n                      disabled={isListing}\r\n                      className=\"bundle-name-input\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div className=\"bundle-preview\">\r\n                    <h4>Bundle Contents:</h4>\r\n                    <div className=\"bundle-nfts\">\r\n                      <div className=\"bundle-nft-item main-nft\">\r\n                        <MediaRenderer imageUrl={getAssetImageUrl(nft)} videoUrl={getAssetVideoUrl(nft)} alt={nft.name || `Asset #${nft.asset_id}`} className=\"bundle-nft-image\" />\r\n                        <span>{nft.name}</span>\r\n                      </div>\r\n                      {bundleNfts.slice(0, 3).map((bundleNft) => (\r\n                        <div key={bundleNft.asset_id} className=\"bundle-nft-item\">\r\n                          <MediaRenderer imageUrl={getAssetImageUrl(bundleNft)} videoUrl={getAssetVideoUrl(bundleNft)} alt={bundleNft.name || `Asset #${bundleNft.asset_id}`} className=\"bundle-nft-image\" />\r\n                          <span>{bundleNft.name}</span>\r\n                        </div>\r\n                      ))}\r\n                      {bundleNfts.length > 3 && (\r\n                        <div className=\"bundle-more\">+{bundleNfts.length - 3} more</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} className=\"modal-form listing-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"price\">Price *</label>\r\n              <div className=\"price-input-group\">\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  placeholder=\"0.00\"\r\n                  step=\"0.0001\"\r\n                  min=\"0\"\r\n                  required\r\n                  disabled={isListing}\r\n                  className=\"price-input\"\r\n                />\r\n                <div className=\"currency-display\">\r\n                  <span className=\"currency-symbol\">{waxCurrency.symbol}</span>\r\n                  <span className=\"currency-note\">(AtomicMarket only supports WAX)</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"listing-info\">\r\n              <p className=\"info-text\">\r\n                <strong>Marketplace:</strong> AtomicMarket\r\n              </p>\r\n              <p className=\"info-text\">\r\n                <strong>Marketplace Fee:</strong> 2%\r\n              </p>\r\n              <p className=\"info-text\">\r\n                <strong>Collection Fee:</strong> Varies by collection\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"modal-actions\">\r\n              <button \r\n                type=\"button\" \r\n                className=\"btn-secondary\"\r\n                onClick={handleClose}\r\n                disabled={isListing}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                type=\"submit\" \r\n                className=\"btn-primary\"\r\n                disabled={isListing || !price}\r\n              >\r\n                {isListing ? (\r\n                  <>\r\n                    <div className=\"spinner\"></div>\r\n                    Listing...\r\n                  </>\r\n                ) : (\r\n                  'List for Sale'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListingModal","import React, { useState } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport type { InventoryNFT } from '../types/inventory'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\nimport '../css/modal.css'\n\ninterface TransferModalProps {\n  nft: InventoryNFT | null\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\nconst TransferModal: React.FC<TransferModalProps> = ({ nft, isOpen, onClose, onSuccess }) => {\n  const [recipient, setRecipient] = useState('')\n  const [memo, setMemo] = useState('')\n  const [isTransferring, setIsTransferring] = useState(false)\n  const { session, transferNFT } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n\n  const validateWaxAccount = (account: string): boolean => {\n    // WAX account names must be 12 characters, lowercase letters and numbers 1-5\n    const waxAccountRegex = /^[a-z1-5]{12}$/\n    return waxAccountRegex.test(account)\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!nft || !session || !recipient.trim()) {\n      showError('Validation Error', 'Please fill in all required fields')\n      return\n    }\n\n    if (!validateWaxAccount(recipient.trim())) {\n      showError(\n        'Invalid Account Name', \n        'Please enter a valid WAX account name (12 characters, lowercase letters and numbers 1-5)'\n      )\n      return\n    }\n\n    setIsTransferring(true)\n\n    try {\n      if (!transferNFT) {\n        throw new Error('NFT transfer service is not available')\n      }\n      // Use centralized NFT transfer service\n      const result = await transferNFT(\n        nft.asset_id,\n        recipient.trim()\n      )\n      \n      if (result) {\n        showSuccess('Transfer Successful', 'NFT transferred successfully!')\n        onSuccess?.()\n        onClose()\n        setRecipient('')\n        setMemo('')\n      }\n    } catch (error) {\n      log.error('Transfer failed', 'TransferModal', error as Error)\n      showError(\n        'Transfer Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    } finally {\n      setIsTransferring(false)\n    }\n  }\n\n  const handleClose = () => {\n    if (!isTransferring) {\n      setRecipient('')\n      setMemo('')\n      onClose()\n    }\n  }\n\n  if (!isOpen || !nft) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleClose}>\n      <div className=\"modal-content transfer-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Transfer NFT</h2>\n          <button \n            className=\"modal-close\" \n            onClick={handleClose}\n            disabled={isTransferring}\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"nft-preview\">\n            <div className=\"nft-image\">\n              {nft.video ? (\n                <video \n                  src={nft.video.startsWith('http') ? nft.video : `https://ipfs.io/ipfs/${nft.video}`}\n                  muted \n                  loop\n                  autoPlay\n                />\n              ) : nft.img ? (\n                <img \n                  src={nft.img.startsWith('http') ? nft.img : `https://ipfs.io/ipfs/${nft.img}`}\n                  alt={nft.name}\n                />\n              ) : (\n                <div className=\"no-image\">No Image</div>\n              )}\n            </div>\n            <div className=\"nft-info\">\n              <h3>{nft.name}</h3>\n              <p className=\"nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.name || nft.collection?.collection_name || 'Unknown'}</p>\n              <p className=\"nft-schema\">{nft.schema.schema_name}</p>\n              {nft.mint_number && (\n                <p className=\"nft-mint\">Mint #{nft.mint_number}</p>\n              )}\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"modal-form transfer-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"recipient\">Recipient WAX Account *</label>\n              <input\n                type=\"text\"\n                id=\"recipient\"\n                value={recipient}\n                onChange={(e) => setRecipient(e.target.value.toLowerCase())}\n                placeholder=\"e.g. pixeljourney\"\n                maxLength={12}\n                required\n                disabled={isTransferring}\n                className=\"recipient-input\"\n              />\n              <small className=\"input-help\">\n                Enter a valid WAX account name (12 characters, lowercase letters and numbers 1-5)\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"memo\">Memo (Optional)</label>\n              <input\n                type=\"text\"\n                id=\"memo\"\n                value={memo}\n                onChange={(e) => setMemo(e.target.value)}\n                placeholder=\"Optional transfer message\"\n                maxLength={256}\n                disabled={isTransferring}\n                className=\"memo-input\"\n              />\n            </div>\n\n            <div className=\"transfer-warning\">\n              <div className=\"warning-icon\">⚠️</div>\n              <div className=\"warning-text\">\n                <strong>Warning:</strong> This action cannot be undone. Make sure you trust the recipient and have entered the correct account name.\n              </div>\n            </div>\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\"\n                onClick={handleClose}\n                disabled={isTransferring}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-primary transfer-btn\"\n                disabled={isTransferring || !recipient.trim() || !validateWaxAccount(recipient.trim())}\n              >\n                {isTransferring ? (\n                  <>\n                    <div className=\"spinner\"></div>\n                    Transferring...\n                  </>\n                ) : (\n                  'Transfer NFT'\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TransferModal","import React, { useState } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { InventoryNFT } from '../types/inventory'\nimport { log } from '../services/loggingService'\nimport { MarketplaceConfigService } from '../config/marketplaceConfig'\nimport { WharfKitService } from '../services/wharfkit'\nimport '../css/modal.css'\n\ninterface BurnModalProps {\n  nft: InventoryNFT | null\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\nconst BurnModal: React.FC<BurnModalProps> = ({ nft, isOpen, onClose, onSuccess }) => {\n  const [confirmText, setConfirmText] = useState('')\n  const [isBurning, setIsBurning] = useState(false)\n  const [step, setStep] = useState<'warning' | 'confirm'>('warning')\n  const { session } = useWallet()\n  const { showError, showSuccess } = useNotifications()\n\n  const requiredConfirmText = 'BURN'\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!nft || !session) {\n      showError('Session error. Please try again.', 'Connection Error')\n      return\n    }\n\n    // Check if this is a WaxRock Pixal PFP - block burning if it is\n    if (MarketplaceConfigService.isPixalPFP(nft.template.template_id)) {\n      const waxRock = nft.data?.WaxRock as string\n      if (waxRock && MarketplaceConfigService.isValidWaxRock(waxRock)) {\n        showError(\n          `This is a rare WaxRock Pixal PFP (${waxRock}) and cannot be burned. WaxRock Pixals are protected from burning and recycling on our platform.`,\n          'Protected NFT',\n          8000\n        )\n        return\n      }\n    }\n\n    if (confirmText.toUpperCase() !== requiredConfirmText) {\n      showError(`Please type \"${requiredConfirmText}\" to confirm`, 'Confirmation Required')\n      return\n    }\n\n    setIsBurning(true)\n\n    try {\n      // AtomicAssets burn action\n      const action = {\n        account: 'atomicassets',\n        name: 'burnasset',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          asset_owner: WharfKitService.safeGetActor(session),\n          asset_id: nft.asset_id\n        }\n      }\n\n      const result = await session.transact({ actions: [action] })\n      \n      if (result) {\n        showSuccess('NFT burned successfully!', 'Burn Complete')\n        onSuccess?.()\n        onClose()\n        resetModal()\n      }\n    } catch (error) {\n      log.error('Burn failed', 'BurnModal', error as Error)\n      showError(`Burn failed: ${error instanceof Error ? error.message : 'Unknown error'}`, 'Burn Failed')\n    } finally {\n      setIsBurning(false)\n    }\n  }\n\n  const resetModal = () => {\n    setConfirmText('')\n    setStep('warning')\n  }\n\n  const handleClose = () => {\n    if (!isBurning) {\n      resetModal()\n      onClose()\n    }\n  }\n\n  const handleProceed = () => {\n    setStep('confirm')\n  }\n\n  if (!isOpen || !nft) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleClose}>\n      <div className=\"modal-content burn-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>🔥 Burn NFT</h2>\n          <button \n            className=\"modal-close\" \n            onClick={handleClose}\n            disabled={isBurning}\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"nft-preview\">\n            <div className=\"nft-image\">\n              {nft.video ? (\n                <video \n                  src={nft.video.startsWith('http') ? nft.video : `https://ipfs.io/ipfs/${nft.video}`}\n                  muted \n                  loop\n                  autoPlay\n                />\n              ) : nft.img ? (\n                <img \n                  src={nft.img.startsWith('http') ? nft.img : `https://ipfs.io/ipfs/${nft.img}`}\n                  alt={nft.name}\n                />\n              ) : (\n                <div className=\"no-image\">No Image</div>\n              )}\n            </div>\n            <div className=\"nft-info\">\n              <h3>{nft.name}</h3>\n              <p className=\"nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.name || nft.collection?.collection_name || 'Unknown'}</p>\n              <p className=\"nft-schema\">{nft.schema.schema_name}</p>\n              {nft.mint_number && (\n                <p className=\"nft-mint\">Mint #{nft.mint_number}</p>\n              )}\n            </div>\n          </div>\n\n          {step === 'warning' && (\n            <div className=\"burn-warning-step\">\n              <div className=\"danger-warning\">\n                <div className=\"warning-icon\">🚨</div>\n                <div className=\"warning-content\">\n                  <h3>PERMANENT ACTION WARNING</h3>\n                  <ul className=\"warning-list\">\n                    <li>This action will <strong>permanently destroy</strong> your NFT</li>\n                    <li>The NFT will be <strong>completely removed</strong> from the blockchain</li>\n                    <li>This action <strong>cannot be undone or reversed</strong></li>\n                    <li>You will <strong>not receive any compensation</strong></li>\n                    <li>The NFT will <strong>disappear forever</strong></li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"burn-reasons\">\n                <h4>Common reasons for burning NFTs:</h4>\n                <ul>\n                  <li>Reducing supply to increase rarity</li>\n                  <li>Participating in burn-to-earn mechanics</li>\n                  <li>Collection cleanup or rebranding</li>\n                  <li>Accidental duplicate mints</li>\n                </ul>\n              </div>\n\n              <div className=\"modal-actions\">\n                <button \n                  type=\"button\" \n                  className=\"btn-secondary\"\n                  onClick={handleClose}\n                >\n                  Cancel\n                </button>\n                <button \n                  type=\"button\" \n                  className=\"btn-danger\"\n                  onClick={handleProceed}\n                >\n                  I Understand, Proceed\n                </button>\n              </div>\n            </div>\n          )}\n\n          {step === 'confirm' && (\n            <form onSubmit={handleSubmit} className=\"modal-form burn-confirm-step\">\n              <div className=\"final-warning\">\n                <div className=\"warning-icon\">⚠️</div>\n                <p>\n                  <strong>FINAL WARNING:</strong> You are about to permanently destroy this NFT. \n                  This action cannot be undone.\n                </p>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"confirmText\">\n                  Type <strong>\"{requiredConfirmText}\"</strong> to confirm:\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"confirmText\"\n                  value={confirmText}\n                  onChange={(e) => setConfirmText(e.target.value)}\n                  placeholder={`Type \"${requiredConfirmText}\" here`}\n                  required\n                  disabled={isBurning}\n                  className=\"confirm-input\"\n                  autoComplete=\"off\"\n                />\n              </div>\n\n              <div className=\"modal-actions\">\n                <button \n                  type=\"button\" \n                  className=\"btn-secondary\"\n                  onClick={() => setStep('warning')}\n                  disabled={isBurning}\n                >\n                  Back\n                </button>\n                <button \n                  type=\"submit\" \n                  className=\"btn-danger burn-btn\"\n                  disabled={isBurning || confirmText.toUpperCase() !== requiredConfirmText}\n                >\n                  {isBurning ? (\n                    <>\n                      <div className=\"spinner\"></div>\n                      Burning...\n                    </>\n                  ) : (\n                    '🔥 Burn NFT Forever'\n                  )}\n                </button>\n              </div>\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BurnModal","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport type { InventoryNFT } from '../types/inventory'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { apiService } from '../services/api'\nimport { formatWAXPrice, formatNumber } from '../utils/formatUtils'\nimport { log } from '../services/loggingService'\nimport { WharfKitService } from '../services/wharfkit'\n\nimport '../css/modal.css'\n\ninterface BulkListingModalProps {\n  nfts: InventoryNFT[]\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\n\n\ninterface PriceSuggestion {\n  floorPrice: number\n  averagePrice: number\n  suggestedPrice: number\n  confidence: 'high' | 'medium' | 'low'\n  sampleSize: number\n}\n\nconst BulkListingModal: React.FC<BulkListingModalProps> = ({ nfts, isOpen, onClose, onSuccess }) => {\n  const [listingPrices, setListingPrices] = useState<Record<string, string>>({})\n  const [bulkPrice, setBulkPrice] = useState('')\n  const [isListing, setIsListing] = useState(false)\n  const [listingProgress, setListingProgress] = useState(0)\n  const [priceSuggestions, setPriceSuggestions] = useState<Record<string, PriceSuggestion>>({})\n  const [loadingSuggestions, setLoadingSuggestions] = useState(false)\n  const [showSuggestions, setShowSuggestions] = useState(true)\n  const [sortBy, setSortBy] = useState<string>('name_asc')\n  const { session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n\n  const waxCurrency = {\n    symbol: 'WAX',\n    precision: 8\n  }\n\n  const handlePriceChange = (assetId: string, price: string) => {\n    setListingPrices(prev => ({\n      ...prev,\n      [assetId]: price\n    }))\n  }\n\n  // Fetch price suggestions for NFTs with enhanced error handling and fallbacks\n  const fetchPriceSuggestions = useCallback(async () => {\n    if (!nfts.length || !isOpen) return\n    \n    setLoadingSuggestions(true)\n    const suggestions: Record<string, PriceSuggestion> = {}\n    const maxRetries = 3\n    \n    const fetchWithRetry = async (url: string, retries: number = maxRetries): Promise<unknown> => {\n      try {\n        const controller = new AbortController()\n        const timeoutId = setTimeout(() => controller.abort(), 10000) // 10 second timeout\n        \n        const response = await fetch(url, {\n          signal: controller.signal,\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n        \n        clearTimeout(timeoutId)\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n        }\n        \n        return await response.json()\n      } catch (error) {\n        if (retries > 0 && error instanceof Error && !error.name.includes('AbortError')) {\n          log.warn(`Retrying API call (${maxRetries - retries + 1}/${maxRetries})`, 'BulkListingModal.fetchWithRetry', { error: error.message, url })\n          await new Promise(resolve => setTimeout(resolve, 1000 * (maxRetries - retries + 1))) // Exponential backoff\n          return fetchWithRetry(url, retries - 1)\n        }\n        throw error\n      }\n    }\n    \n    try {\n      // Group NFTs by collection for batch analysis\n      const collectionGroups = nfts.reduce((groups, nft) => {\n        const collection = nft.collection.collection_name\n        if (!groups[collection]) groups[collection] = []\n        groups[collection].push(nft)\n        return groups\n      }, {} as Record<string, InventoryNFT[]>)\n      \n      const collectionEntries = Object.entries(collectionGroups)\n      let successfulCollections = 0\n      \n      // Analyze each collection with enhanced error handling\n      for (const [collection, collectionNFTs] of collectionEntries) {\n        try {\n          // Primary API: AtomicMarket sales data\n          const salesUrl = `${apiService.atomicMarketAPI}/atomicmarket/v1/sales?state=3&collection_name=${collection}&limit=100&order=desc&sort=updated`\n          let salesData = null\n          \n          try {\n            salesData = await fetchWithRetry(salesUrl)\n          } catch (primaryError) {\n            log.error(`Primary API failed for ${collection}, trying fallback:`, 'BulkListingModal.fetchPriceSuggestions', primaryError as Error)\n            \n            // Fallback API: Try with different parameters\n            try {\n              const fallbackUrl = `${apiService.atomicMarketAPI}/atomicmarket/v1/sales?collection_name=${collection}&state=3&limit=50&order=desc`\n              salesData = await fetchWithRetry(fallbackUrl, 1)\n            } catch (fallbackError) {\n              log.error(`Fallback API also failed for ${collection}:`, 'BulkListingModal.fetchPriceSuggestions', fallbackError as Error)\n              // Apply default pricing strategy for this collection\n               applyDefaultPricing(collectionNFTs, suggestions)\n               continue\n            }\n          }\n          \n          // Type guard for API response\n          const isValidApiResponse = (data: unknown): data is { success: boolean; data: any[] } => {\n            return typeof data === 'object' && data !== null && \n                   'success' in data && 'data' in data && \n                   Array.isArray((data as any).data)\n          }\n          \n          if (isValidApiResponse(salesData) && salesData.success && salesData.data.length > 0) {\n            const sales = salesData.data\n            const prices = sales\n              .filter((sale: {price?: {amount?: string}}) => sale.price?.amount)\n              .map((sale: {price: {amount: string, token_precision?: number}}) => {\n                const amount = parseFloat(sale.price.amount)\n                const precision = sale.price.token_precision || 8\n                return amount / Math.pow(10, precision)\n              })\n              .filter((price: number) => price > 0 && price < 10000) // Filter out outliers\n            \n            if (prices.length > 0) {\n              // Enhanced price calculation with outlier removal\n              const sortedPrices = prices.sort((a: number, b: number) => a - b)\n              const q1Index = Math.floor(sortedPrices.length * 0.25)\n              const q3Index = Math.floor(sortedPrices.length * 0.75)\n              const iqr = sortedPrices[q3Index] - sortedPrices[q1Index]\n              const lowerBound = sortedPrices[q1Index] - 1.5 * iqr\n              const upperBound = sortedPrices[q3Index] + 1.5 * iqr\n              \n              const filteredPrices = sortedPrices.filter((price: number) => price >= lowerBound && price <= upperBound)\n              \n              if (filteredPrices.length > 0) {\n                const floorPrice = Math.min(...filteredPrices)\n                const averagePrice = filteredPrices.reduce((sum: number, price: number) => sum + price, 0) / filteredPrices.length\n                const medianPrice = filteredPrices[Math.floor(filteredPrices.length / 2)]\n                \n                // Smart suggested price calculation\n                let suggestedPrice: number\n                if (filteredPrices.length >= 10) {\n                  // Use median-based pricing for better stability\n                  suggestedPrice = Math.max(floorPrice * 1.03, medianPrice * 0.98)\n                } else {\n                  // Conservative pricing for limited data\n                  suggestedPrice = Math.max(floorPrice * 1.05, averagePrice * 0.95)\n                }\n                \n                let confidence: 'high' | 'medium' | 'low'\n                if (filteredPrices.length >= 20) {\n                  confidence = 'high'\n                } else if (filteredPrices.length >= 10) {\n                  confidence = 'medium'\n                } else {\n                  confidence = 'low'\n                }\n                \n                // Apply suggestions to all NFTs in this collection\n                collectionNFTs.forEach((nft: InventoryNFT) => {\n                  suggestions[nft.asset_id] = {\n                    floorPrice,\n                    averagePrice,\n                    suggestedPrice,\n                    confidence,\n                    sampleSize: filteredPrices.length\n                  }\n                })\n                \n                successfulCollections++\n              } else {\n                 // Apply default pricing if no valid prices after filtering\n                 applyDefaultPricing(collectionNFTs, suggestions)\n               }\n             } else {\n               // Apply default pricing if no price data\n               applyDefaultPricing(collectionNFTs, suggestions)\n             }\n           } else {\n             // Apply default pricing if API returns no data\n             applyDefaultPricing(collectionNFTs, suggestions)\n          }\n        } catch (error) {\n          log.error(`Failed to process collection ${collection}:`, 'BulkListingModal.fetchPriceSuggestions', error as Error)\n          // Apply default pricing for failed collections\n           applyDefaultPricing(collectionNFTs, suggestions)\n        }\n        \n        // Add delay between requests to avoid rate limiting\n        if (collectionEntries.indexOf([collection, collectionNFTs]) < collectionEntries.length - 1) {\n          await new Promise(resolve => setTimeout(resolve, 500))\n        }\n      }\n      \n      // Show user feedback about data quality\n      if (successfulCollections === 0) {\n        showError('Price Analysis', 'Unable to fetch current market data. Using default pricing suggestions.')\n      } else if (successfulCollections < collectionEntries.length) {\n        log.warn(`Price data available for ${successfulCollections}/${collectionEntries.length} collections`)\n      }\n      \n      setPriceSuggestions(suggestions)\n    } catch (error) {\n      log.error('Error fetching price suggestions:', 'BulkListingModal.fetchPriceSuggestions', error as Error)\n      showError('Price Analysis Failed', 'Unable to analyze market prices. Please set prices manually.')\n      // Apply default pricing for all NFTs as final fallback\n      nfts.forEach(nft => {\n        suggestions[nft.asset_id] = {\n          floorPrice: 1.0,\n          averagePrice: 2.0,\n          suggestedPrice: 1.5,\n          confidence: 'low',\n          sampleSize: 0\n        }\n      })\n      setPriceSuggestions(suggestions)\n    } finally {\n      setLoadingSuggestions(false)\n    }\n  }, [nfts, isOpen, showError])\n  \n  // Helper method to apply default pricing strategy\n  const applyDefaultPricing = (collectionNFTs: InventoryNFT[], suggestions: Record<string, PriceSuggestion>) => {\n    // Default pricing based on collection popularity and rarity\n    const defaultFloor = 1.0\n    const defaultAverage = 2.0\n    const defaultSuggested = 1.5\n    \n    collectionNFTs.forEach((nft: InventoryNFT) => {\n      suggestions[nft.asset_id] = {\n        floorPrice: defaultFloor,\n        averagePrice: defaultAverage,\n        suggestedPrice: defaultSuggested,\n        confidence: 'low',\n        sampleSize: 0\n      }\n    })\n  }\n  \n  useEffect(() => {\n    if (isOpen && nfts.length > 0) {\n      fetchPriceSuggestions()\n    }\n  }, [isOpen, nfts, fetchPriceSuggestions])\n\n  // Sort NFTs for display\n  const sortedNfts = useMemo(() => {\n    const sorted = [...nfts]\n    \n    switch (sortBy) {\n      case 'name_asc':\n        return sorted.sort((a, b) => (a.name || '').localeCompare(b.name || ''))\n      case 'name_desc':\n        return sorted.sort((a, b) => (b.name || '').localeCompare(a.name || ''))\n      case 'collection_asc':\n        return sorted.sort((a, b) => a.collection.collection_name.localeCompare(b.collection.collection_name))\n      case 'collection_desc':\n        return sorted.sort((a, b) => b.collection.collection_name.localeCompare(a.collection.collection_name))\n      case 'mint_asc':\n        return sorted.sort((a, b) => (a.mint_number || 0) - (b.mint_number || 0))\n      case 'mint_desc':\n        return sorted.sort((a, b) => (b.mint_number || 0) - (a.mint_number || 0))\n      case 'price_asc':\n        return sorted.sort((a, b) => {\n          const priceA = parseFloat(listingPrices[a.asset_id] || '0')\n          const priceB = parseFloat(listingPrices[b.asset_id] || '0')\n          return priceA - priceB\n        })\n      case 'price_desc':\n        return sorted.sort((a, b) => {\n          const priceA = parseFloat(listingPrices[a.asset_id] || '0')\n          const priceB = parseFloat(listingPrices[b.asset_id] || '0')\n          return priceB - priceA\n        })\n      default:\n        return sorted\n    }\n  }, [nfts, sortBy, listingPrices])\n\n  const applyBulkPrice = () => {\n    if (!bulkPrice) return\n    \n    const newPrices: Record<string, string> = {}\n    nfts.forEach(nft => {\n      newPrices[nft.asset_id] = bulkPrice\n    })\n    setListingPrices(newPrices)\n  }\n\n\n  \n  const applySuggestedPrices = () => {\n    const newPrices: Record<string, string> = {}\n    nfts.forEach(nft => {\n      const suggestion = priceSuggestions[nft.asset_id]\n      if (suggestion) {\n        newPrices[nft.asset_id] = formatNumber(suggestion.suggestedPrice, 4)\n      }\n    })\n    setListingPrices(newPrices)\n  }\n  \n  const applyFloorPrices = () => {\n    const newPrices: Record<string, string> = {}\n    nfts.forEach(nft => {\n      const suggestion = priceSuggestions[nft.asset_id]\n      if (suggestion) {\n        newPrices[nft.asset_id] = formatNumber(suggestion.floorPrice * 0.99, 4) // 1% below floor\n      }\n    })\n    setListingPrices(newPrices)\n  }\n\n  // Enhanced smart pricing with proper useEffect\n  useEffect(() => {\n    if (showSuggestions && nfts.length > 0) {\n      fetchPriceSuggestions()\n    }\n  }, [showSuggestions, nfts, fetchPriceSuggestions])\n\n\n\n\n\n\n\n\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!session || nfts.length === 0) {\n      showError('Validation Error', 'Please connect your wallet and select NFTs to list')\n      return\n    }\n\n    // Validate all prices\n    const invalidPrices = nfts.filter(nft => {\n      const price = listingPrices[nft.asset_id]\n      return !price || isNaN(parseFloat(price)) || parseFloat(price) <= 0\n    })\n\n    if (invalidPrices.length > 0) {\n      showError(\n        'Invalid Prices',\n        `Please set valid prices for all NFTs. ${invalidPrices.length} NFT(s) have invalid prices.`\n      )\n      return\n    }\n\n    setIsListing(true)\n    setListingProgress(0)\n\n    try {\n      // Create listing actions for all NFTs\n      const actions = nfts.map(nft => {\n        const priceFloat = parseFloat(listingPrices[nft.asset_id])\n        const formattedPrice = priceFloat.toFixed(waxCurrency.precision)\n        const priceString = `${formattedPrice} ${waxCurrency.symbol}`\n\n        return {\n          account: 'atomicmarket',\n          name: 'announcesale',\n          authorization: [{\n            actor: WharfKitService.safeGetActor(session),\n            permission: WharfKitService.safeGetPermission(session)\n          }],\n          data: {\n            seller: WharfKitService.safeGetActor(session),\n            asset_ids: [nft.asset_id],\n            listing_price: priceString,\n            settlement_symbol: `${waxCurrency.precision},${waxCurrency.symbol}`,\n            maker_marketplace: 'market.pxj'\n          }\n        }\n      })\n\n      // Execute listings in batches to avoid transaction size limits\n      const batchSize = 5 // List up to 5 NFTs per transaction\n      const batches = []\n      \n      for (let i = 0; i < actions.length; i += batchSize) {\n        batches.push(actions.slice(i, i + batchSize))\n      }\n\n      let completedBatches = 0\n      \n      for (const batch of batches) {\n        const result = await session.transact({ actions: batch })\n        \n        if (result) {\n          completedBatches++\n          setListingProgress((completedBatches / batches.length) * 100)\n        }\n      }\n      \n      showSuccess(\n        'Listing Successful',\n        `Successfully listed ${nfts.length} NFT(s) on the marketplace!`\n      )\n      onSuccess?.()\n      onClose()\n      setListingPrices({})\n      setBulkPrice('')\n      \n    } catch (error) {\n      log.error('Bulk listing failed:', 'BulkListingModal.handleSubmit', error as Error)\n      showError(\n        'Listing Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    } finally {\n      setIsListing(false)\n      setListingProgress(0)\n    }\n  }\n\n  const getTotalValue = () => {\n    return nfts.reduce((total, nft) => {\n      const price = parseFloat(listingPrices[nft.asset_id] || '0')\n      return total + (isNaN(price) ? 0 : price)\n    }, 0)\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content bulk-listing-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Bulk List NFTs</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"listing-summary\">\n            <h3>Listing Summary</h3>\n            <p>You are about to list <strong>{nfts.length} NFT{nfts.length !== 1 ? 's' : ''}</strong></p>\n            <p className=\"total-value\">Total Value: <strong>{formatWAXPrice(getTotalValue())}</strong></p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"listing-form\">\n            {/* Smart Pricing Section */}\n            <div className=\"smart-pricing-section\">\n              <div className=\"pricing-header\">\n                <h4>Smart Pricing Tools</h4>\n                <button \n                  type=\"button\" \n                  className=\"toggle-suggestions\"\n                  onClick={() => setShowSuggestions(!showSuggestions)}\n                >\n                  {showSuggestions ? '📊 Hide Analysis' : '📊 Show Analysis'}\n                </button>\n              </div>\n              \n              {showSuggestions && (\n                <div className=\"price-analysis\">\n                  {loadingSuggestions ? (\n                    <div className=\"loading-suggestions\">\n                      <div className=\"spinner\"></div>\n                      <span>Analyzing market data...</span>\n                    </div>\n                  ) : (\n                    <div className=\"suggestion-controls\">\n                      <button \n                        type=\"button\" \n                        className=\"btn-suggestion suggested\"\n                        onClick={applySuggestedPrices}\n                        disabled={isListing || Object.keys(priceSuggestions).length === 0}\n                        title=\"Apply AI-recommended prices based on market analysis\"\n                      >\n                        🎯 Apply Suggested Prices\n                      </button>\n                      <button \n                        type=\"button\" \n                        className=\"btn-suggestion floor\"\n                        onClick={applyFloorPrices}\n                        disabled={isListing || Object.keys(priceSuggestions).length === 0}\n                        title=\"Price 1% below current floor prices for quick sales\"\n                      >\n                        ⚡ Quick Sale (Floor -1%)\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {/* Manual Bulk Price Setting */}\n              <div className=\"bulk-price-controls\">\n                <h5>Manual Bulk Pricing</h5>\n                <div className=\"bulk-input-group\">\n                  <input\n                    type=\"number\"\n                    value={bulkPrice}\n                    onChange={(e) => setBulkPrice(e.target.value)}\n                    placeholder=\"Set same price for all\"\n                    step=\"0.0001\"\n                    min=\"0\"\n                    disabled={isListing}\n                  />\n                  <button \n                    type=\"button\" \n                    className=\"btn-secondary\"\n                    onClick={applyBulkPrice}\n                    disabled={!bulkPrice || isListing}\n                  >\n                    Apply to All\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Individual NFT Pricing */}\n            <div className=\"nft-pricing-list\">\n              <div className=\"pricing-header\">\n                <h4>Individual Pricing</h4>\n                {nfts.length > 1 && (\n                  <div className=\"sort-container\">\n                    <label htmlFor=\"nft-sort\">Sort by:</label>\n                    <select \n                      id=\"nft-sort\"\n                      className=\"sort-select\"\n                      value={sortBy}\n                      onChange={(e) => setSortBy(e.target.value)}\n                    >\n                      <option value=\"name_asc\">Name (A-Z)</option>\n                      <option value=\"name_desc\">Name (Z-A)</option>\n                      <option value=\"collection_asc\">Collection (A-Z)</option>\n                      <option value=\"collection_desc\">Collection (Z-A)</option>\n                      <option value=\"mint_asc\">Mint # (Low-High)</option>\n                      <option value=\"mint_desc\">Mint # (High-Low)</option>\n                      <option value=\"price_asc\">Price (Low-High)</option>\n                      <option value=\"price_desc\">Price (High-Low)</option>\n                    </select>\n                  </div>\n                )}\n              </div>\n              <div className=\"bulk-listing-pricing-list-container\">\n                {sortedNfts.map((nft) => {\n                  const suggestion = priceSuggestions[nft.asset_id]\n                  return (\n                    <div key={nft.asset_id} className=\"bulk-listing-nft-pricing-item\">\n                      <div className=\"bulk-listing-nft-info\">\n                        <div className=\"bulk-listing-nft-image\">\n                          <img \n                            src={nft.img?.startsWith('http') ? nft.img : `https://ipfs.io/ipfs/${nft.img}`}\n                            alt={nft.name}\n                            onError={(e) => {\n                              const target = e.target as HTMLImageElement\n                              target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                            }}\n                          />\n                        </div>\n                        <div className=\"bulk-listing-nft-details\">\n                          <span className=\"bulk-listing-nft-name\">{nft.name}</span>\n                          <span className=\"bulk-listing-nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.collection_name || nft.collection?.name || 'Unknown'}</span>\n                          {nft.mint_number && (\n                            <span className=\"bulk-listing-nft-mint\">#{nft.mint_number}</span>\n                          )}\n                          {suggestion && (\n                            <div className=\"bulk-listing-price-suggestions\">\n                              <div className=\"bulk-listing-suggestion-row\">\n                                <span className=\"bulk-listing-suggestion-label\">Floor:</span>\n                                <span className=\"bulk-listing-suggestion-value\">{formatWAXPrice(suggestion.floorPrice)}</span>\n                              </div>\n                              <div className=\"bulk-listing-suggestion-row\">\n                                <span className=\"bulk-listing-suggestion-label\">Avg:</span>\n                                <span className=\"bulk-listing-suggestion-value\">{formatWAXPrice(suggestion.averagePrice)}</span>\n                              </div>\n                              <div className=\"bulk-listing-suggestion-row\">\n                                <span className=\"bulk-listing-suggestion-label\">Suggested:</span>\n                                <span className={`bulk-listing-suggestion-value confidence-${suggestion.confidence}`}>\n                                  {formatWAXPrice(suggestion.suggestedPrice)}\n                                </span>\n                                <span className=\"bulk-listing-confidence-badge\">{suggestion.confidence}</span>\n                              </div>\n                              <div className=\"bulk-listing-sample-size\">Based on {suggestion.sampleSize} recent sales</div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"bulk-listing-price-input-section\">\n                        <div className=\"bulk-listing-price-input\">\n                          <input\n                            type=\"number\"\n                            value={listingPrices[nft.asset_id] || ''}\n                            onChange={(e) => handlePriceChange(nft.asset_id, e.target.value)}\n                            placeholder=\"Price in WAX\"\n                            step=\"0.0001\"\n                            min=\"0\"\n                            required\n                            disabled={isListing}\n                          />\n                          <span className=\"currency-label\">WAX</span>\n                        </div>\n                        {suggestion && (\n                          <div className=\"bulk-listing-quick-price-buttons\">\n                            <button\n                              type=\"button\"\n                              className=\"bulk-listing-quick-price-btn suggested\"\n                              onClick={() => handlePriceChange(nft.asset_id, formatNumber(suggestion.suggestedPrice, 4))}\n                              disabled={isListing}\n                              title=\"Use suggested price\"\n                            >\n                              💡\n                            </button>\n                            <button\n                              type=\"button\"\n                              className=\"bulk-listing-quick-price-btn floor\"\n                              onClick={() => handlePriceChange(nft.asset_id, formatNumber(suggestion.floorPrice * 0.99, 4))}\n                              disabled={isListing}\n                              title=\"Use floor price -1%\"\n                            >\n                              ⚡\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n\n            {isListing && (\n              <div className=\"listing-progress\">\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\" \n                    style={{ width: `${listingProgress}%` }}\n                  ></div>\n                </div>\n                <p>Listing NFTs... {Math.round(listingProgress)}% complete</p>\n              </div>\n            )}\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\" \n                onClick={onClose}\n                disabled={isListing}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-primary\"\n                disabled={isListing || getTotalValue() === 0}\n              >\n                {isListing ? 'Listing...' : `List ${nfts.length} NFT${nfts.length !== 1 ? 's' : ''}`}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BulkListingModal","import React, { useState, useMemo } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { InventoryNFT } from '../types/inventory'\nimport { log } from '../services/loggingService'\n\nimport '../css/modal.css'\n\ninterface BulkTransferModalProps {\n  nfts: InventoryNFT[]\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\nconst BulkTransferModal: React.FC<BulkTransferModalProps> = ({ nfts, isOpen, onClose, onSuccess }) => {\n  const [recipient, setRecipient] = useState('')\n  const [memo, setMemo] = useState('')\n  const [isTransferring, setIsTransferring] = useState(false)\n  const [transferProgress, setTransferProgress] = useState(0)\n  const [sortBy, setSortBy] = useState('name_asc')\n  const { session, bulkTransferNFT } = useWallet()\n  const { showError, showSuccess } = useNotifications()\n\n  // Sort NFTs for display\n  const sortedNfts = useMemo(() => {\n    const sorted = [...nfts]\n    \n    switch (sortBy) {\n      case 'name_asc':\n        return sorted.sort((a, b) => (a.name || '').localeCompare(b.name || ''))\n      case 'name_desc':\n        return sorted.sort((a, b) => (b.name || '').localeCompare(a.name || ''))\n      case 'collection_asc':\n        return sorted.sort((a, b) => a.collection.collection_name.localeCompare(b.collection.collection_name))\n      case 'collection_desc':\n        return sorted.sort((a, b) => b.collection.collection_name.localeCompare(a.collection.collection_name))\n      case 'mint_asc':\n        return sorted.sort((a, b) => (a.mint_number || 0) - (b.mint_number || 0))\n      case 'mint_desc':\n        return sorted.sort((a, b) => (b.mint_number || 0) - (a.mint_number || 0))\n      default:\n        return sorted\n    }\n  }, [nfts, sortBy])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!session || !recipient.trim() || nfts.length === 0) {\n      showError('Please fill in all required fields', 'Validation Error')\n      return\n    }\n\n    // Validate recipient account name\n    const recipientTrimmed = recipient.trim().toLowerCase()\n    if (recipientTrimmed.length < 1 || recipientTrimmed.length > 12) {\n      showError('Account name must be between 1 and 12 characters', 'Validation Error')\n      return\n    }\n\n    if (!/^[a-z1-5.]+$/.test(recipientTrimmed)) {\n      showError('Account name can only contain lowercase letters, numbers 1-5, and dots', 'Validation Error')\n      return\n    }\n\n    setIsTransferring(true)\n    setTransferProgress(0)\n\n    try {\n      // Use bulk transfer service for efficient batch processing\n      if (!bulkTransferNFT) {\n        log.error('bulkTransferNFT service not available', 'BulkTransferModal')\n        throw new Error('Bulk transfer service not available')\n      }\n      \n      const assetIds = nfts.map(nft => nft.asset_id)\n      await bulkTransferNFT(\n        recipientTrimmed,\n        assetIds,\n        memo || 'Bulk transfer from PxMarket'\n      )\n      \n      setTransferProgress(100)\n      showSuccess(`Successfully transferred ${nfts.length} NFT(s) to ${recipientTrimmed}!`, 'Transfer Complete')\n      onSuccess?.()\n      onClose()\n      setRecipient('')\n      setMemo('')\n      \n    } catch (error) {\n      log.error('Bulk transfer failed', 'BulkTransferModal.handleSubmit', error as Error, { nftCount: nfts.length, recipient })\n      showError(`Transfer failed: ${error instanceof Error ? error.message : 'Unknown error'}`, 'Transfer Failed')\n    } finally {\n      setIsTransferring(false)\n      setTransferProgress(0)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content bulk-transfer-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Bulk Transfer NFTs</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"transfer-summary\">\n            <h3>Transfer Summary</h3>\n            <p>You are about to transfer <strong>{nfts.length} NFT{nfts.length !== 1 ? 's' : ''}</strong></p>\n            \n            {/* Collection Breakdown */}\n            <div className=\"collection-breakdown\">\n              <h4>Collection Breakdown</h4>\n              {Object.entries(\n                nfts.reduce((acc, nft) => {\n                  const collectionName = nft.collection.collection_name\n                  acc[collectionName] = (acc[collectionName] || 0) + 1\n                  return acc\n                }, {} as Record<string, number>)\n              ).map(([collection, count]: [string, number]) => (\n                <div key={collection} className=\"collection-item\">\n                  <span className=\"collection-name\">{collection}</span>\n                  <span className=\"collection-count\">{count} NFT{count !== 1 ? 's' : ''}</span>\n                </div>\n              ))}\n            </div>\n\n            {/* Rarity Breakdown */}\n            <div className=\"rarity-breakdown\">\n              <h4>Rarity Distribution</h4>\n              {Object.entries(\n                nfts.reduce((acc, nft) => {\n                  const rarity = (nft.template?.immutable_data as {rarity?: string})?.rarity || nft.data?.rarity || 'Unknown'\n                  acc[rarity.toString()] = (acc[rarity.toString()] || 0) + 1\n                  return acc\n                }, {} as Record<string, number>)\n              ).map(([rarity, count]: [string, number]) => (\n                <div key={rarity} className=\"rarity-item\">\n                  <span className=\"rarity-name\">{rarity}</span>\n                  <span className=\"rarity-count\">{count}</span>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"nft-preview-section\">\n              <div className=\"preview-header\">\n                <h4>NFT Preview</h4>\n                {nfts.length > 1 && (\n                  <div className=\"sort-container\">\n                    <label htmlFor=\"transfer-sort\">Sort by:</label>\n                    <select \n                      id=\"transfer-sort\"\n                      className=\"sort-select\"\n                      value={sortBy}\n                      onChange={(e) => setSortBy(e.target.value)}\n                    >\n                      <option value=\"name_asc\">Name (A-Z)</option>\n                      <option value=\"name_desc\">Name (Z-A)</option>\n                      <option value=\"collection_asc\">Collection (A-Z)</option>\n                      <option value=\"collection_desc\">Collection (Z-A)</option>\n                      <option value=\"mint_asc\">Mint # (Low-High)</option>\n                      <option value=\"mint_desc\">Mint # (High-Low)</option>\n                    </select>\n                  </div>\n                )}\n              </div>\n              <div className=\"nft-preview-list\">\n                {sortedNfts.slice(0, 5).map((nft) => (\n                <div key={nft.asset_id} className=\"nft-preview-item\">\n                  <img \n                    src={nft.img?.startsWith('http') ? nft.img : `https://ipfs.io/ipfs/${nft.img}`}\n                    alt={nft.name}\n                    onError={(e) => {\n                      const target = e.target as HTMLImageElement\n                      target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                    }}\n                  />\n                  <div className=\"nft-info-bulk\">\n                    <div className=\"nft-details\">\n                      <span className=\"nft-name\">{nft.name}</span>\n                      <span className=\"nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.collection_name || nft.collection?.name || 'Unknown'}</span>\n                      <span className=\"nft-mint\">#{nft.mint_number || 'N/A'}</span>\n                      <span className=\"nft-id\">ID: {nft.asset_id}</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              {nfts.length > 5 && (\n                <div className=\"nft-preview-more\">\n                  +{nfts.length - 5} more NFTs\n                </div>\n              )}\n              </div>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"transfer-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"recipient\">Recipient Account *</label>\n              <input\n                type=\"text\"\n                id=\"recipient\"\n                value={recipient}\n                onChange={(e) => setRecipient(e.target.value)}\n                placeholder=\"Enter WAX account name\"\n                required\n                disabled={isTransferring}\n                maxLength={12}\n              />\n              <small className=\"form-help\">\n                Enter a valid WAX account name (1-12 characters, lowercase letters, numbers 1-5, dots)\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"memo\">Memo (Optional)</label>\n              <input\n                type=\"text\"\n                id=\"memo\"\n                value={memo}\n                onChange={(e) => setMemo(e.target.value)}\n                placeholder=\"Optional transfer memo\"\n                disabled={isTransferring}\n                maxLength={256}\n              />\n            </div>\n\n            {isTransferring && (\n              <div className=\"transfer-progress\">\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\" \n                    style={{ width: `${transferProgress}%` }}\n                  ></div>\n                </div>\n                <p>Transferring... {Math.round(transferProgress)}% complete</p>\n              </div>\n            )}\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\" \n                onClick={onClose}\n                disabled={isTransferring}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-primary\"\n                disabled={isTransferring || !recipient.trim()}\n              >\n                {isTransferring ? 'Transferring...' : `Transfer ${nfts.length} NFT${nfts.length !== 1 ? 's' : ''}`}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BulkTransferModal","import React, { useState, useMemo } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport type { InventoryNFT } from '../types/inventory'\nimport { useNotifications } from \"../hooks/useNotifications\";\nimport { log } from \"../services/loggingService\";\n\nimport '../css/modal.css'\n\ninterface DistributeModalProps {\n  nfts: InventoryNFT[]\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\ninterface NFTDistribution {\n  nft: InventoryNFT\n  recipient: string\n}\n\nconst DistributeModal: React.FC<DistributeModalProps> = ({ nfts, isOpen, onClose, onSuccess }) => {\n  const [distributions, setDistributions] = useState<NFTDistribution[]>(() => \n    nfts.map(nft => ({ nft, recipient: '' }))\n  )\n  const [bulkAddresses, setBulkAddresses] = useState('')\n  const [memo, setMemo] = useState('')\n  const [isDistributing, setIsDistributing] = useState(false)\n  const [distributeProgress, setDistributeProgress] = useState(0)\n  const [batchSize, setBatchSize] = useState(10)\n  const [sortBy, setSortBy] = useState('name_asc')\n  const { session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n\n  // Sort NFTs for display\n  const sortedDistributions = useMemo(() => {\n    const sorted = [...distributions]\n    \n    switch (sortBy) {\n      case 'name_asc':\n        return sorted.sort((a, b) => (a.nft.name || '').localeCompare(b.nft.name || ''))\n      case 'name_desc':\n        return sorted.sort((a, b) => (b.nft.name || '').localeCompare(a.nft.name || ''))\n      case 'collection_asc':\n        return sorted.sort((a, b) => a.nft.collection.collection_name.localeCompare(b.nft.collection.collection_name))\n      case 'collection_desc':\n        return sorted.sort((a, b) => b.nft.collection.collection_name.localeCompare(a.nft.collection.collection_name))\n      case 'mint_asc':\n        return sorted.sort((a, b) => (a.nft.mint_number || 0) - (b.nft.mint_number || 0))\n      case 'mint_desc':\n        return sorted.sort((a, b) => (b.nft.mint_number || 0) - (a.nft.mint_number || 0))\n      default:\n        return sorted\n    }\n  }, [distributions, sortBy])\n\n  // Update distributions when NFTs change\n  React.useEffect(() => {\n    setDistributions(nfts.map(nft => ({ nft, recipient: '' })))\n  }, [nfts])\n\n  const handleRecipientChange = (assetId: string, recipient: string) => {\n    setDistributions(prev => \n      prev.map(dist => \n        dist.nft.asset_id === assetId \n          ? { ...dist, recipient }\n          : dist\n      )\n    )\n  }\n\n  const handleBulkAddressesChange = (addresses: string) => {\n    setBulkAddresses(addresses)\n    \n    if (addresses.trim()) {\n      const addressList = addresses.split(',').map(addr => addr.trim()).filter(addr => addr)\n      \n      if (addressList.length > 0) {\n        setDistributions(prev => \n          prev.map((dist, index) => ({\n            ...dist,\n            recipient: addressList[index % addressList.length] || ''\n          }))\n        )\n      }\n    }\n  }\n\n  const randomizeDistribution = () => {\n    if (!bulkAddresses.trim()) {\n      showError('No addresses provided', 'Please enter comma-separated addresses first')\n      return\n    }\n    \n    const addressList = bulkAddresses.split(',').map(addr => addr.trim()).filter(addr => addr)\n    \n    if (addressList.length === 0) {\n      showError('Invalid addresses', 'Please provide valid comma-separated addresses')\n      return\n    }\n    \n    setDistributions(prev => \n      prev.map(dist => ({\n        ...dist,\n        recipient: addressList[Math.floor(Math.random() * addressList.length)]\n      }))\n    )\n  }\n\n  const clearAllRecipients = () => {\n    setDistributions(prev => prev.map(dist => ({ ...dist, recipient: '' })))\n    setBulkAddresses('')\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    // Validate all distributions have recipients\n    const invalidDistributions = distributions.filter(dist => !dist.recipient.trim())\n    if (invalidDistributions.length > 0) {\n      showError('Missing Recipients', `Please specify recipients for all ${invalidDistributions.length} NFT(s)`)\n      return\n    }\n\n    setIsDistributing(true)\n    setDistributeProgress(0)\n\n    try {\n      const totalTransfers = distributions.length\n      let completedTransfers = 0\n\n      // Process in batches\n      for (let i = 0; i < distributions.length; i += batchSize) {\n        const batch = distributions.slice(i, i + batchSize)\n        \n        // Create batch transaction\n        const actions = batch.map(({ nft, recipient }) => ({\n          account: 'atomicassets',\n          name: 'transfer',\n          authorization: [{\n            actor: session.actor.toString(),\n            permission: 'active'\n          }],\n          data: {\n            from: session.actor.toString(),\n            to: recipient.trim(),\n            asset_ids: [nft.asset_id],\n            memo: memo || `Distributed via PxMarket`\n          }\n        }))\n\n        // Execute batch transaction\n        const result = await session.transact({\n          actions\n        }, {\n           expireSeconds: 30\n        })\n\n        completedTransfers += batch.length\n        setDistributeProgress((completedTransfers / totalTransfers) * 100)\n        \n        log.info('Batch distribution completed', 'DistributeModal', {\n          batchSize: batch.length,\n          completed: completedTransfers,\n          total: totalTransfers,\n          transactionId: result.transaction\n        })\n      }\n\n      showSuccess('Distribution Complete', `Successfully distributed ${totalTransfers} NFT${totalTransfers !== 1 ? 's' : ''}`)\n      onSuccess?.()\n      onClose()\n      \n    } catch (error) {\n      log.error('Distribution failed', 'DistributeModal', error as Error)\n      showError(\n        'Distribution Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    } finally {\n      setIsDistributing(false)\n      setDistributeProgress(0)\n    }\n  }\n\n  if (!isOpen) return null\n\n  const validDistributions = distributions.filter(dist => dist.recipient.trim())\n  const readyToDistribute = validDistributions.length === distributions.length\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content distribute-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Distribute NFTs</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"distribute-summary\">\n            <h3>Distribution Summary</h3>\n            <p>You are about to distribute <strong>{nfts.length} NFT{nfts.length !== 1 ? 's' : ''}</strong> to individual recipients</p>\n            \n            {/* Bulk Address Input */}\n            <div className=\"bulk-addresses-section\">\n              <h4>Bulk Address Input</h4>\n              <div className=\"form-group\">\n                <label htmlFor=\"bulk-addresses\">Comma-separated addresses (optional)</label>\n                <textarea\n                  id=\"bulk-addresses\"\n                  className=\"form-control\"\n                  value={bulkAddresses}\n                  onChange={(e) => handleBulkAddressesChange(e.target.value)}\n                  placeholder=\"pixeljourney,market.pxj,council.pxj\"\n                  rows={3}\n                />\n                <div className=\"bulk-actions\">\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-secondary\"\n                    onClick={randomizeDistribution}\n                    disabled={!bulkAddresses.trim()}\n                  >\n                    🎲 Randomize Distribution\n                  </button>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-secondary\"\n                    onClick={clearAllRecipients}\n                  >\n                    🗑️ Clear All\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Batch Size Configuration */}\n            <div className=\"batch-config\">\n              <h4>Transaction Settings</h4>\n              <div className=\"form-group\">\n                <label htmlFor=\"batch-size\">NFTs per transaction (5-200)</label>\n                <input\n                  type=\"number\"\n                  id=\"batch-size\"\n                  className=\"form-control\"\n                  value={batchSize}\n                  onChange={(e) => setBatchSize(Math.max(5, Math.min(200, parseInt(e.target.value) || 10)))}\n                  min={5}\n                  max={200}\n                />\n                <small>Larger batches are more efficient but may fail if too large</small>\n              </div>\n            </div>\n          </div>\n\n          {/* Individual NFT Distribution List */}\n          <div className=\"distribution-list\">\n            <div className=\"distribution-header\">\n              <h4>Individual Recipients ({validDistributions.length}/{distributions.length} configured)</h4>\n              {nfts.length > 1 && (\n                <div className=\"sort-container\">\n                  <label htmlFor=\"distribute-sort\">Sort by:</label>\n                  <select \n                    id=\"distribute-sort\"\n                    className=\"sort-select\"\n                    value={sortBy}\n                    onChange={(e) => setSortBy(e.target.value)}\n                  >\n                    <option value=\"name_asc\">Name (A-Z)</option>\n                    <option value=\"name_desc\">Name (Z-A)</option>\n                    <option value=\"collection_asc\">Collection (A-Z)</option>\n                    <option value=\"collection_desc\">Collection (Z-A)</option>\n                    <option value=\"mint_asc\">Mint # (Low-High)</option>\n                    <option value=\"mint_desc\">Mint # (High-Low)</option>\n                  </select>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"distribution-items\">\n              {sortedDistributions.map(({ nft, recipient }) => (\n                <div key={nft.asset_id} className=\"distribution-item\">\n                  <div className=\"nft-preview\">\n                    <img \n                      src={nft.img?.startsWith('http') ? nft.img : `https://ipfs.io/ipfs/${nft.img}`}\n                      alt={nft.name}\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement\n                        target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                      }}\n                    />\n                    <div className=\"nft-info\">\n                      <span className=\"nft-name\">{nft.name}</span>\n                      <span className=\"nft-collection\">{nft.collection.collection_name}</span>\n                      <span className=\"nft-mint\">#{nft.mint_number || 'N/A'}</span>\n                    </div>\n                  </div>\n                  <div className=\"recipient-input\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={recipient}\n                      onChange={(e) => handleRecipientChange(nft.asset_id, e.target.value)}\n                      placeholder=\"Recipient account name\"\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"distribute-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"memo\">Memo (optional)</label>\n              <input\n                type=\"text\"\n                id=\"memo\"\n                className=\"form-control\"\n                value={memo}\n                onChange={(e) => setMemo(e.target.value)}\n                placeholder=\"Optional transfer memo\"\n                maxLength={256}\n              />\n            </div>\n\n            {isDistributing && (\n              <div className=\"progress-container\">\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\" \n                    style={{ width: `${distributeProgress}%` }}\n                  ></div>\n                </div>\n                <p>Distributing NFTs... {Math.round(distributeProgress)}%</p>\n              </div>\n            )}\n\n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary\"\n                onClick={onClose}\n                disabled={isDistributing}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                disabled={isDistributing || !readyToDistribute}\n              >\n                {isDistributing ? 'Distributing...' : `Distribute ${nfts.length} NFT${nfts.length !== 1 ? 's' : ''}`}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DistributeModal","import React, { useState } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { InventoryNFT } from '../types/inventory'\nimport { MarketplaceConfigService } from '../config/marketplaceConfig'\nimport { log } from '../services/loggingService'\nimport { WharfKitService } from '../services/wharfkit'\nimport '../css/modal.css'\n\ninterface BulkBurnModalProps {\n  nfts: InventoryNFT[]\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\nconst BulkBurnModal: React.FC<BulkBurnModalProps> = ({ nfts, isOpen, onClose, onSuccess }) => {\n  const [isBurning, setIsBurning] = useState(false)\n  const [burnProgress, setBurnProgress] = useState(0)\n  const [confirmText, setConfirmText] = useState('')\n  const { session } = useWallet()\n  const { showError, showSuccess, showWarning } = useNotifications()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!session || nfts.length === 0) {\n      showError('Please connect your wallet and select NFTs to burn', 'Wallet Required')\n      return\n    }\n\n    // Filter out WaxRock Pixal PFPs\n    const waxrockPixals: InventoryNFT[] = []\n    const burnableNfts = nfts.filter(nft => {\n      if (MarketplaceConfigService.isPixalPFP(nft.template.template_id)) {\n        const waxRock = nft.data?.WaxRock as string\n        if (waxRock && MarketplaceConfigService.isValidWaxRock(waxRock)) {\n          waxrockPixals.push(nft)\n          return false // Exclude from burning\n        }\n      }\n      return true // Include in burning\n    })\n\n    // Show warning if WaxRock Pixals were found\n    if (waxrockPixals.length > 0) {\n      const waxrockNames = waxrockPixals.map(nft => `${nft.name} (${nft.data?.WaxRock})`).join(', ')\n      showWarning(\n        `${waxrockPixals.length} WaxRock Pixal PFP(s) were excluded from burning for protection: ${waxrockNames}. WaxRock Pixals are protected from burning and recycling on our platform.`,\n        'Protected NFTs Excluded',\n        8000\n      )\n      \n      if (burnableNfts.length === 0) {\n        showError('No NFTs remaining to burn after excluding WaxRock Pixals.', 'No Burnable NFTs')\n        return\n      }\n    }\n\n    if (confirmText !== 'BURN') {\n      showError('Please type \"BURN\" to confirm this action', 'Confirmation Required')\n      return\n    }\n\n    setIsBurning(true)\n    setBurnProgress(0)\n\n    try {\n      // Create burn actions for burnable NFTs only\n      const actions = burnableNfts.map(nft => ({\n        account: 'atomicassets',\n        name: 'burnasset',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          asset_owner: WharfKitService.safeGetActor(session),\n          asset_id: nft.asset_id\n        }\n      }))\n\n      // Execute burns in batches to avoid transaction size limits\n      const batchSize = 10 // Burn up to 10 NFTs per transaction\n      const batches = []\n      \n      for (let i = 0; i < actions.length; i += batchSize) {\n        batches.push(actions.slice(i, i + batchSize))\n      }\n\n      let completedBatches = 0\n      \n      for (const batch of batches) {\n        const result = await session.transact({ actions: batch })\n        \n        if (result) {\n          completedBatches++\n          setBurnProgress((completedBatches / batches.length) * 100)\n        }\n      }\n      \n      showSuccess(`Successfully burned ${burnableNfts.length} NFT(s)!`, 'Burn Complete')\n      onSuccess?.()\n      onClose()\n      setConfirmText('')\n      \n    } catch (error) {\n      log.error('Bulk burn failed', 'BulkBurnModal.handleSubmit', error as Error, { nftCount: burnableNfts.length })\n      showError(`Burn failed: ${error instanceof Error ? error.message : 'Unknown error'}`, 'Burn Failed')\n    } finally {\n      setIsBurning(false)\n      setBurnProgress(0)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content bulk-burn-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Bulk Burn NFTs</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"burn-warning\">\n            <div className=\"warning-icon\">\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n                <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line>\n                <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\n              </svg>\n            </div>\n            <h3>⚠️ Warning: This action cannot be undone!</h3>\n            <p>You are about to permanently burn <strong>{nfts.length} NFT{nfts.length !== 1 ? 's' : ''}</strong>. This will completely destroy these assets and they cannot be recovered.</p>\n          </div>\n\n          <div className=\"nfts-to-burn\">\n            <h4>NFTs to be burned:</h4>\n            <div className=\"burn-list-container\">\n              {nfts.map((nft) => (\n                <div key={nft.asset_id} className=\"burn-nft-item\">\n                  <img \n                    src={nft.img?.startsWith('http') ? nft.img : `https://ipfs.io/ipfs/${nft.img}`}\n                    alt={nft.name}\n                    onError={(e) => {\n                      const target = e.target as HTMLImageElement\n                      target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                    }}\n                  />\n                  <div className=\"nft-details\">\n                    <span className=\"nft-name\">{nft.name}</span>\n                    <span className=\"nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.collection_name || nft.collection?.name || 'Unknown'}</span>\n                    {nft.mint_number && (\n                      <span className=\"nft-mint\">#{nft.mint_number}</span>\n                    )}\n                    <span className=\"nft-id\">ID: {nft.asset_id}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"burn-form\">\n            <div className=\"confirmation-section\">\n              <label htmlFor=\"confirmText\">\n                Type <strong>\"BURN\"</strong> to confirm this action:\n              </label>\n              <input\n                id=\"confirmText\"\n                type=\"text\"\n                value={confirmText}\n                onChange={(e) => setConfirmText(e.target.value.toUpperCase())}\n                placeholder=\"Type BURN to confirm\"\n                disabled={isBurning}\n                required\n              />\n            </div>\n\n            {isBurning && (\n              <div className=\"burn-progress\">\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\" \n                    style={{ width: `${burnProgress}%` }}\n                  ></div>\n                </div>\n                <p>Burning NFTs... {Math.round(burnProgress)}% complete</p>\n              </div>\n            )}\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\" \n                onClick={onClose}\n                disabled={isBurning}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-danger\"\n                disabled={isBurning || confirmText !== 'BURN'}\n              >\n                {isBurning ? 'Burning...' : `🔥 Burn ${nfts.length} NFT${nfts.length !== 1 ? 's' : ''}`}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BulkBurnModal","import type { IngredientTemplate, CraftingRecipe } from '../types/ingredients'\n\nexport const INGREDIENT_TEMPLATES: IngredientTemplate[] = [\n  { id: 781515, pxj: 1, wuf: 22.0, pxjUpgrade: 0, name: \"Pixal PFP\", type: \"pixals\" },\n  { id: 820134, pxj: 2.22, wuf: 5.0, pxjUpgrade: 0, name: \"Pixel Ingredient Pack\", type: \"pixelpack\" },\n  { id: 858568, pxj: 142.0, wuf: 142.0, pxjUpgrade: 0, name: \"Black (Primary)\", type: \"primary\" },\n  { id: 858569, pxj: 0.42, wuf: 1.0, pxjUpgrade: 0, name: \"Blue (Primary)\", type: \"primary\" },\n  { id: 858570, pxj: 0.42, wuf: 1.0, pxjUpgrade: 0, name: \"Red (Primary)\", type: \"primary\" },\n  { id: 858571, pxj: 0.42, wuf: 1.0, pxjUpgrade: 0, name: \"Yellow (Primary)\", type: \"primary\" },\n  { id: 858572, pxj: 2.22, wuf: 1.0, pxjUpgrade: 25000, name: \"Green (Secondary)\", type: \"secondary\" },\n  { id: 858573, pxj: 2.22, wuf: 1.0, pxjUpgrade: 25000, name: \"Orange (Secondary)\", type: \"secondary\" },\n  { id: 858574, pxj: 2.22, wuf: 1.0, pxjUpgrade: 25000, name: \"Purple (Secondary)\", type: \"secondary\" },\n  { id: 858575, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Amber (Tertiary)\", type: \"tertiary\" },\n  { id: 858576, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Chartreuse (Tertiary)\", type: \"tertiary\" },\n  { id: 858577, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Violet (Tertiary)\", type: \"tertiary\" },\n  { id: 858578, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Teal (Tertiary)\", type: \"tertiary\" },\n  { id: 858580, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Vermillion (Tertiary)\", type: \"tertiary\" },\n  { id: 859273, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Magenta (Tertiary)\", type: \"tertiary\" }\n]\n\nexport const CRAFTING_RECIPES: CraftingRecipe[] = [\n  {\n    id: 'craft_green',\n    name: 'Green (Secondary)',\n    description: 'Craft Green from Yellow + Blue + 25,000 PXJ',\n    resultTemplateId: 858572,\n    ingredients: [\n      { templateId: 858571, quantity: 1, name: 'Yellow (Primary)' },\n      { templateId: 858569, quantity: 1, name: 'Blue (Primary)' }\n    ],\n    pxjCost: 25000,\n    tier: 'secondary'\n  },\n  {\n    id: 'craft_orange',\n    name: 'Orange (Secondary)',\n    description: 'Craft Orange from Red + Yellow + 25,000 PXJ',\n    resultTemplateId: 858573,\n    ingredients: [\n      { templateId: 858570, quantity: 1, name: 'Red (Primary)' },\n      { templateId: 858571, quantity: 1, name: 'Yellow (Primary)' }\n    ],\n    pxjCost: 25000,\n    tier: 'secondary'\n  },\n  {\n    id: 'craft_purple',\n    name: 'Purple (Secondary)',\n    description: 'Craft Purple from Red + Blue + 25,000 PXJ',\n    resultTemplateId: 858574,\n    ingredients: [\n      { templateId: 858570, quantity: 1, name: 'Red (Primary)' },\n      { templateId: 858569, quantity: 1, name: 'Blue (Primary)' }\n    ],\n    pxjCost: 25000,\n    tier: 'secondary'\n  },\n  {\n    id: 'craft_amber',\n    name: 'Amber (Tertiary)',\n    description: 'Craft Amber from Orange + Green + 150,000 PXJ',\n    resultTemplateId: 858575,\n    ingredients: [\n      { templateId: 858573, quantity: 1, name: 'Orange (Secondary)' },\n      { templateId: 858572, quantity: 1, name: 'Green (Secondary)' }\n    ],\n    pxjCost: 150000,\n    tier: 'tertiary'\n  },\n  {\n    id: 'craft_chartreuse',\n    name: 'Chartreuse (Tertiary)',\n    description: 'Craft Chartreuse from Green + Purple + 150,000 PXJ',\n    resultTemplateId: 858576,\n    ingredients: [\n      { templateId: 858572, quantity: 1, name: 'Green (Secondary)' },\n      { templateId: 858574, quantity: 1, name: 'Purple (Secondary)' }\n    ],\n    pxjCost: 150000,\n    tier: 'tertiary'\n  },\n  {\n    id: 'craft_violet',\n    name: 'Violet (Tertiary)',\n    description: 'Craft Violet from Purple + Orange + 150,000 PXJ',\n    resultTemplateId: 858577,\n    ingredients: [\n      { templateId: 858574, quantity: 1, name: 'Purple (Secondary)' },\n      { templateId: 858573, quantity: 1, name: 'Orange (Secondary)' }\n    ],\n    pxjCost: 150000,\n    tier: 'tertiary'\n  },\n  {\n    id: 'craft_teal',\n    name: 'Teal (Tertiary)',\n    description: 'Craft Teal from Green + Purple + 150,000 PXJ',\n    resultTemplateId: 858578,\n    ingredients: [\n      { templateId: 858572, quantity: 1, name: 'Green (Secondary)' },\n      { templateId: 858574, quantity: 1, name: 'Purple (Secondary)' }\n    ],\n    pxjCost: 150000,\n    tier: 'tertiary'\n  },\n  {\n    id: 'craft_vermillion',\n    name: 'Vermillion (Tertiary)',\n    description: 'Craft Vermillion from Orange + Purple + 150,000 PXJ',\n    resultTemplateId: 858580,\n    ingredients: [\n      { templateId: 858573, quantity: 1, name: 'Orange (Secondary)' },\n      { templateId: 858574, quantity: 1, name: 'Purple (Secondary)' }\n    ],\n    pxjCost: 150000,\n    tier: 'tertiary'\n  },\n  {\n    id: 'craft_magenta',\n    name: 'Magenta (Tertiary)',\n    description: 'Craft Magenta from Purple + Orange + 150,000 PXJ',\n    resultTemplateId: 859273,\n    ingredients: [\n      { templateId: 858574, quantity: 1, name: 'Purple (Secondary)' },\n      { templateId: 858573, quantity: 1, name: 'Orange (Secondary)' }\n    ],\n    pxjCost: 150000,\n    tier: 'tertiary'\n  }\n]\n\nexport const getTemplateById = (id: number): IngredientTemplate | undefined => {\n  return INGREDIENT_TEMPLATES.find(template => template.id === id)\n}\n\nexport const getRecipeById = (id: string): CraftingRecipe | undefined => {\n  return CRAFTING_RECIPES.find(recipe => recipe.id === id)\n}\n\nexport const getPrimaryIngredients = (): IngredientTemplate[] => {\n  return INGREDIENT_TEMPLATES.filter(template => template.type === 'primary')\n}\n\nexport const getSecondaryIngredients = (): IngredientTemplate[] => {\n  return INGREDIENT_TEMPLATES.filter(template => template.type === 'secondary')\n}\n\nexport const getTertiaryIngredients = (): IngredientTemplate[] => {\n  return INGREDIENT_TEMPLATES.filter(template => template.type === 'tertiary')\n}","import { apiService } from './api'\nimport type { NFTAsset } from './api'\nimport { INGREDIENT_TEMPLATES } from '../data/ingredients'\nimport type { InventoryItem, UserBalance } from '../types/ingredients'\nimport type { InventoryNFT } from '../types/inventory'\nimport { ErrorMessageService } from './errorMessageService'\nimport { log } from './loggingService'\n\nexport type { InventoryItem, UserBalance }\n\nclass InventoryService {\n  private cache: InventoryItem[] = []\n  private balanceCache: UserBalance = { pxj: 0, wuf: 0 }\n  private lastFetch: number = 0\n  private readonly CACHE_DURATION = 30000 // 30 seconds\n  \n  // Virtual library for background loading\n  private virtualLibrary: Map<string, InventoryNFT[]> = new Map() // account -> full NFT data\n  private virtualLibraryTimestamp: Map<string, number> = new Map()\n  private readonly VIRTUAL_LIBRARY_CACHE_DURATION = 300000 // 5 minutes\n  private backgroundLoadingPromises: Map<string, Promise<void>> = new Map()\n  private isBackgroundLoading: Set<string> = new Set()\n\n  /**\n   * Fetch user's ingredient inventory from the blockchain\n   */\n  async fetchInventory(account: string): Promise<InventoryItem[]> {\n    const now = Date.now()\n    \n    // Return cached data if still fresh\n    if (this.cache.length > 0 && (now - this.lastFetch) < this.CACHE_DURATION) {\n      return this.cache\n    }\n\n    try {\n      // Fetch NFTs from Atomic Market API with burned=false filter\n      const response = await fetch(\n        `${apiService.getCurrentAtomicEndpoint()}/atomicassets/v1/assets?owner=${account}&collection_name=pixeljourney&burned=false&limit=1000&page=1&order=desc&sort=asset_id`\n      )\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch inventory: ${response.statusText}`)\n      }\n\n      const data = await response.json()\n      const assets = data.data || []\n\n      // Group assets by template ID and count quantities\n      const inventoryMap = new Map<number, {\n        templateId: number\n        name: string\n        assetIds: string[]\n        tier: 'primary' | 'secondary' | 'tertiary'\n      }>()\n\n      for (const asset of assets) {\n        const templateId = parseInt(asset.template.template_id)\n        const template = INGREDIENT_TEMPLATES.find(t => t.id === templateId)\n        \n        // Only include ingredient templates (burned assets already filtered by API)\n        if (!template || !['primary', 'secondary', 'tertiary'].includes(template.type)) {\n          continue\n        }\n\n        if (!inventoryMap.has(templateId)) {\n          inventoryMap.set(templateId, {\n            templateId,\n            name: template.name,\n            assetIds: [],\n            tier: template.type as 'primary' | 'secondary' | 'tertiary'\n          })\n        }\n\n        inventoryMap.get(templateId)!.assetIds.push(asset.asset_id)\n      }\n\n      // Convert map to array with quantities\n      this.cache = Array.from(inventoryMap.values()).map(item => ({\n        ...item,\n        quantity: item.assetIds.length\n      }))\n\n      this.lastFetch = now\n      return this.cache\n    } catch (error) {\n      ErrorMessageService.logError('InventoryService.fetchInventory', error, { account })\n      \n      // Return empty inventory on error instead of mock data with fake asset IDs\n      this.cache = []\n      return []\n    }\n  }\n\n  /**\n   * Fetch user's token balances (PXJ, WUF)\n   */\n  async fetchBalances(account: string): Promise<UserBalance> {\n    try {\n      let pxjBalance = 0\n      let wufBalance = 0\n\n      // Fetch PXJ balance using WAX chain API\n      try {\n        const pxjBalances = await apiService.getWaxCurrencyBalance(account, 'pixeljourney', 'PXJ')\n        if (pxjBalances && pxjBalances.length > 0) {\n          pxjBalance = parseFloat(pxjBalances[0].balance.split(' ')[0])\n        }\n      } catch (error) {\n        ErrorMessageService.logError('InventoryService.getPXJBalance', error, { account })\n      }\n\n      // Fetch WUF balance using WAX chain API\n      try {\n        const wufBalances = await apiService.getWaxCurrencyBalance(account, 'wuffi', 'WUF')\n        if (wufBalances && wufBalances.length > 0) {\n          wufBalance = parseFloat(wufBalances[0].balance.split(' ')[0])\n        }\n      } catch (error) {\n        ErrorMessageService.logError('InventoryService.getWUFBalance', error, { account })\n      }\n\n      // Use real balances from API\n      this.balanceCache = { pxj: pxjBalance, wuf: wufBalance }\n      return this.balanceCache\n    } catch (error) {\n      ErrorMessageService.logError('InventoryService.fetchBalances', error, { account })\n      \n      // Return zero balances on error instead of mock data\n      const emptyBalances = { pxj: 0, wuf: 0 }\n      this.balanceCache = emptyBalances\n      return emptyBalances\n    }\n  }\n\n  /**\n   * Get quantity of a specific ingredient from inventory\n   */\n  getIngredientQuantity(templateId: number): number {\n    const item = this.cache.find(inv => inv.templateId === templateId)\n    return item ? item.quantity : 0\n  }\n\n  /**\n   * Get asset IDs for a specific ingredient (needed for crafting transactions)\n   */\n  getIngredientAssetIds(templateId: number, quantity: number): string[] {\n    const item = this.cache.find(inv => inv.templateId === templateId)\n    if (!item || item.quantity < quantity) {\n      return []\n    }\n    return item.assetIds.slice(0, quantity)\n  }\n\n  /**\n   * Check if user has enough ingredients for a recipe\n   */\n  canCraftRecipe(ingredients: { templateId: number; quantity: number }[], pxjCost: number): boolean {\n    // Check ingredient availability\n    for (const ingredient of ingredients) {\n      const available = this.getIngredientQuantity(ingredient.templateId)\n      if (available < ingredient.quantity) {\n        return false\n      }\n    }\n\n    // Check PXJ balance\n    if (this.balanceCache.pxj < pxjCost) {\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Calculate maximum craftable quantity for a recipe\n   */\n  getMaxCraftableQuantity(ingredients: { templateId: number; quantity: number }[], pxjCost: number): number {\n    let maxFromIngredients = Infinity\n    \n    // Check ingredient availability\n    for (const ingredient of ingredients) {\n      const available = this.getIngredientQuantity(ingredient.templateId)\n      const needed = ingredient.quantity\n      const possibleFromThisIngredient = Math.floor(available / needed)\n      maxFromIngredients = Math.min(maxFromIngredients, possibleFromThisIngredient)\n    }\n    \n    // Check PXJ availability\n    const maxFromPxj = Math.floor(this.balanceCache.pxj / pxjCost)\n    \n    return Math.min(maxFromIngredients, maxFromPxj)\n  }\n\n  /**\n   * Update inventory after successful crafting (optimistic update)\n   */\n  updateInventoryAfterCraft(usedIngredients: { templateId: number; quantity: number }[], pxjSpent: number) {\n    // Remove used ingredients from cache\n    for (const used of usedIngredients) {\n      const item = this.cache.find(inv => inv.templateId === used.templateId)\n      if (item) {\n        item.quantity = Math.max(0, item.quantity - used.quantity)\n        // Remove used asset IDs\n        item.assetIds = item.assetIds.slice(used.quantity)\n      }\n    }\n\n    // Update PXJ balance\n    this.balanceCache.pxj = Math.max(0, this.balanceCache.pxj - pxjSpent)\n  }\n\n  /**\n   * Start background loading of user's full inventory for virtual library\n   */\n  async startBackgroundInventoryLoad(account: string): Promise<void> {\n    if (!account || this.isBackgroundLoading.has(account)) {\n      return\n    }\n\n    // Check if we have recent cached data\n    const lastUpdate = this.virtualLibraryTimestamp.get(account) || 0\n    const now = Date.now()\n    if (now - lastUpdate < this.VIRTUAL_LIBRARY_CACHE_DURATION) {\n      return // Cache is still fresh\n    }\n\n    this.isBackgroundLoading.add(account)\n    \n    try {\n      log.debug(`Starting background inventory load for ${account}`, 'InventoryService.startBackgroundInventoryLoad')\n      \n      // Load full inventory in background\n      const promise = this.loadFullInventoryInBackground(account)\n      this.backgroundLoadingPromises.set(account, promise)\n      \n      await promise\n      \n      log.info(`Background inventory load completed for ${account}`, 'InventoryService.startBackgroundInventoryLoad')\n    } catch (error) {\n      ErrorMessageService.logError('InventoryService.startBackgroundInventoryLoad', error, { account })\n    } finally {\n      this.isBackgroundLoading.delete(account)\n      this.backgroundLoadingPromises.delete(account)\n    }\n  }\n\n  /**\n   * Convert NFTAsset to InventoryNFT format\n   */\n  private convertNFTAssetToInventoryNFT(asset: NFTAsset): InventoryNFT {\n    return {\n      asset_id: asset.asset_id,\n      name: asset.name,\n      img: asset.image,\n      video: asset.video,\n      collection: {\n        name: asset.collection,\n        collection_name: asset.collection\n      },\n      schema: {\n        schema_name: asset.schema\n      },\n      template: {\n        template_id: asset.template_id?.toString() || '0',\n        max_supply: asset.max_supply || '0',\n        immutable_data: {\n          img: asset.image,\n          video: asset.video\n        }\n      },\n      data: {\n        ...asset.traits,\n        rarity: asset.rarity\n      },\n      mint_number: asset.template_mint\n    }\n  }\n\n  /**\n   * Load full inventory in background with pagination\n   */\n  private async loadFullInventoryInBackground(account: string): Promise<void> {\n    const allNFTs: InventoryNFT[] = []\n    let page = 1\n    const limit = 100\n    let hasMore = true\n\n    while (hasMore) {\n      try {\n        // Use getUserInventoryWithFilter with 'all' to get NFTs from all collections\n        const response = await apiService.getUserInventoryWithFilter(\n          account,\n          page,\n          limit,\n          'all'\n        )\n\n        if (response && response.assets && response.assets.length > 0) {\n          // Convert NFTAsset[] to InventoryNFT[]\n          const convertedAssets = response.assets.map(asset => this.convertNFTAssetToInventoryNFT(asset))\n          allNFTs.push(...convertedAssets)\n          hasMore = response.hasMore\n          page++\n          \n          // Small delay to avoid overwhelming the API\n          await new Promise(resolve => setTimeout(resolve, 100))\n        } else {\n          hasMore = false\n        }\n      } catch (error) {\n        ErrorMessageService.logError('InventoryService.loadFullInventoryInBackground', error, { account, page })\n        hasMore = false\n      }\n    }\n\n    // Store in virtual library\n    this.virtualLibrary.set(account, allNFTs)\n    this.virtualLibraryTimestamp.set(account, Date.now())\n    \n    log.info(`Loaded ${allNFTs.length} NFTs into virtual library for ${account}`, 'InventoryService.loadFullInventoryInBackground')\n  }\n\n  /**\n   * Get inventory page from virtual library (if available) or fetch from API\n   */\n  async getInventoryPage(account: string, page: number, limit: number = 50): Promise<{ data: InventoryNFT[], hasMore: boolean, totalCount: number }> {\n    // Try to get from virtual library first\n    const virtualData = this.virtualLibrary.get(account)\n    const lastUpdate = this.virtualLibraryTimestamp.get(account) || 0\n    const now = Date.now()\n    \n    if (virtualData && (now - lastUpdate < this.VIRTUAL_LIBRARY_CACHE_DURATION)) {\n      // Serve from virtual library\n      const startIndex = (page - 1) * limit\n      const endIndex = startIndex + limit\n      const pageData = virtualData.slice(startIndex, endIndex)\n      \n      return {\n        data: pageData,\n        hasMore: endIndex < virtualData.length,\n        totalCount: virtualData.length\n      }\n    }\n    \n    // Fallback to API call - use getUserInventoryWithFilter for all collections\n    try {\n      const response = await apiService.getUserInventoryWithFilter(account, page, limit, 'all')\n      const convertedAssets = response?.assets ? response.assets.map(asset => this.convertNFTAssetToInventoryNFT(asset)) : []\n      return {\n        data: convertedAssets,\n        hasMore: response?.hasMore || false,\n        totalCount: response?.total || 0\n      }\n    } catch (error) {\n      ErrorMessageService.logError('InventoryService.getInventoryPage', error, { account, page, limit })\n      return { data: [], hasMore: false, totalCount: 0 }\n    }\n  }\n\n  /**\n   * Check if background loading is in progress\n   */\n  isBackgroundLoadingInProgress(account: string): boolean {\n    return this.isBackgroundLoading.has(account)\n  }\n\n  /**\n   * Get virtual library stats\n   */\n  getVirtualLibraryStats(account: string): { itemCount: number, lastUpdate: number | null, isLoading: boolean } {\n    const itemCount = this.virtualLibrary.get(account)?.length || 0\n    const lastUpdate = this.virtualLibraryTimestamp.get(account) || null\n    const isLoading = this.isBackgroundLoading.has(account)\n    \n    return { itemCount, lastUpdate, isLoading }\n  }\n\n  /**\n   * Clear cache to force refresh on next fetch\n   */\n  clearCache() {\n    this.cache = []\n    this.balanceCache = { pxj: 0, wuf: 0 }\n    this.lastFetch = 0\n  }\n\n  /**\n   * Clear virtual library cache\n   */\n  clearVirtualLibrary(account?: string) {\n    if (account) {\n      this.virtualLibrary.delete(account)\n      this.virtualLibraryTimestamp.delete(account)\n      this.isBackgroundLoading.delete(account)\n      this.backgroundLoadingPromises.delete(account)\n    } else {\n      this.virtualLibrary.clear()\n      this.virtualLibraryTimestamp.clear()\n      this.isBackgroundLoading.clear()\n      this.backgroundLoadingPromises.clear()\n    }\n  }\n\n  /**\n   * Get cached inventory without fetching\n   */\n  getCachedInventory(): InventoryItem[] {\n    return this.cache\n  }\n\n  /**\n   * Get cached balances without fetching\n   */\n  getCachedBalances(): UserBalance {\n    return this.balanceCache\n  }\n}\n\nexport const inventoryService = new InventoryService()","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useWallet } from '../hooks/useWallet'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { useNotifications } from '../hooks/useNotifications'\n\nimport { inventoryService } from '../services/inventoryService'\nimport type { InventoryItem, UserBalance, IngredientTemplate } from '../types/ingredients'\nimport type { InventoryNFT } from '../types/inventory'\nimport { \n  CRAFTING_RECIPES,\n  getTemplateById\n} from '../data/ingredients'\nimport type { CraftingRecipe } from '../types/ingredients'\nimport '../css/crafting-modal.css'\n\ninterface CraftingModalProps {\n  isOpen: boolean\n  onClose: () => void\n  ingredient?: IngredientTemplate | InventoryNFT | null\n}\n\n\n\ninterface CraftingQueue {\n  recipe: CraftingRecipe\n  quantity: number\n}\n\nconst CraftingModal: React.FC<CraftingModalProps> = ({ isOpen, onClose, ingredient }) => {\n  const { account, session, transferTokens, executeCraftingTransaction } = useWallet()\n  useDisplaySettings()\n  const { showError, showSuccess, showWarning } = useNotifications()\n  \n  const [activeTab, setActiveTab] = useState<'craft' | 'upgrade'>('craft')\n  const [selectedRecipe, setSelectedRecipe] = useState<CraftingRecipe | null>(null)\n  const [craftingQueue, setCraftingQueue] = useState<CraftingQueue[]>([])\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [inventory, setInventory] = useState<InventoryItem[]>([])\n  const [balances, setBalances] = useState<UserBalance>({ pxj: 0, wuf: 0 })\n  const [loadingInventory, setLoadingInventory] = useState(false)\n  const [craftQuantity, setCraftQuantity] = useState<number>(1)\n  const [maxCraftable, setMaxCraftable] = useState<number>(0)\n  const [sortBy, setSortBy] = useState<string>('name_asc')\n\n  const loadInventoryData = useCallback(async () => {\n    if (!account) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    setLoadingInventory(true)\n    try {\n      const [inventoryData, balanceData] = await Promise.all([\n        inventoryService.fetchInventory(account),\n        inventoryService.fetchBalances(account)\n      ])\n      \n      setInventory(inventoryData)\n      setBalances(balanceData)\n    } catch (error) {\n      console.error('Failed to load inventory:', error)\n      showError('Failed to load inventory data', error instanceof Error ? error.message : 'Unknown error')\n    } finally {\n      setLoadingInventory(false)\n    }\n  }, [account, showError])\n\n  useEffect(() => {\n    if (isOpen && account) {\n      loadInventoryData()\n    }\n  }, [isOpen, account, loadInventoryData])\n\n  const getInventoryQuantity = (templateId: number): number => {\n     const item = inventory.find(inv => inv.templateId === templateId)\n     return item ? item.quantity : 0\n   }\n\n  const calculateMaxCraftable = (recipe: CraftingRecipe): number => {\n    if (!recipe) return 0\n    \n    let maxFromIngredients = Infinity\n    \n    // Check ingredient availability\n    for (const ingredient of recipe.ingredients) {\n      const available = getInventoryQuantity(ingredient.templateId)\n      const needed = ingredient.quantity\n      const possibleFromThisIngredient = Math.floor(available / needed)\n      maxFromIngredients = Math.min(maxFromIngredients, possibleFromThisIngredient)\n    }\n    \n    // Check PXJ availability\n    const maxFromPxj = Math.floor(balances.pxj / recipe.pxjCost)\n    \n    return Math.min(maxFromIngredients, maxFromPxj)\n  }\n\n  useEffect(() => {\n    if (selectedRecipe) {\n      const max = calculateMaxCraftable(selectedRecipe)\n      setMaxCraftable(max)\n      setCraftQuantity(Math.min(craftQuantity, max))\n    }\n  }, [selectedRecipe, inventory, balances.pxj, calculateMaxCraftable, craftQuantity])\n\n  // Sort inventory items\n  const sortedInventory = useMemo(() => {\n    const sorted = [...inventory]\n    \n    switch (sortBy) {\n      case 'name_asc':\n        return sorted.sort((a, b) => a.name.localeCompare(b.name))\n      case 'name_desc':\n        return sorted.sort((a, b) => b.name.localeCompare(a.name))\n      case 'quantity_asc':\n        return sorted.sort((a, b) => a.quantity - b.quantity)\n      case 'quantity_desc':\n        return sorted.sort((a, b) => b.quantity - a.quantity)\n      case 'type_asc':\n        return sorted.sort((a, b) => {\n          const templateA = getTemplateById(a.templateId)\n          const templateB = getTemplateById(b.templateId)\n          const typeA = templateA?.type || 'Unknown'\n          const typeB = templateB?.type || 'Unknown'\n          return typeA.localeCompare(typeB)\n        })\n      case 'type_desc':\n        return sorted.sort((a, b) => {\n          const templateA = getTemplateById(a.templateId)\n          const templateB = getTemplateById(b.templateId)\n          const typeA = templateA?.type || 'Unknown'\n          const typeB = templateB?.type || 'Unknown'\n          return typeB.localeCompare(typeA)\n        })\n      default:\n        return sorted\n    }\n  }, [inventory, sortBy])\n\n  const canCraft = (recipe: CraftingRecipe, quantity: number = 1): boolean => {\n    // Check ingredients\n    for (const ingredient of recipe.ingredients) {\n      const available = getInventoryQuantity(ingredient.templateId)\n      const needed = ingredient.quantity * quantity\n      if (available < needed) return false\n    }\n    \n    // Check PXJ\n    const pxjNeeded = recipe.pxjCost * quantity\n    if (balances.pxj < pxjNeeded) return false\n    \n    return true\n  }\n\n  const addToQueue = () => {\n    if (!selectedRecipe || craftQuantity <= 0) return\n    \n    if (!canCraft(selectedRecipe, craftQuantity)) {\n      showWarning('Insufficient Resources', 'You don\\'t have enough ingredients or PXJ for this craft.')\n      return\n    }\n\n    const existingIndex = craftingQueue.findIndex(item => item.recipe.id === selectedRecipe.id)\n    \n    if (existingIndex >= 0) {\n      const newQueue = [...craftingQueue]\n      newQueue[existingIndex].quantity += craftQuantity\n      setCraftingQueue(newQueue)\n    } else {\n      setCraftingQueue([...craftingQueue, { recipe: selectedRecipe, quantity: craftQuantity }])\n    }\n    \n    showSuccess('Added to Queue', `Added ${craftQuantity}x ${selectedRecipe.name} to crafting queue`)\n    setCraftQuantity(1)\n  }\n\n  const removeFromQueue = (recipeId: string) => {\n    setCraftingQueue(craftingQueue.filter(item => item.recipe.id !== recipeId))\n  }\n\n  const clearQueue = () => {\n    setCraftingQueue([])\n  }\n\n  const executeCraftingQueue = async () => {\n    if (craftingQueue.length === 0) {\n      showWarning('Empty Queue', 'No items in crafting queue')\n      return\n    }\n\n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet to craft ingredients')\n      return\n    }\n\n    // Prevent duplicate execution\n    if (isProcessing) {\n      return\n    }\n\n    setIsProcessing(true)\n    let successCount = 0\n    \n    try {\n      for (const queueItem of craftingQueue) {\n        const { recipe, quantity } = queueItem\n        \n        // Get asset IDs for ingredients\n        const ingredientAssets: { templateId: number; assetIds: string[] }[] = []\n        let canProceed = true\n        \n        for (const ingredient of recipe.ingredients) {\n          const neededQuantity = ingredient.quantity * quantity\n          const assetIds = inventoryService.getIngredientAssetIds(ingredient.templateId, neededQuantity)\n          \n          if (assetIds.length < neededQuantity) {\n            showError('Insufficient Ingredients', `Not enough ${ingredient.name} available`)\n            canProceed = false\n            break\n          }\n          \n          ingredientAssets.push({\n            templateId: ingredient.templateId,\n            assetIds: assetIds\n          })\n        }\n        \n        if (!canProceed) continue\n        \n        // Prepare crafting transaction data\n\n        // Execute blockchain transaction using crafting service\n        try {\n          if (!executeCraftingTransaction) {\n            showError('Crafting Error', 'Crafting service not available')\n            continue\n          }\n          \n          // Prepare crafting data for the transaction\n          const craftingData = {\n            recipe: recipe.id,\n            quantity: quantity,\n            ingredientAssets: ingredientAssets,\n            pxjCost: recipe.pxjCost\n          }\n          \n          const result = await executeCraftingTransaction(craftingData)\n          \n          if (result) {\n            successCount++\n            \n            // Update inventory optimistically\n            const usedIngredients = recipe.ingredients.map(ing => ({\n              templateId: ing.templateId,\n              quantity: ing.quantity * quantity\n            }))\n            inventoryService.updateInventoryAfterCraft(usedIngredients, recipe.pxjCost * quantity)\n            \n            showSuccess('Craft Successful!', `Successfully crafted ${quantity}x ${recipe.name}`)\n          } else {\n            showError('Craft Failed', `Failed to craft ${recipe.name}`)\n          }\n        } catch (craftError) {\n          console.error('Craft error:', craftError)\n          showError('Craft Failed', craftError instanceof Error ? craftError.message : 'Unknown crafting error')\n        }\n      }\n      \n      if (successCount > 0) {\n        showSuccess('Crafting Complete!', `Successfully crafted ${successCount} recipe(s)`)\n        setCraftingQueue([])\n        loadInventoryData() // Refresh inventory and balances from blockchain\n        onClose()\n      }\n    } catch (error) {\n      console.error('Crafting failed:', error)\n      showError('Crafting Failed', error instanceof Error ? error.message : 'Unknown error occurred')\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleUpgrade = async () => {\n    if (!ingredient || !account || !session) {\n      showError('Missing Requirements', 'Ingredient and wallet connection required for upgrading')\n      return\n    }\n\n    const templateId = 'template' in ingredient ? ingredient.template?.template_id : ingredient.id\n    const template = getTemplateById(typeof templateId === 'string' ? parseInt(templateId) : templateId)\n    if (!template || template.pxjUpgrade === 0) {\n      showError('Cannot Upgrade', 'This ingredient cannot be upgraded')\n      return\n    }\n\n    if (balances.pxj < template.pxjUpgrade) {\n      showError('Insufficient PXJ', `You need ${template.pxjUpgrade.toLocaleString()} PXJ to upgrade this ingredient`)\n      return\n    }\n\n    setIsProcessing(true)\n    \n    try {\n      // Prepare upgrade transaction\n      \n      // Use centralized token transfer for upgrade\n      if (!transferTokens) {\n        showError('Upgrade Error', 'Transfer service not available')\n        return\n      }\n      \n      const result = await transferTokens(\n        'upgradepool',\n        template.pxjUpgrade.toString(),\n        'PXJ',\n        `Upgrade ${template.name}`\n      )\n      \n      if (result) {\n        showSuccess('Upgrade Complete!', `Successfully upgraded ${template.name}`)\n        loadInventoryData()\n        onClose()\n      }\n    } catch (error) {\n      console.error('Upgrade failed:', error)\n      showError('Upgrade Failed', error instanceof Error ? error.message : 'Unknown error occurred')\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return createPortal(\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"crafting-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Pixel Ingredient Crafting</h2>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"modal-tabs\">\n          <button \n            className={`tab-btn ${activeTab === 'craft' ? 'active' : ''}`}\n            onClick={() => setActiveTab('craft')}\n          >\n            Craft New\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'upgrade' ? 'active' : ''}`}\n            onClick={() => setActiveTab('upgrade')}\n            disabled={!ingredient}\n          >\n            Upgrade Existing\n          </button>\n        </div>\n\n        <div className=\"modal-content\">\n          {activeTab === 'craft' ? (\n            <div className=\"craft-tab\">\n              <div className=\"craft-layout\">\n                <div className=\"recipe-selection\">\n                  <h3>Select Recipe</h3>\n                  <div className=\"recipe-categories\">\n                    <div className=\"recipe-category\">\n                      <h4>Secondary Ingredients</h4>\n                      {CRAFTING_RECIPES.filter(r => r.tier === 'secondary').map(recipe => (\n                        <div \n                          key={recipe.id}\n                          className={`recipe-item ${selectedRecipe?.id === recipe.id ? 'selected' : ''} ${!canCraft(recipe) ? 'disabled' : ''}`}\n                          onClick={() => setSelectedRecipe(recipe)}\n                        >\n                          <div className=\"recipe-name\">{recipe.name}</div>\n                          <div className=\"recipe-cost\">{recipe.pxjCost.toLocaleString()} PXJ</div>\n                          <div className=\"recipe-ingredients\">\n                            {recipe.ingredients.map((ing, idx) => (\n                              <span key={idx} className={getInventoryQuantity(ing.templateId) >= ing.quantity ? 'available' : 'unavailable'}>\n                                {ing.name} ({getInventoryQuantity(ing.templateId)}/{ing.quantity})\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <div className=\"recipe-category\">\n                      <h4>Tertiary Ingredients</h4>\n                      {CRAFTING_RECIPES.filter(r => r.tier === 'tertiary').map(recipe => (\n                        <div \n                          key={recipe.id}\n                          className={`recipe-item ${selectedRecipe?.id === recipe.id ? 'selected' : ''} ${!canCraft(recipe) ? 'disabled' : ''}`}\n                          onClick={() => setSelectedRecipe(recipe)}\n                        >\n                          <div className=\"recipe-name\">{recipe.name}</div>\n                          <div className=\"recipe-cost\">{recipe.pxjCost.toLocaleString()} PXJ</div>\n                          <div className=\"recipe-ingredients\">\n                            {recipe.ingredients.map((ing, idx) => (\n                              <span key={idx} className={getInventoryQuantity(ing.templateId) >= ing.quantity ? 'available' : 'unavailable'}>\n                                {ing.name} ({getInventoryQuantity(ing.templateId)}/{ing.quantity})\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"craft-controls\">\n                  {selectedRecipe && (\n                    <div className=\"selected-recipe\">\n                      <h3>{selectedRecipe.name}</h3>\n                      <p>{selectedRecipe.description}</p>\n                      \n                      <div className=\"quantity-controls\">\n                        <label>Quantity:</label>\n                        <div className=\"quantity-input\">\n                          <button \n                            onClick={() => setCraftQuantity(Math.max(1, craftQuantity - 1))}\n                            disabled={craftQuantity <= 1}\n                          >\n                            -\n                          </button>\n                          <input \n                            type=\"number\" \n                            value={craftQuantity} \n                            onChange={(e) => setCraftQuantity(Math.min(maxCraftable, Math.max(1, parseInt(e.target.value) || 1)))}\n                            min=\"1\"\n                            max={maxCraftable}\n                          />\n                          <button \n                            onClick={() => setCraftQuantity(Math.min(maxCraftable, craftQuantity + 1))}\n                            disabled={craftQuantity >= maxCraftable}\n                          >\n                            +\n                          </button>\n                        </div>\n                        <span className=\"max-craftable\">Max: {maxCraftable}</span>\n                      </div>\n                      \n                      <div className=\"total-cost\">\n                        <strong>Total Cost: {(selectedRecipe.pxjCost * craftQuantity).toLocaleString()} PXJ</strong>\n                      </div>\n                      \n                      <button \n                        className=\"add-to-queue-btn\"\n                        onClick={addToQueue}\n                        disabled={!canCraft(selectedRecipe, craftQuantity) || craftQuantity <= 0}\n                      >\n                        Add to Queue\n                      </button>\n                    </div>\n                  )}\n                  \n                  <div className=\"inventory-section\">\n                    <div className=\"inventory-header\">\n                      <h3>Your Inventory</h3>\n                      {!loadingInventory && inventory.length > 0 && (\n                        <div className=\"sort-container\">\n                          <label htmlFor=\"inventory-sort\">Sort by:</label>\n                          <select \n                            id=\"inventory-sort\"\n                            className=\"sort-select\"\n                            value={sortBy}\n                            onChange={(e) => setSortBy(e.target.value)}\n                          >\n                            <option value=\"name_asc\">Name (A-Z)</option>\n                            <option value=\"name_desc\">Name (Z-A)</option>\n                            <option value=\"quantity_asc\">Quantity (Low-High)</option>\n                            <option value=\"quantity_desc\">Quantity (High-Low)</option>\n                            <option value=\"type_asc\">Type (A-Z)</option>\n                            <option value=\"type_desc\">Type (Z-A)</option>\n                          </select>\n                        </div>\n                      )}\n                    </div>\n                    {loadingInventory ? (\n                      <div className=\"loading-inventory\">\n                        <div className=\"loading-spinner\"></div>\n                        <span>Loading inventory...</span>\n                      </div>\n                    ) : (\n                      <div className=\"inventory-grid\">\n                        {sortedInventory.length === 0 ? (\n                          <div className=\"no-inventory\">\n                            <div className=\"empty-state\">\n                              <span>No ingredients found</span>\n                              <button \n                                className=\"refresh-btn\"\n                                onClick={loadInventoryData}\n                                disabled={loadingInventory}\n                              >\n                                Refresh Inventory\n                              </button>\n                            </div>\n                          </div>\n                        ) : (\n                          sortedInventory.map(item => {\n                            const template = getTemplateById(item.templateId)\n                            return (\n                              <div key={item.templateId} className=\"inventory-item\">\n                                <div className=\"item-name\">{item.name}</div>\n                                <div className=\"item-quantity\">Qty: {item.quantity}</div>\n                                <div className=\"item-tier\">{template?.type || 'Unknown'}</div>\n                              </div>\n                            )\n                          })\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"crafting-queue\">\n                <div className=\"queue-header\">\n                  <h3>Crafting Queue ({craftingQueue.length})</h3>\n                  {craftingQueue.length > 0 && (\n                    <button className=\"clear-queue-btn\" onClick={clearQueue}>Clear All</button>\n                  )}\n                </div>\n                \n                {craftingQueue.length > 0 ? (\n                  <div className=\"queue-items\">\n                    {craftingQueue.map((item, index) => (\n                      <div key={index} className=\"queue-item\">\n                        <div className=\"queue-item-info\">\n                          <span className=\"item-name\">{item.recipe.name}</span>\n                          <span className=\"item-quantity\">x{item.quantity}</span>\n                          <span className=\"item-cost\">{(item.recipe.pxjCost * item.quantity).toLocaleString()} PXJ</span>\n                        </div>\n                        <button \n                          className=\"remove-item-btn\"\n                          onClick={() => removeFromQueue(item.recipe.id)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    ))}\n                    \n                    <div className=\"queue-total\">\n                      <strong>\n                        Total: {craftingQueue.reduce((sum, item) => sum + (item.recipe.pxjCost * item.quantity), 0).toLocaleString()} PXJ\n                      </strong>\n                    </div>\n                    \n                    <button \n                      className=\"execute-queue-btn\"\n                      onClick={executeCraftingQueue}\n                      disabled={isProcessing}\n                    >\n                      {isProcessing ? 'Crafting...' : 'Craft All'}\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"empty-queue\">\n                    <p>No items in queue. Select a recipe and add it to start crafting.</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"upgrade-tab\">\n              {ingredient ? (\n                <div className=\"upgrade-content\">\n                  <div className=\"ingredient-info\">\n                    <h3>Upgrade: {ingredient.name}</h3>\n                    <p>Template ID: {'template' in ingredient ? ingredient.template?.template_id : ingredient.id}</p>\n                    \n                    {(() => {\n                      const templateId = 'template' in ingredient ? ingredient.template?.template_id : ingredient.id\n                      const template = getTemplateById(typeof templateId === 'string' ? parseInt(templateId) : templateId)\n                      if (!template) return <p>Template not found</p>\n                      \n                      if (template.pxjUpgrade === 0) {\n                        return <p className=\"no-upgrade\">This ingredient cannot be upgraded.</p>\n                      }\n                      \n                      return (\n                        <div className=\"upgrade-details\">\n                          <div className=\"upgrade-cost\">\n                            <strong>Upgrade Cost: {template.pxjUpgrade.toLocaleString()} PXJ</strong>\n                          </div>\n                          <div className=\"balance-info\">\n                            Your PXJ Balance: {balances.pxj.toLocaleString()}\n                          </div>\n                          \n                          <button \n                            className=\"upgrade-btn\"\n                            onClick={handleUpgrade}\n                            disabled={isProcessing || balances.pxj < template.pxjUpgrade}\n                          >\n                            {isProcessing ? 'Upgrading...' : 'Upgrade Ingredient'}\n                          </button>\n                        </div>\n                      )\n                    })()}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"no-ingredient\">\n                  <p>No ingredient selected for upgrade. Please select an ingredient from your inventory.</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"modal-footer\">\n          <div className=\"resource-display\">\n            <div className=\"pxj-balance\">\n              <strong>PXJ Balance: {balances.pxj.toLocaleString()}</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  )\n}\n\nexport default CraftingModal","// Offer service for AtomicMarket buy offers\nimport { Session } from '@wharfkit/session'\nimport { ErrorMessageService } from './errorMessageService'\nimport { apiService } from './api'\nimport { WharfKitService } from './wharfkit'\n\ninterface TransactionResult {\n  transaction_id?: string\n  id?: string\n  [key: string]: unknown\n}\n\nexport interface BuyOffer {\n  offer_id: string\n  buyer: string\n  seller: string\n  asset_ids: string[]\n  price: {\n    amount: string\n    token_precision: number\n    token_symbol: string\n  }\n  memo: string\n  created_at_time: string\n  updated_at_time: string\n  state: number // 0 = pending, 1 = invalid, 2 = accepted, 3 = declined, 4 = cancelled\n}\n\nexport interface OfferResponse {\n  success: boolean\n  data?: BuyOffer[]\n  message?: string\n}\n\nclass OfferService {\n  private atomicMarketContract = 'atomicmarket'\n\n  private get atomicMarketAPI() {\n    return apiService.getCurrentAtomicEndpoint()\n  }\n\n  // Place a buy offer on an NFT\n  async placeBuyOffer(\n    session: Session,\n    assetId: string,\n    offerAmount: string,\n    memo: string = ''\n  ): Promise<unknown> {\n    if (!session) {\n      throw new Error('Please connect your wallet first')\n    }\n\n    const offerFloat = parseFloat(offerAmount)\n    if (isNaN(offerFloat) || offerFloat <= 0) {\n      throw new Error('Please enter a valid offer amount')\n    }\n\n    try {\n      // Format price with WAX precision (8 decimals)\n      const formattedPrice = offerFloat.toFixed(8)\n      const priceString = `${formattedPrice} WAX`\n\n      // Get asset details to determine the seller\n      const assetResponse = await fetch(\n        `${this.atomicMarketAPI}/atomicassets/v1/assets/${assetId}`\n      )\n      \n      if (!assetResponse.ok) {\n        throw new Error('Failed to fetch asset details')\n      }\n\n      const assetData = await assetResponse.json()\n      if (!assetData.success || !assetData.data) {\n        throw new Error('Asset not found')\n      }\n\n      const asset = assetData.data\n      const seller = asset.owner\n\n      // Create the buy offer action\n      const action = {\n        account: this.atomicMarketContract,\n        name: 'announceoffer',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          buyer: WharfKitService.safeGetActor(session),\n          recipient: seller,\n          asset_ids: [assetId],\n          price: priceString,\n          memo: memo || `Buy offer from PxMarket - market.pixeljourney.xyz`,\n          maker_marketplace: 'market.pxj'\n        }\n      }\n\n      // Execute the transaction\n      const result = await session.transact({ actions: [action] })\n      const transactionResult = result as unknown as TransactionResult\n      return {\n         success: true,\n         transaction_id: transactionResult?.transaction_id || transactionResult?.id || '',\n         message: `Buy offer of ${offerAmount} WAX placed successfully!`\n       }\n    } catch (error) {\n      ErrorMessageService.logError('OfferService.placeBuyOffer', error, { assetId, offerAmount, actor: session.actor })\n      throw new Error(`Failed to place buy offer: ${error instanceof Error ? error.message : 'Transaction failed or was rejected'}`)\n    }\n  }\n\n  // Get buy offers for a specific asset\n  async getBuyOffersForAsset(assetId: string): Promise<BuyOffer[]> {\n    try {\n      const response = await fetch(\n        `${this.atomicMarketAPI}/atomicmarket/v1/buyoffers?asset_id=${assetId}&state=0&sort=price&order=desc&limit=50`\n      )\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch buy offers')\n      }\n\n      const data: OfferResponse = await response.json()\n      \n      if (data.success && data.data) {\n        return data.data\n      }\n      \n      return []\n    } catch (error) {\n      ErrorMessageService.logError('OfferService.getBuyOffersForAsset', error, { assetId })\n      return []\n    }\n  }\n\n  // Get buy offers made by a user\n  async getUserBuyOffers(account: string, state?: number): Promise<BuyOffer[]> {\n    try {\n      let url = `${this.atomicMarketAPI}/atomicmarket/v1/buyoffers?buyer=${account}&sort=created&order=desc&limit=100`\n      \n      if (state !== undefined) {\n        url += `&state=${state}`\n      }\n      \n      const response = await fetch(url)\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch user buy offers')\n      }\n\n      const data: OfferResponse = await response.json()\n      \n      if (data.success && data.data) {\n        return data.data\n      }\n      \n      return []\n    } catch (error) {\n      ErrorMessageService.logError('OfferService.getUserBuyOffers', error, { account, state })\n      return []\n    }\n  }\n\n  // Cancel a buy offer\n  async cancelBuyOffer(session: Session, offerId: string): Promise<unknown> {\n    if (!session) {\n      throw new Error('Please connect your wallet first')\n    }\n\n    try {\n      const action = {\n        account: this.atomicMarketContract,\n        name: 'canceloffer',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          offer_id: offerId\n        }\n      }\n\n      const result = await session.transact({ actions: [action] })\n      const transactionResult = result as unknown as TransactionResult\n      return {\n         success: true,\n         transaction_id: transactionResult?.transaction_id || transactionResult?.id || '',\n         message: 'Buy offer cancelled successfully!'\n       }\n    } catch (error) {\n      ErrorMessageService.logError('OfferService.cancelBuyOffer', error, { offerId, actor: session.actor })\n      throw new Error(`Failed to cancel buy offer: ${error instanceof Error ? error.message : 'Transaction failed or was rejected'}`)\n    }\n  }\n\n  // Accept a buy offer (for sellers)\n  async acceptBuyOffer(session: Session, offerId: string): Promise<unknown> {\n    if (!session) {\n      throw new Error('Please connect your wallet first')\n    }\n\n    try {\n      const action = {\n        account: this.atomicMarketContract,\n        name: 'acceptoffer',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          offer_id: offerId\n        }\n      }\n\n      const result = await session.transact({ actions: [action] })\n      const transactionResult = result as unknown as TransactionResult\n      return {\n         success: true,\n         transaction_id: transactionResult?.transaction_id || transactionResult?.id || '',\n         message: 'Buy offer accepted successfully!'\n       }\n    } catch (error) {\n      ErrorMessageService.logError('OfferService.acceptBuyOffer', error, { offerId, actor: session.actor })\n      throw new Error(`Failed to accept buy offer: ${error instanceof Error ? error.message : 'Transaction failed or was rejected'}`)\n    }\n  }\n\n  // Decline a buy offer (for sellers)\n  async declineBuyOffer(session: Session, offerId: string): Promise<unknown> {\n    if (!session) {\n      throw new Error('Please connect your wallet first')\n    }\n\n    try {\n      const action = {\n        account: this.atomicMarketContract,\n        name: 'declineoffer',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          offer_id: offerId\n        }\n      }\n\n      const result = await session.transact({ actions: [action] })\n      const transactionResult = result as unknown as TransactionResult\n      return {\n         success: true,\n         transaction_id: transactionResult?.transaction_id || transactionResult?.id || '',\n         message: 'Buy offer declined successfully!'\n       }\n    } catch (error) {\n      ErrorMessageService.logError('OfferService.declineBuyOffer', error, { offerId, actor: session.actor })\n      throw new Error(`Failed to decline buy offer: ${error instanceof Error ? error.message : 'Transaction failed or was rejected'}`)\n    }\n  }\n\n  // Format price for display\n  formatPrice(price: { amount: string; token_precision: number; token_symbol: string }): string {\n    const amount = parseFloat(price.amount) / Math.pow(10, price.token_precision)\n    return `${amount.toFixed(Math.min(4, price.token_precision))} ${price.token_symbol}`\n  }\n\n  // Get offer state as readable string\n  getOfferStateText(state: number): string {\n    switch (state) {\n      case 0: return 'Pending'\n      case 1: return 'Invalid'\n      case 2: return 'Accepted'\n      case 3: return 'Declined'\n      case 4: return 'Cancelled'\n      default: return 'Unknown'\n    }\n  }\n}\n\n// Export singleton instance\nexport const offerService = new OfferService()\nexport default offerService","import React, { useState, useEffect, useCallback } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport type { InventoryNFT } from '../types/inventory'\nimport type { OfferApiResponse } from '../types'\nimport MediaRenderer from './MediaRenderer'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { apiService } from '../services/api'\nimport { offerService } from '../services/offerService'\nimport '../css/modal.css'\nimport '../css/view-offers-modal.css'\n\ninterface ViewOffersModalProps {\n  isOpen: boolean\n  onClose: () => void\n  nft: InventoryNFT | null\n}\n\n\n\ninterface Offer {\n  id: string\n  buyer: string\n  price: string\n  symbol: string\n  timestamp: string\n  memo?: string\n}\n\nconst ViewOffersModal: React.FC<ViewOffersModalProps> = ({ isOpen, onClose, nft }) => {\n  const { account, session } = useWallet()\n  const { settings } = useDisplaySettings()\n  const { showSuccess, showError } = useNotifications()\n  const [offers, setOffers] = useState<Offer[]>([])\n  const [loading, setLoading] = useState(false)\n  const [acceptingOffer, setAcceptingOffer] = useState<string | null>(null)\n\n  const loadOffers = useCallback(async () => {\n    if (!nft) return\n    \n    setLoading(true)\n    try {\n      // Fetch real offers from AtomicMarket API\n      const offersData = await apiService.getAssetOffers(nft.asset_id)\n      \n      if (offersData && offersData.length > 0) {\n        // Convert to our Offer interface format\n        const formattedOffers: Offer[] = offersData.map((offer: OfferApiResponse) => ({\n          id: offer.id,\n          buyer: offer.buyer,\n          price: (parseFloat(offer.price) / 100000000).toFixed(8), // Convert from atomic units\n          symbol: offer.token,\n          timestamp: offer.created,\n          memo: offer.memo\n        }))\n        \n        // Sort by price (highest first)\n        const sortedOffers = formattedOffers.sort((a, b) => parseFloat(b.price) - parseFloat(a.price))\n        setOffers(sortedOffers)\n      } else {\n        setOffers([])\n      }\n    } catch (error) {\n      console.error('Failed to load offers:', error)\n      setOffers([])\n    } finally {\n      setLoading(false)\n    }\n  }, [nft])\n\n  useEffect(() => {\n    if (isOpen && nft) {\n      loadOffers()\n    }\n  }, [isOpen, nft, loadOffers])\n\n  const handleAcceptOffer = async (offer: Offer) => {\n    if (!account || !session || !nft) {\n      showError('Please connect your wallet first', 'Wallet Required')\n      return\n    }\n\n    const confirmed = window.confirm(\n      `Accept offer of ${offer.price} ${offer.symbol} from ${offer.buyer}?\\n\\nThis action cannot be undone.`\n    )\n    \n    if (!confirmed) return\n\n    setAcceptingOffer(offer.id)\n    \n    try {\n      if (!session) {\n        showError('Wallet Not Connected', 'Please connect your wallet to accept offers.')\n        return\n      }\n\n      await offerService.acceptBuyOffer(session, offer.id)\n      \n      showSuccess(\n        'Offer Accepted!',\n        `${offer.price} ${offer.symbol} will be transferred to your account.`\n      )\n      onClose()\n    } catch (error) {\n      showError(\n        'Failed to Accept Offer',\n        error instanceof Error ? error.message : 'Failed to accept the offer. Please try again.'\n      )\n    } finally {\n      setAcceptingOffer(null)\n    }\n  }\n\n  const formatTimeAgo = (timestamp: string) => {\n    const now = new Date()\n    const offerTime = new Date(timestamp)\n    const diffMs = now.getTime() - offerTime.getTime()\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60))\n    const diffDays = Math.floor(diffHours / 24)\n    \n    if (diffDays > 0) {\n      return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`\n    } else if (diffHours > 0) {\n      return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`\n    } else {\n      const diffMinutes = Math.floor(diffMs / (1000 * 60))\n      return `${diffMinutes} minute${diffMinutes > 1 ? 's' : ''} ago`\n    }\n  }\n\n  if (!isOpen || !nft) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content view-offers-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>View Offers</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"offers-content\">\n          <div className=\"view-offers-nft-info\">\n            <div className=\"nft-image\">\n              <MediaRenderer\n                imageUrl={nft.img}\n                alt={nft.name}\n                enableAnimations={settings.enableAnimatedNFTs}\n              />\n            </div>\n            <div className=\"nft-details\">\n              <h3>{nft.name}</h3>\n              <div className=\"nft-id\">#{nft.asset_id}</div>\n              <div className=\"collection-info\">\n                {typeof nft.collection === 'string' ? nft.collection : nft.collection?.name || nft.collection?.collection_name || 'Unknown'} • {nft.schema.schema_name}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"offers-section\">\n            <div className=\"offers-header\">\n              <h3>Active Offers ({offers.length})</h3>\n              <button className=\"refresh-btn\" onClick={loadOffers} disabled={loading}>\n                {loading ? '🔄' : '↻'} Refresh\n              </button>\n            </div>\n            \n            {loading ? (\n              <div className=\"loading-state\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading offers...</p>\n              </div>\n            ) : offers.length === 0 ? (\n              <div className=\"empty-offers\">\n                <div className=\"empty-icon\">📭</div>\n                <h4>No Offers Yet</h4>\n                <p>This NFT hasn't received any offers yet. List it on the marketplace to attract buyers!</p>\n              </div>\n            ) : (\n              <div className=\"offers-list\">\n                {offers.map((offer, index) => (\n                  <div key={offer.id} className={`offer-card ${index === 0 ? 'highest-offer' : ''}`}>\n                    <div className=\"offer-header\">\n                      <div className=\"buyer-info\">\n                        <strong>{offer.buyer}</strong>\n                        {index === 0 && <span className=\"highest-badge\">🏆 Highest</span>}\n                      </div>\n                      <div className=\"offer-time\">{formatTimeAgo(offer.timestamp)}</div>\n                    </div>\n                    \n                    <div className=\"offer-price\">\n                      <span className=\"price-amount\">{parseFloat(offer.price).toFixed(2)}</span>\n                      <span className=\"price-symbol\">{offer.symbol}</span>\n                    </div>\n                    \n                    {offer.memo && (\n                      <div className=\"offer-memo\">\n                        <em>\"{offer.memo}\"</em>\n                      </div>\n                    )}\n                    \n                    <div className=\"offer-actions\">\n                      <button \n                        className=\"accept-btn\"\n                        onClick={() => handleAcceptOffer(offer)}\n                        disabled={acceptingOffer !== null}\n                      >\n                        {acceptingOffer === offer.id ? 'Accepting...' : 'Accept Offer'}\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"modal-footer\">\n          <button className=\"btn-secondary\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewOffersModal","// import { useWallet } from '../contexts/WalletContext' // Unused import\nimport { Session } from '@wharfkit/session'\nimport { ErrorMessageService } from './errorMessageService'\nimport { logger } from './loggingService'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\nexport interface BlendTransaction {\n  expiration: string\n  ref_block_num: number\n  ref_block_prefix: number\n  max_net_usage_words: number\n  max_cpu_usage_ms: number\n  delay_sec: number\n  context_free_actions: unknown[]\n  actions: BlendAction[]\n  transaction_extensions: unknown[]\n}\n\nexport interface BlendAction {\n  account: string\n  name: string\n  authorization: Authorization[]\n  data: Record<string, unknown>\n}\n\nexport interface Authorization {\n  actor: string\n  permission: string\n}\n\nexport class NeftyBlendService {\n  private static BLEND_CONTRACT = 'blend.nefty'\n  private static ATOMIC_ASSETS_CONTRACT = 'atomicassets'\n  private static PXJ_CONTRACT = 'pixeljourney'\n\n  private static RECYCLE_BLEND_ID = 37700\n  private static RECYCLE_COST = '12000.00000000 PXJ'\n  \n  // Pack unpack blend IDs - Updated with correct values\n  private static PACK_TEMPLATE_ID = '820134' // NeftyBlocks pack template ID\n  private static PACK_RECIPE_ID = 37701 // Recipe ID for unpacking\n  private static GENERIC_PACK_BLEND_ID = 37702 // Generic pack blend ID\n\n  static async recyclePixal(assetId: string, userAccount: string): Promise<BlendTransaction> {\n    // Get current blockchain info for transaction\n    const blockInfo = await this.getBlockInfo()\n    \n    const transaction: BlendTransaction = {\n      expiration: this.getExpirationTime(),\n      ref_block_num: blockInfo.ref_block_num,\n      ref_block_prefix: blockInfo.ref_block_prefix,\n      max_net_usage_words: 0,\n      max_cpu_usage_ms: 0,\n      delay_sec: 0,\n      context_free_actions: [],\n      actions: [\n        // Skip CPU pay action as mentioned in requirements\n        {\n          account: this.BLEND_CONTRACT,\n          name: 'openbal',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            owner: userAccount,\n            token_symbol: '8,PXJ'\n          }\n        },\n        {\n          account: this.PXJ_CONTRACT,\n          name: 'transfer',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            from: userAccount,\n            to: this.BLEND_CONTRACT,\n            quantity: this.RECYCLE_COST,\n            memo: 'deposit'\n          }\n        },\n        {\n          account: this.BLEND_CONTRACT,\n          name: 'announcedepo',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            owner: userAccount,\n            count: 1\n          }\n        },\n        {\n          account: this.ATOMIC_ASSETS_CONTRACT,\n          name: 'transfer',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            from: userAccount,\n            to: this.BLEND_CONTRACT,\n            asset_ids: [assetId],\n            memo: 'deposit'\n          }\n        },\n        {\n          account: this.BLEND_CONTRACT,\n          name: 'nosecfuse',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            claimer: userAccount,\n            blend_id: this.RECYCLE_BLEND_ID,\n            transferred_assets: [assetId],\n            own_assets: []\n          }\n        }\n      ],\n      transaction_extensions: []\n    }\n\n    return transaction\n  }\n\n  static async unpackPixelIngredientPack(assetId: string, userAccount: string): Promise<BlendTransaction> {\n    const blockInfo = await this.getBlockInfo()\n    \n    const transaction: BlendTransaction = {\n      expiration: this.getExpirationTime(),\n      ref_block_num: blockInfo.ref_block_num,\n      ref_block_prefix: blockInfo.ref_block_prefix,\n      max_net_usage_words: 0,\n      max_cpu_usage_ms: 0,\n      delay_sec: 0,\n      context_free_actions: [],\n      actions: [\n        {\n          account: this.ATOMIC_ASSETS_CONTRACT,\n          name: 'transfer',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            from: userAccount,\n            to: this.BLEND_CONTRACT,\n            asset_ids: [assetId],\n            memo: 'unpack'\n          }\n        },\n        {\n          account: this.BLEND_CONTRACT,\n          name: 'nosecfuse',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            claimer: userAccount,\n            blend_id: this.PACK_RECIPE_ID,\n            transferred_assets: [assetId],\n            own_assets: []\n          }\n        }\n      ],\n      transaction_extensions: []\n    }\n\n    return transaction\n  }\n\n  static async unpackGenericPack(assetId: string, userAccount: string): Promise<BlendTransaction> {\n    const blockInfo = await this.getBlockInfo()\n    \n    const transaction: BlendTransaction = {\n      expiration: this.getExpirationTime(),\n      ref_block_num: blockInfo.ref_block_num,\n      ref_block_prefix: blockInfo.ref_block_prefix,\n      max_net_usage_words: 0,\n      max_cpu_usage_ms: 0,\n      delay_sec: 0,\n      context_free_actions: [],\n      actions: [\n        {\n          account: this.ATOMIC_ASSETS_CONTRACT,\n          name: 'transfer',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            from: userAccount,\n            to: this.BLEND_CONTRACT,\n            asset_ids: [assetId],\n            memo: 'unpack'\n          }\n        },\n        {\n          account: this.BLEND_CONTRACT,\n          name: 'nosecfuse',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            claimer: userAccount,\n            blend_id: this.GENERIC_PACK_BLEND_ID,\n            transferred_assets: [assetId],\n            own_assets: []\n          }\n        }\n      ],\n      transaction_extensions: []\n    }\n\n    return transaction\n  }\n\n  private static async getBlockInfo(): Promise<{ ref_block_num: number; ref_block_prefix: number }> {\n    try {\n      // Fetch real block info from WAX blockchain\n      const waxEndpoints = [\n        API_ENDPOINTS.WAX_CHAIN.EOSRIO,\n        API_ENDPOINTS.WAX_CHAIN.WAXSWEDEN,\n        API_ENDPOINTS.WAX_CHAIN.GREYMASS\n      ]\n      \n      for (const endpoint of waxEndpoints) {\n        try {\n          const response = await fetch(`${endpoint}/v1/chain/get_info`, {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json'\n            }\n          })\n          \n          if (!response.ok) continue\n          \n          const chainInfo = await response.json()\n          \n          // Extract block number and prefix from head block ID\n          const headBlockId = chainInfo.head_block_id\n          \n          // Use last irreversible block for safety\n          const refBlockNum = chainInfo.last_irreversible_block_num & 0xFFFF\n          \n          // Extract prefix from block ID (first 4 bytes after reversing)\n          const blockIdBytes = headBlockId.match(/.{2}/g)?.slice(4, 8) || ['00', '00', '00', '00']\n          const refBlockPrefix = parseInt(blockIdBytes.reverse().join(''), 16)\n          \n          return {\n            ref_block_num: refBlockNum,\n            ref_block_prefix: refBlockPrefix\n          }\n        } catch (endpointError) {\n          logger.warn('Failed to fetch block info from endpoint', 'NEFTY_BLEND', { endpoint, error: endpointError })\n          continue\n        }\n      }\n      \n      // Fallback if all endpoints fail\n      throw new Error('All WAX endpoints failed')\n    } catch (error) {\n      ErrorMessageService.logError('NeftyBlendService.getBlockInfo', error)\n      \n      // Return reasonable fallback values based on current time\n      const now = Date.now()\n      return {\n        ref_block_num: (now / 500) & 0xFFFF, // Approximate block number\n        ref_block_prefix: now & 0xFFFFFFFF   // Use timestamp as prefix\n      }\n    }\n  }\n\n  private static getExpirationTime(): string {\n    const now = new Date()\n    const expiration = new Date(now.getTime() + 30 * 60 * 1000) // 30 minutes from now\n    return expiration.toISOString().slice(0, -5) // Remove milliseconds and Z\n  }\n\n  static async executeRecycle(transaction: BlendTransaction, wallet: Session): Promise<boolean> {\n    try {\n      if (!wallet || !wallet.transact) {\n        throw new Error('Wallet not connected or does not support transactions')\n      }\n\n      const result = await wallet.transact({\n        actions: transaction.actions\n      })\n\n      logger.info('Recycle transaction successful', 'NEFTY_BLEND', { result })\n      return true\n    } catch (error) {\n      ErrorMessageService.logError('NeftyBlendService.executeRecycle', error, { \n          blendId: this.RECYCLE_BLEND_ID, \n          recycleCost: this.RECYCLE_COST,\n          actionsCount: transaction.actions.length,\n          walletActor: wallet.actor\n        })\n      throw error\n    }\n  }\n\n  static async executeUnpack(transaction: BlendTransaction, wallet: Session): Promise<unknown> {\n    try {\n      if (!wallet || !wallet.transact) {\n        throw new Error('Wallet not connected or does not support transactions')\n      }\n\n      const result = await wallet.transact({\n        actions: transaction.actions\n      })\n\n      logger.info('Unpack transaction successful', 'NEFTY_BLEND', { result })\n      return result\n    } catch (error) {\n      ErrorMessageService.logError('NeftyBlendService.executeUnpack', error, {\n        actionsCount: transaction.actions.length,\n        walletActor: wallet.actor\n      })\n      throw error\n    }\n  }\n\n  static isPackNFT(nft: {\n    template?: {\n      name?: string\n      template_id?: string\n    }\n  }): boolean {\n    if (!nft || !nft.template) return false\n    \n    // Check if it's a known pack type\n    const packKeywords = ['pack', 'container', 'box', 'chest']\n    const templateName = (nft.template.name || '').toLowerCase()\n    const hasPackKeyword = packKeywords.some(keyword => templateName.includes(keyword))\n    \n    // Check if it's the specific NeftyBlocks pack template\n    const isNeftyBlocksPack = nft.template?.template_id === this.PACK_TEMPLATE_ID\n    \n    return hasPackKeyword || isNeftyBlocksPack\n  }\n\n  static getPackType(nft: {\n    template?: {\n      name?: string\n      template_id?: string\n    }\n  }): 'pixel_ingredient' | 'generic' | null {\n    if (!this.isPackNFT(nft)) return null\n    \n    // Check if it's the NeftyBlocks pack template\n    if (nft.template?.template_id === this.PACK_TEMPLATE_ID) {\n      return 'pixel_ingredient'\n    }\n    \n    return 'generic'\n  }\n\n  static async unpackPixelPack(assetId: string, userAccount: string): Promise<BlendTransaction> {\n    const blockInfo = await this.getBlockInfo()\n    \n    const transaction: BlendTransaction = {\n      expiration: this.getExpirationTime(),\n      ref_block_num: blockInfo.ref_block_num,\n      ref_block_prefix: blockInfo.ref_block_prefix,\n      max_net_usage_words: 0,\n      max_cpu_usage_ms: 0,\n      delay_sec: 0,\n      context_free_actions: [],\n      actions: [\n        {\n          account: this.ATOMIC_ASSETS_CONTRACT,\n          name: 'transfer',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            from: userAccount,\n            to: 'neftyblocksp',\n            asset_ids: [assetId],\n            memo: 'unbox'\n          }\n        }\n      ],\n      transaction_extensions: []\n    }\n\n    return transaction\n  }\n\n  static async unpackPixelPacksBulk(assetIds: string[], userAccount: string): Promise<BlendTransaction[]> {\n    const transactions: BlendTransaction[] = []\n    \n    // Batch assets in groups of 20\n    for (let i = 0; i < assetIds.length; i += 20) {\n      const batch = assetIds.slice(i, i + 20)\n      const blockInfo = await this.getBlockInfo()\n      \n      const transaction: BlendTransaction = {\n        expiration: this.getExpirationTime(),\n        ref_block_num: blockInfo.ref_block_num,\n        ref_block_prefix: blockInfo.ref_block_prefix,\n        max_net_usage_words: 0,\n        max_cpu_usage_ms: 0,\n        delay_sec: 0,\n        context_free_actions: [],\n        actions: batch.map(assetId => ({\n          account: this.ATOMIC_ASSETS_CONTRACT,\n          name: 'transfer',\n          authorization: [{\n            actor: userAccount,\n            permission: 'active'\n          }],\n          data: {\n            from: userAccount,\n            to: 'neftyblocksp',\n            asset_ids: [assetId],\n            memo: 'unbox'\n          }\n        })),\n        transaction_extensions: []\n      }\n      \n      transactions.push(transaction)\n    }\n    \n    return transactions\n  }\n\n  static isPixelPack(nft: {\n    template?: {\n      template_id?: string\n    }\n  }): boolean {\n    return nft.template?.template_id === this.PACK_TEMPLATE_ID\n  }\n}","import React, { useState } from 'react'\nimport { NeftyBlendService } from '../services/neftyBlendService'\nimport { useNotifications } from '../hooks/useNotifications'\nimport type { Session } from '@wharfkit/session'\nimport '../css/modal.css'\nimport '../css/unpack-modal.css'\n\ninterface PackNFT {\n  asset_id: string\n  name: string\n  img?: string\n  mint_number?: number\n  collection: {\n    name: string\n    collection_name: string\n  }\n  schema: {\n    schema_name: string\n  }\n  template: {\n    template_id: string\n    max_supply: string\n  }\n  data: Record<string, string | number | boolean | null | undefined>\n}\n\ninterface UnpackResult {\n  nft: PackNFT\n  success: boolean\n  error?: string\n  transaction?: unknown\n}\n\ninterface UnpackModalProps {\n  isOpen: boolean\n  onClose: () => void\n  selectedNFTs: PackNFT[]\n  userAccount: string\n  walletSession: Session | null\n  onUnpackComplete: () => void\n}\n\nconst UnpackModal: React.FC<UnpackModalProps> = ({\n  isOpen,\n  onClose,\n  selectedNFTs,\n  userAccount,\n  walletSession,\n  onUnpackComplete\n}) => {\n  const [isUnpacking, setIsUnpacking] = useState(false)\n  const { showError, showSuccess } = useNotifications()\n\n  // Filter selected NFTs to only show packs\n  const packNFTs = selectedNFTs.filter(nft => NeftyBlendService.isPackNFT(nft))\n\n  const handleUnpack = async () => {\n    if (!userAccount || !walletSession) {\n      showError('Wallet not connected', 'Connection Required')\n      return\n    }\n\n    if (packNFTs.length === 0) {\n      showError('No pack NFTs selected', 'No Packs Selected')\n      return\n    }\n\n    setIsUnpacking(true)\n    const results: UnpackResult[] = []\n\n    try {\n      for (const nft of packNFTs) {\n        const packType = NeftyBlendService.getPackType(nft)\n        let transaction\n        \n        if (packType === 'pixel_ingredient') {\n          transaction = await NeftyBlendService.unpackPixelIngredientPack(nft.asset_id, userAccount)\n        } else {\n          transaction = await NeftyBlendService.unpackGenericPack(nft.asset_id, userAccount)\n        }\n        \n        const result = await NeftyBlendService.executeUnpack(transaction, walletSession)\n        results.push({ nft, transaction: result, success: true })\n      }\n      \n      // Results processed successfully\n      showSuccess('Packs unpacked successfully!', 'Unpack Complete')\n      onUnpackComplete()\n    } catch (error) {\n      console.error('Error unpacking NFTs:', error)\n      showError('Failed to unpack NFTs. Please try again.', 'Unpack Failed')\n    } finally {\n      setIsUnpacking(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  const canUnpack = packNFTs.length > 0\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content unpack-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Unpack NFT</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"unpack-nft-info\">\n            <h3>Selected Pack NFTs ({packNFTs.length})</h3>\n            {packNFTs.map((nft) => (\n              <div key={nft.asset_id} className=\"nft-item\">\n                <div className=\"nft-image\">\n                  <img src={nft.img} alt={nft.name} />\n                </div>\n                <div className=\"nft-details\">\n                  <h4>{nft.name}</h4>\n                  <p className=\"collection-name\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.collection_name || nft.collection?.name || 'Unknown'}</p>\n                  <p className=\"schema-name\">{nft.schema.schema_name}</p>\n                  {nft.mint_number && (\n                    <p className=\"mint-number\">Mint #{nft.mint_number}</p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {canUnpack ? (\n            <div className=\"unpack-info\">\n              <div className=\"info-box\">\n                <h4>📦 Pack Contents</h4>\n                <div className=\"pack-contents\">\n                  <p>These packs contain random rewards that will be revealed upon unpacking.</p>\n                  <p className=\"warning\">⚠️ Unpacking will burn these packs permanently!</p>\n                </div>\n              </div>\n\n              <button \n                className=\"unpack-btn\"\n                onClick={handleUnpack}\n                disabled={isUnpacking || !walletSession}\n              >\n                {isUnpacking ? (\n                  <>\n                    <div className=\"loading-spinner small\"></div>\n                    Unpacking...\n                  </>\n                ) : (\n                  `📦 Unpack ${packNFTs.length} Pack${packNFTs.length > 1 ? 's' : ''}`\n                )}\n              </button>\n            </div>\n          ) : (\n            <div className=\"cannot-unpack\">\n              <div className=\"info-box error\">\n                <h4>❌ Cannot Unpack</h4>\n                <p>No pack NFTs selected for unpacking.</p>\n                <p>Only packs, chests, boxes, and containers can be unpacked.</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UnpackModal","/* eslint-disable react-refresh/only-export-components */\nimport { useContext, useEffect, useState, type ReactNode } from 'react'\nimport { wharfKitService } from '../services/wharfkit'\nimport WalletContext, { type WalletContextType } from './WalletContextDefinition.ts'\n\ninterface WalletProviderProps {\n  children: ReactNode\n}\n\nexport const WalletProvider = ({ children }: WalletProviderProps) => {\n  const [walletState, setWalletState] = useState<WalletContextType>({\n    isConnected: false,\n    account: null,\n    session: null,\n    login: async () => null,\n    logout: async () => {},\n    transact: async () => null,\n    purchaseNFT: async () => null,\n    batchPurchaseNFTs: async () => null,\n    executeCraftingTransaction: async () => null,\n    executeTransaction: async () => { throw new Error('Wallet not connected') },\n    isLoading: true\n  })\n\n  useEffect(() => {\n    // Subscribe to wallet state changes\n    const unsubscribe = wharfKitService.subscribe((context) => {\n      setWalletState(context)\n    })\n\n    // Cleanup subscription on unmount\n    return unsubscribe\n  }, [])\n\n  return (\n    <WalletContext.Provider value={walletState}>\n      {children}\n    </WalletContext.Provider>\n  )\n}\n\nexport const useWallet = (): WalletContextType => {\n  const context = useContext(WalletContext)\n  if (context === undefined) {\n    throw new Error('useWallet must be used within a WalletProvider')\n  }\n  return context\n}\n\nexport default WalletContext","import React, { useState, useEffect, useMemo } from 'react'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { useWallet } from '../contexts/WalletContext'\nimport type { InventoryNFT } from '../types/inventory'\nimport MediaRenderer from './MediaRenderer'\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\n\ninterface BulkAuctionModalProps {\n  nfts: InventoryNFT[]\n  isOpen: boolean\n  onClose: () => void\n  onSuccess: () => void\n}\n\nconst BulkAuctionModal: React.FC<BulkAuctionModalProps> = ({\n  nfts,\n  isOpen,\n  onClose,\n  onSuccess\n}) => {\n  const { showSuccess, showError } = useNotifications()\n  const walletContext = useWallet()\n  const [startingPrice, setStartingPrice] = useState('')\n  const [durationWeeks, setDurationWeeks] = useState(0)\n  const [durationDays, setDurationDays] = useState(1)\n  const [durationHours, setDurationHours] = useState(0)\n  const [durationMinutes, setDurationMinutes] = useState(0)\n  const [auctionMemo, setAuctionMemo] = useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [sortBy, setSortBy] = useState('name_asc')\n\n  // Reset form when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      setStartingPrice('')\n      setDurationWeeks(0)\n      setDurationDays(1)\n      setDurationHours(0)\n      setDurationMinutes(0)\n      setAuctionMemo('')\n      setIsSubmitting(false)\n    }\n  }, [isOpen])\n\n  // Sort NFTs for display\n  const sortedNfts = useMemo(() => {\n    const sorted = [...nfts]\n    \n    switch (sortBy) {\n      case 'name_asc':\n        return sorted.sort((a, b) => (a.name || '').localeCompare(b.name || ''))\n      case 'name_desc':\n        return sorted.sort((a, b) => (b.name || '').localeCompare(a.name || ''))\n      case 'collection_asc':\n        return sorted.sort((a, b) => a.collection.collection_name.localeCompare(b.collection.collection_name))\n      case 'collection_desc':\n        return sorted.sort((a, b) => b.collection.collection_name.localeCompare(a.collection.collection_name))\n      case 'mint_asc':\n        return sorted.sort((a, b) => (a.mint_number || 0) - (b.mint_number || 0))\n      case 'mint_desc':\n        return sorted.sort((a, b) => (b.mint_number || 0) - (a.mint_number || 0))\n      default:\n        return sorted\n    }\n  }, [nfts, sortBy])\n\n  const calculateTotalDuration = () => {\n    return (durationWeeks * 7 * 24 * 3600) + \n           (durationDays * 24 * 3600) + \n           (durationHours * 3600) + \n           (durationMinutes * 60)\n  }\n\n  const updateDurationComponent = (component: 'weeks' | 'days' | 'hours' | 'minutes', value: number) => {\n    const clampedValue = Math.max(0, Math.min(value, getMaxValue(component)))\n    \n    switch (component) {\n      case 'weeks':\n        setDurationWeeks(clampedValue)\n        break\n      case 'days':\n        setDurationDays(clampedValue)\n        break\n      case 'hours':\n        setDurationHours(clampedValue)\n        break\n      case 'minutes':\n        setDurationMinutes(clampedValue)\n        break\n    }\n  }\n\n  const getMaxValue = (component: 'weeks' | 'days' | 'hours' | 'minutes') => {\n    switch (component) {\n      case 'weeks': return 4 // Max 4 weeks\n      case 'days': return 30 // Max 30 days\n      case 'hours': return 23 // Max 23 hours\n      case 'minutes': return 59 // Max 59 minutes\n      default: return 0\n    }\n  }\n\n  const formatDurationDisplay = () => {\n    const parts = []\n    if (durationWeeks > 0) parts.push(`${durationWeeks}w`)\n    if (durationDays > 0) parts.push(`${durationDays}d`)\n    if (durationHours > 0) parts.push(`${durationHours}h`)\n    if (durationMinutes > 0) parts.push(`${durationMinutes}m`)\n    return parts.length > 0 ? parts.join(' ') : '0m'\n  }\n\n  const handleSubmit = async () => {\n    if (!startingPrice || parseFloat(startingPrice) <= 0) {\n      showError('Invalid Price', 'Please enter a valid starting price')\n      return\n    }\n\n    const totalDurationSeconds = calculateTotalDuration()\n    if (totalDurationSeconds < 3600) { // Minimum 1 hour\n      showError('Invalid Duration', 'Auction duration must be at least 1 hour')\n      return\n    }\n\n    if (totalDurationSeconds > 2592000) { // Maximum 30 days\n      showError('Invalid Duration', 'Auction duration cannot exceed 30 days')\n      return\n    }\n\n    setIsSubmitting(true)\n\n    try {\n      // Create bulk auction transactions using AtomicMarket announceauct action\n      const startingBidAmount = `${parseFloat(startingPrice).toFixed(8)} WAX`\n      \n      // Create separate auction for each NFT\n      const actions = nfts.map(nft => ({\n        account: 'atomicmarket',\n        name: 'announceauct',\n        authorization: [{\n          actor: walletContext.account || '',\n          permission: 'active'\n        }],\n        data: {\n          seller: walletContext.account || '',\n          asset_ids: [parseInt(nft.asset_id)],\n          starting_bid: startingBidAmount,\n          duration: totalDurationSeconds,\n          maker_marketplace: 'market.pxj'\n        }\n      }))\n      \n      await walletContext.transact(actions)\n      \n      const durationDisplay = formatDurationDisplay()\n      showSuccess(\n        'Bulk Auction Created', \n        `Successfully created auctions for ${nfts.length} NFT${nfts.length !== 1 ? 's' : ''} with starting price ${startingPrice} WAX and duration ${durationDisplay}. Remember to transfer your assets to the atomicmarket contract to activate the auctions.`\n      )\n      \n      onSuccess()\n      onClose()\n    } catch (error) {\n      console.error('Bulk auction creation failed:', error)\n      showError('Auction Creation Failed', error instanceof Error ? error.message : 'Failed to create bulk auctions. Please try again.')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content bulk-auction-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Create Bulk Auction</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n\n        <div className=\"modal-body\">\n          {/* Selected NFTs Preview */}\n          <div className=\"selected-nfts-section\">\n            <div className=\"selected-nfts-header\">\n              <h3>Selected NFTs ({nfts.length})</h3>\n              {nfts.length > 1 && (\n                <div className=\"sort-container\">\n                  <label htmlFor=\"auction-sort\">Sort by:</label>\n                  <select \n                    id=\"auction-sort\"\n                    className=\"sort-select\"\n                    value={sortBy}\n                    onChange={(e) => setSortBy(e.target.value)}\n                  >\n                    <option value=\"name_asc\">Name (A-Z)</option>\n                    <option value=\"name_desc\">Name (Z-A)</option>\n                    <option value=\"collection_asc\">Collection (A-Z)</option>\n                    <option value=\"collection_desc\">Collection (Z-A)</option>\n                    <option value=\"mint_asc\">Mint # (Low-High)</option>\n                    <option value=\"mint_desc\">Mint # (High-Low)</option>\n                  </select>\n                </div>\n              )}\n            </div>\n            <div className=\"selected-nfts-grid\">\n              {sortedNfts.slice(0, 6).map((nft) => (\n                <div key={nft.asset_id} className=\"selected-nft-item\">\n                  <div className=\"nft-image-container\">\n                    <MediaRenderer\n                      imageUrl={getAssetImageUrl(nft)}\n                      videoUrl={getAssetVideoUrl(nft)}\n                      alt={nft.name || `Asset #${nft.asset_id}`}\n                      className=\"nft-image\"\n                    />\n                  </div>\n                  <div className=\"nft-info\">\n                    <span className=\"nft-name\">{nft.name}</span>\n                    <span className=\"nft-collection\">{typeof nft.collection === 'string' ? nft.collection : nft.collection?.name || nft.collection?.collection_name || 'Unknown'}</span>\n                  </div>\n                </div>\n              ))}\n              {nfts.length > 6 && (\n                <div className=\"more-nfts-indicator\">\n                  +{nfts.length - 6} more\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Auction Settings */}\n          <div className=\"auction-settings\">\n            <div className=\"form-group\">\n              <label htmlFor=\"startingPrice\">Starting Price (WAX)</label>\n              <input\n                type=\"number\"\n                id=\"startingPrice\"\n                value={startingPrice}\n                onChange={(e) => setStartingPrice(e.target.value)}\n                placeholder=\"Enter starting price\"\n                min=\"0\"\n                step=\"0.01\"\n                disabled={isSubmitting}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Auction Duration</label>\n              <div className=\"duration-inputs\">\n                <div className=\"duration-field\">\n                  <label className=\"duration-label\">Weeks</label>\n                  <input\n                    type=\"number\"\n                    className=\"duration-input\"\n                    value={durationWeeks}\n                    onChange={(e) => updateDurationComponent('weeks', parseInt(e.target.value) || 0)}\n                    min=\"0\"\n                    max={getMaxValue('weeks')}\n                    disabled={isSubmitting}\n                  />\n                </div>\n                <div className=\"duration-field\">\n                  <label className=\"duration-label\">Days</label>\n                  <input\n                    type=\"number\"\n                    className=\"duration-input\"\n                    value={durationDays}\n                    onChange={(e) => updateDurationComponent('days', parseInt(e.target.value) || 0)}\n                    min=\"0\"\n                    max={getMaxValue('days')}\n                    disabled={isSubmitting}\n                  />\n                </div>\n                <div className=\"duration-field\">\n                  <label className=\"duration-label\">Hours</label>\n                  <input\n                    type=\"number\"\n                    className=\"duration-input\"\n                    value={durationHours}\n                    onChange={(e) => updateDurationComponent('hours', parseInt(e.target.value) || 0)}\n                    min=\"0\"\n                    max={getMaxValue('hours')}\n                    disabled={isSubmitting}\n                  />\n                </div>\n                <div className=\"duration-field\">\n                  <label className=\"duration-label\">Minutes</label>\n                  <input\n                    type=\"number\"\n                    className=\"duration-input\"\n                    value={durationMinutes}\n                    onChange={(e) => updateDurationComponent('minutes', parseInt(e.target.value) || 0)}\n                    min=\"0\"\n                    max={getMaxValue('minutes')}\n                    disabled={isSubmitting}\n                  />\n                </div>\n              </div>\n              <div className=\"duration-summary\">\n                <span className=\"duration-display\">{formatDurationDisplay()}</span>\n                <span className=\"duration-total\">({calculateTotalDuration().toLocaleString()}s)</span>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"auctionMemo\">Memo (Optional)</label>\n              <textarea\n                id=\"auctionMemo\"\n                value={auctionMemo}\n                onChange={(e) => setAuctionMemo(e.target.value)}\n                placeholder=\"Add a note about this auction batch...\"\n                rows={3}\n                maxLength={256}\n                disabled={isSubmitting}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <button \n            className=\"cancel-btn\" \n            onClick={onClose}\n            disabled={isSubmitting}\n          >\n            Cancel\n          </button>\n          <button \n            className=\"create-btn\"\n            onClick={handleSubmit}\n            disabled={\n              isSubmitting ||\n              !startingPrice ||\n              parseFloat(startingPrice) <= 0 ||\n              calculateTotalDuration() < 3600\n            }\n          >\n            {isSubmitting ? 'Creating...' : `Create ${nfts.length} Auction${nfts.length !== 1 ? 's' : ''}`}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BulkAuctionModal","import { log } from './loggingService'\nimport { priceService } from './priceService'\n\nexport interface TokenizedAsset {\n  assetId: number\n  name: string\n  image: string\n  schema: string\n  owner: string\n  burned: boolean\n  mint: number\n  contract: string\n  collection: {\n    collectionName: string\n    displayName: string\n    collectionImage?: string\n    verification: boolean\n    blacklisted: boolean\n  }\n  transferable: boolean\n  burnable: boolean\n  mutableData: Array<{ key: string; value: [string, string | number | boolean] }>\n  immutableData: Array<{ key: string; value: [string, string | number | boolean] }>\n  rarityScore: number\n  attributesFloor: number\n  rwax: {\n    symbol: string\n    contract: string\n    decimals: number\n    tokenName: string\n    redeemAmount: number\n  }\n  template: {\n    templateId: number\n  }\n}\n\nexport interface FeeToken {\n  fee: string\n  contract: string\n  exchange_rate: string\n  symbol: string\n  amount: string\n  wax_value?: string\n}\n\nexport interface UserAsset {\n  assetId: number\n  name: string\n  image: string\n  schema: string\n  owner: string\n  burned: boolean\n  mint: number\n  contract: string\n  collection: {\n    collectionName: string\n    displayName: string\n    collectionImage?: string\n    verification: boolean\n    blacklisted: boolean\n  }\n  transferable: boolean\n  burnable: boolean\n  mutableData: Array<{ key: string; value: [string, string | number | boolean] }>\n  immutableData: Array<{ key: string; value: [string, string | number | boolean] }>\n  template: {\n    templateId: number\n  }\n}\n\nexport interface AssetPool {\n  assetId: string\n  issuedTokens: string\n}\n\n//  // try sticking to using https://wax-api.hivebp.io/api/ as the endpoint for these .. similar to how RWAX itself does, \n\n\nclass RWaxService {\n  private readonly WAX_API_BASE = 'https://wax.eosrio.io/v1/chain'\n  private readonly ATOMIC_API_BASE = 'https://wax-api.hivebp.io/api'\n\n  /**\n   * Fetch fee tokens from RWAX contract table with live WAX value conversion\n   */\n  async getFeeTokens(): Promise<FeeToken[]> {\n    const maxRetries = 3\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        const controller = new AbortController()\n        const timeoutId = setTimeout(() => controller.abort(), 10000)\n        \n        const response = await fetch(`${this.WAX_API_BASE}/get_table_rows`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            code: 'rwax',\n            scope: 'rwax',\n            table: 'feetokens',\n            json: true,\n            limit: 100\n          }),\n          signal: controller.signal\n        })\n        \n        clearTimeout(timeoutId)\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n        }\n        \n        const data = await response.json()\n        \n        if (!data.rows || !Array.isArray(data.rows)) {\n          log.error('Invalid fee tokens response structure:', data)\n          return []\n        }\n        \n        // Pre-fetch Alcor rates for tokens that need them\n        const alcorTokenIds = ['honey-honeyhiveio', 'lswax-liquidstaked']\n        const alcorRates = await this.fetchAlcorTokenRates(alcorTokenIds)\n        \n        // Process fee tokens and calculate live WAX conversions\n        const feeTokens = await Promise.all(data.rows.map(async (row: { fee: string; contract: string; exchange_rate?: string }) => {\n          const feeMatch = row.fee.match(/([0-9.]+)\\s+([A-Z]+)/)\n          const symbol = feeMatch ? feeMatch[2] : 'UNKNOWN'\n          const amount = feeMatch ? feeMatch[1] : '0'\n          \n          // Calculate live WAX equivalent using priceService for better accuracy\n          let waxValue: string | undefined\n          if (symbol !== 'WAX') {\n            try {\n              waxValue = await this.calculateLiveWaxValue(symbol, amount, alcorRates)\n            } catch (error) {\n              log.warn(`Failed to get live WAX value for ${symbol}, using exchange rate fallback`, 'RWaxService.getFeeTokens')\n              // Fallback to exchange rate if available\n              if (row.exchange_rate) {\n                const exchangeRate = parseFloat(row.exchange_rate)\n                const feeAmount = parseFloat(amount)\n                if (!isNaN(exchangeRate) && !isNaN(feeAmount)) {\n                  waxValue = (feeAmount / exchangeRate).toFixed(8)\n                }\n              }\n            }\n          }\n          \n          return {\n            fee: row.fee,\n            contract: row.contract,\n            exchange_rate: row.exchange_rate,\n            symbol,\n            amount,\n            wax_value: waxValue\n          }\n        }))\n        \n        log.info(`Successfully fetched ${feeTokens.length} fee tokens with live WAX conversions`)\n        return feeTokens\n        \n      } catch (error) {\n        log.error(`Attempt ${attempt} failed to fetch fee tokens:`, error instanceof Error ? error.message : String(error))\n        \n        if (attempt === maxRetries) {\n          throw new Error(`Failed to fetch fee tokens after ${maxRetries} attempts: ${error}`)\n        }\n        \n        // Wait 1 second before retry\n        await new Promise(resolve => setTimeout(resolve, 1000))\n      }\n    }\n    \n    return []\n  }\n\n  /**\n   * Fetch Alcor V2 token rates in batch\n   * @param tokenIds Array of token IDs (e.g., ['honey-honeyhiveio', 'lswax-liquidstaked'])\n   * @returns Map of token ID to WAX rate\n   */\n  private async fetchAlcorTokenRates(tokenIds: string[]): Promise<Map<string, number>> {\n    try {\n      const url = `https://wax.alcor.exchange/api/v2/tokens/${tokenIds.join(',')}`\n      const response = await fetch(url)\n      const tokens = await response.json()\n      \n      const rates = new Map<string, number>()\n      tokens.forEach((t: any) => {\n        const id = `${t.symbol.toLowerCase()}-${t.contract}`\n        rates.set(id, parseFloat(t.system_price) || 0)\n      })\n      \n      return rates\n    } catch (error) {\n      log.error('Failed to fetch Alcor V2 rates:', 'RWaxService.fetchAlcorTokenRates', error as Error)\n      return new Map()\n    }\n  }\n\n  /**\n    * Calculate live WAX value for different fee tokens\n    * @param symbol Token symbol (e.g., 'WPIXAL', 'PXJ', 'HONEY', 'LSWAX')\n    * @param amount Token amount as string\n    * @param alcorRates Pre-fetched Map from fetchAlcorTokenRates (for efficiency)\n    * @returns WAX value as string\n    */\n  private async calculateLiveWaxValue(symbol: string, amount: string, alcorRates?: Map<string, number>): Promise<string> {\n    const feeAmount = parseFloat(amount)\n    if (isNaN(feeAmount)) {\n      throw new Error(`Invalid amount: ${amount}`)\n    }\n\n    try {\n      switch (symbol.toUpperCase()) {\n        case 'WPIXAL': {\n          // Convert WPIXAL to WAX using live market rates\n          const wpixalPriceWAX = await priceService.getWpixalPriceWAX()\n          const waxValue = feeAmount * wpixalPriceWAX\n          return waxValue.toFixed(8)\n        }\n        case 'PXJ': {\n          // Convert PXJ to WAX using USD prices\n          const pxjPriceUSD = await priceService.getPxjPriceUSD()\n          const waxPriceUSD = await priceService.getWaxPriceUSD()\n          if (waxPriceUSD > 0) {\n            const waxValue = (feeAmount * pxjPriceUSD) / waxPriceUSD\n            return waxValue.toFixed(8)\n          }\n          throw new Error('WAX price is zero')\n        }\n        case 'HONEY': {\n          const rate = alcorRates?.get('honey-honeyhiveio') || 0\n          if (rate > 0) {\n            const waxValue = feeAmount * rate\n            return waxValue.toFixed(8)\n          }\n          throw new Error('HONEY/WAX rate not available')\n        }\n        case 'LSWAX': {\n          const rate = alcorRates?.get('lswax-liquidstaked') || 0\n          if (rate > 0) {\n            const waxValue = feeAmount * rate\n            return waxValue.toFixed(8)\n          }\n          // Fallback: assume 1.1616 WAX per LSWAX if rate unavailable (updated from 1.03-1.05 to match recent data)\n          const waxValue = feeAmount * 1.1616\n          return waxValue.toFixed(8)\n        }\n        default: {\n          // For unknown tokens, try to use a generic conversion\n          // This could be extended to support more tokens via external APIs\n          log.warn(`Unknown token symbol for live conversion: ${symbol}`, 'RWaxService.calculateLiveWaxValue')\n          throw new Error(`Unsupported token: ${symbol}`)\n        }\n      }\n    } catch (error) {\n      log.error(`Failed to calculate live WAX value for ${symbol}:`, 'RWaxService.calculateLiveWaxValue', error as Error)\n      throw error\n    }\n  }\n\n  /**\n   * Get WPIXAL amount for a specific asset from assetpools table\n   */\n  async getAssetPoolInfo(assetId: string): Promise<AssetPool | null> {\n    const maxRetries = 3\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        const controller = new AbortController()\n        const timeoutId = setTimeout(() => controller.abort(), 10000)\n        \n        const response = await fetch(`${this.WAX_API_BASE}/get_table_rows`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            code: 'rwax',\n            scope: 'WPIXAL',\n            table: 'assetpools',\n            json: true,\n            limit: 1,\n            lower_bound: assetId,\n            upper_bound: assetId,\n            key_type: 'i64'\n          }),\n          signal: controller.signal\n        })\n        \n        clearTimeout(timeoutId)\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n        }\n        \n        const data = await response.json()\n        \n        if (!data.rows || !Array.isArray(data.rows) || data.rows.length === 0) {\n          return null\n        }\n        \n        const row = data.rows[0]\n        return {\n          assetId: row.asset_id,\n          issuedTokens: row.issued_tokens\n        }\n        \n      } catch (error) {\n        log.error(`Attempt ${attempt} failed to fetch asset pool info for ${assetId}:`, error instanceof Error ? error.message : String(error))\n        \n        if (attempt === maxRetries) {\n          log.error(`Failed to fetch asset pool info after ${maxRetries} attempts: ${error}`)\n          return null\n        }\n        \n        // Wait 1 second before retry\n        await new Promise(resolve => setTimeout(resolve, 1000))\n      }\n    }\n    \n    return null\n  }\n\n  /**\n   * Fetch tokenized WPIXAL assets from API with fallback to test data\n   */\n  async getTokenizedAssets(\n    limit: number = 36,\n    offset: number = 0,\n    sortBy: string = 'rarity_score_desc',\n    attributeFilters: string = ''\n  ): Promise<TokenizedAsset[]> {\n    const maxRetries = 3\n    let lastError: Error | null = null\n\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        const params = new URLSearchParams({\n          term: '',\n          owner: 'rwax',\n          collection: 'pixeljourney',\n          schema: 'pixals',\n          category: '',\n          recent: '',\n          order_by: sortBy,\n          limit: limit.toString(),\n          search_type: 'inventory',\n          offer_type: 'sales',\n          min_price: '0',\n          max_price: '0',\n          offset: offset.toString(),\n          verified: 'all',\n          favorites: 'false',\n          user: 'pixeljourney',\n          contract: '',\n          attributes: attributeFilters,\n          only: 'rwax',\n          rwax_contract: 'pixeljourney',\n          rwax_symbol: 'WPIXAL'\n        })\n\n        const url = `${this.ATOMIC_API_BASE}/assets?${params.toString()}`\n        log.info(`Fetching tokenized assets from: ${url}`, 'RWaxService')\n        \n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n        }\n\n        const data = await response.json()\n        log.debug('RWAX API Response received', 'RWaxService.getTokenizedAssets', { dataLength: Array.isArray(data) ? data.length : 'not array' })\n        \n        // Return the original API response structure\n        return Array.isArray(data) ? data : []\n        \n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error))\n        log.error(`Attempt ${attempt}/${maxRetries} failed:`, 'RWaxService.getTokenizedAssets', lastError)\n        \n        // If this is the last attempt, return test data\n        if (attempt === maxRetries) {\n          log.warn('API failed, returning test data with original structure', 'RWaxService.getTokenizedAssets')\n          \n          // Use original API response structure from test data\n          const testAssets = [\n            {\n              assetId: 1099932947523,\n              name: \"Pixal 09106\",\n              schema: \"pixals\",\n              owner: \"rwax\",\n              burned: false,\n              mint: 9106,\n              contract: \"atomicassets\",\n              collection: {\n                collectionName: \"pixeljourney\",\n                displayName: \"Pixel Journey\",\n                collectionImage: \"QmVnrLdB1xQ9EMzgw5srW6u8WKQpTjmYz6fBi2g7ic8iob\",\n                verification: true,\n                blacklisted: false\n              },\n              transferable: true,\n              burnable: true,\n              mutableData: [],\n              immutableData: [\n                { key: \"Background\", value: [\"string\", \"Nefty Spot\"] },\n                { key: \"Body\", value: [\"string\", \"Pink-Blue Overalls\"] },\n                { key: \"Eyes\", value: [\"string\", \"Kawaii Green\"] },\n                { key: \"Head\", value: [\"string\", \"Grey\"] },\n                { key: \"img\", value: [\"string\", \"Qma9rcg1NHxhvG5CMDecS3bo14gpQSr6QFieUXsFPrG14T\"] },\n                { key: \"name\", value: [\"string\", \"Pixal 09106\"] }\n              ] as Array<{ key: string; value: [string, string | number | boolean] }>,\n              rarityScore: 419.80619503583694,\n              attributesFloor: 501.0,\n              rwax: {\n                symbol: \"WPIXAL\",\n                contract: \"pixeljourney\",\n                decimals: 8,\n                tokenName: \"Wrapped Pixal\",\n                redeemAmount: 1.09997216\n              },\n              image: \"Qma9rcg1NHxhvG5CMDecS3bo14gpQSr6QFieUXsFPrG14T\",\n              template: {\n                templateId: 781515\n              }\n            },\n            {\n              assetId: 1099931322703,\n              name: \"Pixal 06238\",\n              schema: \"pixals\",\n              owner: \"rwax\",\n              burned: false,\n              mint: 6238,\n              contract: \"atomicassets\",\n              collection: {\n                collectionName: \"pixeljourney\",\n                displayName: \"Pixel Journey\",\n                verification: true,\n                blacklisted: false\n              },\n              transferable: true,\n              burnable: true,\n              mutableData: [],\n              immutableData: [\n                { key: \"Background\", value: [\"string\", \"Blue Sky\"] },\n                { key: \"Body\", value: [\"string\", \"Red Shirt\"] },\n                { key: \"Eyes\", value: [\"string\", \"Brown\"] },\n                { key: \"Head\", value: [\"string\", \"Black Hair\"] },\n                { key: \"img\", value: [\"string\", \"QmTestImage2\"] },\n                { key: \"name\", value: [\"string\", \"Pixal 06238\"] }\n              ] as Array<{ key: string; value: [string, string | number | boolean] }>,\n              rarityScore: 350.5,\n              attributesFloor: 400.0,\n              rwax: {\n                symbol: \"WPIXAL\",\n                contract: \"pixeljourney\",\n                decimals: 8,\n                tokenName: \"Wrapped Pixal\",\n                redeemAmount: 1.25\n              },\n              image: \"QmTestImage2\",\n              template: {\n                templateId: 781516\n              }\n            }\n          ]\n          \n          // Apply pagination to test data\n          const startIndex = offset\n          const endIndex = startIndex + limit\n          return testAssets.slice(startIndex, endIndex)\n        }\n      }\n    }\n\n    // This should never be reached due to the fallback in the last attempt\n    throw lastError || new Error('Failed to fetch tokenized assets')\n  }\n\n  /**\n   * Get WPIXAL amount for a specific asset\n   */\n  async getAssetWPIXALAmount(assetId: string): Promise<string> {\n    try {\n      const url = `${this.WAX_API_BASE}/get_table_rows`\n      const requestBody = {\n        code: 'pixeljourney',\n        index_position: 'primary',\n        json: true,\n        key_type: 'i64',\n        limit: 1,\n        reverse: false,\n        lower_bound: assetId,\n        upper_bound: assetId,\n        scope: 'pixeljourney',\n        show_payer: false,\n        table: 'assetpools',\n        table_key: ''\n      }\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      })\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch WPIXAL amount: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      \n      if (data.rows && data.rows.length > 0) {\n        return data.rows[0].issued_tokens\n      }\n      \n      return '0.00000000 WPIXAL'\n    } catch (error) {\n      log.error('Error fetching WPIXAL amount:', 'RWaxService.getAssetWPIXALAmount', error instanceof Error ? error : new Error(String(error)))\n      return '0.00000000 WPIXAL'\n    }\n  }\n\n\n\n\n\n  /**\n   * Fetch user's Pixal assets for tokenization\n   */\n  async getUserPixalAssets(account: string, limit: number = 36, offset: number = 0): Promise<UserAsset[]> {\n    const maxRetries = 3\n    let lastError: Error | null = null\n\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        // Use AtomicAssets API with proper pagination\n        const page = Math.floor(offset / limit) + 1\n        const url = `https://wax.api.atomicassets.io/atomicassets/v1/assets?owner=${account}&collection_name=pixeljourney&schema_name=pixals&limit=${limit}&page=${page}&order=desc&sort=asset_id`\n        \n        log.info(`Fetching user assets from: ${url}`, 'RWaxService')\n        \n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n        }\n        \n        const data = await response.json()\n        \n        // Check if data and data.data exist\n        if (!data || !data.data || !Array.isArray(data.data)) {\n          log.error('Invalid user assets API response structure:', data)\n          return []\n        }\n        \n        return data.data.map((asset: any) => {\n          // Enhanced image URL processing with multiple fallbacks\n          let imageUrl = ''\n          \n          // Try multiple image sources\n          const imageSources = [\n            asset.data?.img,\n            asset.data?.image,\n            asset.immutable_data?.img,\n            asset.immutable_data?.image,\n            asset.template?.immutable_data?.img,\n            asset.template?.immutable_data?.image\n          ]\n          \n          for (const source of imageSources) {\n            if (source && typeof source === 'string') {\n              imageUrl = source\n              break\n            }\n          }\n          \n          // Process image URL to handle IPFS and relative paths\n          if (imageUrl && !imageUrl.startsWith('http')) {\n            if (imageUrl.startsWith('Qm') || imageUrl.startsWith('/ipfs/')) {\n              imageUrl = `https://ipfs.io/ipfs/${imageUrl.replace('/ipfs/', '')}`\n            } else if (imageUrl.startsWith('ipfs://')) {\n              imageUrl = imageUrl.replace('ipfs://', 'https://ipfs.io/ipfs/')\n            }\n          }\n          \n          return {\n            assetId: parseInt(asset.asset_id) || 0,\n            name: asset.name || asset.data?.name || asset.immutable_data?.name || `Pixal #${asset.asset_id}`,\n            image: imageUrl,\n            schema: asset.schema?.schema_name || asset.schema_name || 'pixals',\n            owner: asset.owner || '',\n            burned: asset.burned || false,\n            mint: asset.template_mint || 0,\n            contract: asset.contract || 'atomicassets',\n            collection: {\n              collectionName: asset.collection?.collection_name || asset.collection_name || 'pixeljourney',\n              displayName: asset.collection?.name || asset.collection?.collection_name || 'Pixel Journey',\n              verification: asset.collection?.authorized_accounts?.length > 0 || true,\n              blacklisted: false\n            },\n            transferable: asset.transferable !== false,\n            burnable: asset.burnable !== false,\n            mutableData: Array.isArray(asset.mutable_data) ? asset.mutable_data : [],\n            immutableData: Array.isArray(asset.immutable_data) ? asset.immutable_data : [],\n            template: {\n              templateId: parseInt(asset.template?.template_id || asset.template_id || '0')\n            }\n          }\n        })\n        \n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error))\n        log.error(`Attempt ${attempt}/${maxRetries} failed:`, 'RWaxService.getUserPixalAssets', lastError)\n        \n        // If this is the last attempt, return empty array instead of throwing\n        if (attempt === maxRetries) {\n          log.error('All attempts failed, returning empty array', 'RWaxService.getUserPixalAssets')\n          return []\n        }\n        \n        // Wait before retrying\n        await new Promise(resolve => setTimeout(resolve, 1000 * attempt))\n      }\n    }\n\n    return []\n  }\n\n  /**\n   * Execute tokenization transaction\n   */\n  async executeTokenization(assetIds: string[], feeToken: FeeToken): Promise<unknown> {\n    try {\n      const { wharfKitService } = await import('./wharfkit')\n      \n      if (!wharfKitService.isLoggedIn()) {\n        throw new Error('Wallet not connected')\n      }\n      \n      const account = wharfKitService.getAccountName()\n      if (!account) {\n        throw new Error('No account found')\n      }\n\n      const actions = [\n        {\n          account: 'nft.hive',\n          name: 'boost',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            booster: account\n          }\n        },\n        {\n          account: feeToken.contract,\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: feeToken.fee,\n            memo: 'payfee'\n          }\n        },\n        {\n          account: 'atomicassets',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            asset_ids: assetIds,\n            memo: 'deposit'\n          }\n        },\n        {\n          account: 'rwax',\n          name: 'tokenizenfts',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            user: account,\n            asset_ids: assetIds,\n            fee_currency: `8,${feeToken.symbol}`\n          }\n        }\n      ]\n\n      const result = await wharfKitService.transact(actions)\n      log.info('Tokenization transaction executed successfully', 'RWaxService.executeTokenization', { result })\n      return result\n    } catch (error) {\n      log.error('Error executing tokenization:', 'RWaxService.executeTokenization', error instanceof Error ? error : new Error(String(error)))\n      throw error\n    }\n  }\n\n  /**\n   * Execute redemption transaction\n   */\n  async executeRedemption(assetId: string, wpixalAmount: string, feeToken: FeeToken): Promise<unknown> {\n    try {\n      const { wharfKitService } = await import('./wharfkit')\n      \n      if (!wharfKitService.isLoggedIn()) {\n        throw new Error('Wallet not connected')\n      }\n      \n      const account = wharfKitService.getAccountName()\n      if (!account) {\n        throw new Error('No account found')\n      }\n\n      const actions = [\n        {\n          account: 'nft.hive',\n          name: 'boost',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            booster: account\n          }\n        },\n        {\n          account: feeToken.contract,\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: feeToken.fee,\n            memo: 'payfee'\n          }\n        },\n        {\n          account: 'pixeljourney',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: wpixalAmount,\n            memo: 'redeem'\n          }\n        },\n        {\n          account: 'rwax',\n          name: 'redeem',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            redeemer: account,\n            contract: 'pixeljourney',\n            quantity: wpixalAmount,\n            asset_id: assetId,\n            fee_currency: `8,${feeToken.symbol}`\n          }\n        }\n      ]\n\n      const result = await wharfKitService.transact(actions)\n      log.info('Redemption transaction executed successfully', 'RWaxService.executeRedemption', { result })\n      return result\n    } catch (error) {\n      log.error('Error executing redemption:', 'RWaxService.executeRedemption', error instanceof Error ? error : new Error(String(error)))\n      throw error\n    }\n  }\n}\n\nexport const rwaxService = new RWaxService()","import React, { useState, useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { rwaxService, type FeeToken } from '../services/rwaxService'\nimport { log } from '../services/loggingService'\nimport { normalizeIPFSUrl } from '../utils/ipfsUtils'\nimport '../css/modal.css'\n\ninterface NFT {\n  asset_id: string\n  name: string\n  img: string\n  [key: string]: any\n}\n\ninterface TokenizeFeeModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n  nft: NFT | null\n}\n\nconst TokenizeFeeModal: React.FC<TokenizeFeeModalProps> = ({\n  isOpen,\n  onClose,\n  onSuccess,\n  nft\n}) => {\n  const [feeTokens, setFeeTokens] = useState<FeeToken[]>([])\n  const [selectedFeeToken, setSelectedFeeToken] = useState<FeeToken | null>(null)\n  const [loading, setLoading] = useState(false)\n  const { showError } = useNotifications()\n\n  // Load fee tokens when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      loadFeeTokens()\n    }\n  }, [isOpen])\n\n  const loadFeeTokens = async () => {\n    try {\n      setLoading(true)\n      const tokens = await rwaxService.getFeeTokens()\n      setFeeTokens(tokens)\n      \n      // Auto-select WAX if available\n      const waxToken = tokens.find(token => token.symbol === 'WAX')\n      if (waxToken) {\n        setSelectedFeeToken(waxToken)\n      }\n    } catch (error) {\n      log.error('Failed to load fee tokens', 'TokenizeFeeModal.loadFeeTokens', error as Error)\n      showError('Failed to load fee tokens')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleConfirm = async () => {\n    if (selectedFeeToken && nft) {\n      try {\n        setLoading(true)\n        await rwaxService.executeTokenization([nft.asset_id], selectedFeeToken)\n        onSuccess?.()\n        handleClose()\n      } catch (error) {\n        log.error('Failed to tokenize asset', 'TokenizeFeeModal.handleConfirm', error as Error)\n        showError('Failed to tokenize asset')\n      } finally {\n        setLoading(false)\n      }\n    }\n  }\n\n  const handleClose = () => {\n    setSelectedFeeToken(null)\n    onClose()\n  }\n\n  if (!isOpen) return null\n\n  return createPortal(\n    <div className=\"modal-overlay\" onClick={handleClose}>\n      <div className=\"modal-content tokenize-fee-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>🪙 Tokenize into WPIXAL</h2>\n          <button className=\"close-button\" onClick={handleClose}>×</button>\n        </div>\n        \n        <div className=\"modal-body\">\n          {nft && (\n            <div className=\"tokenize-asset-preview\">\n              <img \n                src={normalizeIPFSUrl(nft.img)} \n                alt={nft.name} \n                className=\"tokenize-asset-image\"\n                onError={(e) => {\n                  const target = e.target as HTMLImageElement\n                  target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                }}\n              />\n              <h3>{nft.name}</h3>\n              <p className=\"tokenize-description\">\n                This will tokenize your Pixal PFP into WPIXAL tokens on the RWAX platform.\n              </p>\n            </div>\n          )}\n          \n          {loading ? (\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading fee options...</p>\n            </div>\n          ) : (\n            <div className=\"fee-selection\">\n              <h4>Select Fee Token:</h4>\n              <div className=\"fee-options\">\n                {feeTokens.map((token, index) => (\n                  <div \n                    key={index}\n                    className={`fee-option ${selectedFeeToken === token ? 'selected' : ''}`}\n                    onClick={() => setSelectedFeeToken(token)}\n                  >\n                    <div className=\"fee-info\">\n                      <span className=\"fee-amount\">{token.fee}</span>\n                      <span className=\"fee-contract\">({token.contract})</span>\n                    </div>\n                    {token.wax_value && token.symbol !== 'WAX' && (\n                      <div className=\"wax-equivalent\">\n                        ≈ {parseFloat(token.wax_value).toFixed(4)} WAX\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"modal-footer\">\n          <button className=\"cancel-button\" onClick={handleClose}>\n            Cancel\n          </button>\n          <button \n            className=\"confirm-button tokenize-confirm\"\n            onClick={handleConfirm}\n            disabled={!selectedFeeToken || loading}\n          >\n            Tokenize Asset\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  )\n}\n\nexport default TokenizeFeeModal","import { Session } from '@wharfkit/session'\nimport { logger } from './loggingService'\nimport { apiService } from './api'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\nimport { WharfKitService } from './wharfkit'\n\nexport interface StakingReward {\n  token: string\n  amount: number\n  contract: string\n  precision: number\n}\n\nexport interface StakingPool {\n  pool_id: string\n  name: string\n  contract: string\n  token_symbol: string\n  apr: number\n  total_staked: number\n  min_stake_amount: number\n  max_stake_amount?: number\n  lock_period_days: number\n  early_unstake_penalty: number\n  rewards_per_block: number\n  last_reward_block: number\n}\n\nexport interface PendingReward {\n  quantity: string\n  contract: string\n}\n\nexport interface FarmDataRow {\n  farm_name: string\n  reward_per_hour: string\n  total_staked: number\n}\n\nexport interface StakerDataRow {\n  user: string\n  staked_assets: string[]\n  pending_rewards: PendingReward[]\n}\n\nexport interface StakePosition {\n  position_id: string\n  pool_id: string\n  owner: string\n  staked_amount: number\n  stake_time: number\n  last_claim_time: number\n  pending_rewards: StakingReward[]\n  unlock_time: number\n  is_locked: boolean\n}\n\nexport interface TokenStakeInfo {\n  farm_name: string\n  user: string\n  staked_amount: number\n  stake_time: number\n  pending_rewards: StakingReward[]\n  vesting_time: number\n  last_claim_time: number\n}\n\nexport interface TokenFarmInfo {\n  farm_name: string\n  creator: string\n  time_created: number\n  staking_token: {\n    sym: string\n    contract: string\n  }\n  incentive_count: number\n  total_staked: number\n  vesting_time: number\n  last_update_time: number\n}\n\nexport interface NFTStakeInfo {\n  asset_id: string\n  template_id: string\n  farm_name: string\n  stake_time: number\n  rewards_per_hour: { [token: string]: number }\n  multiplier: number\n}\n\nexport interface TransactionResult {\n  success: boolean\n  transaction_id?: string\n  error?: string\n  gas_used?: number\n}\n\ninterface WharfkitTransactionResult {\n  transaction_id?: string\n  id?: string\n  cpu_usage_us?: number\n  max_net_usage_words?: number\n  [key: string]: unknown\n}\n\nexport interface BatchTransactionResult {\n  success: boolean\n  successful_transactions: string[]\n  failed_transactions: { asset_id: string; error: string }[]\n  total_gas_used: number\n}\n\nclass StakingService {\n  private readonly MAX_BATCH_SIZE = 10\n  private readonly RETRY_ATTEMPTS = 3\n  private readonly RETRY_DELAY = 1000 // 1 second\n  private readonly FARMS_CONTRACT = 'farms.waxdao'\n  private readonly TOKEN_FARMS_CONTRACT = 'tf.waxdao'\n  private readonly PXJ_CONTRACT = 'pixeljourney'\n  private readonly WUF_CONTRACT = 'wuffi'\n  private readonly PXJ_FARM_NAME = 'pxjfarm1'\n\n  /**\n   * Stake multiple NFTs using stakenfts action (matches user's transaction examples)\n   */\n  async stakeNFTsPixelJourney(\n    session: Session,\n    assetIds: string[],\n    farmName: string = 'pixeljourney'\n  ): Promise<TransactionResult> {\n    try {\n      const action = {\n        account: this.FARMS_CONTRACT,\n        name: 'stakenfts',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          user: WharfKitService.safeGetActor(session),\n          farmname: farmName,\n          assets_to_stake: assetIds\n        }\n      }\n\n      const result = await this.executeTransactionWithRetry(session, [action])\n      \n      if (result.success) {\n        logger.info('NFTs Staked Successfully', 'StakingService', {\n          user: WharfKitService.safeGetActor(session),\n          farm_name: farmName,\n          asset_count: assetIds.length,\n          asset_ids: assetIds,\n          transaction_id: result.transaction_id\n        })\n      }\n      \n      return result\n      \n    } catch (error) {\n      logger.error('stakeNFTsPixelJourney failed', 'StakingService', error as Error, {\n        asset_ids: assetIds,\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        transaction_id: '',\n        gas_used: 0\n      }\n    }\n  }\n\n  /**\n   * Unstake multiple NFTs using unstake action (matches user's transaction examples)\n   */\n  async unstakeNFTsPixelJourney(\n    session: Session,\n    assetIds: string[],\n    farmName: string = 'pixeljourney'\n  ): Promise<TransactionResult> {\n    try {\n      const action = {\n        account: this.FARMS_CONTRACT,\n        name: 'unstake',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          user: WharfKitService.safeGetActor(session),\n          farmname: farmName,\n          asset_ids: assetIds\n        }\n      }\n\n      const result = await this.executeTransactionWithRetry(session, [action])\n      \n      if (result.success) {\n        logger.info('NFTs Unstaked Successfully', 'StakingService', {\n          user: WharfKitService.safeGetActor(session),\n          farm_name: farmName,\n          asset_count: assetIds.length,\n          asset_ids: assetIds,\n          transaction_id: result.transaction_id\n        })\n      }\n      \n      return result\n      \n    } catch (error) {\n      logger.error('unstakeNFTsPixelJourney failed', 'StakingService', error as Error, {\n        asset_ids: assetIds,\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        transaction_id: '',\n        gas_used: 0\n      }\n    }\n  }\n\n  /**\n   * Stake multiple NFTs in batches with comprehensive error handling (legacy method)\n   */\n  async stakeNFTsBatch(\n    session: Session,\n    assetIds: string[],\n    farmName: string = 'pixeljourney'\n  ): Promise<BatchTransactionResult> {\n    const result: BatchTransactionResult = {\n      success: true,\n      successful_transactions: [],\n      failed_transactions: [],\n      total_gas_used: 0\n    }\n\n    try {\n      // Process in batches to avoid transaction size limits\n      const batches = this.createBatches(assetIds, this.MAX_BATCH_SIZE)\n      \n      for (const batch of batches) {\n        try {\n          const batchResult = await this.processBatch(\n            session,\n            batch,\n            'stake',\n            farmName\n          )\n          \n          result.successful_transactions.push(...batchResult.successful_transactions)\n          result.failed_transactions.push(...batchResult.failed_transactions)\n          result.total_gas_used += batchResult.total_gas_used\n          \n          // Small delay between batches to prevent rate limiting\n          if (batches.indexOf(batch) < batches.length - 1) {\n            await this.delay(500)\n          }\n        } catch (error) {\n          // If entire batch fails, mark all assets as failed\n          batch.forEach(assetId => {\n            result.failed_transactions.push({\n              asset_id: assetId,\n              error: error instanceof Error ? error.message : 'Batch processing failed'\n            })\n          })\n        }\n      }\n      \n      result.success = result.failed_transactions.length === 0\n      \n      // Log the operation\n      logger.info('NFT Staking Batch Operation', 'StakingService', {\n        total_assets: assetIds.length,\n        successful: result.successful_transactions.length,\n        failed: result.failed_transactions.length,\n        farm_name: farmName\n      })\n      \n      return result\n      \n    } catch (error) {\n      logger.error('stakeNFTsBatch failed', 'StakingService', error as Error, {\n        asset_ids: assetIds,\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        successful_transactions: [],\n        failed_transactions: assetIds.map(id => ({\n          asset_id: id,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        })),\n        total_gas_used: 0\n      }\n    }\n  }\n\n  /**\n   * Unstake multiple NFTs in batches\n   */\n  async unstakeNFTsBatch(\n    session: Session,\n    assetIds: string[]\n  ): Promise<BatchTransactionResult> {\n    const result: BatchTransactionResult = {\n      success: true,\n      successful_transactions: [],\n      failed_transactions: [],\n      total_gas_used: 0\n    }\n\n    try {\n      const batches = this.createBatches(assetIds, this.MAX_BATCH_SIZE)\n      \n      for (const batch of batches) {\n        try {\n          const batchResult = await this.processBatch(\n            session,\n            batch,\n            'unstake'\n          )\n          \n          result.successful_transactions.push(...batchResult.successful_transactions)\n          result.failed_transactions.push(...batchResult.failed_transactions)\n          result.total_gas_used += batchResult.total_gas_used\n          \n          if (batches.indexOf(batch) < batches.length - 1) {\n            await this.delay(500)\n          }\n        } catch (error) {\n          batch.forEach(assetId => {\n            result.failed_transactions.push({\n              asset_id: assetId,\n              error: error instanceof Error ? error.message : 'Batch processing failed'\n            })\n          })\n        }\n      }\n      \n      result.success = result.failed_transactions.length === 0\n      \n      logger.info('NFT Unstaking Batch Operation', 'StakingService', {\n        total_assets: assetIds.length,\n        successful: result.successful_transactions.length,\n        failed: result.failed_transactions.length\n      })\n      \n      return result\n      \n    } catch (error) {\n      logger.error('unstakeNFTsBatch failed', 'StakingService', error as Error, {\n        asset_ids: assetIds\n      })\n      \n      return {\n        success: false,\n        successful_transactions: [],\n        failed_transactions: assetIds.map(id => ({\n          asset_id: id,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        })),\n        total_gas_used: 0\n      }\n    }\n  }\n\n  /**\n   * Claim all pending rewards for a user\n   */\n  async claimAllRewards(\n    session: Session,\n    farmName: string = 'pixeljourney'\n  ): Promise<TransactionResult> {\n    try {\n      const actions = [{\n        account: this.FARMS_CONTRACT,\n        name: 'claim',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          user: WharfKitService.safeGetActor(session),\n          farmname: farmName\n        }\n      }]\n\n      const result = await this.executeTransactionWithRetry(session, actions)\n      \n      if (result.success) {\n        logger.info('Rewards Claimed Successfully', 'StakingService', {\n          user: WharfKitService.safeGetActor(session),\n          farm_name: farmName,\n          transaction_id: result.transaction_id\n        })\n      }\n      \n      return result\n      \n    } catch (error) {\n      logger.error('claimAllRewards failed', 'StakingService', error as Error, {\n        user: WharfKitService.safeGetActor(session),\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to claim rewards'\n      }\n    }\n  }\n\n  /**\n   * Get detailed staking information for a user from farms.waxdao contract tables\n   */\n  async getStakingInfo(account: string, farmName: string = 'pixeljourney'): Promise<{\n    staked_nfts: NFTStakeInfo[]\n    pending_rewards: StakingReward[]\n    total_staking_power: number\n    estimated_daily_rewards: StakingReward[]\n  }> {\n    try {\n      // Query the farms.waxdao contract tables for staked assets\n      const stakedResponse = await fetch(\n        `${API_ENDPOINTS.WAX_CHAIN.GREYMASS}/v1/chain/get_table_rows`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n             json: true,\n             code: this.FARMS_CONTRACT,\n             scope: this.FARMS_CONTRACT,\n             table: 'stakers',\n             lower_bound: account,\n             upper_bound: account,\n             limit: 1000\n           })\n        }\n      )\n      \n      if (!stakedResponse.ok) {\n        throw new Error(`Failed to fetch staking info: ${stakedResponse.statusText}`)\n      }\n      \n      const stakedData = await stakedResponse.json()\n      \n      // Extract staked assets and rewards from the staker data\n       const userStakeData = stakedData.rows.find((row: StakerDataRow) => row.user === account) || {} as Partial<StakerDataRow>\n       const stakedAssets = userStakeData.staked_assets || []\n       const pendingRewards = userStakeData.pending_rewards || []\n       \n       const stakedNfts: NFTStakeInfo[] = stakedAssets.map((assetId: string) => ({\n         asset_id: assetId,\n         template_id: '0', // Would need to fetch from AtomicAssets API\n         farm_name: farmName,\n         stake_time: Date.now() / 1000, // Would need actual stake time from contract\n         rewards_per_hour: { pxj: 0, wuf: 0 }, // Would calculate based on template\n         multiplier: 1\n       })) || []\n      \n      // Transform pending rewards from contract format\n       const rewards: StakingReward[] = pendingRewards.map((reward: PendingReward) => ({\n         token: reward.quantity.split(' ')[1], // Extract token symbol from asset format\n         amount: parseFloat(reward.quantity.split(' ')[0]), // Extract amount\n         contract: reward.contract,\n         precision: 4\n       }))\n      \n      const totalStakingPower = stakedNfts.reduce((sum, nft) => {\n        const hourlyRewards = Object.values(nft.rewards_per_hour).reduce((a, b) => a + b, 0)\n        return sum + (hourlyRewards * nft.multiplier)\n      }, 0)\n      \n      const estimatedDailyRewards: StakingReward[] = [\n        {\n          token: 'PXJ',\n          amount: stakedNfts.reduce((sum, nft) => sum + (nft.rewards_per_hour.pxj || 0) * 24, 0),\n          contract: this.PXJ_CONTRACT,\n          precision: 4\n        },\n        {\n          token: 'WUF',\n          amount: stakedNfts.reduce((sum, nft) => sum + (nft.rewards_per_hour.wuf || 0) * 24, 0),\n          contract: this.WUF_CONTRACT,\n          precision: 4\n        }\n      ]\n      \n      return {\n         staked_nfts: stakedNfts,\n         pending_rewards: rewards,\n         total_staking_power: totalStakingPower,\n         estimated_daily_rewards: estimatedDailyRewards\n       }\n      \n    } catch (error) {\n      logger.error('getStakingInfo failed', 'StakingService', error as Error, {\n        account,\n        farm_name: farmName\n      })\n      \n      return {\n        staked_nfts: [],\n        pending_rewards: [],\n        total_staking_power: 0,\n        estimated_daily_rewards: []\n      }\n    }\n  }\n\n  /**\n   * Stake tokens to tf.waxdao farm\n   */\n  async stakeTokens(\n    session: Session,\n    amount: string,\n    farmName: string = this.PXJ_FARM_NAME\n  ): Promise<TransactionResult> {\n    try {\n      const actions = [{\n        account: this.PXJ_CONTRACT,\n        name: 'transfer',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          from: WharfKitService.safeGetActor(session),\n          to: this.TOKEN_FARMS_CONTRACT,\n          quantity: amount,\n          memo: `stake:${farmName}`\n        }\n      }]\n\n      const result = await this.executeTransactionWithRetry(session, actions)\n      \n      if (result.success) {\n        logger.info('Token staked successfully', 'StakingService', {\n          type: 'token_stake',\n          user: WharfKitService.safeGetActor(session),\n          amount,\n          farm_name: farmName\n        })\n      }\n      \n      return result\n    } catch (error) {\n      logger.error('stakeTokens failed', 'StakingService', error as Error, {\n        user: WharfKitService.safeGetActor(session),\n        amount,\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }\n    }\n  }\n\n  /**\n   * Unstake tokens from tf.waxdao farm\n   */\n  async unstakeTokens(\n    session: Session,\n    amount: string,\n    farmName: string = this.PXJ_FARM_NAME\n  ): Promise<TransactionResult> {\n    try {\n      const actions = [{\n        account: this.TOKEN_FARMS_CONTRACT,\n        name: 'unstake',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          user: WharfKitService.safeGetActor(session),\n          farm_name: farmName,\n          quantity: amount\n        }\n      }]\n\n      const result = await this.executeTransactionWithRetry(session, actions)\n      \n      if (result.success) {\n        logger.info('Token unstaked successfully', 'StakingService', {\n          type: 'token_unstake',\n          user: WharfKitService.safeGetActor(session),\n          amount,\n          farm_name: farmName\n        })\n      }\n      \n      return result\n    } catch (error) {\n      logger.error('unstakeTokens failed', 'StakingService', error as Error, {\n        user: WharfKitService.safeGetActor(session),\n        amount,\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }\n    }\n  }\n\n  /**\n   * Claim rewards from tf.waxdao farm\n   */\n  async claimTokenFarmRewards(\n    session: Session,\n    farmName: string = this.PXJ_FARM_NAME\n  ): Promise<TransactionResult> {\n    try {\n      const actions = [{\n        account: this.TOKEN_FARMS_CONTRACT,\n        name: 'getreward',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          user: WharfKitService.safeGetActor(session),\n          farm_name: farmName\n        }\n      }]\n\n      const result = await this.executeTransactionWithRetry(session, actions)\n      \n      if (result.success) {\n        logger.info('Token farm rewards claimed successfully', 'StakingService', {\n          type: 'token_claim_rewards',\n          user: WharfKitService.safeGetActor(session),\n          farm_name: farmName\n        })\n      }\n      \n      return result\n    } catch (error) {\n      logger.error('claimTokenFarmRewards failed', 'StakingService', error as Error, {\n        user: WharfKitService.safeGetActor(session),\n        farm_name: farmName\n      })\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }\n    }\n  }\n\n  /**\n   * Get token farm information from tf.waxdao\n   */\n  async getTokenFarmInfo(farmName: string = this.PXJ_FARM_NAME): Promise<TokenFarmInfo | null> {\n    try {\n      const response = await fetch(\n        `${API_ENDPOINTS.WAX_CHAIN.GREYMASS}/v1/chain/get_table_rows`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            json: true,\n            code: this.TOKEN_FARMS_CONTRACT,\n            scope: this.TOKEN_FARMS_CONTRACT,\n            table: 'farms',\n            lower_bound: farmName,\n            upper_bound: farmName,\n            limit: 1\n          })\n        }\n      )\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch farm info: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      const farmData = data.rows.find((row: FarmDataRow) => row.farm_name === farmName)\n      \n      if (!farmData) {\n        return null\n      }\n      \n      return {\n        farm_name: farmData.farm_name,\n        creator: farmData.creator,\n        time_created: farmData.time_created,\n        staking_token: farmData.staking_token,\n        incentive_count: farmData.incentive_count,\n        total_staked: farmData.total_staked,\n        vesting_time: farmData.vesting_time,\n        last_update_time: farmData.last_update_time\n      }\n    } catch (error) {\n      logger.error('getTokenFarmInfo failed', 'StakingService', error as Error, {\n        farm_name: farmName\n      })\n      \n      return null\n    }\n  }\n\n  /**\n   * Get user's token staking information from tf.waxdao\n   */\n  async getTokenStakingInfo(account: string, farmName: string = this.PXJ_FARM_NAME): Promise<TokenStakeInfo | null> {\n    try {\n      const response = await fetch(\n        `${API_ENDPOINTS.WAX_CHAIN.GREYMASS}/v1/chain/get_table_rows`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            json: true,\n            code: this.TOKEN_FARMS_CONTRACT,\n            scope: farmName,\n            table: 'stakers',\n            lower_bound: account,\n            upper_bound: account,\n            limit: 1\n          })\n        }\n      )\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch token staking info: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      const stakerData = data.rows.find((row: StakerDataRow) => row.user === account)\n      \n      if (!stakerData) {\n        return null\n      }\n      \n      // Parse pending rewards\n      const pendingRewards: StakingReward[] = (stakerData.pending_rewards || []).map((reward: PendingReward) => ({\n        token: reward.quantity.split(' ')[1],\n        amount: parseFloat(reward.quantity.split(' ')[0]),\n        contract: reward.contract,\n        precision: 4\n      }))\n      \n      return {\n        farm_name: farmName,\n        user: stakerData.user,\n        staked_amount: stakerData.staked_amount,\n        stake_time: stakerData.stake_time,\n        pending_rewards: pendingRewards,\n        vesting_time: stakerData.vesting_time,\n        last_claim_time: stakerData.last_claim_time\n      }\n    } catch (error) {\n      logger.error('getTokenStakingInfo failed', 'StakingService', error as Error, {\n        account,\n        farm_name: farmName\n      })\n      \n      return null\n    }\n  }\n\n  /**\n   * Calculate optimal staking strategy based on user's NFTs\n   */\n  async calculateOptimalStakingStrategy(\n    account: string,\n    farmName: string = 'pixeljourney'\n  ): Promise<{\n    recommended_stakes: { asset_id: string; expected_daily_return: number; priority: number }[]\n    total_expected_daily_return: number\n    optimization_tips: string[]\n    available_nfts: NFTStakeInfo[]\n  }> {\n    try {\n      // Get current staking info to identify already staked NFTs\n      const stakingInfo = await this.getStakingInfo(account, farmName)\n      const stakedAssetIds = new Set(stakingInfo.staked_nfts.map(nft => nft.asset_id))\n      \n      // Fetch available NFTs from AtomicAssets API\n      const availableResponse = await fetch(\n        `${apiService.atomicAssetsAPI}/atomicassets/v1/assets?owner=${account}&collection_name=pixeljourney&page=1&limit=1000&order=desc&sort=asset_id`\n      )\n      \n      if (!availableResponse.ok) {\n        throw new Error('Failed to fetch available NFTs')\n      }\n      \n      const availableData = await availableResponse.json()\n      \n      interface AssetData {\n        asset_id: string\n        template: {\n          template_id: string\n        }\n      }\n      \n      // Filter out already staked assets and transform data\n      const availableNfts: NFTStakeInfo[] = availableData.data?.filter((asset: AssetData) => \n        !stakedAssetIds.has(asset.asset_id)\n      ).map((asset: AssetData) => ({\n        asset_id: asset.asset_id,\n        template_id: asset.template.template_id,\n        farm_name: farmName,\n        stake_time: 0,\n        rewards_per_hour: this.calculateRewardsPerHour(asset.template.template_id),\n        multiplier: 1\n      })) || []\n      \n      // Fetch current template rewards and multipliers\n      const templateRewards = await this.getTemplateRewards()\n      \n      const recommendedStakes = availableNfts.map(nft => {\n        const rewards = templateRewards[nft.template_id] || { pxj: 0, wuf: 0 }\n        const rarityMultiplier = this.getRarityMultiplier(this.getTemplateRarity(nft.template_id))\n        const dailyReturn = (rewards.pxj + rewards.wuf) * 24 * rarityMultiplier\n        \n        return {\n          asset_id: nft.asset_id,\n          expected_daily_return: dailyReturn,\n          priority: this.calculateStakingPriority(this.getTemplateRarity(nft.template_id), dailyReturn)\n        }\n      }).sort((a, b) => b.priority - a.priority)\n      \n      const totalExpectedReturn = recommendedStakes.reduce(\n        (sum, stake) => sum + stake.expected_daily_return, 0\n      )\n      \n      const optimizationTips = this.generateOptimizationTips(\n        recommendedStakes,\n        availableNfts\n      )\n      \n      return {\n        recommended_stakes: recommendedStakes,\n        total_expected_daily_return: totalExpectedReturn,\n        optimization_tips: optimizationTips,\n        available_nfts: availableNfts\n      }\n      \n    } catch (error) {\n      logger.error('calculateOptimalStakingStrategy failed', 'StakingService', error as Error, {\n        account\n      })\n      \n      return {\n        recommended_stakes: [],\n        total_expected_daily_return: 0,\n        optimization_tips: ['Unable to calculate optimal strategy. Please try again later.'],\n        available_nfts: []\n      }\n    }\n  }\n\n  /**\n   * Process a batch of transactions\n   */\n  private async processBatch(\n    session: Session,\n    assetIds: string[],\n    action: 'stake' | 'unstake',\n    farmName?: string\n  ): Promise<BatchTransactionResult> {\n    const actions = assetIds.map(assetId => {\n      if (action === 'stake') {\n        return {\n          account: this.FARMS_CONTRACT,\n          name: 'stake',\n          authorization: [{\n            actor: WharfKitService.safeGetActor(session),\n            permission: WharfKitService.safeGetPermission(session)\n          }],\n          data: {\n            owner: WharfKitService.safeGetActor(session),\n            asset_id: assetId,\n            farm_name: farmName || 'pixeljourney'\n          }\n        }\n      } else {\n        return {\n          account: this.FARMS_CONTRACT,\n          name: 'unstake',\n          authorization: [{\n            actor: WharfKitService.safeGetActor(session),\n            permission: WharfKitService.safeGetPermission(session)\n          }],\n          data: {\n            owner: WharfKitService.safeGetActor(session),\n            asset_id: assetId\n          }\n        }\n      }\n    })\n\n    try {\n      const result = await this.executeTransactionWithRetry(session, actions)\n      \n      if (result.success) {\n        return {\n          success: true,\n          successful_transactions: assetIds,\n          failed_transactions: [],\n          total_gas_used: result.gas_used || 0\n        }\n      } else {\n        return {\n          success: false,\n          successful_transactions: [],\n          failed_transactions: assetIds.map(id => ({\n            asset_id: id,\n            error: result.error || 'Transaction failed'\n          })),\n          total_gas_used: 0\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        successful_transactions: [],\n        failed_transactions: assetIds.map(id => ({\n          asset_id: id,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        })),\n        total_gas_used: 0\n      }\n    }\n  }\n\n  /**\n   * Execute transaction with retry logic\n   */\n  private async executeTransactionWithRetry(\n    session: Session,\n    actions: Array<{\n      account: string\n      name: string\n      authorization: Array<{ actor: string; permission: string }>\n      data: Record<string, unknown>\n    }>,\n    attempt: number = 1\n  ): Promise<TransactionResult> {\n    try {\n      const result = await session.transact({ actions })\n      \n      const transactionResult = result as unknown as WharfkitTransactionResult\n      return {\n        success: true,\n        transaction_id: transactionResult?.transaction_id || transactionResult?.id || '',\n        gas_used: transactionResult?.cpu_usage_us || transactionResult?.max_net_usage_words || 0\n      }\n    } catch (error) {\n      if (attempt < this.RETRY_ATTEMPTS) {\n        await this.delay(this.RETRY_DELAY * attempt)\n        return this.executeTransactionWithRetry(session, actions, attempt + 1)\n      }\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Transaction failed'\n      }\n    }\n  }\n\n  /**\n   * Create batches from array of items\n   */\n  private createBatches<T>(items: T[], batchSize: number): T[][] {\n    const batches: T[][] = []\n    for (let i = 0; i < items.length; i += batchSize) {\n      batches.push(items.slice(i, i + batchSize))\n    }\n    return batches\n  }\n\n  /**\n   * Delay execution for specified milliseconds\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  /**\n   * Get template rewards from farms.waxdao contract table\n   */\n  private async getTemplateRewards(): Promise<{ [templateId: string]: { pxj: number; wuf: number } }> {\n    try {\n      const response = await fetch(\n        `${API_ENDPOINTS.WAX_CHAIN.GREYMASS}/v1/chain/get_table_rows`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n             json: true,\n             code: this.FARMS_CONTRACT,\n             scope: this.FARMS_CONTRACT,\n             table: 'templrewards', // Template rewards table from ABI\n             limit: 1000\n           })\n        }\n      )\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch template rewards')\n      }\n      \n      const data = await response.json()\n      const templateRewards: { [templateId: string]: { pxj: number; wuf: number } } = {}\n      \n      interface TemplateReward {\n        template_id: string\n        hourly_rewards?: Array<{\n          quantity: string\n          contract: string\n        }>\n      }\n      \n      interface HourlyReward {\n        quantity: string\n        contract: string\n      }\n      \n      data.rows.forEach((template: TemplateReward) => {\n         const rewards = { pxj: 0, wuf: 0 }\n         \n         // Parse hourly_rewards array from TEMPLATE_REWARD structure\n         if (template.hourly_rewards && Array.isArray(template.hourly_rewards)) {\n           template.hourly_rewards.forEach((reward: HourlyReward) => {\n             const amount = parseFloat(reward.quantity.split(' ')[0])\n             const symbol = reward.quantity.split(' ')[1]\n             \n             if (symbol === 'PXJ') rewards.pxj = amount\n             if (symbol === 'WUF') rewards.wuf = amount\n           })\n         }\n         \n         templateRewards[template.template_id] = rewards\n       })\n      \n      return templateRewards\n    } catch {\n      // Fallback to default rewards\n      return {\n        '1001': { pxj: 50, wuf: 25 }, // Black Ingredient\n        '1002': { pxj: 10, wuf: 5 },  // Tertiary Ingredient\n        '1003': { pxj: 2, wuf: 1 },   // Rare Ingredient\n        '1004': { pxj: 0.5, wuf: 0.25 }, // Uncommon Ingredient\n        '1005': { pxj: 0.1, wuf: 0.05 }  // Common Ingredient\n      }\n    }\n  }\n\n  /**\n   * Get rarity multiplier for staking rewards\n   */\n  private getRarityMultiplier(rarity: string): number {\n    switch (rarity.toLowerCase()) {\n      case 'legendary': return 5.0\n      case 'epic': return 3.0\n      case 'rare': return 2.0\n      case 'uncommon': return 1.5\n      default: return 1.0\n    }\n  }\n\n  /**\n   * Calculate staking priority based on rarity and expected return\n   */\n  private calculateStakingPriority(rarity: string, dailyReturn: number): number {\n    const rarityScore = this.getRarityMultiplier(rarity) * 100\n    const returnScore = dailyReturn * 10\n    return rarityScore + returnScore\n  }\n\n  /**\n   * Generate optimization tips for staking strategy\n   */\n  private generateOptimizationTips(\n    recommendedStakes: { asset_id: string; expected_daily_return: number; priority: number }[],\n    availableNfts: NFTStakeInfo[]\n  ): string[] {\n    const tips: string[] = []\n    \n    const rarityCount = availableNfts.reduce((acc, nft) => {\n      const rarity = this.getTemplateRarity(nft.template_id)\n      acc[rarity] = (acc[rarity] || 0) + 1\n      return acc\n    }, {} as { [rarity: string]: number })\n    \n    if (rarityCount['Legendary'] > 0) {\n      tips.push('Prioritize staking Legendary ingredients for maximum rewards')\n    }\n    \n    if (rarityCount['Epic'] > 5) {\n      tips.push('Consider staking Epic ingredients in batches to optimize gas costs')\n    }\n    \n    if (recommendedStakes.length > 20) {\n      tips.push('Use batch staking to reduce transaction costs for large collections')\n    }\n    \n    const totalDailyReturn = recommendedStakes.reduce((sum, stake) => sum + stake.expected_daily_return, 0)\n    if (totalDailyReturn > 100) {\n      tips.push('Your collection has high earning potential - consider staking all eligible NFTs')\n    }\n    \n    if (tips.length === 0) {\n      tips.push('Stake your highest rarity NFTs first for optimal returns')\n    }\n    \n    return tips\n  }\n\n  /**\n   * Calculate rewards per hour for a template ID\n   */\n  private calculateRewardsPerHour(templateId: string): { [token: string]: number } {\n    // This would typically come from contract tables or cached data\n    const defaultRewards: { [templateId: string]: { pxj: number; wuf: number } } = {\n      '1001': { pxj: 50, wuf: 25 },\n      '1002': { pxj: 10, wuf: 5 },\n      '1003': { pxj: 2, wuf: 1 },\n      '1004': { pxj: 0.5, wuf: 0.25 },\n      '1005': { pxj: 0.1, wuf: 0.05 }\n    }\n    \n    return defaultRewards[templateId] || { pxj: 0, wuf: 0 }\n  }\n\n  /**\n   * Get rarity for a template ID\n   */\n  private getTemplateRarity(templateId: string): string {\n    // Map template IDs to their rarities\n    const templateRarities: { [templateId: string]: string } = {\n      '1001': 'Legendary',\n      '1002': 'Epic', \n      '1003': 'Rare',\n      '1004': 'Uncommon',\n      '1005': 'Common'\n    }\n    \n    return templateRarities[templateId] || 'Common'\n  }\n}\n\nexport const stakingService = new StakingService()\nexport default stakingService","import React, { useState, useRef, useEffect } from 'react'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\ninterface ProgressiveImageProps {\n  imageUrl?: string\n  videoUrl?: string | null\n  alt: string\n  className?: string\n  loading?: 'lazy' | 'eager'\n  enableAnimations?: boolean\n  placeholder?: string\n  onLoad?: () => void\n  onError?: () => void\n}\n\nconst ProgressiveImage: React.FC<ProgressiveImageProps> = React.memo(({\n  imageUrl,\n  videoUrl,\n  alt,\n  className = '',\n  loading = 'lazy',\n  enableAnimations = true,\n  placeholder,\n  onLoad,\n  onError\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const [isInView, setIsInView] = useState(loading === 'eager')\n  const imgRef = useRef<HTMLImageElement>(null)\n  const videoRef = useRef<HTMLVideoElement>(null)\n\n  // Helper function to process URLs (handle IPFS, etc.)\n  const processUrl = (url: string | undefined | null): string | null => {\n    if (!url) return null\n    if (typeof url !== 'string') return null\n    if (url.startsWith('http')) return url\n    if (url.startsWith('Qm')) return `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${url}`\n    return url\n  }\n\n  const processedVideoUrl = processUrl(videoUrl)\n  const processedImageUrl = processUrl(imageUrl)\n\n  // Create a loading placeholder\n  const getLoadingPlaceholder = () => {\n    if (placeholder) return placeholder\n    \n    const svg = `<svg width=\"200\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"200\" height=\"200\" fill=\"#f8fafc\"/>\n      <rect x=\"50\" y=\"80\" width=\"100\" height=\"8\" rx=\"4\" fill=\"#e2e8f0\">\n        <animate attributeName=\"opacity\" values=\"0.5;1;0.5\" dur=\"1.5s\" repeatCount=\"indefinite\"/>\n      </rect>\n      <rect x=\"60\" y=\"100\" width=\"80\" height=\"6\" rx=\"3\" fill=\"#e2e8f0\">\n        <animate attributeName=\"opacity\" values=\"0.5;1;0.5\" dur=\"1.5s\" begin=\"0.3s\" repeatCount=\"indefinite\"/>\n      </rect>\n      <rect x=\"70\" y=\"120\" width=\"60\" height=\"6\" rx=\"3\" fill=\"#e2e8f0\">\n        <animate attributeName=\"opacity\" values=\"0.5;1;0.5\" dur=\"1.5s\" begin=\"0.6s\" repeatCount=\"indefinite\"/>\n      </rect>\n    </svg>`\n    return `data:image/svg+xml;base64,${btoa(svg)}`\n  }\n\n  // Create an error placeholder\n  const getErrorPlaceholder = () => {\n    const svg = `<svg width=\"200\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"200\" height=\"200\" fill=\"#fef2f2\"/>\n      <circle cx=\"100\" cy=\"80\" r=\"20\" fill=\"#fca5a5\"/>\n      <text x=\"100\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"16\" fill=\"#dc2626\">!</text>\n      <text x=\"100\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"12\" fill=\"#991b1b\">Failed to load</text>\n    </svg>`\n    return `data:image/svg+xml;base64,${btoa(svg)}`\n  }\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (loading === 'eager' || isInView) return\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true)\n          observer.disconnect()\n        }\n      },\n      {\n        rootMargin: '50px' // Start loading 50px before the image comes into view\n      }\n    )\n\n    const currentRef = imgRef.current || videoRef.current\n    if (currentRef) {\n      observer.observe(currentRef)\n    }\n\n    return () => observer.disconnect()\n  }, [loading, isInView])\n\n  const handleLoad = () => {\n    setIsLoaded(true)\n    setIsError(false)\n    onLoad?.()\n  }\n\n  const handleError = () => {\n    setIsError(true)\n    setIsLoaded(false)\n    onError?.()\n  }\n\n  // Show loading placeholder if not in view or not loaded\n  if (!isInView || (!isLoaded && !isError)) {\n    return (\n      <div className={`progressive-image-container ${className}`}>\n        <img\n          ref={imgRef}\n          src={getLoadingPlaceholder()}\n          alt={`Loading ${alt}`}\n          className=\"progressive-image-placeholder\"\n          style={{\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            filter: 'blur(2px)',\n            transition: 'filter 0.3s ease'\n          }}\n        />\n        {isInView && processedImageUrl && (\n          <img\n            src={processedImageUrl}\n            alt={alt}\n            style={{ display: 'none' }}\n            onLoad={handleLoad}\n            onError={handleError}\n          />\n        )}\n        {isInView && processedVideoUrl && enableAnimations && (\n          <video\n            ref={videoRef}\n            src={processedVideoUrl}\n            style={{ display: 'none' }}\n            onLoadedData={handleLoad}\n            onError={handleError}\n            muted\n            loop\n          />\n        )}\n      </div>\n    )\n  }\n\n  // Show error placeholder if loading failed\n  if (isError) {\n    return (\n      <img\n        src={getErrorPlaceholder()}\n        alt={`Error loading ${alt}`}\n        className={className}\n        style={{\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        }}\n      />\n    )\n  }\n\n  // Show video if available and animations enabled\n  if (processedVideoUrl && enableAnimations && isLoaded) {\n    return (\n      <video\n        ref={videoRef}\n        className={className}\n        muted\n        loop\n        autoPlay\n        poster={processedImageUrl || undefined}\n        style={{\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n          opacity: isLoaded ? 1 : 0,\n          transition: 'opacity 0.3s ease'\n        }}\n      >\n        <source src={processedVideoUrl} type=\"video/mp4\" />\n        <source src={processedVideoUrl} type=\"video/webm\" />\n      </video>\n    )\n  }\n\n  // Show image\n  return (\n    <img\n      ref={imgRef}\n      src={processedImageUrl || getErrorPlaceholder()}\n      alt={alt}\n      className={className}\n      style={{\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        opacity: isLoaded ? 1 : 0,\n        transition: 'opacity 0.3s ease'\n      }}\n    />\n  )\n})\n\nProgressiveImage.displayName = 'ProgressiveImage'\n\nexport default ProgressiveImage","import React, { useState, useEffect, useCallback, useMemo, memo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useWallet } from '../hooks/useWallet'\nimport { apiService, type NFTAsset } from '../services/api'\nimport NFTDetailsModal from './NFTDetailsModal'\nimport ListingModal from './ListingModal'\nimport TransferModal from './TransferModal'\nimport BurnModal from './BurnModal'\nimport BulkListingModal from './BulkListingModal'\nimport BulkTransferModal from './BulkTransferModal'\nimport DistributeModal from './DistributeModal'\nimport BulkBurnModal from './BulkBurnModal'\nimport CraftingModal from './CraftingModal'\nimport ViewOffersModal from './ViewOffersModal'\nimport UnpackModal from './UnpackModal'\nimport BulkAuctionModal from './BulkAuctionModal'\nimport TokenizeFeeModal from './TokenizeFeeModal'\nimport AdvancedSearch from './AdvancedSearch'\nimport { NeftyBlendService } from '../services/neftyBlendService'\nimport { MarketplaceConfigService } from '../config/marketplaceConfig'\nimport { stakingService } from '../services/stakingService'\n\nimport ProgressiveImage from './ProgressiveImage'\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\n\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport type { DisplaySettings } from '../contexts/DisplaySettingsContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\n\nimport '../css/inventory-page.css'\nimport '../css/bulk-modals.css'\nimport type { InventoryNFT } from '../types/inventory'\nimport type { SearchSuggestion } from './AdvancedSearch'\n\n\n// Memoized NFT Card Component for better performance\ninterface NFTCardProps {\n  nft: InventoryNFT\n  selectedNFTs: Set<string>\n  isSelected: boolean\n  settings: DisplaySettings\n  dropdownOpen: string | null\n  onNFTClick: (nft: InventoryNFT) => void\n  onCollectionClick: (collectionName: string) => void\n  onSchemaClick: (schemaName: string) => void\n  onToggleSelection: (assetId: string) => void\n  onDropdownToggle: (assetId: string) => void\n  onListingOpen: (nft: InventoryNFT) => void\n  onTransferOpen: (nft: InventoryNFT) => void\n  onBurnOpen: (nft: InventoryNFT) => void\n  onAuctionOpen: (nft: InventoryNFT) => void\n  onRecyclePixal: (nft: InventoryNFT) => void\n  onCraftingOpen: (nft: InventoryNFT) => void\n  onViewOffers: (nft: InventoryNFT) => void\n  onUnpackPixelPack: (nft: InventoryNFT) => void\n  onStakeOpen: (nft: InventoryNFT) => void\n  onTokenizePixal: (nft: InventoryNFT) => void\n  onImageZoom: (imageUrl: string, videoUrl: string, name: string) => void\n}\n\nconst NFTCard = memo<NFTCardProps>(({ \n  nft, \n  selectedNFTs, \n  isSelected, \n  settings, \n  dropdownOpen,\n  onNFTClick,\n  onCollectionClick,\n  onSchemaClick,\n  onToggleSelection,\n  onDropdownToggle,\n  onListingOpen,\n  onTransferOpen,\n  onBurnOpen,\n  onAuctionOpen,\n  onRecyclePixal,\n  onCraftingOpen,\n  onViewOffers,\n  onUnpackPixelPack,\n  onStakeOpen,\n  onTokenizePixal,\n  onImageZoom\n}) => {\n  const isDropdownOpen = dropdownOpen === nft.asset_id\n  const isPixal = nft.collection.collection_name === 'pixeljourney' && nft.schema.schema_name === 'pixals'\n  const isIngredient = nft.collection.collection_name === 'pixeljourney' && nft.schema.schema_name === 'ingredients'\n  \n  // Check if this is a WaxRock Pixal PFP that should be protected from burning/recycling\n  const isWaxRockPixal = MarketplaceConfigService.isValidWaxRock(nft.data.WaxRock as string)\n  \n  return (\n    <div \n      className={`inventory-page-card ${selectedNFTs.size > 0 ? 'selectable' : ''} ${isSelected ? 'selected' : ''}`}\n    >\n      <div className=\"selection-checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={isSelected}\n          onChange={() => onToggleSelection(nft.asset_id)}\n          onClick={(e) => e.stopPropagation()}\n        />\n      </div>\n      <div \n        className=\"inventory-page-media\"\n        onClick={() => {\n          if (selectedNFTs.size > 0) {\n            onToggleSelection(nft.asset_id);\n          } else {\n            onNFTClick(nft);\n          }\n        }}\n      >\n        <ProgressiveImage\n          imageUrl={getAssetImageUrl(nft)}\n          videoUrl={getAssetVideoUrl(nft)}\n          alt={nft.name}\n          className=\"inventory-media\"\n          loading=\"lazy\"\n          enableAnimations={settings.enableAnimatedNFTs}\n        />\n        <div \n          className=\"zoom-overlay\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onImageZoom(getAssetImageUrl(nft) || '', getAssetVideoUrl(nft) || '', nft.name || `Asset #${nft.asset_id}`);\n          }}\n          title=\"Click to zoom\"\n        >\n          <svg className=\"zoom-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n            <path d=\"m21 21-4.35-4.35\"></path>\n            <path d=\"M11 8v6M8 11h6\"></path>\n          </svg>\n        </div>\n        {nft.mint_number && (\n          <div className=\"mint-badge\">\n            #{nft.mint_number}\n         </div>\n        )}\n      </div>\n      \n      <div className=\"inventory-page-info\">\n        <h3 \n          className=\"inventory-page-name\"\n          onClick={() => {\n            if (selectedNFTs.size > 0) {\n              onToggleSelection(nft.asset_id);\n            } else {\n              onNFTClick(nft);\n            }\n          }}\n        >\n          {nft.name}\n        </h3>\n        <div className=\"inventory-page-details\">\n          <span \n            className=\"inventory-page-collection\"\n            onClick={() => onCollectionClick(nft.collection.collection_name)}\n          >\n            {typeof nft.collection === 'string' ? nft.collection : nft.collection?.name || nft.collection?.collection_name || 'Unknown'}\n          </span>\n          <span \n            className=\"inventory-page-schema\"\n            onClick={() => onSchemaClick(nft.schema.schema_name)}\n          >\n            {nft.schema.schema_name}\n          </span>\n        </div>\n        \n        <div className=\"inventory-page-actions\">\n          {/* Basic Actions - Always Visible */}\n          <div className=\"basic-actions\">\n            <button \n              className=\"inv-action-btn list-btn\"\n              onClick={(e) => {\n                e.stopPropagation()\n                onListingOpen(nft)\n              }}\n              title=\"List for Sale\"\n              aria-label={`List ${nft.name} for sale`}\n            >\n              💰\n            </button>\n            <button \n              className=\"inv-action-btn transfer-btn\"\n              onClick={(e) => {\n                e.stopPropagation()\n                onTransferOpen(nft)\n              }}\n              title=\"Transfer\"\n              aria-label={`Transfer ${nft.name} to another account`}\n            >\n              📤\n            </button>\n            <button \n              className=\"inv-action-btn offers-btn\"\n              onClick={(e) => {\n                e.stopPropagation()\n                onViewOffers(nft)\n              }}\n              aria-label={`View offers for ${nft.name}`}\n              title=\"View Offers\"\n            >\n              👁️\n            </button>\n          </div>\n          \n          {/* More Actions Dropdown - Three Dot Menu */}\n          <div className=\"more-actions-dropdown\" data-dropdown-id={nft.asset_id}>\n            <button \n              className=\"more-actions-btn\"\n              onClick={(e) => {\n                e.stopPropagation()\n                onDropdownToggle(nft.asset_id)\n              }}\n              title=\"More Actions\"\n              aria-label={`More actions for ${nft.name}`}\n              aria-expanded={isDropdownOpen}\n            >\n              ⋮\n            </button>\n            {isDropdownOpen && (\n              <div className=\"inv-dropdown-menu\">\n                <button \n                  className=\"inv-dropdown-item auction-item\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onAuctionOpen(nft)\n                  }}\n                  aria-label={`Create auction for ${nft.name}`}\n                >\n                  🏆 Create Auction\n                </button>\n                {!isWaxRockPixal && (\n                  <button \n                    className=\"inv-dropdown-item burn-item\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onBurnOpen(nft)\n                    }}\n                    aria-label={`Burn ${nft.name}`}\n                  >\n                    🔥 Burn\n                  </button>\n                )}\n                {isPixal && !isWaxRockPixal && (\n                  <button\n                    className=\"inv-dropdown-item recycle-item\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onRecyclePixal(nft)\n                    }}\n                    aria-label={`Recycle ${nft.name}`}\n                  >\n                    ♻️ Recycle\n                  </button>\n                )}\n                {isPixal && (\n                  <button\n                    className=\"inv-dropdown-item tokenize-item\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onTokenizePixal(nft)\n                    }}\n                    aria-label={`Tokenize ${nft.name} into WPIXAL`}\n                  >\n                    🪙 Tokenize into WPIXAL\n                  </button>\n                )}\n                {(isPixal || isIngredient) && (\n                  <button\n                    className=\"inv-dropdown-item craft-item\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onCraftingOpen(nft)\n                    }}\n                    aria-label={`Use ${nft.name} for crafting`}\n                  >\n                    🔨 {isIngredient ? 'Craft with Ingredient' : 'Craft'}\n                  </button>\n                )}\n                {nft.collection.collection_name === 'pixeljourney' && (\n                  <button\n                    className=\"inv-dropdown-item stake-item\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onStakeOpen(nft)\n                    }}\n                    aria-label={`Stake ${nft.name}`}\n                  >\n                    🥩 Stake NFT\n                  </button>\n                )}\n                {NeftyBlendService.isPixelPack(nft) && (\n                  <button\n                    className=\"inv-dropdown-item unpack-item\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onUnpackPixelPack(nft)\n                    }}\n                  >\n                    📦 Unpack\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst Inventory: React.FC = memo(() => {\n  const navigate = useNavigate()\n  const { settings } = useDisplaySettings()\n  const { showSuccess, showError, confirm } = useNotifications()\n  const [inventory, setInventory] = useState<InventoryNFT[]>([])\n  const [loading, setLoading] = useState(false)\n\n\n\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [listingModalOpen, setListingModalOpen] = useState(false)\n  const [transferModalOpen, setTransferModalOpen] = useState(false)\n  const [burnModalOpen, setBurnModalOpen] = useState(false)\n  const [showBulkListingModal, setShowBulkListingModal] = useState(false)\n  const [showBulkTransferModal, setShowBulkTransferModal] = useState(false)\n  const [showBulkDistributeModal, setShowBulkDistributeModal] = useState(false)\n  const [showBulkBurnModal, setShowBulkBurnModal] = useState(false)\n  const [showUnpackModal, setShowUnpackModal] = useState(false)\n  const [showBulkAuctionModal, setShowBulkAuctionModal] = useState(false)\n  const [showAuctionModal, setShowAuctionModal] = useState(false)\n  const [actionNFT, setActionNFT] = useState<InventoryNFT | null>(null)\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n  const [isMultiSelectMode, setIsMultiSelectMode] = useState(false)\n  const [dropdownOpen, setDropdownOpen] = useState<string | null>(null)\n  const [craftingModalOpen, setCraftingModalOpen] = useState(false)\n  const [craftingIngredient, setCraftingIngredient] = useState<InventoryNFT | null>(null)\n  const [viewOffersModalOpen, setViewOffersModalOpen] = useState(false)\n  const [offersNFT, setOffersNFT] = useState<InventoryNFT | null>(null)\n  const [tokenizeModalOpen, setTokenizeModalOpen] = useState(false)\n  const [tokenizeNFT, setTokenizeNFT] = useState<InventoryNFT | null>(null)\n  \n  // Media zoom functionality (image or video)\n  const [zoomedImage, setZoomedImage] = useState<{ url: string; name: string; type: 'image' | 'video' } | null>(null)\n  const [showImageZoom, setShowImageZoom] = useState(false)\n\n  // Handle media zoom (image or video)\n  const handleMediaZoom = useCallback((imageUrl: string, videoUrl: string | null, name: string) => {\n    // Prefer video over image if available\n    const mediaUrl = videoUrl || imageUrl\n    const mediaType: 'image' | 'video' = videoUrl ? 'video' : 'image'\n    \n    // Process IPFS URLs\n    let processedUrl = mediaUrl\n    if (mediaUrl.startsWith('Qm') || mediaUrl.startsWith('baf')) {\n      processedUrl = `https://ipfs.io/ipfs/${mediaUrl}`\n    } else if (mediaUrl.startsWith('/ipfs/')) {\n      processedUrl = `https://ipfs.io${mediaUrl}`\n    } else if (mediaUrl.startsWith('ipfs://')) {\n      processedUrl = mediaUrl.replace('ipfs://', 'https://ipfs.io/ipfs/')\n    }\n    \n    setZoomedImage({ url: processedUrl, name, type: mediaType })\n    setShowImageZoom(true)\n  }, [])\n\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('')\n  const [searchSuggestions, setSearchSuggestions] = useState<SearchSuggestion[]>([])\n  const [filter, setFilter] = useState<'all' | 'pixals' | 'waxrock' | 'ingredients' | 'packs'>('all')\n  const [selectedCollection, setSelectedCollection] = useState<string>('all')\n  const [selectedSchema, setSelectedSchema] = useState<string>('all')\n  const [selectedTemplate, setSelectedTemplate] = useState<string>('')\n  const [sortBy, setSortBy] = useState<'transferred' | 'created' | 'updated' | 'minted' | 'asset_id' | 'name_asc' | 'name_desc' | 'collection_asc' | 'collection_desc' | 'mint_asc' | 'mint_desc'>('transferred')\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc')\n  const [collectionSearchTerm] = useState('')\n  const [availableCollections, setAvailableCollections] = useState<string[]>([])\n  const [availableSchemas, setAvailableSchemas] = useState<string[]>([])\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false)\n  const [dateRange, setDateRange] = useState({ start: '', end: '' })  \n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [hasMore, setHasMore] = useState(false)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [loadingAll, setLoadingAll] = useState(false)\n  // Pagination settings - maintain single layout design\n  const ITEMS_PER_PAGE = 1000\n  const [totalPages, setTotalPages] = useState(1)\n\n  const { isConnected, account, login, session } = useWallet()\n\n  const loadInventory = useCallback(async (page: number = 1, append: boolean = false) => {\n    if (!account) return\n    \n    // Prevent concurrent calls\n    if (loading || loadingMore) {\n      log.debug('Skipping loadInventory - already loading', 'Inventory')\n      return\n    }\n    \n    if (page === 1) {\n      setLoading(true)\n      setCurrentPage(1)\n    } else {\n      setLoadingMore(true)\n    }\n    \n    try {\n      log.debug('Loading inventory', 'Inventory', { filter, page, ITEMS_PER_PAGE, sortBy, sortOrder })\n      \n      let response: { data: any[], hasMore: boolean, totalCount: number, collections?: string[], schemas?: string[] }\n      \n      // Build enhanced API options\n      const apiOptions: any = {\n        page,\n        limit: ITEMS_PER_PAGE,\n        order: sortOrder,\n        sort: sortBy.includes('_') ? 'asset_id' : sortBy, // Handle legacy sort options\n        search: debouncedSearchTerm || undefined,\n        template_id: selectedTemplate || undefined\n      }\n\n      // Add date range filters if specified\n      if (dateRange.start) {\n        apiOptions.after = new Date(dateRange.start).getTime() / 1000\n      }\n      if (dateRange.end) {\n        apiOptions.before = new Date(dateRange.end).getTime() / 1000\n      }\n      \n      // Apply filter-specific options\n      switch (filter) {\n        case 'pixals':\n          apiOptions.collection_name = 'pixeljourney'\n          apiOptions.schema_name = 'pixals'\n          break\n        case 'ingredients':\n          apiOptions.collection_name = 'pixeljourney'\n          apiOptions.schema_name = 'ingredients'\n          break\n        case 'waxrock':\n          apiOptions.collection_name = 'pixeljourney'\n          apiOptions.schema_name = 'pixals'\n          // WaxRock filtering will be handled in post-processing\n          break\n        case 'packs':\n          apiOptions.collection_name = 'pixeljourney'\n          apiOptions.schema_name = 'packs'\n          break\n        case 'all':\n        default:\n          // Apply collection and schema filters if selected\n          if (selectedCollection !== 'all') {\n            apiOptions.collection_name = selectedCollection\n          }\n          if (selectedSchema !== 'all') {\n            apiOptions.schema_name = selectedSchema\n          }\n          break\n      }\n      \n      // Use the enhanced API method\n      const apiResponse = await apiService.getUserInventoryEnhanced(account, apiOptions)\n      \n      response = {\n        data: apiResponse.assets || [],\n        hasMore: apiResponse.hasMore,\n        totalCount: apiResponse.total || 0,\n        collections: apiResponse.collections || [],\n        schemas: apiResponse.schemas || []\n      }\n      \n      // Update available collections and schemas for filters\n      if (response.collections && response.collections.length > 0) {\n        setAvailableCollections(prev => {\n          const combined = [...new Set([...prev, ...response.collections!])]\n          return combined.sort()\n        })\n      }\n      if (response.schemas && response.schemas.length > 0) {\n        setAvailableSchemas(prev => {\n          const combined = [...new Set([...prev, ...response.schemas!])]\n          return combined.sort()\n        })\n      }\n      \n      log.debug('Inventory Response', 'Inventory', { itemsReceived: response?.data?.length || 0, totalAvailable: response?.totalCount || 'unknown', hasMore: response?.hasMore })\n      \n      // Convert response to InventoryNFT format\n      let inventoryNFTs: InventoryNFT[] = response.data.map((asset: any) => ({\n        asset_id: asset.asset_id,\n        name: asset.name,\n        img: asset.image || asset.img, // Handle both formats\n        video: asset.video || (asset.traits?.video as string) || (asset.data?.video as string) || undefined,\n        collection: {\n          name: asset.collection || asset.collection_name,\n          collection_name: asset.collection || asset.collection_name\n        },\n        schema: {\n          schema_name: asset.schema || asset.schema_name\n        },\n        template: {\n          template_id: asset.template_id || asset.template?.template_id || '0',\n          max_supply: asset.max_supply || asset.template?.max_supply || '0'\n        },\n        data: asset.traits || asset.data || {},\n        mint_number: asset.template_mint || asset.mint_number\n      }))\n      \n      // WaxRock filtering is now handled by the API method getUserInventoryWaxRocks\n      // No additional client-side filtering needed for waxrock filter\n      \n      // Collect available collections for dropdown (only on first page)\n      if (page === 1 && filter === 'all') {\n        const collections = [...new Set(inventoryNFTs\n          .map(nft => nft.collection.collection_name)\n          .filter(name => typeof name === 'string' && name.trim() !== '')\n        )].sort()\n        setAvailableCollections(collections)\n      }\n      \n      if (append && page > 1) {\n        setInventory(prev => [...prev, ...inventoryNFTs])\n        setCurrentPage(page)\n      } else {\n        setInventory(inventoryNFTs)\n        setCurrentPage(1)\n      }\n      \n      setHasMore(response.hasMore)\n    } catch (error) {\n      log.error('Error loading inventory', 'Inventory', error as Error)\n      \n      // Show user-friendly error message\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred'\n      \n      // Set error state for UI feedback\n      if (page === 1 && !append) {\n        // Only clear inventory if this is the initial load, not a retry\n        setInventory([])\n        // Could add a toast notification here if available\n        log.warn('Failed to load inventory', 'Inventory', { errorMessage })\n      } else {\n        // For pagination errors or append errors, just log and don't clear existing data\n        log.warn('Failed to load more inventory items', 'Inventory', { errorMessage })\n      }\n      \n      setHasMore(false) // Stop further loading attempts on error\n    } finally {\n      setLoading(false)\n      setLoadingMore(false)\n    }\n  }, [account, filter, selectedCollection, ITEMS_PER_PAGE])\n\n  // Consolidated useEffect for loading inventory\n  useEffect(() => {\n    if (isConnected && account) {\n      log.debug('Inventory reload triggered', 'Inventory', { \n        filter, \n        selectedCollection, \n        selectedSchema, \n        selectedTemplate, \n        sortBy, \n        sortOrder, \n        searchTerm, \n        dateRange \n      })\n      loadInventory(1, false)\n    }\n  }, [isConnected, account, filter, selectedCollection, selectedSchema, selectedTemplate, sortBy, sortOrder, searchTerm, dateRange])\n\n  // Removed automatic background loading to prevent API spam\n  // Users can manually load more items using the \"Load More\" button\n\n  // Load more items\n  const loadMoreItems = useCallback(() => {\n    if (hasMore && !loadingMore && account) {\n      loadInventory(currentPage + 1, true)\n    }\n  }, [hasMore, loadingMore, currentPage, account, loadInventory])\n\n\n\n  // Load all remaining items with concurrent requests\n  const loadAllItems = useCallback(async () => {\n    if (!hasMore || loadingAll || !account) {\n      log.debug('LoadAll skipped', 'Inventory', { hasMore, loadingAll, account })\n      return\n    }\n    \n    setLoadingAll(true)\n    log.debug('Starting loadAllItems with concurrent requests', 'Inventory', { currentInventoryLength: inventory.length, hasMore, currentPage })\n    \n    const concurrentRequests = 2 // Reduced concurrent requests to avoid rate limiting\n    let startPage = currentPage + 1\n    let allNewItems: InventoryNFT[] = []\n    let hasMoreItems = true\n    let totalRequests = 0\n    \n    try {\n      while (hasMoreItems && totalRequests < 50) { // Increased safety limit\n        // Create batch of concurrent requests\n        const requestPromises: Promise<{ assets: NFTAsset[], total: number, hasMore: boolean }>[] = []\n        const requestPages: number[] = []\n        \n        for (let i = 0; i < concurrentRequests && hasMoreItems; i++) {\n          const page = startPage + i\n          requestPages.push(page)\n          \n          const requestPromise = (async (): Promise<{ assets: NFTAsset[], total: number, hasMore: boolean }> => {\n            const offset = (page - 1) * 1000\n            \n            try {\n              switch (filter) {\n                case 'pixals':\n                  return await apiService.getUserInventoryBySchema(account, 'pixeljourney', 'pixals', 1000, offset)\n                case 'ingredients':\n                  return await apiService.getUserInventoryBySchema(account, 'pixeljourney', 'ingredients', 1000, offset)\n                case 'waxrock':\n                  return await apiService.getUserInventoryWaxRocks(account, 1000, offset)\n                case 'all':\n                default: {\n                  const collectionFilter = selectedCollection !== 'all' ? selectedCollection : undefined\n                  return await apiService.getUserInventoryWithFilter(account, page, 1000, collectionFilter)\n                }\n              }\n            } catch (error) {\n              log.error('Error in individual request', 'Inventory', error instanceof Error ? error : new Error(String(error)))\n              return { assets: [], total: 0, hasMore: false }\n            }\n          })()\n          \n          requestPromises.push(requestPromise)\n        }\n        \n        log.debug('LoadAll Concurrent Batch', 'Inventory', { pages: requestPages, currentItems: inventory.length + allNewItems.length })\n        \n        // Execute all requests concurrently with error handling\n        const responses = await Promise.allSettled(requestPromises)\n        totalRequests += responses.length\n        \n        let batchHasItems = false\n        \n        // Process all responses\n        for (let i = 0; i < responses.length; i++) {\n          const result = responses[i]\n          const page = requestPages[i]\n          \n          if (result.status === 'fulfilled') {\n            const response = result.value\n            log.debug('LoadAll Response', 'Inventory', { page, items: response?.assets?.length || 0, hasMore: response?.hasMore, total: response?.total })\n            \n            if (response && response.assets && response.assets.length > 0) {\n              batchHasItems = true\n              let inventoryNFTs = response.assets.map(nft => ({\n                asset_id: nft.asset_id,\n                name: nft.name,\n                img: nft.image,\n                video: nft.video || (nft.traits?.video as string) || undefined,\n                collection: {\n                  name: nft.collection,\n                  collection_name: nft.collection\n                },\n                schema: {\n                  schema_name: nft.schema\n                },\n                template: {\n                  template_id: nft.template_id?.toString() || '0',\n                  max_supply: nft.max_supply || '0'\n                },\n                data: nft.traits || {},\n                mint_number: nft.template_mint\n              }))\n              \n              // Filter for WaxRock if needed\n              if (filter === 'waxrock') {\n                inventoryNFTs = inventoryNFTs.filter(nft => {\n                  const waxRock = nft.data.WaxRock as string\n                  return nft.collection.collection_name === 'pixeljourney' && \n                         nft.schema.schema_name === 'pixals' && \n                         waxRock && \n                         waxRock !== 'none'\n                })\n              }\n              \n              allNewItems.push(...inventoryNFTs)\n            }\n            \n            // Check if any response indicates no more items\n            if (!response || !response.hasMore) {\n              hasMoreItems = false\n            }\n          } else {\n            log.error('LoadAll Request Failed', 'Inventory', new Error(`Page ${page}: ${result.reason}`))\n            // Don't stop loading on individual failures, but reduce hasMoreItems chance\n          }\n        }\n        \n        // If no items were found in this batch, stop\n        if (!batchHasItems) {\n          hasMoreItems = false\n          log.debug('No more items found, stopping LoadAll', 'Inventory')\n        }\n        \n        // Update the page for next batch\n        startPage += concurrentRequests\n        \n        // Update inventory with all new items from this batch\n        if (allNewItems.length > 0) {\n          setInventory(prev => {\n            const newInventory = [...prev, ...allNewItems]\n            log.debug('Updated inventory', 'Inventory', { previousCount: prev.length, newCount: newInventory.length, addedCount: allNewItems.length })\n            return newInventory\n          })\n          setCurrentPage(startPage - 1)\n          allNewItems = [] // Reset for next batch\n        }\n        \n        // Add a small delay to avoid overwhelming the API\n        if (hasMoreItems) {\n          await new Promise(resolve => setTimeout(resolve, 100))\n        }\n      }\n      \n      log.debug('LoadAll Complete with concurrent requests', 'Inventory', { totalItems: inventory.length, totalRequests })\n      setHasMore(false)\n    } catch (error) {\n      log.error('Error loading all items', 'Inventory', error as Error)\n      \n      // Show user-friendly error message\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred'\n      log.warn('Failed to load all inventory items', 'Inventory', { errorMessage })\n      \n      // Stop loading and reset state\n      setHasMore(false)\n    } finally {\n      setLoadingAll(false)\n    }\n  }, [hasMore, loadingAll, account, currentPage, ITEMS_PER_PAGE, filter, selectedCollection, inventory.length])\n\n  // Close dropdown when clicking outside and handle positioning\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownOpen && !(event.target as Element).closest('.more-actions-dropdown')) {\n        setDropdownOpen(null)\n      }\n    }\n\n    const adjustDropdownPosition = () => {\n      if (dropdownOpen) {\n        const dropdown = document.querySelector(`[data-dropdown-id=\"${dropdownOpen}\"] .inv-dropdown-menu`) as HTMLElement\n        if (dropdown) {\n          const rect = dropdown.getBoundingClientRect()\n          const viewportWidth = window.innerWidth\n          \n          // Reset classes\n          dropdown.classList.remove('dropdown-left', 'dropdown-down')\n          \n          // Adjust horizontal position if dropdown goes off-screen\n          if (rect.right > viewportWidth) {\n            dropdown.classList.add('dropdown-left')\n          }\n          \n          // Since default is upward, only go downward if there's not enough space above\n          if (rect.top < 0) {\n            dropdown.classList.add('dropdown-down')\n          }\n        }\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    // Adjust position after dropdown opens\n    if (dropdownOpen) {\n      setTimeout(adjustDropdownPosition, 0)\n    }\n    \n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [dropdownOpen])\n\n  const handleNFTClick = (nft: InventoryNFT) => {\n    // Navigate to asset detail page\n    navigate(`/assets/${nft.asset_id}`)\n  }\n\n  const handleCollectionClick = (collectionName: string) => {\n    navigate(`/marketplace?collection=${collectionName}`)\n  }\n\n  const handleSchemaClick = (schemaName: string) => {\n    navigate(`/marketplace?schema=${schemaName}`)\n  }\n\n  const handleRecyclePixal = async (nft: InventoryNFT) => {\n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    // Check if this is a WaxRock Pixal PFP - block recycling if it is\n    if (MarketplaceConfigService.isPixalPFP(nft.template.template_id)) {\n      const waxRock = nft.data?.WaxRock as string\n      if (waxRock && MarketplaceConfigService.isValidWaxRock(waxRock)) {\n        showError(\n          'WaxRock Protection',\n          `This is a rare WaxRock Pixal PFP (${waxRock}) and cannot be recycled. WaxRock Pixals are protected from burning and recycling on our platform.`\n        )\n        return\n      }\n    }\n\n    try {\n      // Confirm the recycle action\n      const confirmed = await confirm(\n        'Confirm Recycle',\n        `Are you sure you want to recycle ${nft.name}?\\n\\nThis will cost 12,000 PXJ tokens and cannot be undone.`,\n        'Recycle',\n        'Cancel'\n      )\n      \n      if (!confirmed) return\n\n      // Create the recycle transaction\n      const transaction = await NeftyBlendService.recyclePixal(nft.asset_id, account)\n      \n      // Execute the transaction\n      await NeftyBlendService.executeRecycle(transaction, session)\n      \n      showSuccess('Recycle Successful', 'Pixal recycled successfully!')\n      \n      // Reload inventory to reflect changes\n      await loadInventory()\n      \n    } catch (error) {\n      log.error('Recycle failed', 'Inventory', error as Error)\n      showError(\n        'Recycle Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    }\n  }\n\n  const handleTokenizePixal = async (nft: InventoryNFT) => {\n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    // Verify this is a Pixal PFP\n    if (!MarketplaceConfigService.isPixalPFP(nft.template.template_id)) {\n      showError('Invalid NFT', 'Only Pixal PFPs can be tokenized into WPIXAL')\n      return\n    }\n\n    // Open the tokenize fee modal\n    setTokenizeNFT(nft)\n    setTokenizeModalOpen(true)\n  }\n\n  const handleCraftingOpen = (nft: InventoryNFT) => {\n    setCraftingIngredient(nft)\n    setCraftingModalOpen(true)\n  }\n\n  const handleViewOffers = (nft: InventoryNFT) => {\n    setOffersNFT(nft)\n    setViewOffersModalOpen(true)\n  }\n\n  const handleStakeOpen = async (nft: InventoryNFT) => {\n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    if (nft.collection.collection_name !== 'pixeljourney') {\n      showError('Invalid Asset', 'Only Pixel Journey NFTs can be staked')\n      return\n    }\n\n    try {\n      // Confirm the stake action\n      const confirmed = await confirm(\n        'Confirm Staking',\n        `Are you sure you want to stake ${nft.name}?\\n\\nYour assets will remain in your inventory as the Pixel Journey uses non-custodial staking.`,\n        'Stake NFT',\n        'Cancel'\n      )\n      \n      if (!confirmed) return\n\n      // Execute the staking transaction\n      const result = await stakingService.stakeNFTsPixelJourney(\n        session,\n        [nft.asset_id],\n        'pixeljourney'\n      )\n      \n      if (result.success) {\n        showSuccess('NFT Staked Successfully', `${nft.name} has been staked successfully!`)\n        // Refresh inventory to reflect the change\n        await loadInventory()\n      } else {\n        showError('Staking Failed', result.error || 'Failed to stake NFT')\n      }\n      \n    } catch (error) {\n      console.error('Staking error:', error)\n      showError('Staking Failed', error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  const handleUnpackPixelPack = async (nft: InventoryNFT) => {\n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    try {\n      // Confirm the unpack action\n      const confirmed = await confirm(\n        'Confirm Unpack',\n        `Are you sure you want to unpack ${nft.name}?\\n\\nThis action cannot be undone.`,\n        'Unpack',\n        'Cancel'\n      )\n      \n      if (!confirmed) return\n\n      // Create the unpack transaction\n      const transaction = await NeftyBlendService.unpackPixelPack(nft.asset_id, account)\n      \n      // Execute the transaction\n      await NeftyBlendService.executeUnpack(transaction, session)\n      \n      showSuccess('Unpack Successful', 'Pixelpack unpacked successfully!')\n      \n      // Reload inventory to reflect changes\n      await loadInventory()\n      \n    } catch (error) {\n      log.error('Unpack failed', 'Inventory', error as Error)\n      showError(\n        'Unpack Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    }\n  }\n\n  // TODO: Multi-select mode toggle - currently unused but may be needed for future UI enhancements\n  // const toggleMultiSelectMode = () => {\n  //   setIsMultiSelectMode(!isMultiSelectMode)\n  //   setSelectedItems(new Set())\n  // }\n\n  const toggleItemSelection = (assetId: string) => {\n    const newSelected = new Set(selectedItems)\n    if (newSelected.has(assetId)) {\n      newSelected.delete(assetId)\n      // If no items are selected after removal, exit multi-select mode\n      if (newSelected.size === 0) {\n        setIsMultiSelectMode(false)\n      }\n    } else {\n      newSelected.add(assetId)\n      // Automatically enable multi-select mode when first item is selected\n      if (!isMultiSelectMode) {\n        setIsMultiSelectMode(true)\n      }\n    }\n    setSelectedItems(newSelected)\n  }\n\n  const selectAllItems = () => {\n    const allIds = new Set(filteredInventory.map(nft => nft.asset_id))\n    \n    // Check if all filtered items are already selected\n    const allSelected = allIds.size > 0 && [...allIds].every(id => selectedItems.has(id))\n    \n    if (allSelected) {\n      // Deselect all filtered items\n      const newSelected = new Set(selectedItems)\n      allIds.forEach(id => newSelected.delete(id))\n      setSelectedItems(newSelected)\n    } else {\n      // Select all filtered items (merge with existing selection)\n      const newSelected = new Set([...selectedItems, ...allIds])\n      setSelectedItems(newSelected)\n    }\n  }\n\n  const clearSelection = () => {\n    setSelectedItems(new Set())\n  }\n\n  const handleBulkListing = () => {\n    if (selectedItems.size === 0) return\n    setShowBulkListingModal(true)\n  }\n\n  const handleBulkTransfer = () => {\n    if (selectedItems.size === 0) return\n    setShowBulkTransferModal(true)\n  }\n\n  const handleBulkDistribute = () => {\n    if (selectedItems.size === 0) return\n    setShowBulkDistributeModal(true)\n  }\n\n  const handleBulkAuction = () => {\n    if (selectedItems.size === 0) return\n    setShowBulkAuctionModal(true)\n  }\n\n  const handleBulkBurn = () => {\n    if (selectedItems.size === 0) return\n    setShowBulkBurnModal(true)\n  }\n\n  const handleBulkStake = async () => {\n    if (selectedItems.size === 0) return\n    \n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    // Filter selected NFTs to only include pixeljourney collection\n    const selectedNFTs = inventory.filter(nft => selectedItems.has(nft.asset_id))\n    const stakeableNFTs = selectedNFTs.filter(nft => nft.collection.collection_name === 'pixeljourney')\n    \n    if (stakeableNFTs.length === 0) {\n      showError('No Stakeable NFTs', 'Only Pixel Journey NFTs can be staked. Please select some Pixel Journey assets.')\n      return\n    }\n\n    // Skip non-stakeable NFTs if any (mixed selection)\n    if (stakeableNFTs.length !== selectedNFTs.length) {\n      const nonStakeableCount = selectedNFTs.length - stakeableNFTs.length\n      console.log(`Skipping ${nonStakeableCount} non-Pixel Journey NFTs, staking ${stakeableNFTs.length} Pixel Journey NFTs`)\n    }\n\n    try {\n      const assetIds = stakeableNFTs.map(nft => nft.asset_id)\n      \n      // Execute the bulk staking transaction\n      const result = await stakingService.stakeNFTsPixelJourney(\n        session,\n        assetIds,\n        'pixeljourney'\n      )\n      \n      if (result.success) {\n        showSuccess('NFTs Staked Successfully', `${stakeableNFTs.length} NFT${stakeableNFTs.length > 1 ? 's have' : ' has'} been staked successfully!`)\n        // Clear selection and refresh inventory\n        setSelectedItems(new Set())\n        setIsMultiSelectMode(false)\n        await loadInventory()\n      } else {\n        showError('Staking Failed', result.error || 'Failed to stake NFTs')\n      }\n      \n    } catch (error) {\n      console.error('Bulk staking error:', error)\n      showError('Staking Failed', error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  const handleClaimRewards = async () => {\n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    try {\n      // Call the staking service to claim rewards\n      const result = await stakingService.claimAllRewards(session, 'pixeljourney')\n      \n      if (result.success) {\n        showSuccess('Rewards Claimed Successfully', 'All pending rewards have been claimed and transferred to your wallet!')\n      } else {\n        showError('Claim Failed', result.error || 'Failed to claim rewards')\n      }\n      \n    } catch (error) {\n      console.error('Claim rewards error:', error)\n      showError('Claim Failed', error instanceof Error ? error.message : 'An unexpected error occurred')\n    }\n  }\n\n  // TODO: Bulk unpack functionality - currently disabled due to incorrect blend ID transactions\n  // This should be refactored to use proper unpack functions from different marketplaces\n  // const handleBulkUnpack = () => {\n  //   if (selectedItems.size === 0) return\n  //   \n  //   // Filter selected NFTs to only include packs\n  //   const selectedNFTs = inventory.filter(nft => selectedItems.has(nft.asset_id))\n  //   const packNFTs = selectedNFTs.filter(nft => NeftyBlendService.isPackNFT(nft))\n  //   \n  //   if (packNFTs.length === 0) {\n  //     showError('No pack NFTs selected. Only packs, chests, boxes, and containers can be unpacked.')\n  //     return\n  //   }\n  //    \n  //   setShowUnpackModal(true)\n  // }\n\n\n\n  const handleBulkUnpackPixelPacks = async () => {\n    if (selectedItems.size === 0) return\n    \n    if (!account || !session) {\n      showError('Wallet Required', 'Please connect your wallet first')\n      return\n    }\n\n    // Filter selected NFTs to only include pixelpacks\n    const selectedNFTs = inventory.filter(nft => selectedItems.has(nft.asset_id))\n    const pixelPackNFTs = selectedNFTs.filter(nft => NeftyBlendService.isPixelPack(nft))\n    \n    if (pixelPackNFTs.length === 0) {\n      showError('No pixelpack NFTs selected', 'Please select pixelpack items to unpack.')\n      return\n    }\n\n    try {\n      // Confirm the bulk unpack action\n      const confirmed = await confirm(\n        'Confirm Bulk Unpack',\n        `Are you sure you want to unpack ${pixelPackNFTs.length} pixelpack(s)?\\n\\nThis action cannot be undone and will be processed in batches of 20.`,\n        'Unpack All',\n        'Cancel'\n      )\n      \n      if (!confirmed) return\n\n      const assetIds = pixelPackNFTs.map(nft => nft.asset_id)\n      \n      // Create bulk unpack transactions (batched in groups of 20)\n      const transactions = await NeftyBlendService.unpackPixelPacksBulk(assetIds, account)\n      \n      // Execute all transactions\n      for (let i = 0; i < transactions.length; i++) {\n        const transaction = transactions[i]\n        showSuccess(`Processing batch ${i + 1} of ${transactions.length}...`, 'Bulk Unpack')\n        \n        await NeftyBlendService.executeUnpack(transaction, session)\n      }\n      \n      showSuccess('Bulk Unpack Successful', `Successfully unpacked ${pixelPackNFTs.length} pixelpack(s)!`)\n      \n      // Clear selection and reload inventory\n      setSelectedItems(new Set())\n      await loadInventory()\n      \n    } catch (error) {\n      log.error('Bulk unpack failed', 'Inventory', error as Error)\n      showError(\n        'Bulk Unpack Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    }\n  }\n\n  // Debounce search term for better performance\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm)\n    }, 300)\n    \n    return () => clearTimeout(timer)\n  }, [searchTerm])\n\n  // Generate search suggestions based on inventory\n  const generateSearchSuggestions = useCallback((query: string): SearchSuggestion[] => {\n    if (!query || query.length < 2) return []\n    \n    const suggestions = new Map<string, SearchSuggestion>()\n    const queryLower = query.toLowerCase()\n    \n    inventory.forEach(nft => {\n      // NFT name suggestions\n      if (nft.name.toLowerCase().includes(queryLower)) {\n        const key = `name:${nft.name}`\n        if (!suggestions.has(key)) {\n          suggestions.set(key, {\n            text: nft.name,\n            type: 'name',\n            count: 1\n          })\n        } else {\n          const existing = suggestions.get(key)!\n          existing.count = (existing.count || 0) + 1\n        }\n      }\n      \n      // Collection suggestions\n      if (nft.collection.collection_name.toLowerCase().includes(queryLower)) {\n        const key = `collection:${nft.collection.collection_name}`\n        if (!suggestions.has(key)) {\n          suggestions.set(key, {\n            text: nft.collection.collection_name,\n            type: 'collection',\n            count: 1\n          })\n        } else {\n          const existing = suggestions.get(key)!\n          existing.count = (existing.count || 0) + 1\n        }\n      }\n      \n      // Schema suggestions\n      if (nft.schema.schema_name.toLowerCase().includes(queryLower)) {\n        const key = `schema:${nft.schema.schema_name}`\n        if (!suggestions.has(key)) {\n          suggestions.set(key, {\n            text: nft.schema.schema_name,\n            type: 'schema',\n            count: 1\n          })\n        } else {\n          const existing = suggestions.get(key)!\n          existing.count = (existing.count || 0) + 1\n        }\n      }\n    })\n    \n    return Array.from(suggestions.values())\n      .sort((a, b) => (b.count || 0) - (a.count || 0))\n      .slice(0, 8)\n  }, [inventory])\n\n  // Update search suggestions when search term changes\n  useEffect(() => {\n    const suggestions = generateSearchSuggestions(searchTerm)\n    setSearchSuggestions(suggestions)\n  }, [searchTerm, generateSearchSuggestions])\n\n  // Memoize filtered and sorted inventory to prevent recalculation on every render\n  const filteredInventory = useMemo(() => {\n    const filtered = inventory.filter(nft => {\n      const matchesSearch = debouncedSearchTerm === '' || \n                           nft.name.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\n                           nft.collection.collection_name.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\n                           nft.schema.schema_name.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\n      \n      const matchesFilter = filter === 'all' || \n                           (filter === 'pixals' && nft.collection.collection_name === 'pixeljourney' && nft.schema.schema_name === 'pixals') ||\n                           (filter === 'waxrock' && nft.collection.collection_name === 'pixeljourney' && nft.schema.schema_name === 'pixals' && nft.data?.WaxRock && nft.data.WaxRock !== 'none') ||\n                           (filter === 'ingredients' && nft.collection.collection_name === 'pixeljourney' && nft.schema.schema_name === 'ingredients') ||\n                           (filter === 'packs' && NeftyBlendService.isPackNFT(nft))\n      \n      return matchesSearch && matchesFilter\n    })\n\n    // Apply sorting\n    return filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'name_asc':\n          return a.name.localeCompare(b.name)\n        case 'name_desc':\n          return b.name.localeCompare(a.name)\n        case 'collection_asc':\n          return a.collection.collection_name.localeCompare(b.collection.collection_name)\n        case 'collection_desc':\n          return b.collection.collection_name.localeCompare(a.collection.collection_name)\n        case 'mint_asc':\n          return (a.mint_number || 0) - (b.mint_number || 0)\n        case 'mint_desc':\n          return (b.mint_number || 0) - (a.mint_number || 0)\n        // Rarity sorting removed - Pixal PFPs don't have rarity attributes\n        default:\n          return 0\n      }\n    })\n  }, [inventory, debouncedSearchTerm, filter, sortBy])\n\n  // Calculate total pages based on filtered inventory\n  const filteredCount = filteredInventory.length\n  \n  // Update total pages when filtered inventory changes\n  useEffect(() => {\n    const pages = Math.ceil(filteredCount / ITEMS_PER_PAGE)\n    setTotalPages(Math.max(1, pages))\n  }, [filteredCount])\n\n  // Get current page items for display\n  const currentItems = useMemo(() => {\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE\n    const endIndex = startIndex + ITEMS_PER_PAGE\n    return filteredInventory.slice(startIndex, endIndex)\n  }, [filteredInventory, currentPage, ITEMS_PER_PAGE])\n\n  // Navigation functions for pagination\n  const goToNextPage = useCallback(() => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1)\n    }\n  }, [currentPage, totalPages])\n\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      setCurrentPage(prev => prev - 1)\n    }\n  }, [currentPage])\n\n  // Reset to page 1 when filters change\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [filter, selectedCollection, debouncedSearchTerm, sortBy])\n\n\n\n\n\n  if (!isConnected) {\n    return (\n    <div className=\"inventory-page\">\n      <div className=\"inventory-page-header\">\n        <h1 className=\"inventory-page-title\">My NFT Inventory</h1>\n        <p className=\"inventory-page-subtitle\">View and manage your Pixel Journey NFTs</p>\n      </div>\n        \n        <div className=\"connect-wallet-prompt\">\n          <div className=\"connect-wallet-card\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" className=\"wallet-icon\">\n              <path d=\"M21 12V7H5a2 2 0 0 1 0-4h14v4\"></path>\n              <path d=\"M3 5v14a2 2 0 0 0 2 2h16v-5\"></path>\n              <circle cx=\"18\" cy=\"12\" r=\"2\"></circle>\n            </svg>\n            <h3>Connect Your Wallet</h3>\n            <p>Connect your wallet to view your NFT inventory and manage your Pixel Journey assets.</p>\n            <button className=\"btn-primary\" onClick={login}>\n              Connect Wallet\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"inventory-container\">\n      <div className=\"inventory-header\">\n        <h1 className=\"inventory-title\">My NFT Inventory</h1>\n        {/* <p className=\"inventory-subtitle\">Connected as: <strong>{account}</strong></p> */}\n\n        <div className=\"inventory-action-buttons\">\n          <button \n            className=\"btn inventory-action-btn craft-btn\"\n            onClick={() => {\n              setCraftingModalOpen(true)\n            }}\n            title=\"Open crafting interface\"\n          >\n            🔨 Craft\n          </button>\n          <button \n            className=\"btn btn-success inventory-action-btn\"\n            onClick={handleClaimRewards}\n            title=\"Claim all pending staking rewards\"\n            disabled={!account || !session}\n          >\n            💰 Claim\n          </button>\n        </div>\n\n        \n      </div>\n\n      {/* Filter Tabs */}\n      <div className=\"inventory-page-filters\">\n        <AdvancedSearch\n          searchTerm={searchTerm}\n          onSearchChange={(term) => {\n            setSearchTerm(term)\n            setCurrentPage(1)\n          }}\n          suggestions={searchSuggestions}\n          placeholder=\"Search NFTs by name, collection, or schema...\"\n          showFilters={false}\n          className=\"inventory-search\"\n        />\n        \n        <div className=\"inventory-controls\">\n          <div className=\"inventory-filter-tabs\">\n            <button \n              className={`inventory-filter-tab ${filter === 'all' ? 'active' : ''}`}\n              onClick={() => { setFilter('all'); setCurrentPage(1); }}\n            >\n              All NFTs\n            </button>\n            <button \n              className={`inventory-filter-tab ${filter === 'pixals' ? 'active' : ''}`}\n              onClick={() => { setFilter('pixals'); setCurrentPage(1); }}\n            >\n              Pixals\n            </button>\n            <button \n              className={`inventory-filter-tab ${filter === 'waxrock' ? 'active' : ''}`}\n              onClick={() => { setFilter('waxrock'); setCurrentPage(1); }}\n            >\n              WaxRock\n            </button>\n            <button \n              className={`inventory-filter-tab ${filter === 'ingredients' ? 'active' : ''}`}\n              onClick={() => { setFilter('ingredients'); setCurrentPage(1); }}\n            >\n              Ingredients\n            </button>\n            <button \n              className={`inventory-filter-tab ${filter === 'packs' ? 'active' : ''}`}\n              onClick={() => { setFilter('packs'); setCurrentPage(1); }}\n            >\n              Packs\n            </button>\n          </div>\n          \n          {/* Enhanced Filtering Controls */}\n          <div className=\"enhanced-filters\">\n            {/* Primary Sort - Latest Received by Default */}\n            <div className=\"sort-container\">\n              <label>Sort by:</label>\n              <select\n                value={sortBy}\n                onChange={(e) => {\n                  setSortBy(e.target.value as any)\n                  setCurrentPage(1)\n                }}\n                className=\"sort-select\"\n              >\n                <option value=\"transferred\">Latest Received</option>\n                <option value=\"created\">Latest Created</option>\n                <option value=\"updated\">Recently Updated</option>\n                <option value=\"minted\">Latest Minted</option>\n                <option value=\"asset_id\">Asset ID</option>\n                <option value=\"name_asc\">Name (A-Z)</option>\n                <option value=\"name_desc\">Name (Z-A)</option>\n                <option value=\"collection_asc\">Collection (A-Z)</option>\n                <option value=\"collection_desc\">Collection (Z-A)</option>\n                <option value=\"mint_asc\">Mint Number (Low-High)</option>\n                <option value=\"mint_desc\">Mint Number (High-Low)</option>\n              </select>\n            </div>\n\n            {/* Collection Filter - Show for all filters */}\n            <div className=\"collection-filter-container\">\n              <label>Collection:</label>\n              <select\n                value={selectedCollection}\n                onChange={(e) => {\n                  setSelectedCollection(e.target.value)\n                  setCurrentPage(1)\n                }}\n                className=\"collection-select\"\n              >\n                <option value=\"all\">All Collections</option>\n                {availableCollections\n                  .filter(collection => \n                    typeof collection === 'string' && collection.toLowerCase().includes(collectionSearchTerm.toLowerCase())\n                  )\n                  .map(collection => (\n                    <option key={collection} value={collection}>\n                      {collection}\n                    </option>\n                  ))\n                }\n              </select>\n            </div>\n\n            {/* Schema Filter */}\n            <div className=\"schema-filter-container\">\n              <label>Schema:</label>\n              <select\n                value={selectedSchema}\n                onChange={(e) => {\n                  setSelectedSchema(e.target.value)\n                  setCurrentPage(1)\n                }}\n                className=\"schema-select\"\n              >\n                <option value=\"all\">All Schemas</option>\n                {availableSchemas.map(schema => (\n                  <option key={schema} value={schema}>\n                    {schema}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Template ID Filter */}\n            <div className=\"template-filter-container\">\n              <label>Template ID:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter template ID...\"\n                value={selectedTemplate}\n                onChange={(e) => {\n                  setSelectedTemplate(e.target.value)\n                  setCurrentPage(1)\n                }}\n                className=\"template-input\"\n              />\n            </div>\n\n            {/* Advanced Filters Toggle */}\n            <button \n              className={`advanced-filters-toggle ${showAdvancedFilters ? 'active' : ''}`}\n              onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n            >\n              {showAdvancedFilters ? '▼' : '▶'} Advanced Filters\n            </button>\n          </div>\n\n          {/* Advanced Filters Panel */}\n          {showAdvancedFilters && (\n            <div className=\"advanced-filters-panel\">\n              <div className=\"date-range-filter\">\n                <label>Date Range:</label>\n                <div className=\"date-inputs\">\n                  <input\n                    type=\"date\"\n                    value={dateRange.start}\n                    onChange={(e) => {\n                      setDateRange(prev => ({ ...prev, start: e.target.value }))\n                      setCurrentPage(1)\n                    }}\n                    className=\"date-input\"\n                    placeholder=\"Start date\"\n                  />\n                  <span>to</span>\n                  <input\n                    type=\"date\"\n                    value={dateRange.end}\n                    onChange={(e) => {\n                      setDateRange(prev => ({ ...prev, end: e.target.value }))\n                      setCurrentPage(1)\n                    }}\n                    className=\"date-input\"\n                    placeholder=\"End date\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"filter-actions\">\n                <button \n                  className=\"clear-filters-btn\"\n                  onClick={() => {\n                    setSelectedCollection('all')\n                    setSelectedSchema('all')\n                    setSelectedTemplate('')\n                    setDateRange({ start: '', end: '' })\n                    setSearchTerm('')\n                    setSortBy('transferred')\n                    setSortOrder('desc')\n                    setCurrentPage(1)\n                  }}\n                >\n                  Clear All Filters\n                </button>\n              </div>\n            </div>\n          )}\n          \n\n          \n\n        </div>\n        \n        {selectedItems.size > 0 && (\n          <div className=\"bulk-actions-toolbar\">\n            <div className=\"selection-info\">\n              <span>{selectedItems.size} item{selectedItems.size !== 1 ? 's' : ''} selected</span>\n              {selectedItems.size > 0 && (\n                <button className=\"clear-selection\" onClick={clearSelection}>\n                  Clear\n                </button>\n              )}\n              <button className=\"select-all\" onClick={selectAllItems}>\n                {(() => {\n                  const allIds = new Set(filteredInventory.map(nft => nft.asset_id))\n                  const allSelected = allIds.size > 0 && [...allIds].every(id => selectedItems.has(id))\n                  return allSelected ? 'Deselect All' : 'Select All'\n                })()}\n              </button>\n            </div>\n            \n            {selectedItems.size > 0 && (\n              <div className=\"bulk-actions\">\n                <button className=\"bulk-btn list-btn\" onClick={handleBulkListing}>\n                  💰 List ({selectedItems.size})\n                </button>\n                <button className=\"bulk-btn auction-btn\" onClick={handleBulkAuction}>\n                  🏆 Auction ({selectedItems.size})\n                </button>\n                <button className=\"bulk-btn transfer-btn\" onClick={handleBulkTransfer}>\n                  📤 Transfer ({selectedItems.size})\n                </button>\n                <button className=\"bulk-btn distribute-btn\" onClick={handleBulkDistribute}>\n                  🎯 Distribute ({selectedItems.size})\n                </button>\n                <button className=\"bulk-btn burn-btn\" onClick={handleBulkBurn}>\n                  🔥 Burn ({selectedItems.size})\n                </button>\n                          <button \n            className=\"bulk-btn stake-btn\"\n            onClick={handleBulkStake}>\n            🥩 Stake ({selectedItems.size})\n          </button>\n                {(() => {\n                  const selectedNFTs = inventory.filter(nft => selectedItems.has(nft.asset_id))\n                  // const packCount = selectedNFTs.filter(nft => NeftyBlendService.isPackNFT(nft)).length // TODO: Currently unused, for future general pack unpacking\n                  const pixelPackCount = selectedNFTs.filter(nft => NeftyBlendService.isPixelPack(nft)).length\n                  \n                  return (\n                    <>\n                     \n                     {/*TODO: current unpack funtionality here appears to be ~incorrectly opening transactions to blend IDs .. whereas unpacking features usually have unpack functions from across the different marketplaces\n                       {packCount > 0 && (\n                        <button className=\"bulk-btn unpack-btn\" onClick={handleBulkUnpack}>\n                          📦 Unpack ({packCount})\n                        </button>\n                      )} */}\n                      {pixelPackCount > 0 && (\n                        <button className=\"bulk-btn unpack-btn\" onClick={handleBulkUnpackPixelPacks}>\n                          📦 Unpack Pixelpacks ({pixelPackCount})\n                        </button>\n                      )}\n                    </>\n                  )\n                })()} \n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Loading State */}\n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading your NFTs...</p>\n        </div>\n      )}\n\n      {/* Inventory Grid */}\n      {!loading && (\n        <>\n          <div className=\"inventory-page-stats\">\n            <p>{filteredCount} NFTs found</p>\n          </div>\n          \n          {inventory.length > 0 ? (\n            <>\n              <div className=\"inventory-page-grid\">\n                {currentItems.map((nft) => (\n                  <NFTCard\n                    key={nft.asset_id}\n                    nft={nft}\n                    selectedNFTs={selectedItems}\n                    isSelected={selectedItems.has(nft.asset_id)}\n                    settings={settings}\n                    dropdownOpen={dropdownOpen}\n                    onNFTClick={handleNFTClick}\n                    onCollectionClick={handleCollectionClick}\n                    onSchemaClick={handleSchemaClick}\n                    onToggleSelection={toggleItemSelection}\n                    onDropdownToggle={(assetId) => setDropdownOpen(dropdownOpen === assetId ? null : assetId)}\n                    onListingOpen={(nft) => {\n                      setActionNFT(nft)\n                      setListingModalOpen(true)\n                    }}\n                    onTransferOpen={(nft) => {\n                      setActionNFT(nft)\n                      setTransferModalOpen(true)\n                    }}\n                    onBurnOpen={(nft) => {\n                      setActionNFT(nft)\n                      setBurnModalOpen(true)\n                    }}\n                    onAuctionOpen={(nft) => {\n                       setActionNFT(nft)\n                       setShowAuctionModal(true)\n                       setDropdownOpen(null)\n                     }}\n                    onRecyclePixal={(nft) => {\n                      handleRecyclePixal(nft)\n                      setDropdownOpen(null)\n                    }}\n                    onImageZoom={handleMediaZoom}\n                    onCraftingOpen={(nft) => {\n                      handleCraftingOpen(nft)\n                      setDropdownOpen(null)\n                    }}\n                    onViewOffers={(nft) => {\n                      handleViewOffers(nft)\n                      setDropdownOpen(null)\n                    }}\n                    onUnpackPixelPack={(nft) => {\n                      handleUnpackPixelPack(nft)\n                      setDropdownOpen(null)\n                    }}\n                    onStakeOpen={(nft) => {\n                      handleStakeOpen(nft)\n                      setDropdownOpen(null)\n                    }}\n                    onTokenizePixal={(nft) => {\n                      handleTokenizePixal(nft)\n                      setDropdownOpen(null)\n                    }}\n                  />\n                ))}\n              </div>\n              \n              {/* Pagination Controls */}\n              {totalPages > 1 && (\n                <div className=\"pagination-controls\">\n                  <button \n                    className=\"pagination-btn\" \n                    onClick={goToPrevPage}\n                    disabled={currentPage === 1}\n                  >\n                    ← Previous\n                  </button>\n                  \n                  <div className=\"pagination-info\">\n                    <span>Page {currentPage} of {totalPages}</span>\n                    <span className=\"pagination-items\">({filteredCount} total items)</span>\n                  </div>\n                  \n                  <button \n                    className=\"pagination-btn\" \n                    onClick={goToNextPage}\n                    disabled={currentPage === totalPages}\n                  >\n                    Next →\n                  </button>\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"empty-inventory\">\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" className=\"empty-icon\">\n                <path d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M9 1v6m6-6v6\"></path>\n              </svg>\n              <h3>No NFTs Found</h3>\n              <p>You don't have any {filter === 'all' ? 'Pixel Journey' : filter} NFTs yet.</p>\n              <p>Visit the marketplace to start collecting!</p>\n              \n              {/* Call-to-action buttons for specific categories */}\n              {(filter === 'waxrock' || filter === 'pixals' || filter === 'ingredients') && (\n                <div className=\"empty-inventory-cta\" style={{ marginTop: '20px' }}>\n                  <button \n                    className=\"cta-button\"\n                    onClick={() => {\n                      const categoryMap: Record<string, string> = {\n                        'waxrock': 'waxrocks',\n                        'pixals': 'pixals', \n                        'ingredients': 'ingredients'\n                      }\n                      const marketplaceCategory = categoryMap[filter]\n                      navigate(`/marketplace?category=${marketplaceCategory}`)\n                    }}\n                    style={{\n                      background: 'linear-gradient(45deg, #4ecdc4, #45b7d1)',\n                      border: 'none',\n                      padding: '12px 24px',\n                      borderRadius: '25px',\n                      color: 'white',\n                      fontSize: '16px',\n                      fontWeight: '600',\n                      cursor: 'pointer',\n                      transition: 'all 0.3s ease',\n                      boxShadow: '0 4px 15px rgba(78, 205, 196, 0.3)'\n                    }}\n                    onMouseOver={(e) => {\n                      e.currentTarget.style.transform = 'translateY(-2px)'\n                      e.currentTarget.style.boxShadow = '0 6px 20px rgba(78, 205, 196, 0.4)'\n                    }}\n                    onMouseOut={(e) => {\n                      e.currentTarget.style.transform = 'translateY(0)'\n                      e.currentTarget.style.boxShadow = '0 4px 15px rgba(78, 205, 196, 0.3)'\n                    }}\n                  >\n                    🛒 Browse {filter === 'waxrock' ? 'WaxRock' : filter.charAt(0).toUpperCase() + filter.slice(1)} Marketplace\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n\n\n\n          {/* Load More Button - Always show pagination controls */}\n          {inventory.length > 0 && (\n            <div className=\"load-more-container\">\n              {hasMore ? (\n                <>\n                  <button \n                    className=\"load-more-btn\"\n                    onClick={loadMoreItems}\n                    disabled={loadingMore || loadingAll}\n                  >\n                    {loadingMore ? 'Loading...' : 'Load More NFTs'}\n                  </button>\n                  <button \n                    className=\"load-more-btn load-all-btn\"\n                    onClick={loadAllItems}\n                    disabled={loadingMore || loadingAll}\n                    style={{ marginLeft: '10px', backgroundColor: 'var(--success-color)' }}\n                  >\n                    {loadingAll ? 'Loading All...' : 'Load All NFTs'}\n                  </button>\n                </>\n              ) : (\n                <div className=\"pagination-info\">\n                  <p>📄 Page {currentPage} - All NFTs loaded ({inventory.length} total)</p>\n                  <p style={{ fontSize: '0.9em', color: 'var(--text-secondary)', marginTop: '5px' }}>No more items to load</p>\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n\n      {/* NFT Details Modal */}\n      <NFTDetailsModal \n        nft={actionNFT ? {\n          sale_id: '',\n          asset_id: actionNFT.asset_id,\n          name: actionNFT.name,\n          image: actionNFT.img,\n          video: actionNFT.video,\n          price: 'Not for sale',\n          seller: account || '',\n          collection: actionNFT.collection.collection_name,\n          schema: actionNFT.schema.schema_name,\n          template_mint: actionNFT.mint_number,\n          max_supply: actionNFT.template.max_supply,\n          traits: actionNFT.data\n        } : null}\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n      />\n\n      <ListingModal \n        nft={actionNFT}\n        isOpen={listingModalOpen}\n        onClose={() => {\n          setListingModalOpen(false)\n          setActionNFT(null)\n        }}\n        onSuccess={() => {\n          loadInventory()\n        }}\n      />\n\n      <TransferModal \n        nft={actionNFT}\n        isOpen={transferModalOpen}\n        onClose={() => {\n          setTransferModalOpen(false)\n          setActionNFT(null)\n        }}\n        onSuccess={() => {\n          loadInventory()\n        }}\n      />\n\n      <BurnModal \n        nft={actionNFT}\n        isOpen={burnModalOpen}\n        onClose={() => {\n          setBurnModalOpen(false)\n          setActionNFT(null)\n        }}\n        onSuccess={() => {\n          loadInventory()\n        }}\n      />\n\n      <CraftingModal\n        isOpen={craftingModalOpen}\n        onClose={() => {\n          setCraftingModalOpen(false)\n          setCraftingIngredient(null)\n        }}\n        ingredient={craftingIngredient}\n      />\n\n      <ViewOffersModal \n        nft={offersNFT}\n        isOpen={viewOffersModalOpen}\n        onClose={() => {\n          setViewOffersModalOpen(false)\n          setOffersNFT(null)\n        }}\n      />\n\n      <TokenizeFeeModal \n        nft={tokenizeNFT}\n        isOpen={tokenizeModalOpen}\n        onClose={() => {\n          setTokenizeModalOpen(false)\n          setTokenizeNFT(null)\n        }}\n        onSuccess={() => {\n          setTokenizeModalOpen(false)\n          setTokenizeNFT(null)\n          loadInventory()\n        }}\n      />\n\n      <BulkListingModal \n        nfts={inventory.filter(nft => selectedItems.has(nft.asset_id))}\n        isOpen={showBulkListingModal}\n        onClose={() => {\n          setShowBulkListingModal(false)\n        }}\n        onSuccess={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadInventory()\n        }}\n      />\n\n      <BulkTransferModal \n        nfts={inventory.filter(nft => selectedItems.has(nft.asset_id))}\n        isOpen={showBulkTransferModal}\n        onClose={() => {\n          setShowBulkTransferModal(false)\n        }}\n        onSuccess={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadInventory()\n        }}\n      />\n\n      <DistributeModal \n        nfts={inventory.filter(nft => selectedItems.has(nft.asset_id))}\n        isOpen={showBulkDistributeModal}\n        onClose={() => {\n          setShowBulkDistributeModal(false)\n        }}\n        onSuccess={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadInventory()\n        }}\n      />\n\n      <BulkBurnModal \n        nfts={inventory.filter(nft => selectedItems.has(nft.asset_id))}\n        isOpen={showBulkBurnModal}\n        onClose={() => {\n          setShowBulkBurnModal(false)\n        }}\n        onSuccess={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadInventory()\n        }}\n      />\n\n      <UnpackModal \n        selectedNFTs={inventory.filter(nft => selectedItems.has(nft.asset_id))}\n        isOpen={showUnpackModal}\n        onClose={() => {\n          setShowUnpackModal(false)\n        }}\n        userAccount={account || ''}\n        walletSession={session}\n        onUnpackComplete={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadInventory(1, false)\n          showSuccess('Packs unpacked successfully!')\n        }}\n      />\n\n      <BulkAuctionModal \n        nfts={inventory.filter(nft => selectedItems.has(nft.asset_id))}\n        isOpen={showBulkAuctionModal}\n        onClose={() => {\n          setShowBulkAuctionModal(false)\n        }}\n        onSuccess={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadInventory()\n        }}\n      />\n\n      {actionNFT && (\n        <BulkAuctionModal \n          nfts={[actionNFT]}\n          isOpen={showAuctionModal}\n          onClose={() => {\n            setShowAuctionModal(false)\n            setActionNFT(null)\n          }}\n          onSuccess={() => {\n            loadInventory()\n          }}\n        />\n      )}\n      \n      {/* Image Zoom Modal */}\n      {showImageZoom && zoomedImage && (\n        <div className=\"image-zoom-modal\" onClick={() => setShowImageZoom(false)}>\n          <div className=\"zoom-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button \n              className=\"zoom-modal-close\"\n              onClick={() => setShowImageZoom(false)}\n              aria-label=\"Close zoom modal\"\n            >\n              ×\n            </button>\n            {zoomedImage.type === 'video' ? (\n              <video \n                src={zoomedImage.url} \n                className=\"zoom-modal-video\"\n                controls\n                autoPlay\n                muted\n                loop\n              >\n                Your browser does not support the video tag.\n              </video>\n            ) : (\n              <img \n                src={zoomedImage.url} \n                alt={zoomedImage.name} \n                className=\"zoom-modal-image\"\n              />\n            )}\n            <div className=\"zoom-modal-title\">{zoomedImage.name}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default Inventory","import React, { useState } from 'react'\nimport '../css/truncated-text.css'\n\ninterface TruncatedTextProps {\n  text: string\n  maxLength?: number\n  className?: string\n}\n\nconst TruncatedText: React.FC<TruncatedTextProps> = React.memo(({ \n  text, \n  maxLength = 240, \n  className = '' \n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  \n  if (!text || text.length <= maxLength) {\n    return <span className={className}>{text}</span>\n  }\n  \n  const truncatedText = text.slice(0, maxLength).trim()\n  \n  return (\n    <span className={className}>\n      {isExpanded ? (\n        <>\n          {text}\n          <button \n            className=\"read-more-btn collapse-btn\"\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              setIsExpanded(false)\n            }}\n          >\n            read less\n          </button>\n        </>\n      ) : (\n        <>\n          {truncatedText}\n          {truncatedText.endsWith('.') ? '' : '...'}\n          <button \n            className=\"read-more-btn expand-btn\"\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              setIsExpanded(true)\n            }}\n          >\n            read more\n          </button>\n        </>\n      )}\n    </span>\n  )\n})\n\nTruncatedText.displayName = 'TruncatedText'\n\nexport default TruncatedText","// IPFS Rate Limiter Service to prevent 429 errors from gateways\nimport { logger } from './loggingService'\n\ninterface QueuedRequest {\n  url: string\n  resolve: (value: string) => void\n  reject: (error: Error) => void\n  retryCount: number\n  timestamp: number\n}\n\ninterface GatewayStats {\n  lastRequest: number\n  requestCount: number\n  errorCount: number\n  isBlocked: boolean\n  blockUntil: number\n}\n\nclass IPFSRateLimiter {\n  private requestQueue: QueuedRequest[] = []\n  private isProcessing = false\n  private gatewayStats = new Map<string, GatewayStats>()\n  \n  // Rate limiting configuration\n  private readonly MIN_REQUEST_INTERVAL = 200 // 200ms between requests\n  private readonly MAX_CONCURRENT_REQUESTS = 3\n  private readonly MAX_RETRIES = 3\n  private readonly GATEWAY_COOLDOWN = 30000 // 30 seconds cooldown for blocked gateways\n  private readonly REQUEST_TIMEOUT = 10000 // 10 second timeout\n  \n  private activeRequests = 0\n  private lastRequestTime = 0\n\n  /**\n   * Add a request to the queue with rate limiting\n   */\n  async requestImage(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const queuedRequest: QueuedRequest = {\n        url,\n        resolve,\n        reject,\n        retryCount: 0,\n        timestamp: Date.now()\n      }\n      \n      this.requestQueue.push(queuedRequest)\n      this.processQueue()\n    })\n  }\n\n  /**\n   * Process the request queue with rate limiting\n   */\n  private async processQueue(): Promise<void> {\n    if (this.isProcessing || this.requestQueue.length === 0) {\n      return\n    }\n\n    this.isProcessing = true\n\n    while (this.requestQueue.length > 0 && this.activeRequests < this.MAX_CONCURRENT_REQUESTS) {\n      const request = this.requestQueue.shift()\n      if (!request) break\n\n      // Check if request is too old (timeout)\n      if (Date.now() - request.timestamp > this.REQUEST_TIMEOUT) {\n        request.reject(new Error('Request timeout in queue'))\n        continue\n      }\n\n      // Ensure minimum interval between requests\n      const timeSinceLastRequest = Date.now() - this.lastRequestTime\n      if (timeSinceLastRequest < this.MIN_REQUEST_INTERVAL) {\n        const delay = this.MIN_REQUEST_INTERVAL - timeSinceLastRequest\n        await this.delay(delay)\n      }\n\n      this.lastRequestTime = Date.now()\n      this.activeRequests++\n      \n      // Process request asynchronously\n      this.processRequest(request).finally(() => {\n        this.activeRequests--\n        // Continue processing queue\n        setTimeout(() => this.processQueue(), 0)\n      })\n    }\n\n    this.isProcessing = false\n  }\n\n  /**\n   * Process individual request with gateway selection and fallback\n   */\n  private async processRequest(request: QueuedRequest): Promise<void> {\n    try {\n      const gateway = this.selectBestGateway(request.url)\n      if (!gateway) {\n        throw new Error('No available gateways')\n      }\n\n      const result = await this.makeRequest(request.url, gateway)\n      this.updateGatewayStats(gateway, true)\n      request.resolve(result)\n      \n    } catch (error) {\n      const gateway = this.extractGateway(request.url)\n      if (gateway) {\n        this.updateGatewayStats(gateway, false)\n      }\n      \n      // Retry logic\n      if (request.retryCount < this.MAX_RETRIES) {\n        request.retryCount++\n        logger.warn(`Retrying IPFS request (${request.retryCount}/${this.MAX_RETRIES})`, 'IPFSRateLimiter', {\n          url: request.url,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        })\n        \n        // Add delay before retry\n        await this.delay(1000 * request.retryCount)\n        \n        // Re-queue the request\n        this.requestQueue.unshift(request)\n      } else {\n        const finalError = error instanceof Error ? error : new Error(String(error))\n        logger.error('IPFS request failed after all retries', 'IPFSRateLimiter', finalError, {\n          url: request.url\n        })\n        request.reject(finalError)\n      }\n    }\n  }\n\n  /**\n   * Make the actual HTTP request with timeout\n   */\n  private async makeRequest(originalUrl: string, gateway: string): Promise<string> {\n    const hash = this.extractIPFSHash(originalUrl)\n    if (!hash) {\n      throw new Error('Invalid IPFS URL')\n    }\n\n    const url = `${gateway}${hash}`\n    \n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      const timeout = setTimeout(() => {\n        img.onload = null\n        img.onerror = null\n        reject(new Error('Request timeout'))\n      }, this.REQUEST_TIMEOUT)\n\n      img.onload = () => {\n        clearTimeout(timeout)\n        resolve(url)\n      }\n\n      img.onerror = (error) => {\n        clearTimeout(timeout)\n        reject(new Error(`Failed to load image: ${error}`))\n      }\n\n      img.src = url\n    })\n  }\n\n  /**\n   * Select the best available gateway based on stats\n   */\n  private selectBestGateway(_url: string): string | null {\n    // Import gateways from config\n    const gateways = [\n      'https://ipfs.io/ipfs/',\n      'https://gateway.pinata.cloud/ipfs/',\n      'https://dweb.link/ipfs/',\n      'https://cf-ipfs.com/ipfs/'\n    ]\n\n    const now = Date.now()\n    const availableGateways = gateways.filter(gateway => {\n      const stats = this.gatewayStats.get(gateway)\n      if (!stats) return true\n      \n      // Skip blocked gateways that are still in cooldown\n      if (stats.isBlocked && now < stats.blockUntil) {\n        return false\n      }\n      \n      // Unblock gateway if cooldown period has passed\n      if (stats.isBlocked && now >= stats.blockUntil) {\n        stats.isBlocked = false\n        stats.errorCount = 0\n      }\n      \n      return true\n    })\n\n    if (availableGateways.length === 0) {\n      return null\n    }\n\n    // Sort by success rate (fewer errors = better)\n    availableGateways.sort((a, b) => {\n      const statsA = this.gatewayStats.get(a)\n      const statsB = this.gatewayStats.get(b)\n      \n      const errorRateA = statsA ? statsA.errorCount / Math.max(statsA.requestCount, 1) : 0\n      const errorRateB = statsB ? statsB.errorCount / Math.max(statsB.requestCount, 1) : 0\n      \n      return errorRateA - errorRateB\n    })\n\n    return availableGateways[0]\n  }\n\n  /**\n   * Update gateway statistics\n   */\n  private updateGatewayStats(gateway: string, success: boolean): void {\n    let stats = this.gatewayStats.get(gateway)\n    if (!stats) {\n      stats = {\n        lastRequest: 0,\n        requestCount: 0,\n        errorCount: 0,\n        isBlocked: false,\n        blockUntil: 0\n      }\n      this.gatewayStats.set(gateway, stats)\n    }\n\n    stats.lastRequest = Date.now()\n    stats.requestCount++\n\n    if (!success) {\n      stats.errorCount++\n      \n      // Block gateway if error rate is too high\n      const errorRate = stats.errorCount / stats.requestCount\n      if (errorRate > 0.5 && stats.requestCount >= 5) {\n        stats.isBlocked = true\n        stats.blockUntil = Date.now() + this.GATEWAY_COOLDOWN\n        \n        logger.warn(`Blocking gateway due to high error rate`, 'IPFSRateLimiter', {\n          gateway,\n          errorRate,\n          requestCount: stats.requestCount,\n          errorCount: stats.errorCount\n        })\n      }\n    }\n  }\n\n  /**\n   * Extract IPFS hash from URL\n   */\n  private extractIPFSHash(url: string): string | null {\n    const match = url.match(/\\/ipfs\\/([a-zA-Z0-9]+)/)\n    return match ? match[1] : null\n  }\n\n  /**\n   * Extract gateway from URL\n   */\n  private extractGateway(url: string): string | null {\n    const match = url.match(/(https?:\\/\\/[^\\/]+\\/ipfs\\/)/)\n    return match ? match[1] : null\n  }\n\n  /**\n   * Utility delay function\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  /**\n   * Get queue status for debugging\n   */\n  getStatus(): {\n    queueLength: number\n    activeRequests: number\n    gatewayStats: Record<string, GatewayStats>\n  } {\n    return {\n      queueLength: this.requestQueue.length,\n      activeRequests: this.activeRequests,\n      gatewayStats: Object.fromEntries(this.gatewayStats)\n    }\n  }\n\n  /**\n   * Clear all queued requests and reset stats\n   */\n  reset(): void {\n    this.requestQueue.forEach(request => {\n      request.reject(new Error('Rate limiter reset'))\n    })\n    this.requestQueue = []\n    this.gatewayStats.clear()\n    this.activeRequests = 0\n    this.isProcessing = false\n  }\n}\n\n// Export singleton instance\nexport const ipfsRateLimiter = new IPFSRateLimiter()\n\n// Export utility function for easy use\nexport const loadIPFSImageWithRateLimit = (url: string): Promise<string> => {\n  return ipfsRateLimiter.requestImage(url)\n}","// Image service for handling fallback images and image loading\nimport { logger } from './loggingService'\nimport { loadIPFSImageWithRateLimit } from './ipfsRateLimiter'\n\nexport interface ImageConfig {\n  width?: number\n  height?: number\n  backgroundColor?: string\n  textColor?: string\n  text?: string\n  type?: 'nft' | 'collection' | 'avatar' | 'token' | 'generic'\n}\n\nexport interface ImageLoadResult {\n  success: boolean\n  src: string\n  fallbackUsed: boolean\n  error?: Error\n}\n\nclass ImageService {\n  private imageCache = new Map<string, string>()\n  private loadingPromises = new Map<string, Promise<ImageLoadResult>>()\n  private readonly MAX_CACHE_SIZE = 500\n  \n  /**\n   * Generate SVG fallback image\n   */\n  generateFallbackSVG(config: ImageConfig = {}): string {\n    const {\n      width = 150,\n      height = 150,\n      backgroundColor = '#f3f4f6',\n      textColor = '#6b7280',\n      text,\n      type = 'generic'\n    } = config\n    \n    const displayText = text || this.getDefaultText(type)\n    const fontSize = Math.min(width, height) * 0.15\n    \n    const svg = `\n      <svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"100%\" height=\"100%\" fill=\"${backgroundColor}\"/>\n        <g transform=\"translate(${width/2}, ${height/2})\">\n          ${this.getIconForType(type, Math.min(width, height) * 0.3, textColor)}\n          <text \n            x=\"0\" \n            y=\"${fontSize * 1.5}\" \n            font-family=\"system-ui, -apple-system, sans-serif\" \n            font-size=\"${fontSize}\" \n            font-weight=\"500\" \n            fill=\"${textColor}\" \n            text-anchor=\"middle\" \n            dominant-baseline=\"middle\"\n          >\n            ${displayText}\n          </text>\n        </g>\n      </svg>\n    `\n    \n    return `data:image/svg+xml;base64,${btoa(svg)}`\n  }\n  \n  /**\n   * Get default text for image type\n   */\n  private getDefaultText(type: string): string {\n    switch (type) {\n      case 'nft': return 'NFT'\n      case 'collection': return 'Collection'\n      case 'avatar': return 'Avatar'\n      case 'token': return 'Token'\n      default: return 'Image'\n    }\n  }\n  \n  /**\n   * Get SVG icon for image type\n   */\n  private getIconForType(type: string, size: number, color: string): string {\n    const iconSize = size\n    const strokeWidth = Math.max(1, iconSize * 0.08)\n    \n    switch (type) {\n      case 'nft':\n        return `\n          <rect \n            x=\"${-iconSize/2}\" \n            y=\"${-iconSize/2}\" \n            width=\"${iconSize}\" \n            height=\"${iconSize}\" \n            rx=\"${iconSize * 0.1}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n          <circle \n            cx=\"0\" \n            cy=\"${-iconSize * 0.15}\" \n            r=\"${iconSize * 0.15}\" \n            fill=\"${color}\"\n          />\n        `\n      case 'collection':\n        return `\n          <rect \n            x=\"${-iconSize/2}\" \n            y=\"${-iconSize/2}\" \n            width=\"${iconSize * 0.7}\" \n            height=\"${iconSize * 0.7}\" \n            rx=\"${iconSize * 0.05}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n          <rect \n            x=\"${-iconSize/2 + iconSize * 0.15}\" \n            y=\"${-iconSize/2 + iconSize * 0.15}\" \n            width=\"${iconSize * 0.7}\" \n            height=\"${iconSize * 0.7}\" \n            rx=\"${iconSize * 0.05}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n        `\n      case 'avatar':\n        return `\n          <circle \n            cx=\"0\" \n            cy=\"${-iconSize * 0.1}\" \n            r=\"${iconSize * 0.25}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n          <path \n            d=\"M ${-iconSize * 0.35} ${iconSize * 0.3} Q 0 ${iconSize * 0.1} ${iconSize * 0.35} ${iconSize * 0.3}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n        `\n      case 'token':\n        return `\n          <circle \n            cx=\"0\" \n            cy=\"0\" \n            r=\"${iconSize * 0.4}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n          <text \n            x=\"0\" \n            y=\"${iconSize * 0.1}\" \n            font-family=\"system-ui, -apple-system, sans-serif\" \n            font-size=\"${iconSize * 0.3}\" \n            font-weight=\"bold\" \n            fill=\"${color}\" \n            text-anchor=\"middle\" \n            dominant-baseline=\"middle\"\n          >\n            $\n          </text>\n        `\n      default:\n        return `\n          <rect \n            x=\"${-iconSize/2}\" \n            y=\"${-iconSize/2}\" \n            width=\"${iconSize}\" \n            height=\"${iconSize}\" \n            rx=\"${iconSize * 0.1}\" \n            fill=\"none\" \n            stroke=\"${color}\" \n            stroke-width=\"${strokeWidth}\"\n          />\n          <path \n            d=\"M ${-iconSize * 0.2} ${-iconSize * 0.1} L ${iconSize * 0.2} ${-iconSize * 0.1} L 0 ${iconSize * 0.2} Z\" \n            fill=\"${color}\"\n          />\n        `\n    }\n  }\n  \n  /**\n   * Load image with fallback support\n   */\n  async loadImage(src: string, config: ImageConfig = {}): Promise<ImageLoadResult> {\n    if (!src) {\n      return {\n        success: false,\n        src: this.generateFallbackSVG(config),\n        fallbackUsed: true\n      }\n    }\n    \n    // Check cache first\n    const cached = this.imageCache.get(src)\n    if (cached) {\n      return {\n        success: true,\n        src: cached,\n        fallbackUsed: false\n      }\n    }\n    \n    // Check if already loading\n    const existingPromise = this.loadingPromises.get(src)\n    if (existingPromise) {\n      return existingPromise\n    }\n    \n    // Create loading promise\n    const loadingPromise = this.performImageLoad(src, config)\n    this.loadingPromises.set(src, loadingPromise)\n    \n    try {\n      const result = await loadingPromise\n      return result\n    } finally {\n      this.loadingPromises.delete(src)\n    }\n  }\n  \n  /**\n   * Perform actual image loading\n   */\n  private async performImageLoad(src: string, config: ImageConfig): Promise<ImageLoadResult> {\n    // Check if this is an IPFS URL that needs rate limiting\n    if (this.isIPFSUrl(src)) {\n      try {\n        const rateLimitedUrl = await loadIPFSImageWithRateLimit(src)\n        this.addToCache(src, rateLimitedUrl)\n        return {\n          success: true,\n          src: rateLimitedUrl,\n          fallbackUsed: false\n        }\n      } catch (error) {\n        logger.warn(`IPFS rate-limited load failed: ${src}`, 'ImageService', { error })\n        return {\n          success: false,\n          src: this.generateFallbackSVG(config),\n          fallbackUsed: true,\n          error: error instanceof Error ? error : new Error('IPFS load failed')\n        }\n      }\n    }\n\n    // For non-IPFS URLs, use standard loading\n    return new Promise((resolve) => {\n      const img = new Image()\n      const timeout = setTimeout(() => {\n        img.onload = null\n        img.onerror = null\n        resolve({\n          success: false,\n          src: this.generateFallbackSVG(config),\n          fallbackUsed: true,\n          error: new Error('Image load timeout')\n        })\n      }, 10000) // 10 second timeout\n      \n      img.onload = () => {\n        clearTimeout(timeout)\n        this.addToCache(src, src)\n        resolve({\n          success: true,\n          src,\n          fallbackUsed: false\n        })\n      }\n      \n      img.onerror = (error) => {\n        clearTimeout(timeout)\n        const fallbackSrc = this.generateFallbackSVG(config)\n        logger.warn(`Failed to load image: ${src}`, 'ImageService', { error })\n        resolve({\n          success: false,\n          src: fallbackSrc,\n          fallbackUsed: true,\n          error: error instanceof Error ? error : new Error('Image load failed')\n        })\n      }\n      \n      img.src = src\n    })\n  }\n  \n  /**\n   * Add image to cache\n   */\n  private addToCache(key: string, value: string): void {\n    // Implement LRU cache behavior\n    if (this.imageCache.size >= this.MAX_CACHE_SIZE) {\n      const firstKey = this.imageCache.keys().next().value\n      if (firstKey) {\n        this.imageCache.delete(firstKey)\n      }\n    }\n    \n    this.imageCache.set(key, value)\n  }\n  \n  /**\n   * Preload multiple images\n   */\n  async preloadImages(urls: string[], config: ImageConfig = {}): Promise<ImageLoadResult[]> {\n    const promises = urls.map(url => this.loadImage(url, config))\n    return Promise.all(promises)\n  }\n  \n  /**\n   * Get optimized image URL with fallback\n   */\n  getOptimizedImageUrl(src: string, config: ImageConfig = {}): string {\n    if (!src) {\n      return this.generateFallbackSVG(config)\n    }\n    \n    // Check if it's already a data URL or SVG\n    if (src.startsWith('data:') || src.startsWith('blob:')) {\n      return src\n    }\n    \n    // For IPFS URLs, use gateway optimization\n    if (src.includes('ipfs.io') || src.includes('ipfs://')) {\n      return this.optimizeIPFSUrl(src)\n    }\n    \n    return src\n  }\n  \n  /**\n   * Check if URL is an IPFS URL\n   */\n  private isIPFSUrl(src: string): boolean {\n    return src.includes('/ipfs/') || src.startsWith('ipfs://') || src.includes('gateway.pinata.cloud')\n  }\n\n  /**\n   * Optimize IPFS URLs for better loading\n   */\n  private optimizeIPFSUrl(src: string): string {\n    // For IPFS URLs, we'll let the rate limiter handle gateway selection\n    // This method is now mainly for non-rate-limited scenarios\n    if (this.isIPFSUrl(src)) {\n      return src // Let rate limiter handle optimization\n    }\n    \n    return src\n  }\n  \n  /**\n   * Clear image cache\n   */\n  clearCache(): void {\n    this.imageCache.clear()\n    this.loadingPromises.clear()\n  }\n  \n  /**\n   * Get cache statistics\n   */\n  getCacheStats(): { size: number; maxSize: number; hitRate: number } {\n    return {\n      size: this.imageCache.size,\n      maxSize: this.MAX_CACHE_SIZE,\n      hitRate: 0 // Would need to track hits/misses for accurate calculation\n    }\n  }\n}\n\n// Export singleton instance\nexport const imageService = new ImageService()\n\n// Export utility functions\nexport const createFallbackImage = (config: ImageConfig = {}) => {\n  return imageService.generateFallbackSVG(config)\n}\n\nexport const loadImageWithFallback = (src: string, config: ImageConfig = {}) => {\n  return imageService.loadImage(src, config)\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { imageService, type ImageConfig, type ImageLoadResult } from '../services/imageService'\n\ninterface FallbackImageProps {\n  src?: string\n  alt: string\n  className?: string\n  style?: React.CSSProperties\n  width?: number\n  height?: number\n  type?: 'nft' | 'collection' | 'avatar' | 'token' | 'generic'\n  fallbackText?: string\n  backgroundColor?: string\n  textColor?: string\n  onLoad?: (result: ImageLoadResult) => void\n  onError?: (error: Error) => void\n  loading?: 'lazy' | 'eager'\n  placeholder?: boolean\n}\n\nconst FallbackImage: React.FC<FallbackImageProps> = ({\n  src,\n  alt,\n  className = '',\n  style = {},\n  width,\n  height,\n  type = 'generic',\n  fallbackText,\n  backgroundColor,\n  textColor,\n  onLoad,\n  onError,\n  loading = 'lazy',\n  placeholder = true\n}) => {\n  const [imageSrc, setImageSrc] = useState<string>('')\n  const [isLoading, setIsLoading] = useState(true)\n  const [loadResult, setLoadResult] = useState<ImageLoadResult | null>(null)\n  const imgRef = useRef<HTMLImageElement>(null)\n  const loadingRef = useRef<boolean>(false)\n\n  useEffect(() => {\n    if (loadingRef.current) return\n    loadingRef.current = true\n    \n    const loadImage = async () => {\n      setIsLoading(true)\n      \n      const config: ImageConfig = {\n        width,\n        height,\n        type,\n        text: fallbackText,\n        backgroundColor,\n        textColor\n      }\n      \n      try {\n        const result = await imageService.loadImage(src || '', config)\n        setImageSrc(result.src)\n        setLoadResult(result)\n        \n        if (onLoad) {\n          onLoad(result)\n        }\n        \n        if (!result.success && result.error && onError) {\n          onError(result.error)\n        }\n      } catch (error) {\n        const fallbackSrc = imageService.generateFallbackSVG(config)\n        setImageSrc(fallbackSrc)\n        setLoadResult({\n          success: false,\n          src: fallbackSrc,\n          fallbackUsed: true,\n          error: error as Error\n        })\n        \n        if (onError) {\n          onError(error as Error)\n        }\n      } finally {\n        setIsLoading(false)\n        loadingRef.current = false\n      }\n    }\n    \n    loadImage()\n  }, [src, width, height, type, fallbackText, backgroundColor, textColor, onLoad, onError])\n\n  const handleImageLoad = () => {\n    setIsLoading(false)\n  }\n\n  const handleImageError = () => {\n    if (loadResult && !loadResult.fallbackUsed) {\n      // If the original image failed and we haven't used fallback yet\n      const config: ImageConfig = {\n        width,\n        height,\n        type,\n        text: fallbackText,\n        backgroundColor,\n        textColor\n      }\n      const fallbackSrc = imageService.generateFallbackSVG(config)\n      setImageSrc(fallbackSrc)\n      setLoadResult({\n        success: false,\n        src: fallbackSrc,\n        fallbackUsed: true\n      })\n    }\n    setIsLoading(false)\n  }\n\n  const combinedStyle: React.CSSProperties = {\n    ...style,\n    ...(width && { width }),\n    ...(height && { height })\n  }\n\n  const combinedClassName = `fallback-image ${className} ${\n    isLoading ? 'loading' : ''\n  } ${\n    loadResult?.fallbackUsed ? 'fallback-used' : ''\n  }`.trim()\n\n  return (\n    <div className=\"fallback-image-container\" style={{ position: 'relative', display: 'inline-block' }}>\n      {isLoading && placeholder && (\n        <div \n          className=\"image-placeholder\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: width || '100%',\n            height: height || '100%',\n            backgroundColor: backgroundColor || '#f3f4f6',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: '4px',\n            zIndex: 1\n          }}\n        >\n          <div className=\"loading-spinner\" style={{\n            width: '20px',\n            height: '20px',\n            border: '2px solid #e5e7eb',\n            borderTop: '2px solid #3b82f6',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite'\n          }} />\n        </div>\n      )}\n      \n      <img\n        ref={imgRef}\n        src={imageSrc || ''}\n        alt={alt}\n        className={combinedClassName}\n        style={{\n          ...combinedStyle,\n          opacity: isLoading ? 0 : 1,\n          transition: 'opacity 0.3s ease'\n        }}\n        loading={loading}\n        onLoad={handleImageLoad}\n        onError={handleImageError}\n      />\n      \n      <style>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n        \n        .fallback-image {\n          display: block;\n          max-width: 100%;\n          height: auto;\n        }\n        \n        .fallback-image.loading {\n          opacity: 0;\n        }\n        \n        .fallback-image.fallback-used {\n          filter: grayscale(0.1);\n        }\n        \n        .image-placeholder {\n          background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n          background-size: 200% 100%;\n          animation: shimmer 1.5s infinite;\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -200% 0; }\n          100% { background-position: 200% 0; }\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default FallbackImage\n\n// Export utility component for common use cases\nexport const NFTImage: React.FC<Omit<FallbackImageProps, 'type'>> = (props) => (\n  <FallbackImage {...props} type=\"nft\" />\n)\n\nexport const CollectionImage: React.FC<Omit<FallbackImageProps, 'type'>> = (props) => (\n  <FallbackImage {...props} type=\"collection\" />\n)\n\nexport const AvatarImage: React.FC<Omit<FallbackImageProps, 'type'>> = (props) => (\n  <FallbackImage {...props} type=\"avatar\" />\n)\n\nexport const TokenImage: React.FC<Omit<FallbackImageProps, 'type'>> = (props) => (\n  <FallbackImage {...props} type=\"token\" />\n)","import React, { useState } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { wharfKitService, WharfKitService } from '../services/wharfkit'\nimport { apiService } from '../services/api'\nimport { log } from '../services/loggingService'\nimport '../css/collection-tier-modal.css'\n\ninterface TierOption {\n  id: string\n  name: string\n  cost: number\n  costFormatted: string\n  icon: string\n  benefits: string[]\n  description: string\n}\n\ninterface CollectionTierModalProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst TIER_OPTIONS: TierOption[] = [\n  {\n    id: 'bronze',\n    name: 'Bronze',\n    cost: 5000000,\n    costFormatted: '5M PXJ',\n    icon: '🥉',\n    description: 'Perfect for new collections getting started',\n    benefits: [\n      'Basic marketplace listing',\n      'Collection verification badge',\n      'Community Discord access',\n      'Monthly featured spot rotation'\n    ]\n  },\n  {\n    id: 'silver',\n    name: 'Silver',\n    cost: 15000000,\n    costFormatted: '15M PXJ',\n    icon: '🥈',\n    description: 'Enhanced visibility and analytics access',\n    benefits: [\n      'All Bronze benefits',\n      'Priority marketplace placement',\n      'Weekly newsletter mentions',\n      'Custom collection banner',\n      'Analytics dashboard access'\n    ]\n  },\n  {\n    id: 'gold',\n    name: 'Gold',\n    cost: 30000000,\n    costFormatted: '30M PXJ',\n    icon: '🥇',\n    description: 'Premium promotion and exclusive events',\n    benefits: [\n      'All Silver benefits',\n      'Homepage featured carousel',\n      'Social media promotion',\n      'Exclusive events participation',\n      'Direct community manager contact'\n    ]\n  },\n  {\n    id: 'platinum',\n    name: 'Platinum',\n    cost: 50000000,\n    costFormatted: '50M PXJ',\n    icon: '💎',\n    description: 'Ultimate tier with maximum benefits',\n    benefits: [\n      'All Gold benefits',\n      'Permanent homepage presence',\n      'Dedicated marketing campaigns',\n      'WaxRock Council consideration',\n      'Platform governance participation',\n      'White-label marketplace options'\n    ]\n  }\n]\n\nconst CollectionTierModal: React.FC<CollectionTierModalProps> = ({ isOpen, onClose }) => {\n  const [selectedTier, setSelectedTier] = useState<string>('')\n  const [collectionName, setCollectionName] = useState('')\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [userBalance, setUserBalance] = useState<number | null>(null)\n  const [balanceLoading, setBalanceLoading] = useState(false)\n  \n  const { session, isConnected } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n\n  // Fetch user's PXJ balance when modal opens\n  React.useEffect(() => {\n    if (isOpen && isConnected && session) {\n      fetchUserBalance()\n    }\n  }, [isOpen, isConnected, session])\n\n  const fetchUserBalance = async () => {\n    if (!session) return\n    \n    setBalanceLoading(true)\n    try {\n      const pxjBalance = await apiService.getWaxCurrencyBalance(\n        WharfKitService.safeGetActor(session), \n        'token.pxj', \n        'PXJ'\n      )\n      const balance = pxjBalance.length > 0 ? parseFloat(pxjBalance[0].balance.split(' ')[0]) : 0\n      setUserBalance(balance)\n    } catch (error) {\n      log.error('Failed to fetch PXJ balance', 'CollectionTierModal', error as Error)\n      setUserBalance(0)\n    } finally {\n      setBalanceLoading(false)\n    }\n  }\n\n  const handleTierPayment = async () => {\n    if (!selectedTier || !collectionName.trim()) {\n      showError('Please select a tier and enter a collection name')\n      return\n    }\n\n    if (!isConnected || !session) {\n      showError('Please connect your wallet to proceed with payment')\n      return\n    }\n\n    const tier = TIER_OPTIONS.find(t => t.id === selectedTier)\n    if (!tier) {\n      showError('Invalid tier selected')\n      return\n    }\n\n    if (userBalance !== null && userBalance < tier.cost) {\n      showError(`Insufficient PXJ balance. You need at least ${tier.costFormatted} to upgrade to ${tier.name} tier.`)\n      return\n    }\n\n    setIsProcessing(true)\n    \n    try {\n      const memo = `upgrade-collection:${collectionName.toUpperCase()}:${tier.id.toUpperCase()}`\n      \n      const transferAction = {\n        account: 'token.pxj',\n        name: 'transfer',\n        authorization: [{\n          actor: WharfKitService.safeGetActor(session),\n          permission: 'active'\n        }],\n        data: {\n          from: WharfKitService.safeGetActor(session),\n          to: 'market.pxj',\n          quantity: `${tier.cost.toFixed(8)} PXJ`,\n          memo: memo\n        }\n      }\n\n      await wharfKitService.transact([transferAction])\n      \n      showSuccess(`Successfully upgraded ${collectionName} to ${tier.name} tier! Your upgrade will be processed by our team.`)\n      onClose()\n      setSelectedTier('')\n      setCollectionName('')\n      \n    } catch (error) {\n      log.error('Tier upgrade payment failed', 'CollectionTierModal', error instanceof Error ? error : new Error(String(error)))\n      showError(`Payment failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const selectedTierData = TIER_OPTIONS.find(t => t.id === selectedTier)\n  const canAfford = (tier: TierOption) => userBalance !== null && userBalance >= tier.cost\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-backdrop\" onClick={onClose}>\n      <div className=\"modal-content collection-tier-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">Upgrade Collection Tier</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          {/* Balance Display */}\n          <div className=\"balance-section\">\n            <div className=\"balance-info\">\n              <span className=\"balance-label\">Your PXJ Balance:</span>\n              <span className=\"collection-balance-amount\">\n                {balanceLoading ? (\n                  <span className=\"loading-text\">Loading...</span>\n                ) : (\n                  <span className={userBalance !== null && userBalance > 0 ? 'balance-positive' : 'balance-zero'}>\n                    {userBalance !== null ? `${userBalance.toLocaleString()} PXJ` : 'Unable to load'}\n                  </span>\n                )}\n              </span>\n            </div>\n          </div>\n\n          {/* Collection Name Input */}\n          <div className=\"form-group\">\n            <label htmlFor=\"collectionName\">Collection Name:</label>\n            <input\n              type=\"text\"\n              id=\"collectionName\"\n              value={collectionName}\n              onChange={(e) => setCollectionName(e.target.value)}\n              placeholder=\"Enter your collection name\"\n              className=\"collection-input\"\n              disabled={isProcessing}\n            />\n          </div>\n\n          {/* Tier Selection */}\n          <div className=\"tier-selection\">\n            <h3>Select Tier:</h3>\n            <div className=\"tier-grid\">\n              {TIER_OPTIONS.map((tier) => {\n                const affordable = canAfford(tier)\n                const isSelected = selectedTier === tier.id\n                \n                return (\n                  <div\n                    key={tier.id}\n                    className={`tier-card ${\n                      isSelected ? 'selected' : ''\n                    } ${\n                      !affordable ? 'unaffordable' : ''\n                    }`}\n                    onClick={() => !isProcessing && setSelectedTier(tier.id)}\n                  >\n                    <div className=\"tier-header\">\n                      <span className=\"tier-icon\">{tier.icon}</span>\n                      <div className=\"tier-info\">\n                        <h4 className=\"tier-name\">{tier.name}</h4>\n                        <div className=\"tier-cost\">{tier.costFormatted}</div>\n                      </div>\n                      {!affordable && (\n                        <div className=\"insufficient-badge\">Insufficient Balance</div>\n                      )}\n                    </div>\n                    <p className=\"tier-description\">{tier.description}</p>\n                    <div className=\"tier-benefits\">\n                      <h5>Benefits:</h5>\n                      <ul>\n                        {tier.benefits.map((benefit, index) => (\n                          <li key={index}>{benefit}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n\n          {/* Selected Tier Summary */}\n          {selectedTierData && (\n            <div className=\"selected-tier-summary\">\n              <h4>Upgrade Summary</h4>\n              <div className=\"summary-content\">\n                <div className=\"summary-item\">\n                  <span>Collection:</span>\n                  <span>{collectionName || 'Not specified'}</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span>Tier:</span>\n                  <span>{selectedTierData.icon} {selectedTierData.name}</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span>Cost:</span>\n                  <span>{selectedTierData.costFormatted}</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span>Remaining Balance:</span>\n                  <span>\n                    {userBalance !== null \n                      ? `${(userBalance - selectedTierData.cost).toLocaleString()} PXJ`\n                      : 'Unknown'\n                    }\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-footer\">\n          <button \n            className=\"btn-secondary\"\n            onClick={onClose}\n            disabled={isProcessing}\n          >\n            Cancel\n          </button>\n          <button \n            className=\"btn-primary\"\n            onClick={handleTierPayment}\n            disabled={\n              isProcessing || \n              !selectedTier || \n              !collectionName.trim() || \n              !isConnected ||\n              (selectedTierData && userBalance !== null && userBalance < selectedTierData.cost)\n            }\n          >\n            {isProcessing ? (\n              <>\n                <span className=\"loading-spinner\"></span>\n                Processing...\n              </>\n            ) : (\n              `Upgrade to ${selectedTierData?.name || 'Selected Tier'}`\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CollectionTierModal","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../css/collections.css'\nimport { apiService } from '../services/api'\nimport type { CollectionData } from '../services/api'\nimport TruncatedText from './TruncatedText'\nimport ErrorMessage from './ErrorMessage'\nimport { ErrorMessageService } from '../services/errorMessageService'\nimport { log } from '../services/loggingService'\nimport { CollectionImage } from './FallbackImage'\nimport CollectionTierModal from './CollectionTierModal'\n\ninterface Collection {\n  collection_name: string\n  name: string\n  img?: string\n  author: string\n  created_at_time: string\n  created_at_block: string\n  floor_price?: number\n  volume?: string\n  market_cap?: string\n  assets?: string\n  loading_market_data?: boolean\n}\n\nconst Collections: React.FC = () => {\n  const [collections, setCollections] = useState<Collection[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n  const [showTierModal, setShowTierModal] = useState(false)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [sortBy, setSortBy] = useState<'name' | 'author' | 'created'>('name')\n  const [displayedCount, setDisplayedCount] = useState(12)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [showTierPerks, setShowTierPerks] = useState(false)\n  const [totalFetched, setTotalFetched] = useState(0)\n\n    // PxApproved Projects with dynamic image loading\n  const [pxApprovedProjects, setPxApprovedProjects] = useState<{\n    name: string\n    collection: string\n    image: string | null\n    description: string\n    tier: string\n    verified: boolean\n  }[]>([\n    {\n      name: 'Pixel Journey',\n      collection: 'pixeljourney',\n      image: null,\n      description: 'The original Pixel Journey collection',\n      tier: 'platinum',\n      verified: true\n    },\n    {\n      name: 'Fried Factory',\n      collection: 'friedfactory',\n      image: null,\n      description: '3D NFT collection by @Friedfactory the 3D legend (and artist of our Journey Ingredients too)!',\n      tier: 'partner',\n      verified: true\n    },\n    {\n      name: 'Crypto Muffins',\n      collection: 'crptomuffins',\n      image: null,\n      description: 'Delicious crypto-themed NFT collection by AKU!',\n      tier: 'gold',\n      verified: true\n    },\n    {\n      name: 'Aku Fish Heads',\n      collection: 'akufishheads',\n      image: null,\n      description: 'Unique AKU-licious NFT collection',\n      tier: 'silver',\n      verified: true\n    },\n    {\n      name: 'Pantheon',\n      collection: 'pantheon',\n      image: null,\n      description: 'Mythological NFT collection',\n      tier: 'bronze',\n      verified: true\n    },\n    {\n      name: 'Pocket People',\n      collection: 'pocketsizedp',\n      image: null,\n      description: 'Pocket Sized PFPs by our first Partner, Kettleman!',\n      tier: 'partner',\n      verified: true\n    },\n    {\n      name: 'NIMAs Odyssey',\n      collection: 'nimasodyssey',\n      image: null,\n      description: 'NIMAs Odyssey, a Discord RPG Driven NFT Mining Game',\n      tier: 'partner',\n      verified: true\n    }\n  ])\n\n  // Fetch collection metadata for PxApproved projects\n  const fetchPxApprovedImages = useCallback(async () => {\n    try {\n      setPxApprovedProjects(currentProjects => {\n        // Only fetch images for projects that don't have them yet\n        const projectsNeedingImages = currentProjects.filter(project => !project.image)\n        \n        if (projectsNeedingImages.length === 0) {\n          return currentProjects // No updates needed\n        }\n        \n        // Fetch images for projects that need them\n        Promise.all(\n          projectsNeedingImages.map(async (project) => {\n            try {\n              const collectionData = await apiService.getCollectionDetails(project.collection)\n              return {\n                ...project,\n                image: collectionData?.img || null\n              }\n            } catch (error) {\n              log.warn(`Failed to fetch image for ${project.collection}`, 'Collections', error as Error)\n              return project\n            }\n          })\n        ).then(updatedProjectsWithImages => {\n          setPxApprovedProjects(prevProjects => \n            prevProjects.map(project => {\n              const updated = updatedProjectsWithImages.find(up => up.collection === project.collection)\n              return updated || project\n            })\n          )\n        })\n        \n        return currentProjects // Return current state immediately\n      })\n    } catch (error) {\n      log.error('Failed to fetch PxApproved project images', 'Collections', error as Error)\n    }\n  }, [])\n\n  // Fetch all collections using API service\n  // Fetch market data for collections\n  const fetchMarketDataForCollections = async (collections: Collection[]) => {\n    const updatedCollections = [...collections]\n    \n    // Process collections in batches to avoid overwhelming the API\n    const batchSize = 5\n    for (let i = 0; i < collections.length; i += batchSize) {\n      const batch = collections.slice(i, i + batchSize)\n      \n      const batchResults = await Promise.allSettled(batch.map(async (collection, batchIndex) => {\n        const collectionIndex = i + batchIndex\n        try {\n          // Fetch live floor price and market stats in parallel\n          const [floorPriceData, marketStats] = await Promise.all([\n            apiService.getCollectionFloorPrice(collection.collection_name),\n            apiService.getCollectionMarketStats({ collection_name: collection.collection_name })\n          ])\n          \n          return {\n            index: collectionIndex,\n            data: {\n              ...updatedCollections[collectionIndex],\n              floor_price: floorPriceData.floorPrice,\n              volume: marketStats.data?.volume,\n              market_cap: marketStats.data?.volume ? \n                (floorPriceData.floorPrice * parseFloat(marketStats.data.volume)).toFixed(2) : undefined,\n              assets: marketStats.data?.sales,\n              loading_market_data: false\n            }\n          }\n        } catch (error) {\n          ErrorMessageService.logError('Collections.fetchMarketDataForCollections', error, { \n            collection_name: collection.collection_name \n          })\n          return {\n            index: collectionIndex,\n            data: {\n              ...updatedCollections[collectionIndex],\n              loading_market_data: false\n            }\n          }\n        }\n      }))\n      \n      // Update all batch results at once to minimize re-renders\n      batchResults.forEach(result => {\n        if (result.status === 'fulfilled') {\n          updatedCollections[result.value.index] = result.value.data\n        }\n      })\n      \n      // Small delay between batches to be respectful to the API\n       if (i + batchSize < collections.length) {\n         await new Promise(resolve => setTimeout(resolve, 100))\n       }\n     }\n     \n     // Update state once after all batches are processed\n     setCollections([...updatedCollections])\n   }\n\n  const fetchCollections = async (limit = 50) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const data = await apiService.getCollections({ limit, whitelistOnly: true })\n      const mappedCollections: Collection[] = (data || []).map((col: CollectionData) => ({\n        collection_name: col.collection_name,\n        name: col.name,\n        img: col.img,\n        author: col.author,\n        created_at_time: col.created_at_time,\n        created_at_block: col.created_at_block,\n        loading_market_data: true\n      }))\n      setCollections(mappedCollections)\n      setTotalFetched(data?.length || 0)\n      \n      // Fetch market data for each collection\n      fetchMarketDataForCollections(mappedCollections)\n    } catch (error) {\n      const errorObj = error instanceof Error ? error : new Error('Failed to fetch collections')\n      setError(errorObj)\n      ErrorMessageService.logError('Collections.fetchCollections', errorObj, { limit })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchCollections()\n    fetchPxApprovedImages()\n  }, [fetchPxApprovedImages]) // Safe to depend on memoized function with no dependencies\n\n  // Filter and sort collections based on search term and sort option\n  const filteredCollections = collections\n    .filter(collection => \n      collection.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      collection.collection_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      collection.author.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name)\n        case 'author':\n          return a.author.localeCompare(b.author)\n        case 'created':\n          return new Date(b.created_at_time).getTime() - new Date(a.created_at_time).getTime()\n        default:\n          return 0\n      }\n    })\n\n  // Filter PxApproved projects based on search term\n  const filteredPxApproved = pxApprovedProjects.filter(project =>\n    project.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    project.collection.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  // Get displayed collections (limited by displayedCount)\n  const displayedCollections = filteredCollections.slice(0, displayedCount)\n  const hasMoreCollections = filteredCollections.length > displayedCount || (totalFetched >= 50 && displayedCount >= filteredCollections.length)\n\n  // Load more collections function\n  const loadMoreCollections = async () => {\n    setLoadingMore(true)\n    try {\n      // If we have more collections already fetched, just show more\n      if (displayedCount < collections.length) {\n        setDisplayedCount(prev => prev + 12)\n      } else {\n        // Fetch more collections from API\n        const newLimit = totalFetched + 50\n        const data = await apiService.getCollections({ limit: newLimit, whitelistOnly: true })\n        if (data && data.length > totalFetched) {\n          const mappedCollections: Collection[] = data.map((col: CollectionData) => ({\n            collection_name: col.collection_name,\n            name: col.name,\n            img: col.img,\n            author: col.author,\n            created_at_time: col.created_at_time,\n            created_at_block: col.created_at_block,\n            loading_market_data: true\n          }))\n          setCollections(mappedCollections)\n          setTotalFetched(data.length)\n          setDisplayedCount(prev => prev + 12)\n          \n          // Fetch market data for new collections\n          const newCollections = mappedCollections.slice(totalFetched)\n          if (newCollections.length > 0) {\n            fetchMarketDataForCollections(newCollections)\n          }\n        }\n      }\n    } catch (error) {\n      const errorObj = error instanceof Error ? error : new Error('Failed to load more collections')\n      ErrorMessageService.logError('Collections.loadMoreCollections', errorObj, { \n        displayedCount, \n        totalFetched \n      })\n    } finally {\n      setLoadingMore(false)\n    }\n  }\n\n\n\n  return (\n    \n    <div className=\"collections-container\">\n\n      {/* Collections Header & PxApproved Info Section */}\n      <div className=\"perk-tiers-section\">\n        <div className=\"collections-header\">\n          <h1>Collections</h1>\n          <p className=\"collections-subtitle\">\n            Discover amazing NFT collections on the WAX blockchain\n          </p>\n        </div>\n        \n        <div className=\"info-card\">\n          <h3>PxApproved Collections</h3>\n          <p>\n            Only PxApproved collections are listed on our marketplace by default. \n            This ensures quality and authenticity for our community.\n          </p>\n          <div className=\"info-actions\">\n            <a \n              href=\"https://discord.gg/pixeljourney\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"discord-link\"\n            >\n              <svg className=\"discord-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z\"/>\n              </svg>\n              Join Discord for More Info\n            </a>\n            <button \n              className=\"payment-button\"\n              onClick={() => setShowTierModal(true)}\n            >\n              Upgrade Collection Tier\n            </button>\n            <button \n              className=\"toggle-tiers-button\"\n              onClick={() => setShowTierPerks(!showTierPerks)}\n            >\n              {showTierPerks ? 'Hide Tier Details' : 'Show Tier Details'}\n              <svg \n                className={`toggle-icon ${showTierPerks ? 'rotated' : ''}`} \n                viewBox=\"0 0 24 24\" \n                fill=\"currentColor\"\n              >\n                <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n        \n        <p className=\"tiers-description\">\n          Elevate your collection's status on PxMarket with our tier system. Each tier unlocks exclusive benefits and promotional opportunities.\n        </p>\n        \n        {showTierPerks && (\n        <div className=\"tiers-content\">\n          <div className=\"tiers-header\">\n            <h2>PxApproved Perk Tiers</h2>\n          </div>\n          <div className=\"tiers-grid\">\n          <div className=\"tier-card tier-bronze\">\n            <div className=\"tier-header\">\n              <span className=\"tier-icon\">🥉</span>\n              <h3>Bronze</h3>\n              <div className=\"tier-cost\">5M PXJ</div>\n            </div>\n            <div className=\"tier-benefits\">\n              <h4>Benefits:</h4>\n              <ul>\n                <li>Basic marketplace listing</li>\n                <li>Collection verification badge</li>\n                <li>Community Discord access</li>\n                <li>Monthly featured spot rotation</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"tier-card tier-silver\">\n            <div className=\"tier-header\">\n              <span className=\"tier-icon\">🥈</span>\n              <h3>Silver</h3>\n              <div className=\"tier-cost\">15M PXJ</div>\n            </div>\n            <div className=\"tier-benefits\">\n              <h4>Benefits:</h4>\n              <ul>\n                <li>All Bronze benefits</li>\n                <li>Priority marketplace placement</li>\n                <li>Weekly newsletter mentions</li>\n                <li>Custom collection banner</li>\n                <li>Analytics dashboard access</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"tier-card tier-gold\">\n            <div className=\"tier-header\">\n              <span className=\"tier-icon\">🥇</span>\n              <h3>Gold</h3>\n              <div className=\"tier-cost\">30M PXJ</div>\n            </div>\n            <div className=\"tier-benefits\">\n              <h4>Benefits:</h4>\n              <ul>\n                <li>All Silver benefits</li>\n                <li>Homepage featured carousel</li>\n                <li>Social media promotion</li>\n                <li>Exclusive events participation</li>\n                <li>Direct community manager contact</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"tier-card tier-partner\">\n            <div className=\"tier-header\">\n              <span className=\"tier-icon\">🤝</span>\n              <h3>Partner</h3>\n              <div className=\"tier-cost\">Special Agreement</div>\n            </div>\n            <div className=\"tier-benefits\">\n              <h4>Benefits:</h4>\n              <ul>\n                <li>All Gold benefits</li>\n                <li>Co-marketing opportunities</li>\n                <li>Revenue sharing programs</li>\n                <li>Joint event hosting</li>\n                <li>Custom integration support</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"tier-card tier-platinum\">\n            <div className=\"tier-header\">\n              <span className=\"tier-icon\">💎</span>\n              <h3>Platinum</h3>\n              <div className=\"tier-cost\">50M PXJ</div>\n            </div>\n            <div className=\"tier-benefits\">\n              <h4>Benefits:</h4>\n              <ul>\n                <li>All Partner benefits</li>\n                <li>Permanent homepage presence</li>\n                <li>Dedicated marketing campaigns</li>\n                <li>WaxRock Council consideration</li>\n                <li>Platform governance participation</li>\n                <li>White-label marketplace options</li>\n              </ul>\n            </div>\n          </div>\n          </div>\n        </div>\n        )}\n\n        {showTierPerks && (\n        <div className=\"council-note\">\n          <div className=\"council-info\">\n            <span className=\"council-icon\">🏛️</span>\n            <div>\n              <h4>WaxRock Council Authority</h4>\n              <p>\n                The WaxRock Council reserves the right to grant special tier status to exceptional collections \n                through community proposals and voting. Collections may also lobby for tier upgrades through \n                formal governance processes.\n              </p>\n            </div>\n          </div>\n        </div>\n        )}\n\n        {showTierPerks && (\n        <div className=\"apply-section\">\n          <h3>Ready to Upgrade Your Collection?</h3>\n          <p>Contact our team to discuss tier upgrades and promotional opportunities.</p>\n          <div className=\"apply-buttons\">\n            <a href=\"https://discord.gg/pixeljourney\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"apply-btn discord-btn\">\n              Apply via Discord\n            </a>\n            <button className=\"apply-btn payment-btn\" onClick={() => setShowTierModal(true)}>\n              Instant Tier Upgrade\n            </button>\n          </div>\n        </div>\n        )}\n      </div>\n\n      {/* Collection Tier Modal */}\n      <CollectionTierModal \n        isOpen={showTierModal}\n        onClose={() => setShowTierModal(false)}\n      />\n\n      {/* Search and Filter Section */}\n      <div className=\"search-filter-section\">\n        <div className=\"search-controls\">\n          <div className=\"search-input-container\">\n            <svg className=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n            </svg>\n            <input\n              type=\"text\"\n              placeholder=\"Search collections, authors, or names...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n            {searchTerm && (\n              <button \n                onClick={() => setSearchTerm('')}\n                className=\"clear-search\"\n                aria-label=\"Clear search\"\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            )}\n          </div>\n          <div className=\"sort-container\">\n            <label htmlFor=\"sortBy\">Sort by:</label>\n            <select\n              id=\"sortBy\"\n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value as 'name' | 'author' | 'created')}\n              className=\"sort-select\"\n            >\n              <option value=\"name\">Name</option>\n              <option value=\"author\">Author</option>\n              <option value=\"created\">Created Date</option>\n            </select>\n          </div>\n        </div>\n        {searchTerm && (\n          <div className=\"search-results-info\">\n            <p>Found {filteredCollections.length + filteredPxApproved.length} results for \"{searchTerm}\"</p>\n          </div>\n        )}\n      </div>\n\n      {/* PxApproved Projects Section - Only show if there are filtered results or no search */}\n      {(!searchTerm || filteredPxApproved.length > 0) && (\n        <div className=\"pxapproved-section\">\n          <h2>PxApproved {searchTerm && `(${filteredPxApproved.length})`}</h2>\n          <div className=\"approved-projects-grid\">\n            {filteredPxApproved.map((project, index) => (\n              <Link key={index} to={`/collections/${project.collection}`} className=\"project-card-link\">\n                <div className={`project-card project-card-${project.tier}`}>\n                  <div className=\"project-tier-badge\">\n                    <span className={`tier-label tier-${project.tier}`}>{project.tier.toUpperCase()}</span>\n                    {project.verified && <span className=\"verified-badge\">✓</span>}\n                  </div>\n                  <img \n                    src={project.image && typeof project.image === 'string' ? \n                      (project.image.startsWith('http') ? project.image : `https://ipfs.io/ipfs/${project.image}`) \n                      : '/img/placeholder-collection.svg'\n                    } \n                    alt={project.name} \n                    className=\"project-image\"\n                    onError={(e) => {\n                      e.currentTarget.src = '/img/placeholder-collection.svg'\n                    }}\n                  />\n                  <div className=\"project-info\">\n                    <h3>{project.name}</h3>\n                    <p className=\"project-collection\">{project.collection}</p>\n                    <TruncatedText \n                      text={project.description} \n                      maxLength={240}\n                      className=\"project-description\"\n                    />\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* All Collections Section */}\n      <div className=\"all-collections-section\">\n        <h2>More Collections on WAX {searchTerm && `(${filteredCollections.length})`}</h2>\n        {error ? (\n          <ErrorMessage\n            errorType=\"COLLECTION_NOT_FOUND\"\n            onRetry={() => fetchCollections()}\n            showRetry={true}\n          />\n        ) : loading ? (\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n            <p>Loading collections...</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"collections-grid\">\n              {displayedCollections.length > 0 ? (\n                displayedCollections.map((collection) => (\n                  <Link \n                    key={collection.collection_name} \n                    to={`/collections/${collection.collection_name}`}\n                    className=\"collection-card\"\n                  >\n                    <CollectionImage \n                      src={collection.img ? \n                        (collection.img.startsWith('http') ? collection.img : `https://ipfs.io/ipfs/${collection.img}`) \n                        : undefined\n                      } \n                      alt={collection.collection_name}\n                      width={150}\n                      height={150}\n                      fallbackText={collection.collection_name}\n                      className=\"collection-image\"\n                    />\n                    <div className=\"collection-info\">\n                      <div className=\"collection-row-1\">\n                        <h3>{collection.name}</h3>\n                      </div>\n                      <div className=\"collection-row-2\">\n                        <p className=\"collection-name\">{collection.collection_name}</p>\n                      </div>\n                      <div className=\"collection-market-data\">\n                        {collection.loading_market_data ? (\n                          <div className=\"market-data-loading\">\n                            <div className=\"mini-spinner\"></div>\n                            <span>Loading market data...</span>\n                          </div>\n                        ) : (\n                          <>\n                            {collection.floor_price !== undefined && collection.floor_price > 0 && (\n                              <div className=\"market-stat\">\n                                <span className=\"stat-label\">Floor:</span>\n                                <span className=\"stat-value\">{collection.floor_price.toFixed(4)} WAX</span>\n                              </div>\n                            )}\n                            {collection.volume && (\n                              <div className=\"market-stat\">\n                                <span className=\"stat-label\">Volume:</span>\n                                <span className=\"stat-value\">{parseFloat(collection.volume).toLocaleString()} WAX</span>\n                              </div>\n                            )}\n                            {collection.assets && (\n                              <div className=\"market-stat\">\n                                <span className=\"stat-label\">Assets:</span>\n                                <span className=\"stat-value\">{collection.assets}</span>\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </Link>\n                ))\n              ) : searchTerm ? (\n                <div className=\"no-results\">\n                  <svg className=\"no-results-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                  </svg>\n                  <h3>No collections found</h3>\n                  <p>Try adjusting your search terms or browse all collections</p>\n                  <button \n                    onClick={() => setSearchTerm('')}\n                    className=\"clear-search-button\"\n                  >\n                    Clear Search\n                  </button>\n                </div>\n              ) : null}\n            </div>\n            \n            {/* Load More Button */}\n            {hasMoreCollections && !searchTerm && (\n              <div className=\"load-more-container\">\n                <button \n                  onClick={loadMoreCollections}\n                  disabled={loadingMore}\n                  className=\"load-more-button\"\n                >\n                  {loadingMore ? (\n                    <>\n                      <div className=\"button-spinner\"></div>\n                      Loading...\n                    </>\n                  ) : (\n                    `Load More Collections (${filteredCollections.length - displayedCount} remaining)`\n                  )}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Collections","import React from 'react'\nimport { getCollectionTier, getTierBadgeConfig } from '../config/collectionTiers'\nimport '../css/quick-links.css'\n\ninterface QuickLinksProps {\n  collectionName: string\n}\n\nconst QuickLinks: React.FC<QuickLinksProps> = ({ collectionName }) => {\n  const tierInfo = getCollectionTier(collectionName)\n  \n  if (!tierInfo) {\n    return null\n  }\n\n  const badgeConfig = getTierBadgeConfig(tierInfo.tier)\n  const hasQuickLinks = tierInfo.quickLinks && tierInfo.quickLinks.length > 0\n\n  return (\n    <div className=\"quick-links-container\">\n      {/* Tier Badge */}\n      <div className=\"tier-section\">\n        <div className={`tier-badge ${badgeConfig.className}`}>\n          <span className=\"tier-icon\">{badgeConfig.icon}</span>\n          <span className=\"tier-label\">{badgeConfig.label}</span>\n          {tierInfo.verified && <span className=\"verified-icon\">✓</span>}\n        </div>\n      </div>\n\n      {/* Quick Links */}\n      {hasQuickLinks && (\n        <div className=\"links-section\">\n          <h4 className=\"links-title\">Quick Links</h4>\n          <div className=\"links-grid\">\n            {tierInfo.quickLinks!.map((link, index) => (\n              <a\n                key={index}\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"quick-link\"\n              >\n                {link.icon && <span className=\"link-icon\">{link.icon}</span>}\n                <span className=\"link-label\">{link.label}</span>\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Collection Owner Message & Discord */}\n      {(tierInfo.ownerMessage || tierInfo.discordUrl) && (\n        <div className=\"owner-section\">\n          {tierInfo.ownerMessage && (\n            <div className=\"owner-message\">\n              <div className=\"owner-title-container\" style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                marginBottom: '8px'\n              }}>\n                <h4 className=\"owner-title\">From the Collection Owner</h4>\n                <div \n                  className=\"info-tooltip\"\n                  title=\"This message is provided directly by the collection owner to share information about their project, community, or special announcements with collectors and fans.\"\n                  style={{\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    width: '16px',\n                    height: '16px',\n                    borderRadius: '50%',\n                    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                    border: '1px solid rgba(255, 255, 255, 0.2)',\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontSize: '12px',\n                    fontWeight: 'bold',\n                    cursor: 'help',\n                    transition: 'all 0.2s ease'\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.15)'\n                    e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.3)'\n                    e.currentTarget.style.color = 'rgba(255, 255, 255, 0.9)'\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.1)'\n                    e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                    e.currentTarget.style.color = 'rgba(255, 255, 255, 0.7)'\n                  }}\n                >\n                  ?\n                </div>\n              </div>\n              <p className=\"owner-text\">{tierInfo.ownerMessage}</p>\n            </div>\n          )}\n          {tierInfo.discordUrl && (\n            <div className=\"discord-section\">\n              <a\n                href={tierInfo.discordUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"discord-link\"\n              >\n                <span className=\"discord-icon\">💬</span>\n                <span className=\"discord-text\">Join Our Discord Community</span>\n                <span className=\"external-icon\">↗</span>\n              </a>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Learn About Grid */}\n      {tierInfo.learnAboutGrid && (\n        <div className=\"learn-about-section\" style={{ marginTop: '2rem' }}>\n          <h3 className=\"learn-about-title\">Learn About Pixel Journey</h3>\n          <div className=\"learn-about-grid\" style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n            gap: '16px',\n            marginTop: '16px'\n          }}>\n            {tierInfo.learnAboutGrid.map((item, index) => (\n              <div \n                key={index}\n                className=\"learn-about-card\"\n                style={{\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  border: '1px solid rgba(255, 255, 255, 0.1)',\n                  borderRadius: '12px',\n                  padding: '20px',\n                  transition: 'all 0.3s ease',\n                  cursor: item.url ? 'pointer' : 'default'\n                }}\n                onClick={() => item.url && window.open(item.url, '_blank')}\n                onMouseEnter={(e) => {\n                  if (item.url) {\n                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.08)'\n                    e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                    e.currentTarget.style.transform = 'translateY(-2px)'\n                  }\n                }}\n                onMouseLeave={(e) => {\n                  if (item.url) {\n                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.05)'\n                    e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.1)'\n                    e.currentTarget.style.transform = 'translateY(0)'\n                  }\n                }}\n              >\n                <div className=\"learn-card-header\" style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '12px',\n                  marginBottom: '12px'\n                }}>\n                  <span className=\"learn-card-icon\" style={{\n                    fontSize: '24px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    width: '40px',\n                    height: '40px',\n                    background: 'rgba(255, 255, 255, 0.1)',\n                    borderRadius: '8px'\n                  }}>\n                    {item.icon}\n                  </span>\n                  <h4 className=\"learn-card-title\" style={{\n                    margin: 0,\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    color: 'white'\n                  }}>\n                    {item.title}\n                  </h4>\n                  {item.url && (\n                    <span className=\"external-link-icon\" style={{\n                      marginLeft: 'auto',\n                      fontSize: '14px',\n                      color: 'rgba(255, 255, 255, 0.6)'\n                    }}>\n                      ↗\n                    </span>\n                  )}\n                </div>\n                <p className=\"learn-card-description\" style={{\n                  margin: 0,\n                  fontSize: '14px',\n                  lineHeight: '1.5',\n                  color: 'rgba(255, 255, 255, 0.8)'\n                }}>\n                  {item.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default QuickLinks","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { chatService, type ChatMessage, type ChatFilters, type ChatCostInfo } from '../services/chatService'\nimport { formatSafeMarkdown } from '../utils/sanitize'\nimport { log } from '../services/loggingService'\nimport '../css/chat-widget.css'\n\ninterface ChatWidgetProps {\n  collectionName?: string // For collection-specific chats\n}\n\nconst ChatWidget: React.FC<ChatWidgetProps> = ({ collectionName }) => {\n  const { account, isConnected } = useWallet()\n  const { showError, showSuccess } = useNotifications()\n  const { settings } = useDisplaySettings()\n  \n  // UI State\n  const [isExpanded, setIsExpanded] = useState(false)\n  const [isMinimized, setIsMinimized] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSending, setIsSending] = useState(false)\n  \n  // Chat State\n  const [messages, setMessages] = useState<ChatMessage[]>([])\n  const [unreadCount, setUnreadCount] = useState(0)\n  const [lastReadTimestamp, setLastReadTimestamp] = useState<string | null>(null)\n  const [newMessage, setNewMessage] = useState('')\n  const [costInfo, setCostInfo] = useState<ChatCostInfo | null>(null)\n  const [isSponsored, setIsSponsored] = useState(false)\n  const [autoRefresh, setAutoRefresh] = useState(true)\n  const [refreshInterval, setRefreshInterval] = useState(30) // seconds\n  const [showSponsoredInfo, setShowSponsoredInfo] = useState(false)\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  \n  // Filters\n  const [filters, setFilters] = useState<ChatFilters>({\n    collection: collectionName || undefined,\n    hideSpam: true\n  })\n  \n  // Refs\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const refreshIntervalRef = useRef<NodeJS.Timeout | null>(null)\n  const messageInputRef = useRef<HTMLTextAreaElement>(null)\n\n  // Formatting functions\n  const insertFormatting = (prefix: string, suffix: string = '') => {\n    const textarea = messageInputRef.current\n    if (!textarea) return\n\n    const start = textarea.selectionStart\n    const end = textarea.selectionEnd\n    const selectedText = newMessage.substring(start, end)\n    const beforeText = newMessage.substring(0, start)\n    const afterText = newMessage.substring(end)\n\n    const newText = beforeText + prefix + selectedText + suffix + afterText\n    setNewMessage(newText)\n\n    // Restore cursor position\n    setTimeout(() => {\n      textarea.focus()\n      const newCursorPos = start + prefix.length + selectedText.length + suffix.length\n      textarea.setSelectionRange(newCursorPos, newCursorPos)\n    }, 0)\n  }\n\n  const insertEmoji = (emoji: string) => {\n    const textarea = messageInputRef.current\n    if (!textarea) return\n\n    const start = textarea.selectionStart\n    const beforeText = newMessage.substring(0, start)\n    const afterText = newMessage.substring(start)\n\n    const newText = beforeText + emoji + afterText\n    setNewMessage(newText)\n    setShowEmojiPicker(false)\n\n    // Restore cursor position\n    setTimeout(() => {\n      textarea.focus()\n      const newCursorPos = start + emoji.length\n      textarea.setSelectionRange(newCursorPos, newCursorPos)\n    }, 0)\n  }\n\n  // Render formatted message content\n  const renderMessageContent = (content: string) => {\n    // Use safe markdown formatting with sanitization\n    const formatted = formatSafeMarkdown(content)\n    \n    return <span dangerouslySetInnerHTML={{ __html: formatted }} />\n  }\n  \n  // Update unread count when messages change\n  useEffect(() => {\n    if (messages.length === 0) {\n      setUnreadCount(0)\n      return\n    }\n\n    if (lastReadTimestamp) {\n      const unreadMessages = messages.filter(msg => \n        new Date(msg.timestamp) > new Date(lastReadTimestamp)\n      )\n      setUnreadCount(unreadMessages.length)\n    } else {\n      // If no read timestamp, all messages are unread when minimized\n      setUnreadCount(isMinimized ? messages.length : 0)\n    }\n  }, [messages, lastReadTimestamp, isMinimized])\n\n  // Mark messages as read when chat is opened\n  useEffect(() => {\n    if (!isMinimized && messages.length > 0) {\n      const latestMessage = messages[messages.length - 1]\n      setLastReadTimestamp(latestMessage.timestamp)\n      setUnreadCount(0)\n    }\n  }, [isMinimized, messages])\n\n  // Load messages function\n  const loadMessages = useCallback(async (silent: boolean = false) => {\n    if (!silent) setIsLoading(true)\n    \n    try {\n      const chatFilters = collectionName \n        ? { ...filters, collection: collectionName }\n        : filters\n      const fetchedMessages = await chatService.getMessages(chatFilters, 50, 0)\n      setMessages(fetchedMessages)\n    } catch (error) {\n      log.error('Error loading messages:', 'ChatWidget', error as Error)\n      if (!silent) {\n        showError('Failed to load chat messages')\n      }\n    } finally {\n      if (!silent) setIsLoading(false)\n    }\n  }, [filters, collectionName, showError])\n\n  // Auto-set collection filter when collectionName prop is provided\n  useEffect(() => {\n    if (collectionName && (!filters.collection || filters.collection !== collectionName)) {\n      setFilters(prev => ({ ...prev, collection: collectionName }))\n    }\n  }, [collectionName, filters])\n\n  // Load messages on component mount and when filters change\n  useEffect(() => {\n    loadMessages()\n  }, [loadMessages])\n  \n  // Auto-refresh messages\n  useEffect(() => {\n    if (autoRefresh && !isMinimized) {\n      refreshIntervalRef.current = setInterval(() => {\n        loadMessages(true)\n      }, refreshInterval * 1000)\n    } else {\n      if (refreshIntervalRef.current) {\n        clearInterval(refreshIntervalRef.current)\n        refreshIntervalRef.current = null\n      }\n    }\n    \n    return () => {\n      if (refreshIntervalRef.current) {\n        clearInterval(refreshIntervalRef.current)\n      }\n    }\n  }, [autoRefresh, isMinimized, refreshInterval, loadMessages])\n  \n  // Calculate message cost when message changes\n  const calculateCost = useCallback(async () => {\n    if (!account || !newMessage) return\n    \n    try {\n      const cost = await chatService.calculateMessageCost(newMessage, account, isSponsored)\n      setCostInfo(cost)\n    } catch (error) {\n      log.error('Error calculating cost:', 'ChatWidget', error as Error)\n    }\n  }, [account, newMessage, isSponsored])\n\n  useEffect(() => {\n    if (newMessage && account) {\n      calculateCost()\n    } else {\n      setCostInfo(null)\n    }\n  }, [newMessage, account, calculateCost])\n  \n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n  \n  // Don't render if chat button is disabled\n  if (!settings.showChatButton) {\n    return null\n  }\n  \n  const sendMessage = async () => {\n    if (!account || !newMessage.trim()) return\n    \n    setIsSending(true)\n    \n    try {\n      const messageToSend = collectionName \n        ? `::col:${collectionName}:: ${newMessage.trim()}`\n        : newMessage.trim()\n      const txId = await chatService.sendMessage(\n          messageToSend,\n          account,\n          collectionName,\n          isSponsored\n        )   \n      showSuccess('Message sent!', `Transaction: ${txId.substring(0, 8)}...`)\n      setNewMessage('')\n      setCostInfo(null)\n      setIsSponsored(false)\n      \n      // Refresh messages after a short delay\n      setTimeout(() => {\n        loadMessages(true)\n      }, 2000)\n      \n    } catch (error) {\n      log.error('Error sending message:', 'ChatWidget', error as Error)\n      \n      // Check if this might be a successful transaction with unexpected response format\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n      if (errorMessage.includes('transaction ID not found')) {\n        showError(\n          'Message Status Unclear', \n          'Your message may have been sent successfully. Please check your transaction history or refresh the chat to confirm.'\n        )\n      } else {\n        showError('Failed to send message', errorMessage)\n      }\n    } finally {\n      setIsSending(false)\n    }\n  }\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n  \n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp)\n    const now = new Date()\n    const diffMs = now.getTime() - date.getTime()\n    const diffMins = Math.floor(diffMs / 60000)\n    const diffHours = Math.floor(diffMs / 3600000)\n    const diffDays = Math.floor(diffMs / 86400000)\n    \n    if (diffMins < 1) return 'now'\n    if (diffMins < 60) return `${diffMins}m`\n    if (diffHours < 24) return `${diffHours}h`\n    if (diffDays < 7) return `${diffDays}d`\n    return date.toLocaleDateString()\n  }\n  \n  const formatPxjAmount = (amount: string) => {\n    const num = parseFloat(amount.split(' ')[0])\n    if (num >= 1000) return `${(num / 1000).toFixed(1)}K PXJ`\n    return `${num.toFixed(0)} PXJ`\n  }\n  \n  const getMessageTypeClass = (message: ChatMessage) => {\n    if (message.isSponsored) return 'chat_message--sponsored'\n    if (message.messageType === 'premium') return 'chat_message--premium'\n    return 'chat_message--normal'\n  }\n  \n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      sendMessage()\n    }\n  }\n  \n  if (isMinimized) {\n    return (\n      <div className=\"chat_widget chat_widget--minimized\">\n        <button \n          className=\"chat_toggle-btn\"\n          onClick={() => setIsMinimized(false)}\n          title=\"Open Chat\"\n        >\n          <span className=\"chat_icon\">💬</span>\n          {unreadCount > 0 && (\n            <span className=\"chat_notification-badge\">{unreadCount}</span>\n          )}\n        </button>\n      </div>\n    )\n  }\n  \n  return (\n    <div className={`chat_widget ${isExpanded ? 'chat_widget--expanded' : 'chat_widget--normal'}`}>\n      {/* Header */}\n      <div className=\"chat_header\">\n        <div className=\"chat_header-left\">\n          <span className=\"chat_title\">\n            {collectionName ? `${collectionName} Chat` : 'Global Chat'}\n          </span>\n          <span className=\"chat_status\">\n            {messages.length} messages\n          </span>\n        </div>\n        \n        <div className=\"chat_header-right\">\n          <button \n            className=\"chat_btn chat_btn--icon\"\n            onClick={() => loadMessages()}\n            disabled={isLoading}\n            title=\"Refresh\"\n          >\n            <span className={`chat_refresh-icon ${isLoading ? 'chat_refresh-icon--spinning' : ''}`}>🔄</span>\n          </button>\n          \n          <button \n            className=\"chat_btn chat_btn--icon\"\n            onClick={() => setIsExpanded(!isExpanded)}\n            title={isExpanded ? 'Minimize' : 'Expand'}\n          >\n            <span>{isExpanded ? '🗗' : '🗖'}</span>\n          </button>\n          \n          <button \n            className=\"chat_btn chat_btn--icon\"\n            onClick={() => setIsMinimized(true)}\n            title=\"Close\"\n          >\n            <span>✕</span>\n          </button>\n        </div>\n      </div>\n      \n      {/* Filters */}\n      {!collectionName && (\n        <div className=\"chat_filters\">\n          <select \n            className=\"chat_select\"\n            value={filters.collection || ''}\n            onChange={(e) => setFilters({...filters, collection: e.target.value || undefined})}\n          >\n            <option value=\"\">All Collections</option>\n            <option value=\"pixeljourney\">Pixel Journey</option>\n            <option value=\"pixalcards\">Pixal Cards</option>\n            {/* Add more collections as needed */}\n          </select>\n          \n          <label className=\"chat_checkbox-label\">\n            <input \n              type=\"checkbox\"\n              checked={filters.hideSpam || false}\n              onChange={(e) => setFilters({...filters, hideSpam: e.target.checked})}\n            />\n            Hide Spam\n          </label>\n          \n          <label className=\"chat_checkbox-label\">\n            <input \n              type=\"checkbox\"\n              checked={filters.showOnlySponsored || false}\n              onChange={(e) => setFilters({...filters, showOnlySponsored: e.target.checked})}\n            />\n            Sponsored Only\n          </label>\n        </div>\n      )}\n      \n      {/* Messages */}\n      <div className=\"chat_messages\">\n        {isLoading && messages.length === 0 ? (\n          <div className=\"chat_loading\">Loading messages...</div>\n        ) : messages.length === 0 ? (\n          <div className=\"chat_empty\">\n            <p>No messages yet.</p>\n            <p>Be the first to start the conversation!</p>\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div key={message.id} className={`chat_message ${getMessageTypeClass(message)}`}>\n              <div className=\"chat_message-header\">\n                <div className=\"chat_message-avatar\">\n                  <img \n                    src={`https://api.dicebear.com/7.x/identicon/svg?seed=${message.sender}`}\n                    alt={message.sender}\n                    className=\"chat_avatar\"\n                  />\n                </div>\n                \n                <div className=\"chat_message-info\">\n                  <span className=\"chat_sender\">{message.sender}</span>\n                  <span className=\"chat_timestamp\">{formatTimestamp(message.timestamp)}</span>\n                  <span className=\"chat_amount\">{formatPxjAmount(message.pxjAmount)}</span>\n                  {message.isSponsored && <span className=\"chat_sponsored-badge\">SPONSORED</span>}\n                </div>\n                \n                <div className=\"chat_message-actions\">\n                  <a \n                    href={`https://wax.bloks.io/transaction/${message.transactionId}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"chat_tx-link\"\n                    title=\"View on Explorer\"\n                  >\n                    🔗\n                  </a>\n                </div>\n              </div>\n              \n              <div className=\"chat_message-content\">\n                {renderMessageContent(message.message)}\n              </div>\n            </div>\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* Input */}\n      {isConnected ? (\n        <div className=\"chat_input-section\">\n          {costInfo && (\n            <div className=\"chat_cost-info\">\n              <div className=\"chat_cost-display\">\n                <span className=\"chat_cost-amount\">\n                  Cost: {(costInfo.totalCost / 10000).toFixed(4)} PXJ\n                </span>\n                <button \n                  className=\"chat_info-btn\"\n                  onClick={() => setShowPriceInfo(!showPriceInfo)}\n                  title=\"View price breakdown\"\n                >\n                  ℹ️\n                </button>\n              </div>\n              {costInfo.hasPixalPFP && (\n                <span className=\"chat_discount\">Pixal PFP Discount: {costInfo.discount}%</span>\n              )}\n              <span className=\"chat_char-count\">\n                {newMessage.length}/240 chars\n              </span>\n              {showPriceInfo && (\n                <div className=\"chat_price-tooltip\">\n                  <div className=\"chat_price-content\">\n                    <h4>Price Breakdown</h4>\n                    <div className=\"price-factor\">\n                      <span>Base Cost:</span>\n                      <span>{(costInfo.baseCost / 10000).toFixed(4)} PXJ</span>\n                    </div>\n                    <div className=\"price-factor\">\n                      <span>Character Cost ({newMessage.length} chars):</span>\n                      <span>{((costInfo.totalCost - costInfo.baseCost) / 10000).toFixed(4)} PXJ</span>\n                    </div>\n                    {costInfo.hasPixalPFP && (\n                      <div className=\"price-factor discount\">\n                        <span>Pixal PFP Discount ({costInfo.discount}%):</span>\n                        <span>-{((costInfo.baseCost + (costInfo.totalCost - costInfo.baseCost)) * (costInfo.discount / 100) / 10000).toFixed(4)} PXJ</span>\n                      </div>\n                    )}\n                    <div className=\"price-factor total\">\n                      <span>Total Cost:</span>\n                      <span>{(costInfo.totalCost / 10000).toFixed(4)} PXJ</span>\n                    </div>\n                    <div className=\"price-note\">\n                      <small>Cost increases by 100% per 50 extra characters. Holders capped at 500 PXJ.</small>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          \n          <div className=\"chat_input-controls\">\n            <div className=\"chat_sponsored-container\">\n              <label className=\"chat_checkbox-label\">\n                <input \n                  type=\"checkbox\"\n                  checked={isSponsored}\n                  onChange={(e) => setIsSponsored(e.target.checked)}\n                />\n                Sponsored ({costInfo?.hasPixalPFP ? '10,000' : '25,000'} PXJ)\n              </label>\n              <button \n                className=\"chat_info-btn\"\n                onClick={() => setShowSponsoredInfo(!showSponsoredInfo)}\n                title=\"Learn more about sponsored messages\"\n              >\n                ℹ️\n              </button>\n              {showSponsoredInfo && (\n                <div className=\"chat_info-tooltip\">\n                  <div className=\"chat_info-content\">\n                    <h4>Sponsored Messages</h4>\n                    <p>• Messages appear with special highlighting</p>\n                    <p>• Higher visibility in chat feed</p>\n                    <p>• Costs {costInfo?.hasPixalPFP ? '10,000' : '25,000'} PXJ regardless of length</p>\n                    <p>• {costInfo?.hasPixalPFP ? 'Pixal PFP holders get 60% discount!' : 'Get a Pixal PFP for 60% discount!'}</p>\n                    <p>• Perfect for announcements & promotions</p>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <label className=\"chat_checkbox-label\">\n              <input \n                type=\"checkbox\"\n                checked={autoRefresh}\n                onChange={(e) => setAutoRefresh(e.target.checked)}\n              />\n              Auto-refresh\n            </label>\n          </div>\n          \n          <div className=\"chat_formatting-toolbar\">\n            <button \n              className=\"chat_format-btn\"\n              onClick={() => insertFormatting('**', '**')}\n              title=\"Bold\"\n            >\n              <strong>B</strong>\n            </button>\n            <button \n              className=\"chat_format-btn\"\n              onClick={() => insertFormatting('*', '*')}\n              title=\"Italic\"\n            >\n              <em>I</em>\n            </button>\n            <div className=\"chat_emoji-container\">\n              <button \n                className=\"chat_format-btn\"\n                onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                title=\"Add emoji\"\n              >\n                😊\n              </button>\n              {showEmojiPicker && (\n                <div className=\"chat_emoji-picker\">\n                  <div className=\"chat_emoji-grid\">\n                    {['😊', '😂', '❤️', '👍', '👎', '🔥', '💯', '🚀', '💎', '🎉', '😎', '🤔', '😍', '🥳', '💪', '👏', '🙌', '✨', '⭐', '🌟'].map(emoji => (\n                      <button\n                        key={emoji}\n                        className=\"chat_emoji-btn\"\n                        onClick={() => insertEmoji(emoji)}\n                      >\n                        {emoji}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"chat_input-wrapper\">\n            <textarea\n              ref={messageInputRef}\n              className=\"chat_input\"\n              placeholder={`Type your message... (${collectionName ? collectionName : 'global'} chat)`}\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              maxLength={240}\n              rows={isExpanded ? 3 : 2}\n              disabled={isSending}\n            />\n            \n            <button \n              className=\"chat_send-btn\"\n              onClick={sendMessage}\n              disabled={!newMessage.trim() || isSending}\n            >\n              {isSending ? '⏳' : '📤'}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"chat_login-prompt\">\n          <p>Connect your wallet to join the chat!</p>\n        </div>\n      )}\n      \n      {/* Settings */}\n      {isExpanded && (\n        <div className=\"chat_settings\">\n          <div className=\"chat_setting-group\">\n            <label>Auto-refresh interval:</label>\n            <select \n              value={refreshInterval}\n              onChange={(e) => setRefreshInterval(Number(e.target.value))}\n              className=\"chat_select chat_select--small\"\n            >\n              <option value={10}>10s</option>\n              <option value={30}>30s</option>\n              <option value={60}>1m</option>\n              <option value={300}>5m</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ChatWidget","import React from 'react'\n\ninterface ImageZoomProps {\n  isOpen: boolean\n  imageUrl: string\n  imageName: string\n  onClose: () => void\n}\n\nconst ImageZoom: React.FC<ImageZoomProps> = ({ isOpen, imageUrl, imageName, onClose }) => {\n  if (!isOpen) return null\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose()\n    }\n  }\n\n  React.useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown)\n      document.body.style.overflow = 'hidden'\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n      document.body.style.overflow = 'unset'\n    }\n  }, [isOpen])\n\n  return (\n    <div className=\"image-zoom-modal\" onClick={onClose}>\n      <div className=\"zoom-modal-content\" onClick={(e) => e.stopPropagation()}>\n        <button \n          className=\"zoom-modal-close\"\n          onClick={onClose}\n        >\n          ×\n        </button>\n        <img \n          src={imageUrl} \n          alt={imageName}\n          className=\"zoom-modal-image\"\n        />\n        <div className=\"zoom-modal-info\">\n          <h3>{imageName}</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageZoom","import React, { useState, useEffect, useCallback } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport TruncatedText from './TruncatedText'\nimport MediaRenderer from './MediaRenderer'\nimport { getSaleAssetImageUrl, getSaleAssetVideoUrl } from '../utils/mediaUtils'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { getCollectionTier, getTierBadgeConfig } from '../config/collectionTiers'\nimport QuickLinks from './QuickLinks'\nimport ChatWidget from './ChatWidget'\nimport ImageZoom from './ImageZoom'\nimport ShareModal from './ShareModal'\n\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\nimport { log } from '../services/loggingService'\nimport '../css/collection-detail.css'\nimport '../css/CollectionProfile.css'\nimport '../css/quick-links.css'\nimport '../css/rwax.css'\n\n\n\ninterface SchemaFormat {\n  name: string\n  type: string\n}\n\ninterface Schema {\n  schema_name: string\n  format: SchemaFormat[]\n  created_at_time: string\n  created_at_block: string\n}\n\ninterface Template {\n  template_id: string\n  max_supply: string\n  is_transferable: boolean\n  is_burnable: boolean\n  issued_supply: string\n  immutable_data: Record<string, unknown>\n  created_at_time: string\n  created_at_block: string\n  schema_name: string\n}\n\ninterface CollectionData {\n  collection_name: string\n  name: string\n  img?: string\n  author: string\n  allow_notify: boolean\n  authorized_accounts: string[]\n  notify_accounts: string[]\n  market_fee: number\n  data?: Record<string, string | number | boolean>\n  created_at_block: string\n  created_at_time: string\n  assets?: string | number\n}\n\ninterface CollectionAnalytics {\n  volume: string\n  sales: string\n  floor_price: string\n  market_cap: string\n  holders: number\n  assets: string\n  volume_24h?: string\n}\n\ninterface Holder {\n  account: string\n  assets: string\n}\n\ninterface SimilarCollection {\n  collection_name: string\n  name: string\n  similarity_score?: number\n}\n\ninterface TopSale {\n  sale_id: string\n  assets: Array<{\n    data?: {\n      img?: string\n      video?: string\n      name?: string\n      [key: string]: string | number | boolean | undefined\n    }\n    template?: {\n      template_id: string\n      max_supply: string\n      immutable_data?: Record<string, string | number | boolean>\n    }\n    collection?: {\n      collection_name: string\n      name: string\n      img?: string\n    }\n    schema?: {\n      schema_name: string\n    }\n    asset_id?: string\n    name?: string\n  }>\n  listing_price: string\n  listing_symbol: string\n  seller: string\n  buyer?: string\n  updated_at_time: string\n  state: number\n  collection_name?: string\n  price?: {\n    amount: string\n    token_symbol: string\n    token_precision: number\n    token_contract: string\n  }\n}\n\nconst CollectionDetail: React.FC = React.memo(() => {\n  const { collectionName } = useParams<{ collectionName: string }>()\n  const { settings } = useDisplaySettings()\n  const [collection, setCollection] = useState<CollectionData | null>(null)\n  const [schemas, setSchemas] = useState<Schema[]>([])\n  const [templates, setTemplates] = useState<Template[]>([])\n  const [analytics, setAnalytics] = useState<CollectionAnalytics | null>(null)\n  const [volumePeriod, setVolumePeriod] = useState<'24' | '7' | '30' | '90' | '365'>('24')\n  const [volumeData, setVolumeData] = useState<{[key: string]: string}>({})\n  const [loadingVolume, setLoadingVolume] = useState(false)\n  const [marketCapCurrency, setMarketCapCurrency] = useState<'WAX' | 'USD'>('WAX')\n  const [waxToUsdRate, setWaxToUsdRate] = useState<number>(0.05) // Default WAX price\n  \n  const [holders, setHolders] = useState<Holder[]>([])\n  const [holdersPage, setHoldersPage] = useState(1)\n  const [loadingMoreHolders, setLoadingMoreHolders] = useState(false)\n  const [hasMoreHolders, setHasMoreHolders] = useState(true)\n  const [topSales, setTopSales] = useState<TopSale[]>([])\n  const [displayedSales, setDisplayedSales] = useState<TopSale[]>([])\n  const [salesPage, setSalesPage] = useState(1)\n  const [salesPerPage] = useState(10)\n  const [hasMoreSales, setHasMoreSales] = useState(false)\n  const [similarCollections, setSimilarCollections] = useState<SimilarCollection[]>([])\n  const [atomicMarketStats, setAtomicMarketStats] = useState<{\n    sales: string\n    volume: string\n    suggested_median: string\n    suggested_average: string\n  } | null>(null)\n  const [selectedSchema, setSelectedSchema] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [activeTab, setActiveTab] = useState<'sales' | 'holders' | 'schemas' | 'templates' | 'similar' | 'chat'>('sales')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [sortBy, setSortBy] = useState<'name' | 'created' | 'supply'>('name')\n  const [showImageZoom, setShowImageZoom] = useState(false)\n  const [zoomedImage, setZoomedImage] = useState<{url: string, name: string}>({url: '', name: ''})\n  const [showShareModal, setShowShareModal] = useState(false)\n\n\n\n  // Filter and sort schemas based on search term\n  const filteredSchemas = schemas\n    .filter(schema => \n      schema.schema_name.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.schema_name.localeCompare(b.schema_name)\n        case 'created':\n          return new Date(b.created_at_time).getTime() - new Date(a.created_at_time).getTime()\n        default:\n          return 0\n      }\n    })\n\n  // Filter and sort templates based on search term and selected schema\n  const filteredTemplates = templates\n    .filter(template => {\n      const matchesSearch = \n        (template.immutable_data?.name && String(template.immutable_data.name).toLowerCase().includes(searchTerm.toLowerCase())) ||\n        template.template_id.toLowerCase().includes(searchTerm.toLowerCase())\n      \n      const matchesSchema = !selectedSchema || template.schema_name === selectedSchema\n      \n      return matchesSearch && matchesSchema\n    })\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'name': {\n          const nameA = String(a.immutable_data?.name || `Template #${a.template_id}`)\n          const nameB = String(b.immutable_data?.name || `Template #${b.template_id}`)\n          return nameA.localeCompare(nameB)\n        }\n        case 'created':\n          return new Date(b.created_at_time).getTime() - new Date(a.created_at_time).getTime()\n        case 'supply':\n          return parseInt(b.issued_supply) - parseInt(a.issued_supply)\n        default:\n          return 0\n      }\n    })\n\n  // Function to fetch volume data from HiveBP API\n  const fetchVolumeData = useCallback(async (days: string) => {\n    if (!collectionName) return '0'\n    \n    try {\n      const response = await fetch(`https://wax-api.hivebp.io/v3/volume/${days}/${collectionName}`)\n      if (!response.ok) throw new Error('Failed to fetch volume data')\n      const data = await response.json()\n      return data.volume ? String(data.volume) : '0'\n    } catch (error) {\n      console.warn(`Failed to fetch ${days}d volume data:`, error)\n      return '0'\n    }\n  }, [collectionName])\n\n  // Function to fetch collection stats from HiveBP API\n  const fetchCollectionStats = useCallback(async () => {\n    if (!collectionName) return null\n    \n    try {\n      const response = await fetch(`https://wax-api.hivebp.io/v3/collection-stats/${collectionName}`)\n      if (!response.ok) throw new Error('Failed to fetch collection stats')\n      const data = await response.json()\n      return {\n        numUsers: data.numUsers || 0,\n        usdMarketCap: data.usdMarketCap || 0,\n        waxMarketCap: data.waxMarketCap || 0,\n        numAssets: data.numAssets || 0\n      }\n    } catch (error) {\n      console.warn('Failed to fetch collection stats:', error)\n      return null\n    }\n  }, [collectionName])\n\n  // Function to handle volume period switching\n  const handleVolumePeriodChange = useCallback(async () => {\n    if (!collectionName) return\n    \n    setLoadingVolume(true)\n    const periods: Array<'24' | '7' | '30' | '90' | '365'> = ['24', '7', '30', '90', '365']\n    const currentIndex = periods.indexOf(volumePeriod)\n    const nextPeriod = periods[(currentIndex + 1) % periods.length]\n    \n    // Check if we already have this data cached\n    if (volumeData[nextPeriod]) {\n      setVolumePeriod(nextPeriod)\n      setLoadingVolume(false)\n      return\n    }\n    \n    // Fetch new volume data\n    const newVolumeValue = await fetchVolumeData(nextPeriod)\n    setVolumeData(prev => ({ ...prev, [nextPeriod]: newVolumeValue }))\n    setVolumePeriod(nextPeriod)\n    setLoadingVolume(false)\n  }, [collectionName, volumePeriod, volumeData, fetchVolumeData])\n\n  const handleMarketCapToggle = async () => {\n    if (marketCapCurrency === 'WAX') {\n      // Fetch current WAX price when switching to USD\n      try {\n        const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=wax&vs_currencies=usd')\n        const data = await response.json()\n        if (data.wax && data.wax.usd) {\n          setWaxToUsdRate(data.wax.usd)\n        }\n      } catch (error) {\n        console.warn('Could not fetch WAX price:', error)\n      }\n      setMarketCapCurrency('USD')\n    } else {\n      setMarketCapCurrency('WAX')\n    }\n  }\n\n  const loadCollectionData = useCallback(async () => {\n    if (!collectionName) return\n    \n    setLoading(true)\n    setError(null)\n    \n    try {\n      // Load basic collection data first\n      const [collectionInfo, schemasData, templatesData] = await Promise.all([\n        apiService.getCollectionDetails(collectionName),\n        apiService.getCollectionSchemas(collectionName),\n        apiService.getCollectionTemplates(collectionName)\n      ])\n      \n      setCollection(collectionInfo)\n      setSchemas(schemasData)\n      setTemplates(templatesData)\n      \n      // Load enhanced analytics from HiveBP API and holder stats (non-blocking)\n      Promise.all([\n        apiService.getCollectionAnalytics(collectionName),\n        apiService.getEnhancedCollectionStats(collectionName),\n        apiService.getCollectionVolumeGraph(collectionName, 30),\n        apiService.getSimilarCollections(collectionName),\n        apiService.getCollectionHolders(collectionName, 500),\n        apiService.getCollectionTopSales(collectionName, 50),\n        fetchVolumeData('24'), // Fetch initial 24h volume data\n        fetchCollectionStats(), // Fetch collection stats from HiveBP API\n        apiService.getCollectionMarketStats({ collection_name: collectionName, symbol: 'WAX' }) // Fetch atomicmarket stats\n      ]).then(([analyticsData, enhancedStats, , similarData, holdersData, salesData, volume24h, collectionStats, marketStats]) => {\n        \n        // Cache the initial 24h volume data\n        setVolumeData(prev => ({ ...prev, '24': volume24h }))\n        \n        // Store atomicmarket stats with proper WAX decimal conversion\n        const processedMarketStats = marketStats.success && marketStats.data ? {\n          sales: marketStats.data.sales || '0',\n          volume: marketStats.data.volume ? String(parseFloat(marketStats.data.volume) / Math.pow(10, 8)) : '0',\n          suggested_median: marketStats.data.suggested_median ? String(parseFloat(marketStats.data.suggested_median) / Math.pow(10, 8)) : '0',\n          suggested_average: marketStats.data.suggested_average ? String(parseFloat(marketStats.data.suggested_average) / Math.pow(10, 8)) : '0'\n        } : null\n        \n        setAtomicMarketStats(processedMarketStats)\n        \n        // Merge analytics data with enhanced HiveBP stats\n        const combinedAnalytics: CollectionAnalytics = {\n           volume: processedMarketStats?.volume || analyticsData?.volume || '0',\n           sales: processedMarketStats?.sales || analyticsData?.sales || '0',\n           floor_price: enhancedStats.floorPrice && !isNaN(enhancedStats.floorPrice) ? String(enhancedStats.floorPrice) : \n             (analyticsData?.floor_price && !isNaN(parseFloat(analyticsData.floor_price)) ? analyticsData.floor_price : \n             (analyticsData?.floor && !isNaN(parseFloat(analyticsData.floor)) ? analyticsData.floor : \n             (processedMarketStats?.suggested_median && !isNaN(parseFloat(processedMarketStats.suggested_median)) ? processedMarketStats.suggested_median :\n             (salesData && salesData.length > 0 ? (() => {\n               const validPrices = salesData.slice(-5).map(sale => {\n                 const price = typeof sale.price === 'string' ? sale.price : (sale.price?.amount || '0')\n                 return parseFloat(price || '0')\n               }).filter(price => !isNaN(price) && price > 0)\n               return validPrices.length > 0 ? String(Math.min(...validPrices).toFixed(2)) : '0'\n             })() : '0')))),\n           market_cap: collectionStats?.waxMarketCap ? String(collectionStats.waxMarketCap) : enhancedStats.marketCap ? String(enhancedStats.marketCap) : (analyticsData?.market_cap || '0'),\n           holders: collectionStats?.numUsers || analyticsData?.holders || 0,\n           assets: collectionStats?.numAssets ? String(collectionStats.numAssets) : (analyticsData?.assets || '0'),\n           volume_24h: volume24h || (enhancedStats.volume24h ? String(enhancedStats.volume24h) : (analyticsData?.volume_24h || analyticsData?.volume || '0'))\n         }\n        \n        setAnalytics(combinedAnalytics)\n        // setVolumeGraph(volumeData) // Unused\n        setSimilarCollections(similarData)\n        setHolders(holdersData)\n        setTopSales(salesData || [])\n      }).catch(error => {\n        log.error('Enhanced analytics failed to load', 'CollectionDetail.loadCollectionData', error as Error, { collectionName })\n      })\n      \n    } catch (error) {\n      log.error('Failed to load collection data', 'CollectionDetail.loadCollectionData', error as Error, { collectionName })\n      setError(`Failed to load collection \"${collectionName}\". This collection may not exist or be temporarily unavailable.`)\n    } finally {\n      setLoading(false)\n    }\n  }, [collectionName])\n\n  const loadTemplates = useCallback(async (schemaName: string) => {\n    if (!collectionName) return\n    \n    try {\n      const templatesData = await apiService.getCollectionTemplates(collectionName, schemaName)\n      setTemplates(templatesData)\n    } catch (error) {\n      log.error('Failed to load collection templates', 'CollectionDetail.loadTemplates', error as Error, { collectionName, schemaName })\n    }\n  }, [collectionName])\n\n  useEffect(() => {\n    if (collectionName) {\n      loadCollectionData()\n    }\n  }, [collectionName, loadCollectionData])\n\n  useEffect(() => {\n    if (selectedSchema && collectionName) {\n      loadTemplates(selectedSchema)\n    }\n  }, [selectedSchema, collectionName, loadTemplates])\n\n  const loadMoreHolders = async () => {\n    if (!collectionName || loadingMoreHolders || !hasMoreHolders) return\n    \n    setLoadingMoreHolders(true)\n    try {\n      const nextPage = holdersPage + 1\n      const offset = (nextPage - 1) * 500\n      const newHolders = await apiService.getCollectionHolders(collectionName, 500, offset)\n      \n      if (newHolders && newHolders.length > 0) {\n        setHolders(prev => [...prev, ...newHolders])\n        setHoldersPage(nextPage)\n        setHasMoreHolders(newHolders.length === 500) // If we got less than 500, no more pages\n      } else {\n        setHasMoreHolders(false)\n      }\n    } catch (error) {\n      console.error('Error loading more holders:', error as Error)\n      setHasMoreHolders(false)\n    } finally {\n      setLoadingMoreHolders(false)\n    }\n  }\n\n  // Update displayed sales when topSales changes or page changes\n  useEffect(() => {\n    const startIndex = 0\n    const endIndex = salesPage * salesPerPage\n    const newDisplayedSales = topSales.slice(startIndex, endIndex)\n    setDisplayedSales(newDisplayedSales)\n    setHasMoreSales(endIndex < topSales.length)\n  }, [topSales, salesPage, salesPerPage])\n\n  const loadMoreSales = () => {\n    if (hasMoreSales) {\n      setSalesPage(prev => prev + 1)\n    }\n  }\n\n  const getImageUrl = (imgPath: string): string | undefined => {\n    if (!imgPath) return undefined\n    if (imgPath.startsWith('http')) return imgPath\n    return `https://ipfs.io/ipfs/${imgPath}`\n  }\n\n  const getTemplateImage = (template: Template): string => {\n    if (template.immutable_data?.img) {\n      const img = template.immutable_data.img\n      if (typeof img === 'string') {\n        return img.startsWith('Qm') ? `https://ipfs.io/ipfs/${img}` : img\n      }\n    }\n    return 'https://pixeljourney.xyz/img/toppixals/10.webp'\n  }\n\n  const getVideoUrl = (template: Template): string | null => {\n    if (template.immutable_data?.video) {\n      const video = template.immutable_data.video\n      if (typeof video === 'string') {\n        return video.startsWith('Qm') ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${video}` : video\n      }\n    }\n    return null\n  }\n\n\n\n\n\n  const formatSaleDate = (dateString: string): string => {\n    if (!dateString) return 'N/A'\n    try {\n      // Handle different date formats\n      let date: Date\n      if (dateString.includes('T')) {\n        // ISO string format\n        date = new Date(dateString)\n      } else {\n        // Handle timestamp - AtomicMarket API returns timestamps in seconds\n        const timestamp = parseInt(dateString)\n        // Check if timestamp is reasonable (after year 2000 and before year 2100)\n        if (timestamp > 946684800 && timestamp < 4102444800) {\n          // Timestamp is in seconds, convert to milliseconds\n          date = new Date(timestamp * 1000)\n        } else if (timestamp > 946684800000 && timestamp < 4102444800000) {\n          // Timestamp is already in milliseconds\n          date = new Date(timestamp)\n        } else {\n          // Invalid timestamp\n          return 'N/A'\n        }\n      }\n      \n      if (isNaN(date.getTime())) {\n        return 'N/A'\n      }\n      \n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n    } catch {\n      return 'N/A'\n    }\n  }\n\n  const renderMediaElement = (template: Template, className: string = 'template-image') => {\n    const videoUrl = getVideoUrl(template)\n    const imageUrl = getTemplateImage(template)\n    \n    return (\n      <MediaRenderer\n        imageUrl={imageUrl}\n        videoUrl={videoUrl}\n        alt={String(template.immutable_data?.name || 'NFT')}\n        className={className}\n        enableAnimations={settings.enableAnimatedNFTs}\n      />\n    )\n  }\n\n  const formatSupply = (current: string, max: string): string => {\n    if (max === '0') return `${current} (Unlimited)`\n    return `${current} / ${max}`\n  }\n\n  if (loading) {\n    return (\n      <div className=\"collection-detail-container\">\n        <div className=\"loading-state\">\n          <div className=\"spinner\"></div>\n          <p>Loading collection details...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"collection-detail-container\">\n        <div className=\"error-state\">\n          <h2>Collection Error</h2>\n          <p>{error}</p>\n          <Link to=\"/collections\" className=\"back-link\">← Back to Collections</Link>\n        </div>\n      </div>\n    )\n  }\n\n  if (!collection) {\n    return (\n      <div className=\"collection-detail-container\">\n        <div className=\"error-state\">\n          <h2>Collection Not Found</h2>\n          <p>The collection \"{collectionName}\" could not be found.</p>\n          <Link to=\"/collections\" className=\"back-link\">← Back to Collections</Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"collection-profile-page\">\n      {/* Hero Section */}\n      <div className=\"collection-hero\">\n        <div className=\"hero-background\">\n          <img \n            src={getImageUrl(collection.img || '')} \n            alt={collection.name || collection.collection_name}\n            className=\"hero-bg-image\"\n          />\n          <div className=\"hero-overlay\"></div>\n        </div>\n        \n        <div className=\"hero-content\">\n          <div className=\"breadcrumb\">\n            <Link to=\"/\" className=\"breadcrumb-link\">Home</Link>\n            <span className=\"breadcrumb-separator\">›</span>\n            <Link to=\"/collections\" className=\"breadcrumb-link\">Collections</Link>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span className=\"breadcrumb-current\">{collection.name || collection.collection_name}</span>\n          </div>\n          \n          <div className=\"collection-profile\">\n            <div className=\"collection-logo-container\">\n              <img \n                src={getImageUrl(collection.img || '')} \n                alt={collection.name || collection.collection_name}\n                className=\"collection-logo\"\n              />\n            </div>\n            \n            <div className=\"profile-info\">\n              <div className=\"title-section\">\n                <h1 className=\"collection-title\">{collection.name || collection.collection_name}</h1>\n              </div>\n              \n              {/* Collection Tier and Share Button Row */}\n              <div className=\"collection-actions-row\" style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '12px',\n                marginTop: '8px',\n                marginBottom: '12px'\n              }}>\n                {(() => {\n                  const tierInfo = getCollectionTier(collection.collection_name)\n                  if (tierInfo) {\n                    const badgeConfig = getTierBadgeConfig(tierInfo.tier)\n                    return (\n                      <div className={`collection-tier-badge ${badgeConfig.className}`}>\n                        <span className=\"tier-icon\">{badgeConfig.icon}</span>\n                        <span className=\"tier-label\">{badgeConfig.label}</span>\n                        {tierInfo.verified && <span className=\"verified-icon\">✓</span>}\n                      </div>\n                    )\n                  }\n                  return null\n                })()}\n                <button \n                  className=\"share-button\"\n                  onClick={() => setShowShareModal(true)}\n                  style={{\n                    background: 'rgba(255, 255, 255, 0.1)',\n                    border: '1px solid rgba(255, 255, 255, 0.2)',\n                    borderRadius: '8px',\n                    padding: '8px 12px',\n                    color: 'white',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '6px',\n                    fontSize: '14px',\n                    fontWeight: '500',\n                    transition: 'all 0.2s ease'\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.15)'\n                    e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.3)'\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.1)'\n                    e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                  }}\n                >\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M18 16.08C17.24 16.08 16.56 16.38 16.04 16.85L8.91 12.7C8.96 12.47 9 12.24 9 12C9 11.76 8.96 11.53 8.91 11.3L15.96 7.19C16.5 7.69 17.21 8 18 8C19.66 8 21 6.66 21 5C21 3.34 19.66 2 18 2C16.34 2 15 3.34 15 5C15 5.24 15.04 5.47 15.09 5.7L8.04 9.81C7.5 9.31 6.79 9 6 9C4.34 9 3 10.34 3 12C3 13.66 4.34 15 6 15C6.79 15 7.5 14.69 8.04 14.19L15.16 18.34C15.11 18.55 15.08 18.77 15.08 19C15.08 20.61 16.39 21.92 18 21.92C19.61 21.92 20.92 20.61 20.92 19C20.92 17.39 19.61 16.08 18 16.08Z\" fill=\"currentColor\"/>\n                  </svg>\n                  Share Collection\n                </button>\n              </div>\n              <p className=\"collection-handle\">@{collection.collection_name}</p>\n              <p className=\"collection-creator\">Created by {collection.author}</p>\n              \n              {collection.data?.description && (\n                <div className=\"collection-description\">\n                  <TruncatedText \n                    text={String(collection.data.description || '')} \n                    maxLength={100}\n                    className=\"description-text\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Dashboard */}\n      <div className=\"stats-dashboard\">\n        {/* Basic Stats Row */}\n        <div className=\"stats-grid\">\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">{analytics?.assets || collection.assets || 0}</div>\n            <div className=\"stat-label\">Total Assets</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">{schemas.length}</div>\n            <div className=\"stat-label\">Schemas</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">{templates.length}</div>\n            <div className=\"stat-label\">Templates</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">{holders.length}</div>\n            <div className=\"stat-label\">Holders</div>\n          </div>\n        </div>\n        \n        {/* Premium Stats Row */}\n        {analytics && (\n          <div className=\"stats-grid\">\n            <div className=\"stat-card premium clickable\" onClick={handleMarketCapToggle} style={{ cursor: 'pointer' }}>\n              <div className=\"stat-value\">\n                {analytics.market_cap && analytics.market_cap !== '0' \n                  ? marketCapCurrency === 'WAX'\n                    ? `${parseFloat(analytics.market_cap).toLocaleString()} WAX`\n                    : `$${(parseFloat(analytics.market_cap) * waxToUsdRate).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\n                  : 'N/A'\n                }\n              </div>\n              <div className=\"stat-label\">Market Cap ({marketCapCurrency})</div>\n            </div>\n            <div className=\"stat-card premium\">\n              <div className=\"stat-value\">\n                {atomicMarketStats?.sales && atomicMarketStats.sales !== '0'\n                  ? `${parseInt(atomicMarketStats.sales).toLocaleString()}`\n                  : analytics?.sales && analytics.sales !== '0'\n                  ? `${parseInt(analytics.sales).toLocaleString()}`\n                  : 'N/A'\n                }\n              </div>\n              <div className=\"stat-label\">All Time Sales</div>\n            </div>\n            <div className=\"stat-card premium\">\n              <div className=\"stat-value\">\n                {atomicMarketStats?.volume && atomicMarketStats.volume !== '0'\n                  ? `${parseFloat(atomicMarketStats.volume).toLocaleString()} WAX`\n                  : analytics?.volume && analytics.volume !== '0'\n                  ? `${parseFloat(analytics.volume).toLocaleString()} WAX`\n                  : 'N/A'\n                }\n              </div>\n              <div className=\"stat-label\">All Time Volume</div>\n            </div>\n            <div className=\"stat-card premium clickable\" onClick={handleVolumePeriodChange} style={{ cursor: 'pointer' }}>\n              <div className=\"stat-value\">\n                {loadingVolume ? (\n                  <span style={{ opacity: 0.6 }}>Loading...</span>\n                ) : (\n                  volumeData[volumePeriod] && volumeData[volumePeriod] !== '0' \n                    ? `${parseFloat(volumeData[volumePeriod]).toLocaleString()} WAX` \n                    : analytics?.volume_24h && analytics.volume_24h !== '0'\n                      ? `${parseFloat(analytics.volume_24h).toLocaleString()} WAX`\n                      : 'N/A'\n                )}\n              </div>\n              <div className=\"stat-label\">\n                {volumePeriod === '24' ? '24H' : volumePeriod === '7' ? '7D' : volumePeriod === '30' ? '30D' : volumePeriod === '90' ? '90D' : '365D'} Volume\n                <span style={{ fontSize: '0.8em', opacity: 0.7, marginLeft: '4px' }}>↻</span>\n              </div>\n            </div>\n            <div className=\"stat-card premium\">\n              <div className=\"stat-value\">\n                {analytics.floor_price && analytics.floor_price !== '0' && !isNaN(parseFloat(analytics.floor_price)) && parseFloat(analytics.floor_price) > 0\n                  ? `${parseFloat(analytics.floor_price).toFixed(2)} WAX` \n                  : atomicMarketStats?.suggested_median && atomicMarketStats.suggested_median !== '0' && !isNaN(parseFloat(atomicMarketStats.suggested_median))\n                  ? `${parseFloat(atomicMarketStats.suggested_median).toFixed(2)} WAX`\n                  : topSales && topSales.length > 0\n                  ? (() => {\n                      const validPrices = topSales.slice(-3).map(sale => {\n                        const price = typeof sale.price === 'string' ? sale.price : (sale.price?.amount || '0')\n                        return parseFloat(price || '0')\n                      }).filter(price => !isNaN(price) && price > 0)\n                      return validPrices.length > 0 ? `~${Math.min(...validPrices).toFixed(2)} WAX` : 'N/A'\n                    })()\n                  : 'N/A'\n                }\n              </div>\n              <div className=\"stat-label\">Floor Price</div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Quick Links Component */}\n      <QuickLinks collectionName={collection.collection_name} />\n        \n      {/* Modern Pane Switcher */}\n      <div className=\"collection-content-navigation\">\n        <div className=\"collection-nav-container\">\n          <div className=\"collection-nav-tabs\">\n             <button \n               className={`collection-nav-tab ${activeTab === 'sales' ? 'active' : ''}`}\n               onClick={() => setActiveTab('sales')}\n             >\n               <div className=\"tab-content\">\n                 <span className=\"tab-icon\">💰</span>\n                 <span className=\"tab-text\">Top Sales</span>\n                 <span className=\"tab-count\">{displayedSales.length}</span>\n               </div>\n             </button>\n             <button \n               className={`collection-nav-tab ${activeTab === 'holders' ? 'active' : ''}`}\n               onClick={() => setActiveTab('holders')}\n             >\n               <div className=\"tab-content\">\n                 <span className=\"tab-icon\">👥</span>\n                 <span className=\"tab-text\">Holders</span>\n                 <span className=\"tab-count\">{holders.length}</span>\n               </div>\n             </button>\n             <button \n               className={`collection-nav-tab ${activeTab === 'schemas' ? 'active' : ''}`}\n               onClick={() => setActiveTab('schemas')}\n             >\n               <div className=\"tab-content\">\n                 <span className=\"tab-icon\">📋</span>\n                 <span className=\"tab-text\">Schemas</span>\n                 <span className=\"tab-count\">{filteredSchemas.length}</span>\n               </div>\n             </button>\n             <button \n               className={`collection-nav-tab ${activeTab === 'templates' ? 'active' : ''}`}\n               onClick={() => setActiveTab('templates')}\n             >\n               <div className=\"tab-content\">\n                 <span className=\"tab-icon\">🎨</span>\n                 <span className=\"tab-text\">Templates</span>\n                 <span className=\"tab-count\">{filteredTemplates.length}</span>\n               </div>\n             </button>\n             <button \n               className={`collection-nav-tab ${activeTab === 'similar' ? 'active' : ''}`}\n               onClick={() => setActiveTab('similar')}\n             >\n               <div className=\"tab-content\">\n                 <span className=\"tab-icon\">🔗</span>\n                 <span className=\"tab-text\">Similar</span>\n                 <span className=\"tab-count\">{similarCollections.length}</span>\n               </div>\n             </button>\n             <button \n               className={`collection-nav-tab ${activeTab === 'chat' ? 'active' : ''}`}\n               onClick={() => setActiveTab('chat')}\n             >\n               <div className=\"tab-content\">\n                 <span className=\"tab-icon\">💬</span>\n                 <span className=\"tab-text\">Chat</span>\n                 <span className=\"tab-count\">0</span>\n               </div>\n             </button>\n           </div>\n          <div className=\"nav-indicator\"></div>\n        </div>\n      </div>\n\n        {/* Tab Content */}\n        <div className=\"tab-content-area\">\n          {activeTab === 'sales' && (\n            <div className=\"sales-section\">\n              <div className=\"sales-grid\">\n                {displayedSales.length > 0 ? (\n                  displayedSales.map((sale: TopSale, index: number) => (\n                    <div key={sale.sale_id || index} className=\"sale-item\">\n                      <div className=\"sale-rank\">#{index + 1}</div>\n                      <div className=\"sale-media\">\n                        <MediaRenderer\n                          imageUrl={getSaleAssetImageUrl(sale)}\n                          videoUrl={getSaleAssetVideoUrl(sale)}\n                          alt={String(sale.assets?.[0]?.data?.name || sale.assets?.[0]?.template?.immutable_data?.name || 'NFT')}\n                          className=\"sale-image\"\n                          controls={true}\n                          muted={true}\n                          loop={true}\n                          enableAnimations={settings.enableAnimatedNFTs}\n                        />\n                        <div \n                          className=\"zoom-overlay\"\n                          onClick={() => {\n                            const imageUrl = getSaleAssetImageUrl(sale)\n                            const name = String(sale.assets?.[0]?.data?.name || sale.assets?.[0]?.template?.immutable_data?.name || 'NFT')\n                            if (imageUrl) {\n                              setZoomedImage({url: imageUrl, name})\n                            }\n                            setShowImageZoom(true)\n                          }}\n                        >\n                          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                            <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n                          </svg>\n                        </div>\n                      </div>\n                      <div className=\"sale-details\">\n                        <div className=\"sale-name\">{sale.assets?.[0]?.data?.name || sale.assets?.[0]?.template?.immutable_data?.name || 'Unnamed NFT'}</div>\n                        <div className=\"sale-template\">Template #{sale.assets?.[0]?.template?.template_id}</div>\n                        <div className=\"sale-price\">\n                          {sale.price ? (parseInt(sale.price.amount) / Math.pow(10, sale.price.token_precision)).toFixed(sale.price.token_precision) + ' ' + sale.price.token_symbol : 'N/A'}\n                        </div>\n                        <div className=\"sale-date\">\n                          {formatSaleDate(sale.updated_at_time || '')}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-data\">No sales data available</div>\n                )}\n              </div>\n              {hasMoreSales && (\n                <div className=\"load-more-section\">\n                  <button \n                    className=\"load-more-btn\" \n                    onClick={loadMoreSales}\n                  >\n                    Load More Sales\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'holders' && (\n            <div className=\"holders-section\">\n              <div className=\"holders-grid\">\n                {holders.length > 0 ? (\n                  holders.map((holder: Holder, index: number) => (\n                    <div key={index} className=\"holder-item\">\n                      <div className=\"holder-rank\">#{index + 1}</div>\n                      <Link to={`/profile-lookup/${holder.account}`} className=\"holder-account clickable\">\n                        {holder.account}\n                      </Link>\n                      <div className=\"holder-count\">{holder.assets} assets</div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-data\">No holders data available</div>\n                )}\n              </div>\n              {hasMoreHolders && (\n                <div className=\"load-more-section\">\n                  <button \n                    className=\"load-more-btn\" \n                    onClick={loadMoreHolders}\n                    disabled={loadingMoreHolders}\n                  >\n                    {loadingMoreHolders ? 'Loading...' : 'Load More Holders'}\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'similar' && (\n            <div className=\"similar-collections\">\n              <div className=\"similar-collections-grid\">\n                {similarCollections.length > 0 ? (\n                  similarCollections.slice(0, 12).map((similar: SimilarCollection, index: number) => (\n                    <div key={index} className=\"similar-collection-item\">\n                      <Link to={`/collections/${similar.collection_name}`}>\n                        <div className=\"similar-collection-name\">{similar.collection_name}</div>\n                        <div className=\"similar-collection-volume\">Similar Collection</div>\n                      </Link>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-data\">No similar collections found</div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'chat' && (\n            <div className=\"chat-section\">\n              <div className=\"chat-container\">\n                <ChatWidget \n                  collectionName={collectionName}\n                />\n              </div>\n            </div>\n          )}\n\n        {/* Search and Filter Section */}\n        <div className=\"search-filter-section\">\n          <div className=\"search-controls\">\n            <div className=\"search-input-container\">\n              <svg className=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n              </svg>\n              <input\n                type=\"text\"\n                placeholder={`Search ${activeTab}...`}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-input\"\n              />\n              {searchTerm && (\n                <button \n                  onClick={() => setSearchTerm('')}\n                  className=\"clear-search\"\n                  aria-label=\"Clear search\"\n                >\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                  </svg>\n                </button>\n              )}\n            </div>\n            <div className=\"sort-container\">\n              <label htmlFor=\"sortBy\">Sort by:</label>\n              <select\n                id=\"sortBy\"\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value as 'name' | 'created' | 'supply')}\n                className=\"sort-select\"\n              >\n                <option value=\"name\">Name</option>\n                <option value=\"created\">Created Date</option>\n                {activeTab === 'templates' && <option value=\"supply\">Supply</option>}\n              </select>\n            </div>\n          </div>\n          {searchTerm && (\n            <div className=\"search-results-info\">\n              <p>Found {activeTab === 'schemas' ? filteredSchemas.length : filteredTemplates.length} results for \"{searchTerm}\"</p>\n            </div>\n          )}\n\n          {activeTab === 'schemas' && (\n            <div className=\"schemas-section\">\n              {filteredSchemas.length === 0 ? (\n                <div className=\"empty-state\">\n                  {searchTerm ? (\n                    <>\n                      <svg className=\"empty-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                      </svg>\n                      <h3>No schemas found</h3>\n                      <p>No schemas match your search \"{searchTerm}\"</p>\n                      <button onClick={() => setSearchTerm('')} className=\"clear-search-button\">\n                        Clear Search\n                      </button>\n                    </>\n                  ) : (\n                    <p>No schemas found for this collection.</p>\n                  )}\n                </div>\n              ) : (\n                <div className=\"schemas-grid\">\n                  {filteredSchemas.map((schema) => (\n                    <div key={schema.schema_name} className=\"schema-card\">\n                      <div className=\"schema-header\">\n                        <h3>{schema.schema_name}</h3>\n                        <button \n                          className=\"view-templates-btn\"\n                          onClick={() => {\n                            setSelectedSchema(schema.schema_name)\n                            setActiveTab('templates')\n                          }}\n                        >\n                          View Templates\n                        </button>\n                      </div>\n                      <div className=\"schema-format\">\n                        <h4>Attributes:</h4>\n                        <div className=\"attributes-list\">\n                          {schema.format.map((attr, index) => (\n                            <div key={index} className=\"attribute\">\n                              <span className=\"attr-name\">{attr.name}</span>\n                              <span className=\"attr-type\">{attr.type}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'templates' && (\n            <div className=\"templates-section\">\n              {selectedSchema && (\n                <div className=\"schema-filter\">\n                  <label>Filter by Schema:</label>\n                  <select \n                    value={selectedSchema} \n                    onChange={(e) => setSelectedSchema(e.target.value)}\n                  >\n                    <option value=\"\">All Schemas</option>\n                    {schemas.map((schema) => (\n                      <option key={schema.schema_name} value={schema.schema_name}>\n                        {schema.schema_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n              \n              {filteredTemplates.length === 0 ? (\n                <div className=\"empty-state\">\n                  {searchTerm ? (\n                    <>\n                      <svg className=\"empty-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                      </svg>\n                      <h3>No templates found</h3>\n                      <p>No templates match your search \"{searchTerm}\"</p>\n                      <button onClick={() => setSearchTerm('')} className=\"clear-search-button\">\n                        Clear Search\n                      </button>\n                    </>\n                  ) : (\n                    <p>No templates found{selectedSchema ? ` for schema \"${selectedSchema}\"` : ' for this collection'}.</p>\n                  )}\n                </div>\n              ) : (\n                <div className=\"templates-grid\">\n                  {filteredTemplates.map((template) => (\n                    <Link \n                      key={template.template_id} \n                      to={`/collections/${collectionName}/templates/${template.template_id}`}\n                      className=\"template-card\"\n                    >\n                      {renderMediaElement(template, 'template-image')}\n                      <div className=\"template-info\">\n                        <h4>{String(template.immutable_data?.name || `Template #${template.template_id}`)}</h4>\n                        <p className=\"template-schema\">Template ID: {template.template_id}</p>\n                        <p className=\"template-supply\">\n                          Supply: {formatSupply(template.issued_supply, template.max_supply)}\n                        </p>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Image Zoom Modal */}\n      {showImageZoom && (\n        <ImageZoom\n          isOpen={showImageZoom}\n          imageUrl={zoomedImage.url}\n          imageName={zoomedImage.name}\n          onClose={() => setShowImageZoom(false)}\n        />\n      )}\n       \n      {/* Share Modal */}\n      {showShareModal && (\n        <ShareModal\n          isOpen={showShareModal}\n          onClose={() => setShowShareModal(false)}\n          title={collection?.name || collection?.collection_name || 'Collection'}\n          description={String(collection?.data?.description || `Check out this amazing collection: ${collection?.name || collection?.collection_name}`)}\n          imageUrl={getImageUrl(collection?.img || '')}\n          shareUrl={`${window.location.origin}/collections/${collection?.collection_name}`}\n          defaultShareText={`Check out the ${collection?.name || collection?.collection_name} collection on PxMarket! 🎮✨ Explore it at market.pixeljourney.xyz`}\n          type=\"collection\"\n        />\n      )}\n    </div>\n  )\n})\n\nCollectionDetail.displayName = 'CollectionDetail'\n\nexport default CollectionDetail","import React, { useState, useEffect, useCallback } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { apiService, type TemplateData, type AssetDetails } from '../services/api'\nimport MediaRenderer from './MediaRenderer'\nimport { getAssetImageUrl, getAssetVideoUrl, getTemplateImageUrl, getTemplateVideoUrl } from '../utils/mediaUtils'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport ShareModal from './ShareModal'\nimport '../css/template-detail.css'\n\n\n\nconst TemplateDetail: React.FC = () => {\n  const { collectionName, templateId } = useParams<{ collectionName: string; templateId: string }>()\n  const { settings } = useDisplaySettings()\n  const [template, setTemplate] = useState<TemplateData | null>(null)\n  const [collection, setCollection] = useState<{\n    collection_name: string\n    name: string\n    img?: string\n    author: string\n    allow_notify: boolean\n    authorized_accounts: string[]\n    notify_accounts: string[]\n    market_fee: number\n    created_at_block: string\n    created_at_time: string\n  } | null>(null)\n  const [schema, setSchema] = useState<{\n    schema_name: string\n    format: Array<{\n      name: string\n      type: string\n    }>\n  } | null>(null)\n  const [assets, setAssets] = useState<AssetDetails[]>([])\n  const [loading, setLoading] = useState(false)\n  const [assetsLoading, setAssetsLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [hasMore, setHasMore] = useState(true)\n  const [showShareModal, setShowShareModal] = useState(false)\n  const assetsPerPage = 20\n\n  const loadTemplateData = useCallback(async () => {\n    if (!collectionName || !templateId) return\n    \n    setLoading(true)\n    try {\n      // Get template, collection, and schema data\n      const [templates, collectionData, schemasData] = await Promise.all([\n        apiService.getCollectionTemplates(collectionName),\n        apiService.getCollectionDetails(collectionName),\n        apiService.getCollectionSchemas(collectionName)\n      ])\n      \n      const templateData = templates.find(t => t.template_id === templateId)\n      setTemplate(templateData || null)\n      setCollection(collectionData)\n      \n      // Find the schema for this template by checking assets\n      if (templateData) {\n        const assets = await apiService.getCollectionAssets(collectionName, undefined, templateId, 1)\n        if (assets.length > 0) {\n          const schemaName = assets[0].schema_name\n          const schemaData = schemasData.find(s => s.schema_name === schemaName)\n          setSchema(schemaData || null)\n        }\n      }\n    } catch (error) {\n      console.error('Error loading template data:', error)\n    } finally {\n      setLoading(false)\n    }\n  }, [collectionName, templateId, setLoading, setTemplate, setCollection, setSchema])\n\n  const loadAssets = useCallback(async (page: number) => {\n    if (!collectionName || !templateId) return\n    \n    setAssetsLoading(true)\n    try {\n      const assetsData = await apiService.getCollectionAssets(\n        collectionName, \n        undefined, // schemaName\n        templateId, \n        assetsPerPage\n      )\n      \n      if (page === 1) {\n        setAssets(assetsData)\n      } else {\n        setAssets(prev => [...prev, ...assetsData])\n      }\n      \n      setHasMore(assetsData.length === assetsPerPage)\n      setCurrentPage(page)\n    } catch (error) {\n      console.error('Error loading assets:', error)\n    } finally {\n      setAssetsLoading(false)\n    }\n  }, [collectionName, templateId, setAssetsLoading, setAssets, setHasMore, setCurrentPage])\n\n  useEffect(() => {\n    if (collectionName && templateId) {\n      loadTemplateData()\n      loadAssets(1)\n    }\n  }, [collectionName, templateId, loadTemplateData, loadAssets])\n\n  const loadMoreAssets = () => {\n    if (!assetsLoading && hasMore) {\n      loadAssets(currentPage + 1)\n    }\n  }\n\n\n\n\n\n  const formatDate = (timestamp: string): string => {\n    return new Date(parseInt(timestamp) * 1000).toLocaleDateString()\n  }\n\n  const renderAttributeValue = (value: string | number | boolean | null | undefined | object): string => {\n    if (typeof value === 'object' && value !== null) {\n      return JSON.stringify(value)\n    }\n    return String(value)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"template-detail-container\">\n        <div className=\"loading-state\">\n          <div className=\"spinner\"></div>\n          <p>Loading template details...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!template) {\n    return (\n      <div className=\"template-detail-container\">\n        <div className=\"error-state\">\n          <h2>Template Not Found</h2>\n          <p>The template \"{templateId}\" could not be found in collection \"{collectionName}\".</p>\n          <Link to={`/collections/${collectionName}`} className=\"back-link\">\n            ← Back to Collection\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"template-detail-container\">\n      {/* Navigation */}\n      <div className=\"breadcrumb\">\n        <Link to=\"/collections\" className=\"breadcrumb-link\">Collections</Link>\n        <span className=\"breadcrumb-separator\">›</span>\n        <Link to={`/collections/${collectionName}`} className=\"breadcrumb-link\">\n          {collection?.name || collectionName}\n        </Link>\n        <span className=\"breadcrumb-separator\">›</span>\n        <span className=\"breadcrumb-current\">{`Template #${templateId}`}</span>\n      </div>\n\n      <div className=\"template-content\">\n        {/* Template Header */}\n      <div className=\"template-header\">\n        <div className=\"template-image-container\">\n          {template && (\n            <MediaRenderer\n              imageUrl={getTemplateImageUrl(template)}\n              videoUrl={getTemplateVideoUrl(template)}\n              alt=\"Template\"\n              className=\"template-image\"\n              enableAnimations={settings.enableAnimatedNFTs}\n            />\n          )}\n        </div>\n        <div className=\"template-info\">\n          <h1>{`Template #${templateId}`}</h1>\n          <p className=\"template-id\">Template ID: {template.template_id}</p>\n          <p className=\"template-schema\">Schema: {schema?.schema_name || 'Loading...'}</p>\n          <p className=\"template-collection\">\n            Collection: {collection?.name || collection?.collection_name || 'Loading...'}\n          </p>\n          \n          <div className=\"template-stats\">\n            <div className=\"stat\">\n              <span className=\"stat-value\">{template.issued_supply}</span>\n              <span className=\"stat-label\">Minted</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-value\">\n                {template.max_supply === '0' ? '∞' : template.max_supply}\n              </span>\n              <span className=\"stat-label\">Max Supply</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-value\">{assets.length}</span>\n              <span className=\"stat-label\">Assets Loaded</span>\n            </div>\n          </div>\n          \n          <p className=\"template-created\">\n            Created: {formatDate(template.created_at_time)}\n          </p>\n          \n          <button \n            className=\"share-btn\"\n            onClick={() => setShowShareModal(true)}\n            style={{\n              marginTop: '20px',\n              padding: '12px 24px',\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              border: 'none',\n              borderRadius: '12px',\n              color: 'white',\n              fontWeight: '600',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            }}\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\n            </svg>\n            Share Template\n          </button>\n        </div>\n      </div>\n\n      {/* Template Attributes */}\n      {template.immutable_data && Object.keys(template.immutable_data).length > 0 && (\n        <div className=\"template-attributes\">\n          <h2>Template Attributes</h2>\n          <div className=\"attributes-grid\">\n            {Object.entries(template.immutable_data).map(([key, value]) => (\n              <div key={key} className=\"attribute-item\">\n                <span className=\"attribute-name\">{key}</span>\n                <span className=\"attribute-value\">{renderAttributeValue(value as string | number | boolean | object | null | undefined)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Schema Format */}\n      {schema && schema.format && (\n        <div className=\"schema-format\">\n          <h2>Schema Format</h2>\n          <div className=\"format-grid\">\n            {schema.format.map((field: { name: string; type: string }, index: number) => (\n              <div key={index} className=\"format-item\">\n                <span className=\"format-name\">{String(field.name)}</span>\n                <span className=\"format-type\">{String(field.type)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Assets Section */}\n      <div className=\"assets-section\">\n        <h2>Assets ({template.issued_supply} total)</h2>\n        \n        {assets.length === 0 && !assetsLoading ? (\n          <div className=\"empty-state\">\n            <p>No assets found for this template.</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"assets-grid\">\n              {assets.map((asset) => (\n                <Link \n                  key={asset.asset_id} \n                  to={`/assets/${asset.asset_id}`}\n                  className=\"asset-card\"\n                >\n                  <MediaRenderer\n                    imageUrl={getAssetImageUrl(asset)}\n                    videoUrl={getAssetVideoUrl(asset)}\n                    alt={asset.name || `Asset #${asset.asset_id}`}\n                    className=\"asset-image\"\n                    enableAnimations={settings.enableAnimatedNFTs}\n                  />\n                  <div className=\"asset-info\">\n                    <h4>{asset.name || `Asset #${asset.asset_id}`}</h4>\n                    <p className=\"asset-id\">#{asset.asset_id}</p>\n                    <p className=\"asset-owner\">Owner: {asset.owner}</p>\n                    <p className=\"asset-minted\">Minted: {formatDate(asset.minted_at_time)}</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n            \n            {hasMore && (\n              <div className=\"load-more-container\">\n                <button \n                  className=\"load-more-btn\"\n                  onClick={loadMoreAssets}\n                  disabled={assetsLoading}\n                >\n                  {assetsLoading ? 'Loading...' : 'Load More Assets'}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      </div>\n      \n      {/* Share Modal */}\n      {template && (\n        <ShareModal\n          isOpen={showShareModal}\n          onClose={() => setShowShareModal(false)}\n          title={`Template #${templateId}`}\n          description={`${collection?.name || collection?.collection_name} collection`}\n          imageUrl={getTemplateImageUrl(template)}\n          shareUrl={`${window.location.origin}/collections/${collectionName}/templates/${templateId}`}\n          defaultShareText={`Check out this amazing template: Template #${templateId} from ${collection?.name || collection?.collection_name} collection! 🎨✨ View it at ${window.location.origin}/collections/${collectionName}/templates/${templateId}`}\n          type=\"template\"\n        />\n      )}\n    </div>\n  )\n}\n\nexport default TemplateDetail","import React, { useState, useEffect, useCallback } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport type { NFTAsset } from '../services/api'\nimport { getAssetImageUrl, getAssetVideoUrl, createIPFSUrl } from '../utils/mediaUtils'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\n\nimport { log } from '../services/loggingService'\nimport '../css/asset-detail.css'\n\ninterface SchemaFormat {\n  name: string\n  type: string\n}\n\n\n\ninterface BackedToken {\n  token_contract: string\n  token_symbol: string\n  token_precision: number\n  amount: string\n}\n\ninterface Asset {\n  asset_id: string\n  owner?: string\n  name?: string\n  schema: {\n    schema_name: string\n    format?: SchemaFormat[]\n  }\n  collection: {\n    collection_name: string\n    name?: string\n    img?: string\n  }\n  template: {\n    template_id: string\n    max_supply: string\n    issued_supply: string\n    is_transferable: boolean\n    is_burnable: boolean\n    immutable_data: Record<string, unknown>\n    created_at_time: string\n    created_at_block: string\n  }\n  backed_tokens: BackedToken[]\n  burned_by_account?: string\n  burned_at_block?: string\n  burned_at_time?: string\n  updated_at_block: string\n  updated_at_time: string\n  transferred_at_block: string\n  transferred_at_time: string\n  minted_at_block: string\n  minted_at_time: string\n  is_transferable: boolean\n  is_burnable: boolean\n  data: Record<string, unknown>\n}\n\nconst AssetDetail: React.FC = () => {\n  const { assetId } = useParams<{ assetId: string }>()\n  const [asset, setAsset] = useState<Asset | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [listing, setListing] = useState<NFTAsset | null>(null)\n  const [listingLoading, setListingLoading] = useState(false)\n  const [usdPrice, setUsdPrice] = useState<string>('')\n  \n  const { isConnected, purchaseNFT, login } = useWallet()\n  const { showSuccess, showError, showWarning } = useNotifications()\n  // Transaction tracking is now handled directly by WharfKit\n\n\n  const loadAssetData = useCallback(async () => {\n    if (!assetId) return\n    \n    setLoading(true)\n    try {\n      const assetData = await apiService.getAssetDetails(assetId)\n      setAsset(assetData as unknown as Asset)\n    } catch (error) {\n      log.error('Failed to load asset data', 'AssetDetail.loadAssetData', error as Error, { assetId })\n    } finally {\n      setLoading(false)\n    }\n  }, [assetId])\n\n  const checkListingStatus = useCallback(async () => {\n    if (!assetId) return\n    \n    setListingLoading(true)\n    try {\n      // Search for the asset in marketplace listings\n      const marketplaceData = await apiService.getMarketplaceNFTs({\n        page: 1,\n        limit: 1,\n        asset_id: assetId\n      })\n      \n      if (marketplaceData.data && marketplaceData.data.length > 0) {\n        const saleData = marketplaceData.data[0]\n        // Convert simplified marketplace data to NFTAsset format\n        const nftAsset: NFTAsset = {\n          sale_id: saleData.sale_id,\n          asset_id: saleData.asset_id,\n          name: asset?.name || `Asset #${saleData.asset_id}`,\n          image: String(asset?.data?.img || asset?.template?.immutable_data?.img || ''),\n          price: saleData.price,\n          seller: saleData.seller,\n          collection: asset?.collection?.collection_name || 'Unknown',\n          schema: asset?.schema?.schema_name || 'Unknown',\n          template_mint: undefined,\n          max_supply: asset?.template?.max_supply || undefined,\n          traits: asset?.data ? Object.fromEntries(\n            Object.entries(asset.data).filter(([, value]) => value !== undefined && value !== null)\n          ) as Record<string, string | number | boolean> : {}\n        }\n        setListing(nftAsset)\n        \n        // Get USD price if available\n        if (nftAsset.price) {\n          try {\n            const priceValue = parseFloat(nftAsset.price.replace(' WAX', ''))\n            const waxPriceResponse = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=wax&vs_currencies=usd')\n            const waxPriceData = await waxPriceResponse.json()\n            const waxToUsd = waxPriceData.wax?.usd || 0\n            const usdValue = (priceValue * waxToUsd).toFixed(2)\n            setUsdPrice(`$${usdValue} USD`)\n          } catch (error) {\n            log.warn('Failed to fetch USD price for asset', 'AssetDetail.checkListingStatus', { assetId, error: (error as Error).message })\n          }\n        }\n      } else {\n        setListing(null)\n        setUsdPrice('')\n      }\n    } catch (error) {\n      log.error('Failed to check listing status', 'AssetDetail.checkListingStatus', error as Error, { assetId })\n      setListing(null)\n    } finally {\n      setListingLoading(false)\n    }\n  }, [assetId])\n\n  useEffect(() => {\n    if (assetId) {\n      loadAssetData()\n      checkListingStatus()\n    }\n  }, [assetId, loadAssetData, checkListingStatus])\n\n  const handlePurchase = async () => {\n    if (!listing) return\n    \n    try {\n      // Check if user is logged in\n      if (!isConnected) {\n        showWarning('Please connect your wallet to purchase this NFT')\n        try {\n          await login()\n        } catch (error) {\n          log.error('Wallet login failed during purchase', 'AssetDetail.handlePurchase', error as Error, { assetId, saleId: listing.sale_id })\n          return\n        }\n      }\n\n      // Validate listing data\n      if (!listing.sale_id || !listing.price) {\n        showError('This NFT is not available for purchase')\n        return\n      }\n\n      // Extract price value (remove ' WAX' suffix if present)\n      const priceValue = listing.price.replace(' WAX', '')\n      \n      log.info('Initiating NFT purchase', 'AssetDetail.handlePurchase', { saleId: listing.sale_id, price: priceValue, assetId })\n      \n      // Execute purchase transaction directly with WharfKit\n      await purchaseNFT(listing.sale_id, priceValue)\n      \n      showSuccess(`Successfully purchased ${listing.name || 'NFT'}!`)\n      \n      // Refresh listing status\n      checkListingStatus()\n      \n    } catch (error) {\n      log.error('NFT purchase failed', 'AssetDetail.handlePurchase', error as Error, { assetId, saleId: listing?.sale_id, price: listing?.price })\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred'\n      showError(`Purchase failed: ${errorMessage}`)\n    }\n  }\n\n  const getImageUrl = (imgPath: string): string => {\n    if (!imgPath) return 'https://pixeljourney.xyz/img/toppixals/10.webp'\n    if (imgPath.startsWith('http')) return imgPath\n    return createIPFSUrl(imgPath)\n  }\n\n  const getAssetImage = (): string => {\n    if (!asset) return 'https://pixeljourney.xyz/img/toppixals/10.webp'\n    \n    return getAssetImageUrl(asset) ?? 'https://pixeljourney.xyz/img/toppixals/10.webp'\n  }\n\n  const getAssetVideo = (): string | null => {\n    if (!asset) return null\n    \n    return getAssetVideoUrl(asset)\n  }\n\n  const formatDate = (timestamp: string): string => {\n    return new Date(parseInt(timestamp) * 1000).toLocaleString()\n  }\n\n  const renderAttributeValue = (value: string | number | boolean | null | undefined): React.ReactNode => {\n    if (value === null || value === undefined) {\n      return <span className=\"null-value\">null</span>\n    }\n    \n    if (typeof value === 'boolean') {\n      return <span className=\"boolean-value\">{value.toString()}</span>\n    }\n    \n    if (typeof value === 'number') {\n      return <span className=\"number-value\">{value.toLocaleString()}</span>\n    }\n    \n    if (typeof value === 'object') {\n      return (\n        <pre className=\"object-value\">\n          {JSON.stringify(value, null, 2)}\n        </pre>\n      )\n    }\n    \n    // Check if it's an IPFS hash or URL for images\n    const strValue = String(value)\n    if (strValue.match(/\\.(jpg|jpeg|png|gif|webp)$/i) || strValue.startsWith('Qm')) {\n      return (\n        <div className=\"image-attribute\">\n          <img \n            src={getImageUrl(strValue)} \n            alt=\"Attribute image\"\n            className=\"attribute-image\"\n            onError={(e) => {\n              e.currentTarget.style.display = 'none'\n            }}\n          />\n          <span className=\"image-hash\">{strValue}</span>\n        </div>\n      )\n    }\n    \n    return <span className=\"string-value\">{strValue}</span>\n  }\n\n  const getAllAttributes = (): Record<string, string | number | boolean | null | undefined> => {\n    if (!asset) return {}\n    \n    return {\n       ...asset.template?.immutable_data,\n       ...asset.data\n     } as Record<string, string | number | boolean | null | undefined>\n  }\n\n  if (loading) {\n    return (\n      <div className=\"asset-detail-container\">\n        <div className=\"loading-state\">\n          <div className=\"spinner\"></div>\n          <p>Loading asset details...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!asset) {\n    return (\n      <div className=\"asset-detail-container\">\n        <div className=\"error-state\">\n          <h2>Asset Not Found</h2>\n          <p>The asset \"{assetId}\" could not be found.</p>\n          <Link to=\"/collections\" className=\"back-link\">← Back to Collections</Link>\n        </div>\n      </div>\n    )\n  }\n\n  const videoUrl = getAssetVideo()\n  const allAttributes = getAllAttributes()\n\n  return (\n    <div className=\"asset-detail-container\">\n      <div className=\"asset-content\">\n        {/* Navigation */}\n        <div className=\"breadcrumb\">\n          <Link to=\"/\" className=\"breadcrumb-link\">Home</Link>\n          <span className=\"breadcrumb-separator\">›</span>\n          <Link to=\"/collections\" className=\"breadcrumb-link\">Collections</Link>\n          <span className=\"breadcrumb-separator\">›</span>\n          <Link to={`/collections/${asset.collection.collection_name}`} className=\"breadcrumb-link\">\n            {asset.collection.name || asset.collection.collection_name}\n          </Link>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">{asset.name || `Asset #${assetId}`}</span>\n        </div>\n\n      {/* Asset Header */}\n      <div className=\"asset-header\">\n        <div className=\"asset-media-container\">\n          {videoUrl ? (\n            <video \n              src={videoUrl}\n              className=\"asset-video\"\n              controls\n              poster={getAssetImage()}\n            >\n              Your browser does not support the video tag.\n            </video>\n          ) : (\n            <img \n              src={getAssetImage()} \n              alt={asset.name || `Asset #${assetId}`}\n              className=\"asset-image\"\n              onError={() => {/* Image error handling removed */}}\n            />\n          )}\n        </div>\n        \n        <div className=\"asset-info\">\n          <h1>{asset.name || `Asset #${assetId}`}</h1>\n          <p className=\"asset-id\">Asset ID: {asset.asset_id}</p>\n          \n          <div className=\"asset-links\">\n            <p className=\"asset-collection\">\n              Collection: \n              <Link to={`/collections/${asset.collection.collection_name}`}>\n                {asset.collection.name || asset.collection.collection_name}\n              </Link>\n            </p>\n            <p className=\"asset-template\">\n              Template: \n              <Link to={`/collections/${asset.collection.collection_name}/templates/${asset.template.template_id}`}>\n                {(asset.template?.immutable_data?.name as string) || `#${asset.template.template_id}`}\n              </Link>\n            </p>\n            <p className=\"asset-schema\">Schema: {asset.schema.schema_name}</p>\n          </div>\n          \n          <div className=\"asset-ownership\">\n            <div className=\"owner-info\">\n              <span className=\"owner-label\">Owner:</span>\n              <span className=\"owner-address\">{asset.owner}</span>\n            </div>\n            <div className=\"author-info\">\n              <span className=\"author-label\">Collection Author:</span>\n              <span className=\"author-address\">{asset.owner || 'Unknown'}</span>\n            </div>\n          </div>\n          \n          {/* Listing Status */}\n          {listingLoading ? (\n            <div className=\"listing-status loading\">\n              <span>Checking listing status...</span>\n            </div>\n          ) : listing ? (\n            <div className=\"listing-status available\">\n              <div className=\"listing-info\">\n                <h3>Available for Sale</h3>\n                <div className=\"price-display\">\n                  <span className=\"price-wax\">{listing.price}</span>\n                  {usdPrice && <span className=\"price-usd\">{usdPrice}</span>}\n                </div>\n              </div>\n              <button \n                className=\"buy-now-btn\"\n                onClick={handlePurchase}\n                disabled={!isConnected}\n              >\n                {isConnected ? 'Buy Now' : 'Connect Wallet to Buy'}\n              </button>\n            </div>\n          ) : (\n            <div className=\"listing-status not-listed\">\n              <span>Not currently listed for sale</span>\n            </div>\n          )}\n          \n          <div className=\"asset-timestamps\">\n            <div className=\"timestamp\">\n              <span className=\"timestamp-label\">Minted:</span>\n              <span className=\"timestamp-value\">{formatDate(asset.minted_at_time)}</span>\n            </div>\n            <div className=\"timestamp\">\n              <span className=\"timestamp-label\">Last Transfer:</span>\n              <span className=\"timestamp-value\">{formatDate(asset.transferred_at_time)}</span>\n            </div>\n            <div className=\"timestamp\">\n              <span className=\"timestamp-label\">Last Update:</span>\n              <span className=\"timestamp-value\">{formatDate(asset.updated_at_time)}</span>\n            </div>\n          </div>\n          \n          {asset.burned_by_account && (\n            <div className=\"burn-info\">\n              <span className=\"burn-label\">🔥 Burned by:</span>\n              <span className=\"burn-account\">{asset.burned_by_account}</span>\n              <span className=\"burn-time\">{formatDate(asset.burned_at_time!)}</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Template Info */}\n      <div className=\"template-info-section\">\n        <h2>Template Information</h2>\n        <div className=\"template-stats\">\n          <div className=\"template-stat\">\n            <span className=\"stat-label\">Template ID:</span>\n            <span className=\"stat-value\">{asset.template.template_id}</span>\n          </div>\n          <div className=\"template-stat\">\n            <span className=\"stat-label\">Max Supply:</span>\n            <span className=\"stat-value\">\n              {asset.template.max_supply === '0' ? 'Unlimited' : asset.template.max_supply}\n            </span>\n          </div>\n          <div className=\"template-stat\">\n            <span className=\"stat-label\">Issued Supply:</span>\n            <span className=\"stat-value\">{asset.template.issued_supply}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Asset Attributes */}\n      {Object.keys(allAttributes).length > 0 && (\n        <div className=\"asset-attributes\">\n          <h2>Attributes</h2>\n          <div className=\"attributes-grid\">\n            {Object.entries(allAttributes).map(([key, value]) => (\n              <div key={key} className=\"attribute-item\">\n                <span className=\"attribute-name\">{key}</span>\n                <div className=\"attribute-value\">\n                  {renderAttributeValue(value)}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Schema Format */}\n      <div className=\"schema-format\">\n        <h2>Schema Format</h2>\n        <div className=\"format-grid\">\n          {asset.schema.format?.map((field, index) => (\n            <div key={index} className=\"format-item\">\n              <span className=\"format-name\">{field.name}</span>\n              <span className=\"format-type\">{field.type}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Backed Tokens */}\n      {asset.backed_tokens && asset.backed_tokens.length > 0 && (\n        <div className=\"backed-tokens\">\n          <h2>Backed Tokens</h2>\n          <div className=\"tokens-list\">\n            {asset.backed_tokens.map((token, index) => (\n              <div key={index} className=\"token-item\">\n                <pre>{JSON.stringify(token, null, 2)}</pre>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      </div>\n    </div>\n  )\n}\n\nexport default AssetDetail","import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport type { NFTAsset } from '../services/api'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\n\nimport { log } from '../services/loggingService'\nimport NFTDetailsModal from './NFTDetailsModal'\nimport SendOfferModal from './SendOfferModal'\nimport SocialShare from './SocialShare'\nimport ImageZoom from './ImageZoom'\nimport '../css/listing-detail.css'\nimport '../css/rwax.css'\n\ninterface AssetImageData {\n  data?: {\n    img?: string\n    image?: string\n  }\n  template?: {\n    immutable_data?: {\n      img?: string\n      image?: string\n    }\n  }\n}\n\nconst ListingDetail: React.FC = () => {\n  const { saleId } = useParams<{ saleId: string }>()\n  const navigate = useNavigate()\n  const [listing, setListing] = useState<NFTAsset | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [usdPrice, setUsdPrice] = useState<string>('')\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false)\n  const [isOfferModalOpen, setIsOfferModalOpen] = useState(false)\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false)\n  const [showImageZoom, setShowImageZoom] = useState(false)\n  const [saleState, setSaleState] = useState<number>(0)\n\n  useEffect(() => {\n    if (saleId) {\n      loadListingData()\n    }\n  }, [saleId])\n\n  const loadListingData = async () => {\n    if (!saleId) return\n    \n    try {\n      setLoading(true)\n      setError(null)\n      \n      // Use apiService for better error handling and fallback support\n      const url = `${apiService.atomicMarketAPI}/atomicmarket/v1/sales/${saleId}`\n      const response = await apiService.fetchWithRetry(url)\n      const data = await response.json()\n      \n      if (data.success && data.data) {\n        const sale = data.data\n        \n        // Set sale state\n        setSaleState(sale.state)\n        \n        // Convert to NFTAsset format\n        const nftAsset: NFTAsset = {\n          sale_id: sale.sale_id,\n          asset_id: sale.assets[0]?.asset_id || '',\n          name: sale.assets[0]?.name || `${sale.assets[0]?.collection?.collection_name || 'Unknown'} #${sale.assets[0]?.asset_id}`,\n          image: getAssetImage(sale.assets[0]),\n          price: `${(parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision)).toFixed(4)} ${sale.price.token_symbol}`,\n          seller: sale.seller,\n          collection: sale.assets[0]?.collection?.collection_name || 'Unknown',\n          schema: sale.assets[0]?.schema?.schema_name || 'Unknown',\n          template_mint: parseInt(sale.assets[0]?.template?.template_id || '0') || 0,\n          max_supply: sale.assets[0]?.template?.max_supply || '0',\n          traits: Object.fromEntries(\n            Object.entries(sale.assets[0]?.data || {}).map(([key, value]) => [\n              key, \n              value === null || value === undefined ? '' : \n              typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' ? value : String(value)\n            ])\n          )\n        }\n        \n        setListing(nftAsset)\n        \n        // Get USD price\n        const waxPrice = parseFloat(sale.price.amount) / Math.pow(10, sale.price.token_precision)\n        const usdValue = await apiService.getUSDPrice(waxPrice)\n        setUsdPrice(usdValue)\n      } else {\n        setError('Listing not found')\n      }\n    } catch (err) {\n      console.error('Error loading listing:', err)\n      setError(`Failed to load listing data: ${err instanceof Error ? err.message : 'Unknown error'}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getAssetImage = (asset: AssetImageData | null): string => {\n    if (!asset) return ''\n    \n    // Try different image sources\n    if (asset.data?.img) {\n      return asset.data.img.startsWith('http') ? asset.data.img : `https://ipfs.io/ipfs/${asset.data.img}`\n    }\n    if (asset.data?.image) {\n      return asset.data.image.startsWith('http') ? asset.data.image : `https://ipfs.io/ipfs/${asset.data.image}`\n    }\n    if (asset.template?.immutable_data?.img) {\n      return asset.template.immutable_data.img.startsWith('http') ? asset.template.immutable_data.img : `https://ipfs.io/ipfs/${asset.template.immutable_data.img}`\n    }\n    if (asset.template?.immutable_data?.image) {\n      return asset.template.immutable_data.image.startsWith('http') ? asset.template.immutable_data.image : `https://ipfs.io/ipfs/${asset.template.immutable_data.image}`\n    }\n    \n    return 'https://pixeljourney.xyz/img/toppixals/10.webp'\n  }\n\n  const { isConnected, purchaseNFT, login } = useWallet()\n  const { showSuccess, showError, showWarning } = useNotifications()\n  // Transaction tracking is now handled directly by WharfKit\n\n  const handlePurchase = async () => {\n    if (!listing) return\n    \n    try {\n      // Check if user is logged in\n      if (!isConnected) {\n        showWarning('Please connect your wallet to purchase this NFT')\n        try {\n          await login()\n        } catch (error) {\n          log.error('Login failed', 'ListingDetail', error as Error)\n          return\n        }\n      }\n\n      // Validate listing data\n      if (!listing.sale_id || !listing.price) {\n        showError('This NFT is not available for purchase')\n        return\n      }\n\n      // Extract price value (remove ' WAX' suffix if present)\n      const priceValue = listing.price.replace(' WAX', '')\n      \n      log.info('Purchasing NFT', 'ListingDetail.handlePurchase', { saleId: listing.sale_id, price: priceValue })\n      \n      // Execute purchase transaction directly with WharfKit\n      await purchaseNFT(listing.sale_id, priceValue)\n      \n      showSuccess(`Successfully purchased ${listing.name || 'NFT'}!`)\n      \n      // Navigate back to marketplace or refresh listing\n      navigate('/marketplace')\n      \n    } catch (error) {\n      log.error('Purchase failed', 'ListingDetail', error as Error)\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred'\n      showError(`Purchase failed: ${errorMessage}`)\n    }\n  }\n\n  const handleSellerClick = () => {\n    if (!listing || !listing.seller) return\n    navigate(`/user-profile-lookup?user=${encodeURIComponent(listing.seller)}`)\n  }\n\n  const handleCollectionClick = () => {\n    if (!listing) return\n    navigate(`/collections/${listing.collection}`)\n  }\n\n  const handleAssetClick = () => {\n    if (!listing || !listing.asset_id) return\n    navigate(`/assets/${listing.asset_id}`)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"listing-detail-container\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading listing...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error || !listing) {\n    return (\n      <div className=\"listing-detail-container\">\n        <div className=\"error-container\">\n          <h2>Listing Not Found</h2>\n          <p>{error || 'The requested listing could not be found.'}</p>\n          <button onClick={() => navigate('/marketplace')} className=\"btn-primary\">\n            Back to Marketplace\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"listing-detail-container\">\n      <div className=\"listing-detail-header\">\n        <button onClick={() => navigate(-1)} className=\"back-button\">\n          ← Back\n        </button>\n        <h1>Listing Details</h1>\n      </div>\n\n      <div className=\"listing-detail-content\">\n        <div className=\"listing-image-section\">\n          <div className=\"listing-image\">\n            {listing.image.includes('.mp4') || listing.image.includes('.webm') ? (\n              <video \n                src={listing.image} \n                controls \n                muted \n                loop\n                className=\"listing-media\"\n              />\n            ) : (\n              <>\n                <img \n                  src={listing.image} \n                  alt={listing.name}\n                  className=\"listing-media\"\n                  onError={(e) => {\n                    const target = e.target as HTMLImageElement\n                    target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                  }}\n                />\n                <div \n                  className=\"zoom-overlay\"\n                  onClick={() => setShowImageZoom(true)}\n                >\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                    <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n                  </svg>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"listing-info-section\">\n          <div className=\"listing-header\">\n            <h2>{listing.name}</h2>\n            <div className=\"listing-actions\">\n              <button \n                onClick={() => setIsDetailsModalOpen(true)}\n                className=\"listing-detail-nav-btn\"\n              >\n                📋 View Details\n              </button>\n              <button \n                onClick={() => setIsOfferModalOpen(true)}\n                className=\"listing-detail-nav-btn\"\n              >\n                <svg viewBox=\"0 -8 72 72\" fill=\"currentColor\" style={{width: '16px', height: '16px', marginRight: '8px'}}>\n                  <path d=\"M64,12.78v17s-3.63.71-4.38.81-3.08.85-4.78-.78C52.22,27.25,42.93,18,42.93,18a3.54,3.54,0,0,0-4.18-.21c-2.36,1.24-5.87,3.07-7.33,3.78a3.37,3.37,0,0,1-5.06-2.64,3.44,3.44,0,0,1,2.1-3c3.33-2,10.36-6,13.29-7.52,1.78-1,3.06-1,5.51,1C50.27,12,53,14.27,53,14.27a2.75,2.75,0,0,0,2.26.43C58.63,14,64,12.78,64,12.78ZM27,41.5a3,3,0,0,0-3.55-4.09,3.07,3.07,0,0,0-.64-3,3.13,3.13,0,0,0-3-.75,3.07,3.07,0,0,0-.65-3,3.38,3.38,0,0,0-4.72.13c-1.38,1.32-2.27,3.72-1,5.14s2.64.55,3.72.3c-.3,1.07-1.2,2.07-.09,3.47s2.64.55,3.72.3c-.3,1.07-1.16,2.16-.1,3.46s2.84.61,4,.25c-.45,1.15-1.41,2.39-.18,3.79s4.08.75,5.47-.58a3.32,3.32,0,0,0,.3-4.68A3.18,3.18,0,0,0,27,41.5Zm25.35-8.82L41.62,22a3.53,3.53,0,0,0-3.77-.68c-1.5.66-3.43,1.56-4.89,2.24a8.15,8.15,0,0,1-3.29,1.1,5.59,5.59,0,0,1-3-10.34C29,12.73,34.09,10,34.09,10a6.46,6.46,0,0,0-5-2C25.67,8,18.51,12.7,18.51,12.7a5.61,5.61,0,0,1-4.93.13L8,10.89v19.4s1.59.46,3,1a6.33,6.33,0,0,1,1.56-2.47,6.17,6.17,0,0,1,8.48-.06,5.4,5.4,0,0,1,1.34,2.37,5.49,5.49,0,0,1,2.29,1.4A5.4,5.4,0,0,1,26,34.94a5.47,5.47,0,0,1,3.71,4,5.38,5.38,0,0,1,2.39,1.43,5.65,5.65,0,0,1,1.48,4.89a0,0,0,0,1,0,0s.8.9,1.29,1.39a2.46,2.46,0,0,0,3.48-3.48s2,2.48,4.28,1c2-1.4,1.69-3.06.74-4a3.19,3.19,0,0,0,4.77.13,2.45,2.45,0,0,0,.13-3.3s1.33,1.81,4,.12c1.89-1.6,1-3.43,0-4.39Z\"/>\n                </svg>\n                Make Offer\n              </button>\n              <button \n                onClick={() => setIsShareModalOpen(true)}\n                className=\"listing-detail-nav-btn\"\n              >\n                🔗 Share\n              </button>\n            </div>\n          </div>\n\n          <div className=\"listing-price-section\">\n            <div className=\"price-display\">\n              <div className=\"price-main\">{listing.price}</div>\n              <div className=\"price-usd\">{usdPrice}</div>\n              <div className=\"sale-status-display\">\n                <span className={`status-badge ${saleState === 1 ? 'status-active' : saleState === 3 ? 'status-sold' : 'status-canceled'}`}>\n                  {saleState === 1 ? '🔄 Available' : saleState === 3 ? '✅ Sold' : '❌ Canceled'}\n                </span>\n              </div>\n            </div>\n            {saleState === 1 ? (\n              <button onClick={handlePurchase} className=\"listing-detail-nav-btn listing-detail-primary-btn purchase-btn\">\n                🛒 Buy Now\n              </button>\n            ) : (\n              <button disabled className=\"listing-detail-nav-btn listing-detail-primary-btn purchase-btn\">\n                {saleState === 3 ? '✅ Sold' : '❌ Not Available'}\n              </button>\n            )}\n          </div>\n\n          <div className=\"listing-details\">\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Collection:</span>\n              <span className=\"detail-value link\" onClick={handleCollectionClick}>\n                {listing.collection}\n              </span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Schema:</span>\n              <span className=\"detail-value\">{listing.schema}</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Asset ID:</span>\n              <span className=\"detail-value link\" onClick={handleAssetClick}>\n                {listing.asset_id}\n              </span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Seller:</span>\n              <span className=\"detail-value link\" onClick={handleSellerClick}>\n                {listing.seller}\n              </span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Sale ID:</span>\n              <span className=\"detail-value\">{listing.sale_id}</span>\n            </div>\n            {listing.template_mint && listing.template_mint > 0 && (\n              <div className=\"detail-item\">\n                <span className=\"detail-label\">Mint:</span>\n                <span className=\"detail-value\">\n                  {listing.template_mint} / {listing.max_supply === '0' ? '∞' : listing.max_supply}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {listing.traits && Object.keys(listing.traits).length > 0 && (\n            <div className=\"listing-attributes\">\n              <h3>Attributes</h3>\n              <div className=\"attributes-grid\">\n                {Object.entries(listing.traits).map(([key, value]) => (\n                  <div key={key} className=\"attribute-item\">\n                    <span className=\"attribute-name\">{key}</span>\n                    <span className=\"attribute-value\">{value}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modals */}\n      <NFTDetailsModal \n        nft={listing}\n        isOpen={isDetailsModalOpen}\n        onClose={() => setIsDetailsModalOpen(false)}\n      />\n      \n      <SendOfferModal \n        nft={listing}\n        isOpen={isOfferModalOpen}\n        onClose={() => setIsOfferModalOpen(false)}\n      />\n      \n      <SocialShare \n        nft={listing}\n        isOpen={isShareModalOpen}\n        onClose={() => setIsShareModalOpen(false)}\n      />\n      \n      <ImageZoom \n         isOpen={showImageZoom}\n         onClose={() => setShowImageZoom(false)}\n         imageUrl={listing.image}\n         imageName={listing.name}\n       />\n    </div>\n  )\n}\n\nexport default ListingDetail","import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { log } from '../services/loggingService'\nimport '../css/transaction-details.css'\n\ninterface ActionTrace {\n  act?: {\n    name: string\n    account: string\n    authorization?: Array<{\n      actor: string\n      permission: string\n    }>\n    data?: Record<string, unknown>\n  }\n  receipt?: {\n    receiver: string\n    act_digest: string\n    global_sequence: number\n    recv_sequence: number\n    auth_sequence: Array<[string, number]>\n    code_sequence: number\n    abi_sequence: number\n  }\n  context_free?: boolean\n  elapsed?: number\n  console?: string\n  trx_id?: string\n  block_num?: number\n  block_time?: string\n  producer_block_id?: string\n  account_ram_deltas?: Array<{\n    account: string\n    delta: number\n  }>\n  except?: unknown\n  error_code?: number\n  inline_traces?: ActionTrace[]\n}\n\ninterface TransactionReceipt {\n  status: string\n  cpu_usage_us?: number\n  max_net_usage_words?: number\n  net_usage_words?: number\n}\n\ninterface TransactionDetails {\n  transaction_id: string\n  block_num: number\n  block_time: string\n  action_name: string\n  actor: string\n  receiver: string\n  asset_id?: string\n  asset_name?: string\n  collection_name?: string\n  price?: string\n  from?: string\n  to?: string\n  memo?: string\n  status: 'success' | 'failed'\n  cpu_usage_us: number\n  net_usage_words: number\n  traces?: ActionTrace[]\n}\n\ninterface BlockInfo {\n  block_num: number\n  block_id: string\n  timestamp: string\n  producer: string\n  transaction_count: number\n}\n\nconst TransactionDetails: React.FC = () => {\n  const { transactionId } = useParams<{ transactionId: string }>()\n  const navigate = useNavigate()\n  const [transaction, setTransaction] = useState<TransactionDetails | null>(null)\n  const [blockInfo, setBlockInfo] = useState<BlockInfo | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [activeTab, setActiveTab] = useState<'overview' | 'traces' | 'raw'>('overview')\n\n  useEffect(() => {\n    if (transactionId) {\n      fetchTransactionDetails(transactionId)\n    }\n  }, [transactionId])\n\n  const fetchTransactionDetails = async (txId: string) => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      // Fetch transaction details from WAX blockchain\n      const response = await fetch(`https://wax.eosrio.io/v1/history/get_transaction`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          id: txId\n        })\n      })\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch transaction: ${response.status}`)\n      }\n      \n      const data = await response.json()\n      \n      if (!data.id) {\n        throw new Error('Transaction not found')\n      }\n      \n      // Parse transaction data\n      const parsedTransaction: TransactionDetails = {\n        transaction_id: data.id,\n        block_num: data.block_num,\n        block_time: data.block_time,\n        action_name: data.trx?.transaction?.actions?.[0]?.name || 'unknown',\n        actor: data.trx?.transaction?.actions?.[0]?.authorization?.[0]?.actor || 'unknown',\n        receiver: data.trx?.transaction?.actions?.[0]?.account || 'unknown',\n        status: data.receipt?.status === 'executed' ? 'success' : 'failed',\n        cpu_usage_us: (data.receipt as TransactionReceipt)?.cpu_usage_us || 0,\n        net_usage_words: (data.receipt as TransactionReceipt)?.max_net_usage_words || (data.receipt as TransactionReceipt)?.net_usage_words || 0,\n        traces: data.traces || []\n      }\n      \n      // Extract additional info from action data if available\n      const actionData = data.trx?.transaction?.actions?.[0]?.data\n      if (actionData) {\n        if (actionData.asset_ids) {\n          parsedTransaction.asset_id = actionData.asset_ids[0]\n        }\n        if (actionData.from) {\n          parsedTransaction.from = actionData.from\n        }\n        if (actionData.to) {\n          parsedTransaction.to = actionData.to\n        }\n        if (actionData.memo) {\n          parsedTransaction.memo = actionData.memo\n        }\n        if (actionData.listing_price_to_assert) {\n          parsedTransaction.price = `${parseFloat(actionData.listing_price_to_assert.split(' ')[0])} WAX`\n        }\n      }\n      \n      setTransaction(parsedTransaction)\n      \n      // Fetch block information\n      const blockResponse = await fetch(`https://wax.eosrio.io/v1/chain/get_block`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          block_num_or_id: data.block_num\n        })\n      })\n      \n      if (blockResponse.ok) {\n        const blockData = await blockResponse.json()\n        setBlockInfo({\n          block_num: blockData.block_num,\n          block_id: blockData.id,\n          timestamp: blockData.timestamp,\n          producer: blockData.producer,\n          transaction_count: blockData.transactions?.length || 0\n        })\n      }\n      \n    } catch (err) {\n      log.error('Error fetching transaction details', 'TransactionDetails.fetchTransactionDetails', err as Error)\n      setError(err instanceof Error ? err.message : 'Failed to load transaction details')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString + 'Z').toLocaleString()\n  }\n\n  const handleUserClick = (account: string) => {\n    navigate(`/user-profile-lookup?user=${encodeURIComponent(account)}`)\n  }\n\n  const handleAssetClick = (assetId: string) => {\n    navigate(`/assets/${assetId}`)\n  }\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"page-content\">\n        <div className=\"transaction-details-container\">\n          <div className=\"loading-state\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading transaction details...</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error || !transaction) {\n    return (\n      <div className=\"page-content\">\n        <div className=\"transaction-details-container\">\n          <div className=\"error-state\">\n            <h2>Transaction Not Found</h2>\n            <p>{error || 'The requested transaction could not be found.'}</p>\n            <button onClick={() => navigate(-1)} className=\"btn btn-primary\">\n              Go Back\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"transaction-details-container\">\n        {/* Header */}\n        <div className=\"transaction-header\">\n          <button onClick={() => navigate(-1)} className=\"back-button\">\n            ← Back\n          </button>\n          <div className=\"transaction-title\">\n            <h1>Transaction Details</h1>\n            <div className=\"transaction-id\">\n              <span>ID: {transaction.transaction_id}</span>\n              <button \n                onClick={() => copyToClipboard(transaction.transaction_id)}\n                className=\"copy-button\"\n                title=\"Copy transaction ID\"\n              >\n                📋\n              </button>\n            </div>\n          </div>\n          <div className={`transaction-status ${transaction.status}`}>\n            {transaction.status === 'success' ? '✅' : '❌'} {transaction.status.toUpperCase()}\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => setActiveTab('overview')}\n          >\n            Overview\n          </button>\n          <button \n            className={`tab ${activeTab === 'traces' ? 'active' : ''}`}\n            onClick={() => setActiveTab('traces')}\n          >\n            Action Traces\n          </button>\n          <button \n            className={`tab ${activeTab === 'raw' ? 'active' : ''}`}\n            onClick={() => setActiveTab('raw')}\n          >\n            Raw Data\n          </button>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"tab-content\">\n          {activeTab === 'overview' && (\n            <div className=\"overview-tab\">\n              {/* Basic Information */}\n              <div className=\"info-section\">\n                <h3>Basic Information</h3>\n                <div className=\"info-grid\">\n                  <div className=\"info-item\">\n                    <label>Block Number:</label>\n                    <span>{transaction.block_num.toLocaleString()}</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>Timestamp:</label>\n                    <span>{formatDate(transaction.block_time)}</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>Action:</label>\n                    <span className=\"action-name\">{transaction.action_name}</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>Contract:</label>\n                    <span className=\"contract-name\">{transaction.receiver}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Transaction Parties */}\n              <div className=\"info-section\">\n                <h3>Transaction Parties</h3>\n                <div className=\"info-grid\">\n                  <div className=\"info-item\">\n                    <label>Actor:</label>\n                    <span \n                      className=\"clickable-account\"\n                      onClick={() => handleUserClick(transaction.actor)}\n                    >\n                      {transaction.actor}\n                    </span>\n                  </div>\n                  {transaction.from && transaction.from !== transaction.actor && (\n                    <div className=\"info-item\">\n                      <label>From:</label>\n                      <span \n                        className=\"clickable-account\"\n                        onClick={() => handleUserClick(transaction.from!)}\n                      >\n                        {transaction.from}\n                      </span>\n                    </div>\n                  )}\n                  {transaction.to && (\n                    <div className=\"info-item\">\n                      <label>To:</label>\n                      <span \n                        className=\"clickable-account\"\n                        onClick={() => handleUserClick(transaction.to!)}\n                      >\n                        {transaction.to}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Asset Information */}\n              {(transaction.asset_id || transaction.price) && (\n                <div className=\"info-section\">\n                  <h3>Asset Information</h3>\n                  <div className=\"info-grid\">\n                    {transaction.asset_id && (\n                      <div className=\"info-item\">\n                        <label>Asset ID:</label>\n                        <span \n                          className=\"clickable-asset\"\n                          onClick={() => handleAssetClick(transaction.asset_id!)}\n                        >\n                          {transaction.asset_id}\n                        </span>\n                      </div>\n                    )}\n                    {transaction.asset_name && (\n                      <div className=\"info-item\">\n                        <label>Asset Name:</label>\n                        <span>{transaction.asset_name}</span>\n                      </div>\n                    )}\n                    {transaction.collection_name && (\n                      <div className=\"info-item\">\n                        <label>Collection:</label>\n                        <span>\n                          {typeof transaction.collection_name === 'string'\n                            ? transaction.collection_name\n                            : (transaction.collection_name as { collection_name?: string; name?: string })?.collection_name ||\n                              (transaction.collection_name as { collection_name?: string; name?: string })?.name ||\n                              'Unknown'}\n                        </span>\n                      </div>\n                    )}\n                    {transaction.price && (\n                      <div className=\"info-item\">\n                        <label>Price:</label>\n                        <span className=\"price\">{transaction.price}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Resource Usage */}\n              <div className=\"info-section\">\n                <h3>Resource Usage</h3>\n                <div className=\"info-grid\">\n                  <div className=\"info-item\">\n                    <label>CPU Usage:</label>\n                    <span>{transaction.cpu_usage_us.toLocaleString()} μs</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>NET Usage:</label>\n                    <span>{transaction.net_usage_words.toLocaleString()} words</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Block Information */}\n              {blockInfo && (\n                <div className=\"info-section\">\n                  <h3>Block Information</h3>\n                  <div className=\"info-grid\">\n                    <div className=\"info-item\">\n                      <label>Block ID:</label>\n                      <span className=\"block-id\">{blockInfo.block_id}</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <label>Producer:</label>\n                      <span>{blockInfo.producer}</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <label>Transactions in Block:</label>\n                      <span>{blockInfo.transaction_count}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Memo */}\n              {transaction.memo && (\n                <div className=\"info-section\">\n                  <h3>Memo</h3>\n                  <div className=\"memo-content\">\n                    {transaction.memo}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'traces' && (\n            <div className=\"traces-tab\">\n              <h3>Action Traces</h3>\n              {transaction.traces && transaction.traces.length > 0 ? (\n                <div className=\"traces-list\">\n                  {transaction.traces.map((trace, index) => (\n                    <div key={index} className=\"trace-item\">\n                      <div className=\"trace-header\">\n                        <span className=\"trace-index\">#{index + 1}</span>\n                        <span className=\"trace-action\">{trace.act?.name || 'unknown'}</span>\n                        <span className=\"trace-account\">{trace.act?.account || 'unknown'}</span>\n                      </div>\n                      <pre className=\"trace-data\">\n                        {JSON.stringify(trace, null, 2)}\n                      </pre>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p>No action traces available for this transaction.</p>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'raw' && (\n            <div className=\"raw-tab\">\n              <h3>Raw Transaction Data</h3>\n              <pre className=\"raw-data\">\n                {JSON.stringify(transaction, null, 2)}\n              </pre>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TransactionDetails","import React, { useState } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\nimport '../css/modal.css'\n\ninterface StakingModalProps {\n  isOpen: boolean\n  onClose: () => void\n  resourceType: 'cpu' | 'net'\n  action: 'stake' | 'unstake'\n  onSuccess?: () => void\n}\n\nconst StakingModal: React.FC<StakingModalProps> = ({ \n  isOpen, \n  onClose, \n  resourceType, \n  action, \n  onSuccess \n}) => {\n  const [amount, setAmount] = useState('')\n  const [isProcessing, setIsProcessing] = useState(false)\n  const { session, transact } = useWallet()\n  const { showError } = useNotifications()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!session || !amount || parseFloat(amount) <= 0) return\n\n    setIsProcessing(true)\n    try {\n      const waxAmount = `${parseFloat(amount).toFixed(8)} WAX`\n      \n      if (action === 'stake') {\n        // Stake CPU or NET using delegatebw\n        const actions = [{\n          account: 'eosio',\n          name: 'delegatebw',\n          authorization: [{\n            actor: session.actor.toString(),\n            permission: session.permission.toString()\n          }],\n          data: {\n            from: session.actor.toString(),\n            receiver: session.actor.toString(),\n            stake_net_quantity: resourceType === 'net' ? waxAmount : '0.00000000 WAX',\n            stake_cpu_quantity: resourceType === 'cpu' ? waxAmount : '0.00000000 WAX',\n            transfer: false\n          }\n        }]\n        \n        await transact(actions)\n      } else {\n        // Unstake CPU or NET using undelegatebw\n        const actions = [{\n          account: 'eosio',\n          name: 'undelegatebw',\n          authorization: [{\n            actor: session.actor.toString(),\n            permission: session.permission.toString()\n          }],\n          data: {\n            from: session.actor.toString(),\n            receiver: session.actor.toString(),\n            unstake_net_quantity: resourceType === 'net' ? waxAmount : '0.00000000 WAX',\n            unstake_cpu_quantity: resourceType === 'cpu' ? waxAmount : '0.00000000 WAX'\n          }\n        }]\n        \n        await transact(actions)\n      }\n      \n      onSuccess?.()\n      onClose()\n    } catch (error) {\n      log.error(`Failed to ${action} ${resourceType.toUpperCase()}`, 'StakingModal.handleSubmit', error as Error, { action, resourceType, amount })\n      showError(`Failed to ${action} ${resourceType.toUpperCase()}. Please try again.`, 'Transaction Failed')\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  const resourceName = resourceType.toUpperCase()\n  const actionName = action === 'stake' ? 'Stake' : 'Unstake'\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>{actionName} {resourceName}</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            ×\n          </button>\n        </div>\n        \n        <div className=\"modal-body\">\n          <div className=\"resource-info\">\n            <div className=\"resource-icon\">\n              {resourceType === 'cpu' ? '⚡' : '🌐'}\n            </div>\n            <div className=\"resource-description\">\n              <h3>{resourceName} {actionName}</h3>\n              <p>\n                {action === 'stake' \n                  ? `Stake WAX to increase your ${resourceName} resources. Staked tokens will be locked for 3 days after unstaking.`\n                  : `Unstake WAX from your ${resourceName} resources. Tokens will be available after a 3-day waiting period.`\n                }\n              </p>\n            </div>\n          </div>\n          \n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount (WAX)</label>\n              <input\n                type=\"number\"\n                id=\"amount\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                placeholder=\"Enter WAX amount\"\n                min=\"0.00000001\"\n                step=\"0.00000001\"\n                required\n                disabled={isProcessing}\n              />\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\" \n                onClick={onClose}\n                disabled={isProcessing}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-primary\"\n                disabled={isProcessing || !amount || parseFloat(amount) <= 0}\n              >\n                {isProcessing ? 'Processing...' : `${actionName} ${resourceName}`}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StakingModal","import React, { useState, useEffect } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\nimport { WharfKitService } from '../services/wharfkit'\nimport '../css/modal.css'\n\ninterface RAMModalProps {\n  isOpen: boolean\n  onClose: () => void\n  action: 'buy' | 'sell'\n  onSuccess?: () => void\n}\n\nconst RAMModal: React.FC<RAMModalProps> = ({ \n  isOpen, \n  onClose, \n  action, \n  onSuccess \n}) => {\n  const [amount, setAmount] = useState('')\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [ramPrice, setRamPrice] = useState<number | null>(null)\n  const [userRamBytes, setUserRamBytes] = useState<number | null>(null)\n  const [isLoadingData, setIsLoadingData] = useState(false)\n  const { session, transact } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n\n  // Fetch RAM market data and user account info\n  useEffect(() => {\n    if (isOpen && session) {\n      fetchRAMData()\n    }\n  }, [isOpen, session])\n\n  const fetchRAMData = async () => {\n    if (!session) return\n    \n    setIsLoadingData(true)\n    try {\n      // Fetch RAM price from WAX blockchain\n      const ramMarketResponse = await fetch('https://wax.greymass.com/v1/chain/get_table_rows', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          json: true,\n          code: 'eosio',\n          scope: 'eosio',\n          table: 'rammarket',\n          limit: 1\n        })\n      })\n      \n      if (ramMarketResponse.ok) {\n        const ramMarketData = await ramMarketResponse.json()\n        if (ramMarketData.rows && ramMarketData.rows.length > 0) {\n          const ramMarket = ramMarketData.rows[0]\n          // Calculate RAM price: WAX balance / RAM supply\n          const waxBalance = parseFloat(ramMarket.quote.balance.split(' ')[0])\n          const ramSupply = parseFloat(ramMarket.base.balance.split(' ')[0])\n          const price = waxBalance / ramSupply\n          setRamPrice(price)\n        }\n      }\n      \n      // Fetch user account data\n      const accountResponse = await fetch('https://wax.greymass.com/v1/chain/get_account', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ account_name: session.actor.toString() })\n      })\n      \n      if (accountResponse.ok) {\n        const accountData = await accountResponse.json()\n        setUserRamBytes(accountData.ram_quota - accountData.ram_usage)\n      }\n    } catch (error) {\n      log.error('Failed to fetch RAM market data', 'RAMModal.fetchRAMData', error as Error, { account: session?.actor.toString() })\n    } finally {\n      setIsLoadingData(false)\n    }\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!session || !amount || parseFloat(amount) <= 0) return\n\n    // Validation\n    if (action === 'sell' && userRamBytes !== null) {\n      const bytesToSell = Math.floor(parseFloat(amount))\n      if (bytesToSell > userRamBytes) {\n        showError('Insufficient RAM', `You only have ${userRamBytes.toLocaleString()} bytes available to sell.`)\n        return\n      }\n    }\n\n    setIsProcessing(true)\n    try {\n      if (action === 'buy') {\n        // Buy RAM using buyram\n        const waxAmount = `${parseFloat(amount).toFixed(8)} WAX`\n        const actions = [{\n          account: 'eosio',\n          name: 'buyram',\n          authorization: [{\n            actor: WharfKitService.safeGetActor(session),\n            permission: WharfKitService.safeGetPermission(session)\n          }],\n          data: {\n            payer: WharfKitService.safeGetActor(session),\n            receiver: WharfKitService.safeGetActor(session),\n            quant: waxAmount\n          }\n        }]\n        \n        await transact(actions)\n        showSuccess('RAM Purchase Successful', `Successfully purchased RAM with ${waxAmount}!`)\n      } else {\n        // Sell RAM using sellram\n        const bytes = Math.floor(parseFloat(amount))\n        const actions = [{\n          account: 'eosio',\n          name: 'sellram',\n          authorization: [{\n            actor: WharfKitService.safeGetActor(session),\n            permission: WharfKitService.safeGetPermission(session)\n          }],\n          data: {\n            account: WharfKitService.safeGetActor(session),\n            bytes: bytes\n          }\n        }]\n        \n        await transact(actions)\n        showSuccess('RAM Sale Successful', `Successfully sold ${bytes.toLocaleString()} bytes of RAM!`)\n      }\n      \n      onSuccess?.()\n      onClose()\n      setAmount('')\n    } catch (error) {\n      log.error(`Failed to ${action} RAM`, 'RAMModal.handleSubmit', error as Error, { action, amount, account: WharfKitService.safeGetActor(session) })\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred'\n      showError(`RAM ${action === 'buy' ? 'Purchase' : 'Sale'} Failed`, errorMessage)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  const actionName = action === 'buy' ? 'Buy' : 'Sell'\n  const inputLabel = action === 'buy' ? 'Amount (WAX)' : 'Bytes to Sell'\n  const inputPlaceholder = action === 'buy' ? 'Enter WAX amount' : 'Enter bytes amount'\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>{actionName} RAM</h2>\n          <button className=\"modal-close\" onClick={onClose}>\n            ×\n          </button>\n        </div>\n        \n        <div className=\"modal-body\">\n          <div className=\"resource-info\">\n            <div className=\"resource-icon\">\n              💾\n            </div>\n            <div className=\"resource-description\">\n              <h3>RAM {actionName}</h3>\n              <p>\n                {action === 'buy' \n                  ? 'Purchase RAM with WAX tokens. RAM is used to store account data and smart contract state.'\n                  : 'Sell RAM bytes back to the system for WAX tokens. Only sell RAM you don\\'t need.'\n                }\n              </p>\n              \n              {/* RAM Market Information */}\n              <div className=\"ram-market-info\">\n                {isLoadingData ? (\n                  <div className=\"loading-info\">\n                    <span>Loading RAM market data...</span>\n                  </div>\n                ) : (\n                  <>\n                    {ramPrice !== null && (\n                      <div className=\"market-stat\">\n                        <span className=\"stat-label\">Current RAM Price:</span>\n                        <span className=\"stat-value\">{(ramPrice * 1024).toFixed(8)} WAX/KB</span>\n                      </div>\n                    )}\n                    {action === 'sell' && userRamBytes !== null && (\n                      <div className=\"market-stat\">\n                        <span className=\"stat-label\">Available RAM:</span>\n                        <span className=\"stat-value\">{userRamBytes.toLocaleString()} bytes</span>\n                      </div>\n                    )}\n                    {action === 'buy' && ramPrice !== null && amount && (\n                      <div className=\"market-stat\">\n                        <span className=\"stat-label\">Estimated RAM:</span>\n                        <span className=\"stat-value\">\n                          {Math.floor(parseFloat(amount) / ramPrice).toLocaleString()} bytes\n                        </span>\n                      </div>\n                    )}\n                    {action === 'sell' && ramPrice !== null && amount && (\n                      <div className=\"market-stat\">\n                        <span className=\"stat-label\">Estimated WAX:</span>\n                        <span className=\"stat-value\">\n                          {(parseFloat(amount) * ramPrice).toFixed(8)} WAX\n                        </span>\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">{inputLabel}</label>\n              <input\n                type=\"number\"\n                id=\"amount\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                placeholder={inputPlaceholder}\n                min={action === 'buy' ? '0.00000001' : '1'}\n                step={action === 'buy' ? '0.00000001' : '1'}\n                required\n                disabled={isProcessing}\n              />\n              {action === 'buy' && (\n                <small className=\"form-hint\">\n                  Minimum: 0.00000001 WAX\n                </small>\n              )}\n              {action === 'sell' && (\n                <small className=\"form-hint\">\n                  Enter the number of bytes to sell\n                </small>\n              )}\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\" \n                onClick={onClose}\n                disabled={isProcessing}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-primary\"\n                disabled={isProcessing || !amount || parseFloat(amount) <= 0}\n              >\n                {isProcessing ? 'Processing...' : `${actionName} RAM`}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RAMModal","import React, { useState } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\nimport { WharfKitService } from '../services/wharfkit'\nimport '../css/modal.css'\nimport '../css/token-balances.css'\n\ninterface TokenBalance {\n  contract: string\n  symbol: string\n  balance: string\n  value: string\n}\n\ninterface TokenTransferModalProps {\n  token: TokenBalance | null\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\nconst TokenTransferModal: React.FC<TokenTransferModalProps> = ({ token, isOpen, onClose, onSuccess }) => {\n  const [recipient, setRecipient] = useState('')\n  const [amount, setAmount] = useState('')\n  const [memo, setMemo] = useState('')\n  const [isTransferring, setIsTransferring] = useState(false)\n  const [recipients, setRecipients] = useState<string[]>([])\n  const [isBulkTransfer, setIsBulkTransfer] = useState(false)\n  const { session, transferTokens } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n\n  const validateWaxAccount = (account: string): boolean => {\n    // WAX account names can be 1-12 characters, lowercase letters, numbers 1-5, and dots\n    const waxAccountRegex = /^[a-z1-5.]{1,12}$/\n    return waxAccountRegex.test(account) && account.length >= 1 && account.length <= 12\n  }\n\n  const validateAmount = (value: string): boolean => {\n    const numValue = parseFloat(value)\n    const maxBalance = parseFloat(token?.balance || '0')\n    return numValue > 0 && numValue <= maxBalance\n  }\n\n  const parseRecipients = (recipientString: string): string[] => {\n    return recipientString\n      .split(',')\n      .map(r => r.trim().toLowerCase())\n      .filter(r => r.length > 0)\n  }\n\n  const handleRecipientChange = (value: string) => {\n    setRecipient(value.toLowerCase())\n    const parsedRecipients = parseRecipients(value)\n    setRecipients(parsedRecipients)\n    setIsBulkTransfer(parsedRecipients.length > 1)\n  }\n\n  const handleMaxClick = () => {\n    if (token) {\n      // Extract just the numeric part from the balance string\n      const balanceAmount = token.balance.split(' ')[0]\n      setAmount(balanceAmount)\n    }\n  }\n\n  const getAmountPerRecipient = (): number => {\n    if (!amount || recipients.length === 0) return 0\n    return parseFloat(amount) / recipients.length\n  }\n\n  const getTokenPrecision = (balance: string): number => {\n    // Extract precision from the balance string (e.g., \"100.12345678 TOKEN\" -> 8)\n    const parts = balance.split(' ')\n    if (parts.length > 0) {\n      const decimalPart = parts[0].split('.')[1]\n      return decimalPart ? decimalPart.length : 0\n    }\n    return 8 // Default to 8 decimals\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!token || !session || !recipient.trim() || !amount.trim()) {\n      showError('Validation Error', 'Please fill in all required fields')\n      return\n    }\n\n    // Validate all recipients\n    const invalidRecipients = recipients.filter(r => !validateWaxAccount(r))\n    if (invalidRecipients.length > 0) {\n      showError(\n        'Invalid Account Names', \n        `Invalid WAX account names: ${invalidRecipients.join(', ')}. Account names must be 12 characters, lowercase letters and numbers 1-5.`\n      )\n      return\n    }\n\n    if (!validateAmount(amount)) {\n      showError(\n        'Invalid Amount',\n        'Please enter a valid amount that does not exceed your balance'\n      )\n      return\n    }\n\n    setIsTransferring(true)\n\n    try {\n      const precision = getTokenPrecision(token.balance)\n      const actions = []\n\n      if (isBulkTransfer && recipients.length > 1) {\n        // Bulk transfer - divide amount equally among recipients\n        const amountPerRecipient = getAmountPerRecipient()\n        const formattedAmountPerRecipient = amountPerRecipient.toFixed(precision) + ' ' + token.symbol\n        \n        for (const recipientAccount of recipients) {\n          actions.push({\n            account: token.contract,\n            name: 'transfer',\n            authorization: [{\n              actor: session.actor,\n              permission: session.permission\n            }],\n            data: {\n              from: WharfKitService.safeGetActor(session),\n              to: recipientAccount,\n              quantity: formattedAmountPerRecipient,\n              memo: memo.trim() || 'Bulk transfer via PxMarket - market.pixeljourney.xyz'\n            }\n          })\n        }\n      } else {\n        // Single transfer\n        const formattedAmount = parseFloat(amount).toFixed(precision) + ' ' + token.symbol\n        \n        actions.push({\n          account: token.contract,\n          name: 'transfer',\n          authorization: [{\n            actor: WharfKitService.safeGetActor(session),\n            permission: WharfKitService.safeGetPermission(session)\n          }],\n          data: {\n            from: WharfKitService.safeGetActor(session),\n            to: recipients[0] || recipient.trim(),\n            quantity: formattedAmount,\n            memo: memo.trim() || 'Transferred via PxMarket - market.pixeljourney.xyz'\n          }\n        })\n      }\n\n      if (isBulkTransfer) {\n        // Handle bulk transfers - execute each transfer individually\n        let successCount = 0\n        for (const recipientAccount of recipients) {\n          try {\n            if (!transferTokens) {\n              log.error('transferTokens service not available', 'TokenTransferModal')\n              continue\n            }\n            const result = await transferTokens(\n              recipientAccount,\n              getAmountPerRecipient().toString(),\n              token.symbol,\n              memo.trim() || 'Bulk transfer via PxMarket - market.pixeljourney.xyz'\n            )\n            if (result) successCount++\n          } catch (error) {\n            log.error(`Transfer to ${recipientAccount} failed`, 'TokenTransferModal', error as Error)\n          }\n        }\n        \n        if (successCount > 0) {\n          const successMessage = successCount === recipients.length\n            ? `${amount} ${token.symbol} transferred to all ${recipients.length} recipients successfully!`\n            : `${amount} ${token.symbol} transferred to ${successCount}/${recipients.length} recipients successfully!`\n          showSuccess('Bulk Transfer Complete', successMessage)\n        }\n      } else {\n        // Single transfer using centralized service\n        if (!transferTokens) {\n          showError('Transfer Error', 'Transfer service not available')\n          return\n        }\n        const result = await transferTokens(\n          recipients[0] || recipient.trim(),\n          amount,\n          token.symbol,\n          memo.trim() || 'Transferred via PxMarket - market.pixeljourney.xyz'\n        )\n        \n        if (result) {\n          showSuccess('Transfer Successful', `${amount} ${token.symbol} transferred successfully!`)\n        }\n      }\n      \n      // Reset form and close modal on success\n      onSuccess?.()\n      onClose()\n      setRecipient('')\n      setAmount('')\n      setMemo('')\n      setRecipients([])\n      setIsBulkTransfer(false)\n    } catch (error) {\n      log.error('Token transfer failed', 'TokenTransferModal', error as Error)\n      showError(\n        'Transfer Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      )\n    } finally {\n      setIsTransferring(false)\n    }\n  }\n\n  const handleClose = () => {\n    if (!isTransferring) {\n      setRecipient('')\n      setAmount('')\n      setMemo('')\n      setRecipients([])\n      setIsBulkTransfer(false)\n      onClose()\n    }\n  }\n\n  if (!isOpen || !token) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleClose}>\n      <div className=\"modal-content token-transfer-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Transfer {token.symbol}</h2>\n          <button \n            className=\"modal-close\" \n            onClick={handleClose}\n            disabled={isTransferring}\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"token-preview\">\n            <div className=\"token-info\">\n              <div className=\"token-icon\">🪙</div>\n              <div className=\"token-details\">\n                <h3>{token.symbol}</h3>\n                <p className=\"token-contract\">{token.contract}</p>\n                <p className=\"token-balance\">Available: {token.balance} {token.symbol}</p>\n                {token.value !== 'N/A' && token.value !== '0.00' && (\n                  <p className=\"token-usd-value\">≈ ${token.value} USD</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"modal-form token-transfer-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"recipient\">\n                {isBulkTransfer ? 'Recipients (comma-separated) *' : 'Recipient WAX Account *'}\n              </label>\n              <input\n                type=\"text\"\n                id=\"recipient\"\n                value={recipient}\n                onChange={(e) => handleRecipientChange(e.target.value)}\n                placeholder={isBulkTransfer ? \"e.g. pixeljourney,market.pxj,council.pxj\" : \"e.g. pixeljourney\"}\n                required\n                disabled={isTransferring}\n                className=\"recipient-input\"\n              />\n              <small className=\"input-help\">\n                {isBulkTransfer \n                  ? `Enter WAX account names separated by commas (${recipients.length} recipients detected)`\n                  : 'Enter a valid WAX account name (12 characters, lowercase letters and numbers 1-5)'\n                }\n              </small>\n              {isBulkTransfer && recipients.length > 1 && (\n                <div className=\"recipients-preview\">\n                  <strong>Recipients:</strong>\n                  <ul>\n                    {recipients.map((rec, index) => (\n                      <li key={index} className={validateWaxAccount(rec) ? 'valid' : 'invalid'}>\n                        {rec} {!validateWaxAccount(rec) && '❌'}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount *</label>\n              <div className=\"amount-input-wrapper\">\n                <input\n                  type=\"number\"\n                  id=\"amount\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  placeholder=\"0.00000000\"\n                  step=\"0.00000001\"\n                  min=\"0\"\n                  max={token.balance.split(' ')[0]}\n                  required\n                  disabled={isTransferring}\n                  className=\"amount-input\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"max-btn\"\n                  onClick={handleMaxClick}\n                  disabled={isTransferring}\n                >\n                  MAX\n                </button>\n              </div>\n              {isBulkTransfer && recipients.length > 1 && amount && (\n                <small className=\"distribution-info\">\n                  Each recipient will receive: {getAmountPerRecipient().toFixed(getTokenPrecision(token.balance))} {token.symbol}\n                </small>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"memo\">Memo (Optional)</label>\n              <input\n                type=\"text\"\n                id=\"memo\"\n                value={memo}\n                onChange={(e) => setMemo(e.target.value)}\n                placeholder=\"Optional transfer message\"\n                maxLength={256}\n                disabled={isTransferring}\n                className=\"memo-input\"\n              />\n            </div>\n\n            <div className=\"transfer-warning\">\n              <div className=\"warning-icon\">⚠️</div>\n              <div className=\"warning-text\">\n                <strong>Warning:</strong> This action cannot be undone. Make sure you trust the recipient and have entered the correct account name and amount.\n              </div>\n            </div>\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\"\n                onClick={handleClose}\n                disabled={isTransferring}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn-primary transfer-btn\"\n                disabled={\n                  isTransferring || \n                  !recipient.trim() || \n                  !amount.trim() || \n                  !validateWaxAccount(recipient.trim()) ||\n                  !validateAmount(amount)\n                }\n              >\n                {isTransferring ? (\n                  <>\n                    <div className=\"spinner\"></div>\n                    {isBulkTransfer ? 'Bulk Transferring...' : 'Transferring...'}\n                  </>\n                ) : (\n                  isBulkTransfer ? `Bulk Transfer ${token.symbol}` : `Transfer ${token.symbol}`\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TokenTransferModal","import React, { useState, useEffect, useCallback } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { apiService } from '../services/api'\nimport '../css/portfolio-analytics.css'\n\ninterface PortfolioMetrics {\n  totalValue: number\n  totalInvested: number\n  profitLoss: number\n  profitLossPercentage: number\n  totalNFTs: number\n  uniqueCollections: number\n  averageHoldingTime: number\n  bestPerformingCollection: string\n  worstPerformingCollection: string\n}\n\ninterface CollectionPerformance {\n  collection: string\n  totalValue: number\n  totalInvested: number\n  profitLoss: number\n  profitLossPercentage: number\n  nftCount: number\n  averagePrice: number\n  floorPrice: number\n  performance: 'excellent' | 'good' | 'neutral' | 'poor'\n}\n\ninterface InvestmentInsight {\n  type: 'profit' | 'loss' | 'opportunity' | 'warning'\n  title: string\n  description: string\n  value?: string\n  collection?: string\n}\n\ninterface TimeSeriesData {\n  date: string\n  value: number\n  invested: number\n}\n\nconst PortfolioAnalytics: React.FC = () => {\n  const { isConnected, account } = useWallet()\n  const [portfolioMetrics, setPortfolioMetrics] = useState<PortfolioMetrics | null>(null)\n  const [collectionPerformance, setCollectionPerformance] = useState<CollectionPerformance[]>([])\n  const [insights, setInsights] = useState<InvestmentInsight[]>([])\n  const [timeSeriesData, setTimeSeriesData] = useState<TimeSeriesData[]>([])\n  const [loading, setLoading] = useState(false)\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'7d' | '30d' | '90d' | '1y'>('30d')\n  const [selectedView, setSelectedView] = useState<'overview' | 'collections' | 'insights'>('overview')\n\n  const generateTimeSeriesData = useCallback(async (metrics: PortfolioMetrics) => {\n    if (!account) return\n    \n    try {\n      // Get user's transaction history to build historical portfolio value\n      const transactions = await apiService.getUserTransactions(account, 1000)\n      const days = selectedTimeframe === '7d' ? 7 : selectedTimeframe === '30d' ? 30 : selectedTimeframe === '90d' ? 90 : 365\n      \n      // Create time series data based on actual transaction history\n      const data: TimeSeriesData[] = []\n      const now = new Date()\n      \n      // Build portfolio value over time using transaction history\n      // const runningValue = 0\n      // const runningInvested = 0\n      \n      for (let i = days; i >= 0; i--) {\n        const targetDate = new Date(now)\n        targetDate.setDate(targetDate.getDate() - i)\n        const targetTimestamp = targetDate.getTime()\n        \n        // Find transactions up to this date\n        const relevantTransactions = transactions.filter(tx => {\n          const txDate = new Date(tx.block_time).getTime()\n          return txDate <= targetTimestamp\n        })\n        \n        // Calculate portfolio value at this point in time\n        let valueAtDate = 0\n        let investedAtDate = 0\n        \n        // Count purchases and sales up to this date\n        relevantTransactions.forEach(tx => {\n          if (tx.type === 'purchase' && tx.price) {\n            const price = parseFloat(tx.price.replace(/[^0-9.-]/g, '') || '0')\n            investedAtDate += price\n            valueAtDate += price // Initial value equals purchase price\n          } else if (tx.type === 'sale' && tx.price) {\n            const price = parseFloat(tx.price.replace(/[^0-9.-]/g, '') || '0')\n            valueAtDate -= price // Remove sold asset value\n          }\n        })\n        \n        // For current day, use actual current metrics\n        if (i === 0) {\n          valueAtDate = metrics.totalValue\n          investedAtDate = metrics.totalInvested\n        } else if (valueAtDate === 0 && investedAtDate === 0) {\n          // If no transactions yet, use zero values\n          valueAtDate = 0\n          investedAtDate = 0\n        }\n        \n        data.push({\n          date: targetDate.toISOString().split('T')[0],\n          value: valueAtDate,\n          invested: investedAtDate\n        })\n      }\n      \n      setTimeSeriesData(data)\n    } catch (error) {\n      console.error('Error generating time series data:', error)\n      // Fallback to simple current value projection\n      const data: TimeSeriesData[] = []\n      const days = selectedTimeframe === '7d' ? 7 : selectedTimeframe === '30d' ? 30 : selectedTimeframe === '90d' ? 90 : 365\n      \n      for (let i = days; i >= 0; i--) {\n        const date = new Date()\n        date.setDate(date.getDate() - i)\n        \n        data.push({\n          date: date.toISOString().split('T')[0],\n          value: i === 0 ? metrics.totalValue : metrics.totalValue * 0.95, // Slight historical discount\n          invested: metrics.totalInvested\n        })\n      }\n      \n      setTimeSeriesData(data)\n    }\n  }, [account, selectedTimeframe])\n\n  const calculatePortfolioMetrics = useCallback(async () => {\n    if (!account) return\n\n    setLoading(true)\n    try {\n      // Get user's current inventory\n      const inventory = await apiService.getUserInventory(account)\n      \n      // Get user's transaction history to calculate invested amounts\n      const transactions = await apiService.getUserTransactions(account)\n      \n      // Calculate current portfolio value\n      let totalValue = 0\n      let totalInvested = 0\n      const collectionData: { [key: string]: CollectionPerformance } = {}\n      \n      // Process current inventory\n      for (const nft of inventory) {\n        const currentPrice = parseFloat(nft.price || '0')\n        totalValue += currentPrice\n        \n        // Find purchase transaction for this NFT\n        const purchaseTransaction = transactions.find(tx => \n          tx.asset_id === nft.asset_id && tx.type === 'purchase'\n        )\n        \n        const investedAmount = purchaseTransaction ? parseFloat(purchaseTransaction.price || '0') : currentPrice\n        totalInvested += investedAmount\n        \n        // Group by collection\n        if (!collectionData[nft.collection]) {\n          collectionData[nft.collection] = {\n            collection: nft.collection,\n            totalValue: 0,\n            totalInvested: 0,\n            profitLoss: 0,\n            profitLossPercentage: 0,\n            nftCount: 0,\n            averagePrice: 0,\n            floorPrice: 0,\n            performance: 'neutral'\n          }\n        }\n        \n        collectionData[nft.collection].totalValue += currentPrice\n        collectionData[nft.collection].totalInvested += investedAmount\n        collectionData[nft.collection].nftCount += 1\n      }\n      \n      // Calculate collection performance\n      const collections = Object.values(collectionData).map(collection => {\n        collection.profitLoss = collection.totalValue - collection.totalInvested\n        collection.profitLossPercentage = collection.totalInvested > 0 \n          ? (collection.profitLoss / collection.totalInvested) * 100 \n          : 0\n        collection.averagePrice = collection.nftCount > 0 \n          ? collection.totalValue / collection.nftCount \n          : 0\n        \n        // Determine performance rating\n        if (collection.profitLossPercentage > 20) collection.performance = 'excellent'\n        else if (collection.profitLossPercentage > 5) collection.performance = 'good'\n        else if (collection.profitLossPercentage > -5) collection.performance = 'neutral'\n        else collection.performance = 'poor'\n        \n        return collection\n      })\n      \n      // Calculate overall metrics\n      const profitLoss = totalValue - totalInvested\n      const profitLossPercentage = totalInvested > 0 ? (profitLoss / totalInvested) * 100 : 0\n      \n      // Find best and worst performing collections\n      const sortedByPerformance = collections.sort((a, b) => b.profitLossPercentage - a.profitLossPercentage)\n      const bestPerforming = sortedByPerformance[0]?.collection || 'N/A'\n      const worstPerforming = sortedByPerformance[sortedByPerformance.length - 1]?.collection || 'N/A'\n      \n      // Calculate average holding time (mock calculation)\n      const averageHoldingTime = 45 // days - would need more complex calculation with real data\n      \n      const metrics: PortfolioMetrics = {\n        totalValue,\n        totalInvested,\n        profitLoss,\n        profitLossPercentage,\n        totalNFTs: inventory.length,\n        uniqueCollections: collections.length,\n        averageHoldingTime,\n        bestPerformingCollection: bestPerforming,\n        worstPerformingCollection: worstPerforming\n      }\n      \n      setPortfolioMetrics(metrics)\n      setCollectionPerformance(collections)\n      \n      // Generate insights\n      generateInsights(metrics, collections)\n      \n      // Generate time series data from transaction history\n      await generateTimeSeriesData(metrics)\n      \n    } catch (error) {\n      console.error('Error calculating portfolio metrics:', error)\n    } finally {\n      setLoading(false)\n    }\n  }, [account, generateTimeSeriesData])\n\n  const generateInsights = (metrics: PortfolioMetrics, collections: CollectionPerformance[]) => {\n    const newInsights: InvestmentInsight[] = []\n    \n    // Profit/Loss insights\n    if (metrics.profitLoss > 0) {\n      newInsights.push({\n        type: 'profit',\n        title: 'Portfolio in Profit',\n        description: `Your portfolio has gained ${metrics.profitLossPercentage.toFixed(1)}% since initial investment`,\n        value: `+${metrics.profitLoss.toFixed(2)} WAX`\n      })\n    } else if (metrics.profitLoss < 0) {\n      newInsights.push({\n        type: 'loss',\n        title: 'Portfolio Underperforming',\n        description: `Your portfolio is down ${Math.abs(metrics.profitLossPercentage).toFixed(1)}% from initial investment`,\n        value: `${metrics.profitLoss.toFixed(2)} WAX`\n      })\n    }\n    \n    // Best performing collection\n    const bestCollection = collections.find(c => c.collection === metrics.bestPerformingCollection)\n    if (bestCollection && bestCollection.profitLossPercentage > 10) {\n      newInsights.push({\n        type: 'profit',\n        title: 'Top Performer',\n        description: `${bestCollection.collection} is your best performing collection`,\n        value: `+${bestCollection.profitLossPercentage.toFixed(1)}%`,\n        collection: bestCollection.collection\n      })\n    }\n    \n    // Diversification insight\n    if (collections.length < 3) {\n      newInsights.push({\n        type: 'opportunity',\n        title: 'Diversification Opportunity',\n        description: 'Consider diversifying across more collections to reduce risk',\n        value: `${collections.length} collections`\n      })\n    }\n    \n    // High concentration warning\n    const largestCollection = collections.reduce((max, collection) => \n      collection.totalValue > max.totalValue ? collection : max, collections[0]\n    )\n    \n    if (largestCollection && (largestCollection.totalValue / metrics.totalValue) > 0.6) {\n      newInsights.push({\n        type: 'warning',\n        title: 'High Concentration Risk',\n        description: `${largestCollection.collection} represents over 60% of your portfolio`,\n        collection: largestCollection.collection\n      })\n    }\n    \n    setInsights(newInsights)\n  }\n\n\n\n  useEffect(() => {\n    if (isConnected && account) {\n      calculatePortfolioMetrics()\n    }\n  }, [isConnected, account, calculatePortfolioMetrics])\n\n  const formatWAX = (amount: number) => {\n    return `${amount.toFixed(2)} WAX`\n  }\n\n  const formatPercentage = (percentage: number) => {\n    const sign = percentage >= 0 ? '+' : ''\n    return `${sign}${percentage.toFixed(1)}%`\n  }\n\n  if (!isConnected) {\n    return (\n      <div className=\"portfolio-analytics\">\n        <div className=\"wallet-connection-prompt\">\n          <h3>🔗 Connect Your Wallet</h3>\n          <p>Connect your WAX wallet to view detailed portfolio analytics and investment insights.</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (loading) {\n    return (\n      <div className=\"portfolio-analytics\">\n        <div className=\"loading-state\">\n          <div className=\"loading-spinner\"></div>\n          <p>Analyzing your portfolio...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"portfolio-analytics\">\n      <div className=\"analytics-header\">\n        <h2>Portfolio Analytics</h2>\n        <div className=\"analytics-controls\">\n          <div className=\"timeframe-selector\">\n            {(['7d', '30d', '90d', '1y'] as const).map(timeframe => (\n              <button\n                key={timeframe}\n                className={`timeframe-btn ${selectedTimeframe === timeframe ? 'active' : ''}`}\n                onClick={() => setSelectedTimeframe(timeframe)}\n              >\n                {timeframe}\n              </button>\n            ))}\n          </div>\n          <div className=\"view-selector\">\n            {(['overview', 'collections', 'insights'] as const).map(view => (\n              <button\n                key={view}\n                className={`view-btn ${selectedView === view ? 'active' : ''}`}\n                onClick={() => setSelectedView(view)}\n              >\n                {view.charAt(0).toUpperCase() + view.slice(1)}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {selectedView === 'overview' && portfolioMetrics && (\n        <div className=\"overview-section\">\n          <div className=\"metrics-grid\">\n            <div className=\"metric-card primary\">\n              <div className=\"metric-header\">\n                <h3>Total Portfolio Value</h3>\n                <span className=\"metric-icon\">💰</span>\n              </div>\n              <div className=\"metric-value\">{formatWAX(portfolioMetrics.totalValue)}</div>\n              <div className={`metric-change ${portfolioMetrics.profitLoss >= 0 ? 'positive' : 'negative'}`}>\n                {formatPercentage(portfolioMetrics.profitLossPercentage)} ({formatWAX(portfolioMetrics.profitLoss)})\n              </div>\n            </div>\n            \n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <h3>Total Invested</h3>\n                <span className=\"metric-icon\">📈</span>\n              </div>\n              <div className=\"metric-value\">{formatWAX(portfolioMetrics.totalInvested)}</div>\n            </div>\n            \n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <h3>NFTs Owned</h3>\n                <span className=\"metric-icon\">🎨</span>\n              </div>\n              <div className=\"metric-value\">{portfolioMetrics.totalNFTs}</div>\n              <div className=\"metric-subtitle\">{portfolioMetrics.uniqueCollections} collections</div>\n            </div>\n            \n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <h3>Avg. Holding Time</h3>\n                <span className=\"metric-icon\">⏱️</span>\n              </div>\n              <div className=\"metric-value\">{portfolioMetrics.averageHoldingTime}d</div>\n            </div>\n          </div>\n\n          <div className=\"performance-chart\">\n            <h3>Portfolio Performance</h3>\n            <div className=\"chart-container\">\n              <svg className=\"performance-svg\" viewBox=\"0 0 800 200\">\n                {timeSeriesData.map((point, index) => {\n                  const x = (index / (timeSeriesData.length - 1)) * 780 + 10\n                  const y = 190 - ((point.value / Math.max(...timeSeriesData.map(d => d.value))) * 180)\n                  const investedY = 190 - ((point.invested / Math.max(...timeSeriesData.map(d => d.value))) * 180)\n                  \n                  return (\n                    <g key={index}>\n                      {index > 0 && (\n                        <>\n                          <line\n                            x1={(index - 1) / (timeSeriesData.length - 1) * 780 + 10}\n                            y1={190 - ((timeSeriesData[index - 1].value / Math.max(...timeSeriesData.map(d => d.value))) * 180)}\n                            x2={x}\n                            y2={y}\n                            stroke=\"#4CAF50\"\n                            strokeWidth=\"2\"\n                          />\n                          <line\n                            x1={(index - 1) / (timeSeriesData.length - 1) * 780 + 10}\n                            y1={190 - ((timeSeriesData[index - 1].invested / Math.max(...timeSeriesData.map(d => d.value))) * 180)}\n                            x2={x}\n                            y2={investedY}\n                            stroke=\"#FF9800\"\n                            strokeWidth=\"2\"\n                            strokeDasharray=\"5,5\"\n                          />\n                        </>\n                      )}\n                      <circle cx={x} cy={y} r=\"3\" fill=\"#4CAF50\" />\n                    </g>\n                  )\n                })}\n              </svg>\n              <div className=\"chart-legend\">\n                <div className=\"legend-item\">\n                  <div className=\"legend-color\" style={{ backgroundColor: 'var(--success-color)' }}></div>\n                  <span>Current Value</span>\n                </div>\n                <div className=\"legend-item\">\n                  <div className=\"legend-color dashed\" style={{ backgroundColor: 'var(--warning-color)' }}></div>\n                  <span>Invested Amount</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {selectedView === 'collections' && (\n        <div className=\"collections-section\">\n          <h3>Collection Performance</h3>\n          <div className=\"collections-grid\">\n            {collectionPerformance.map((collection, index) => (\n              <div key={index} className={`collection-card ${collection.performance}`}>\n                <div className=\"collection-header\">\n                  <h4>{collection.collection}</h4>\n                  <span className={`performance-badge ${collection.performance}`}>\n                    {collection.performance}\n                  </span>\n                </div>\n                <div className=\"collection-metrics\">\n                  <div className=\"collection-metric\">\n                    <span className=\"metric-label\">Value:</span>\n                    <span className=\"metric-value\">{formatWAX(collection.totalValue)}</span>\n                  </div>\n                  <div className=\"collection-metric\">\n                    <span className=\"metric-label\">P&L:</span>\n                    <span className={`metric-value ${collection.profitLoss >= 0 ? 'positive' : 'negative'}`}>\n                      {formatPercentage(collection.profitLossPercentage)}\n                    </span>\n                  </div>\n                  <div className=\"collection-metric\">\n                    <span className=\"metric-label\">NFTs:</span>\n                    <span className=\"metric-value\">{collection.nftCount}</span>\n                  </div>\n                  <div className=\"collection-metric\">\n                    <span className=\"metric-label\">Avg Price:</span>\n                    <span className=\"metric-value\">{formatWAX(collection.averagePrice)}</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {selectedView === 'insights' && (\n        <div className=\"insights-section\">\n          <h3>Investment Insights</h3>\n          <div className=\"insights-grid\">\n            {insights.map((insight, index) => (\n              <div key={index} className={`insight-card ${insight.type}`}>\n                <div className=\"insight-header\">\n                  <span className={`insight-icon ${insight.type}`}>\n                    {insight.type === 'profit' && '📈'}\n                    {insight.type === 'loss' && '📉'}\n                    {insight.type === 'opportunity' && '💡'}\n                    {insight.type === 'warning' && '⚠️'}\n                  </span>\n                  <h4>{insight.title}</h4>\n                  {insight.value && (\n                    <span className=\"insight-value\">{insight.value}</span>\n                  )}\n                </div>\n                <p className=\"insight-description\">{insight.description}</p>\n                {insight.collection && (\n                  <div className=\"insight-collection\">\n                    Collection: {insight.collection}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default PortfolioAnalytics","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { badgeService } from '../services/badgeService'\nimport type { UserBadge } from '../services/badgeService'\nimport { useWallet } from '../contexts/WalletContext'\nimport ShareModal from './ShareModal'\nimport { log } from '../services/loggingService'\nimport '../css/pxbadges.css'\n\ninterface BadgeCategory {\n  id: string\n  name: string\n  icon: string\n  description: string\n  badges: UserBadge[]\n}\n\ninterface AchievementSeries {\n  name: string\n  badges: UserBadge[]\n  steps: { tier: number; earned: boolean; current?: boolean }[]\n}\n\ninterface BadgeStats {\n  totalBadges: number\n  badgesByType: Record<string, number>\n  badgesByRarity: Record<string, number>\n  recentBadges: UserBadge[]\n  progressBadges: UserBadge[]\n}\n\nconst PxBadges: React.FC = () => {\n  const { account } = useWallet()\n  const [badges, setBadges] = useState<UserBadge[]>([])\n  const [loading, setLoading] = useState(true)\n  const [collapsedCategories, setCollapsedCategories] = useState<Set<string>>(new Set())\n  const [badgeStats, setBadgeStats] = useState<BadgeStats | null>(null)\n  const [showShareModal, setShowShareModal] = useState(false)\n\n  const loadUserBadges = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      setLoading(true)\n      const result = await badgeService.checkUserBadges(account)\n      const stats = await badgeService.getUserBadgeStats(account)\n      setBadges(result.badges)\n      setBadgeStats(stats)\n    } catch (error) {\n      log.error('Error loading badges', 'PxBadges.loadUserBadges', error as Error, { account })\n    } finally {\n      setLoading(false)\n    }\n  }, [account])\n\n  useEffect(() => {\n    if (account) {\n      loadUserBadges()\n    } else {\n      setBadges([])\n      setLoading(false)\n    }\n  }, [account, loadUserBadges])\n\n  const categories = useMemo((): BadgeCategory[] => {\n    const allBadgeDefinitions = badgeService.getAllBadgeDefinitions()\n    \n    const categoryMap: Record<string, BadgeCategory> = {\n      holdings: {\n        id: 'holdings',\n        name: 'Token Holdings',\n        icon: '💰',\n        description: 'Achievements for holding various tokens',\n        badges: []\n      },\n      ownership: {\n        id: 'ownership',\n        name: 'NFT Collections',\n        icon: '🎭',\n        description: 'Achievements for owning NFTs and collectibles',\n        badges: []\n      },\n      trading: {\n        id: 'trading',\n        name: 'Trading Mastery',\n        icon: '📈',\n        description: 'Achievements for trading activities',\n        badges: []\n      },\n      social: {\n        id: 'social',\n        name: 'Community',\n        icon: '👥',\n        description: 'Achievements for community participation',\n        badges: []\n      },\n      achievement: {\n        id: 'achievement',\n        name: 'Special Achievements',\n        icon: '🏆',\n        description: 'Rare and special accomplishments',\n        badges: []\n      },\n      special: {\n        id: 'special',\n        name: 'Legendary',\n        icon: '⭐',\n        description: 'Ultra-rare legendary achievements',\n        badges: []\n      }\n    }\n\n    // Add all badge definitions to their respective categories\n    allBadgeDefinitions.forEach(badgeDef => {\n      const category = categoryMap[badgeDef.type] || categoryMap.achievement\n      const earnedBadge = badges.find(b => b.id === badgeDef.id)\n      \n      category.badges.push(earnedBadge || {\n        ...badgeDef,\n        unlockedAt: undefined\n      })\n    })\n\n    return Object.values(categoryMap).filter(cat => cat.badges.length > 0)\n  }, [badges])\n\n  const achievementSeries = useMemo((): AchievementSeries[] => {\n    const series: AchievementSeries[] = []\n    \n    // Pixal PFP Collector Series\n    const pixalCollectorBadges = badges.filter(b => b.id.startsWith('pixal-collector'))\n      .sort((a, b) => (a.tier || 0) - (b.tier || 0))\n    \n    if (pixalCollectorBadges.length > 0) {\n      const steps = [1, 2, 3, 4, 5].map(tier => {\n        const badge = pixalCollectorBadges.find(b => b.tier === tier)\n        return {\n          tier,\n          earned: !!badge?.unlockedAt,\n          current: badge?.progress && !badge.unlockedAt\n        }\n      })\n      \n      series.push({\n        name: 'Pixal Collector',\n        badges: pixalCollectorBadges,\n        steps\n      })\n    }\n    \n    // WaxRock Collector Series\n    const waxrockCollectorBadges = badges.filter(b => b.id.startsWith('waxrock-collector'))\n      .sort((a, b) => (a.tier || 0) - (b.tier || 0))\n    \n    if (waxrockCollectorBadges.length > 0) {\n      const steps = [1, 2, 3].map(tier => {\n        const badge = waxrockCollectorBadges.find(b => b.tier === tier)\n        return {\n          tier,\n          earned: !!badge?.unlockedAt,\n          current: badge?.progress && !badge.unlockedAt\n        }\n      })\n      \n      series.push({\n        name: 'WaxRock Collector',\n        badges: waxrockCollectorBadges,\n        steps\n      })\n    }\n    \n    return series\n  }, [badges])\n\n  const toggleCategory = (categoryId: string) => {\n    const newCollapsed = new Set(collapsedCategories)\n    if (newCollapsed.has(categoryId)) {\n      newCollapsed.delete(categoryId)\n    } else {\n      newCollapsed.add(categoryId)\n    }\n    setCollapsedCategories(newCollapsed)\n  }\n\n  const getRarityClass = (badge: UserBadge): string => {\n    if (badge.rarity === 'legendary') return 'legendary'\n    if (badge.rarity === 'epic') return 'epic'\n    if (badge.rarity === 'rare') return 'rare'\n    return ''\n  }\n\n  const formatDate = (date: Date | string | undefined): string => {\n    if (!date) return ''\n    const d = new Date(date)\n    return d.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric', \n      year: 'numeric' \n    })\n  }\n\n  if (!account) {\n    return (\n      <div className=\"pxbadges-container\">\n        <div className=\"no-achievements\">\n          <div className=\"no-achievements-icon\">🔒</div>\n          <div className=\"no-achievements-text\">Connect Your Wallet</div>\n          <div className=\"no-achievements-subtitle\">\n            Connect your wallet to view your achievements and progress\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"pxbadges-container\">\n      <div className=\"pxbadges-header\">\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '1rem', marginBottom: '1rem' }}>\n          <h1 className=\"pxbadges-title\">Achievements</h1>\n          <button\n            onClick={() => setShowShareModal(true)}\n            style={{\n              background: 'rgba(255, 215, 0, 0.2)',\n              border: '2px solid #ffd700',\n              borderRadius: '50%',\n              width: '48px',\n              height: '48px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              color: '#ffd700'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.background = 'rgba(255, 215, 0, 0.3)'\n              e.currentTarget.style.transform = 'scale(1.1)'\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.background = 'rgba(255, 215, 0, 0.2)'\n              e.currentTarget.style.transform = 'scale(1)'\n            }}\n            title=\"Share Achievements\"\n          >\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n            </svg>\n          </button>\n        </div>\n        <p className=\"pxbadges-subtitle\">\n          Track your progress and unlock prestigious badges in the Pixel Journey ecosystem\n        </p>\n        \n        {badgeStats && (\n          <div className=\"achievement-stats\">\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{badgeStats.totalBadges}</span>\n              <span className=\"stat-label\">Total Earned</span>\n            </div>\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{badgeStats.badgesByRarity?.legendary || 0}</span>\n              <span className=\"stat-label\">Legendary</span>\n            </div>\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{badgeStats.badgesByRarity?.epic || 0}</span>\n              <span className=\"stat-label\">Epic</span>\n            </div>\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{badgeStats.badgesByRarity?.rare || 0}</span>\n              <span className=\"stat-label\">Rare</span>\n            </div>\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{badgeStats.progressBadges?.length || 0}</span>\n              <span className=\"stat-label\">In Progress</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {loading ? (\n        <div className=\"achievements-loading\">\n          <div className=\"loading-spinner\"></div>\n          Loading achievements...\n        </div>\n      ) : (\n        <div className=\"achievement-categories\">\n          {/* Achievement Series */}\n          {achievementSeries.length > 0 && (\n            <div className=\"category-section\">\n              <div className=\"category-header\">\n                <span className=\"category-icon\">🏆</span>\n                <h2 className=\"category-title\">Achievement Series</h2>\n              </div>\n              \n              {achievementSeries.map(series => (\n                <div key={series.name} className=\"achievement-card earned\">\n                  <div className=\"achievement-header\">\n                    <span className=\"achievement-icon\">🎯</span>\n                    <div className=\"achievement-info\">\n                      <h3 className=\"achievement-name\">{series.name}</h3>\n                      <p className=\"achievement-description\">\n                        Multi-tier achievement series with {series.steps.length} levels\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"achievement-series\">\n                    {series.steps.map(step => (\n                      <div \n                        key={step.tier}\n                        className={`series-step ${\n                          step.earned ? 'completed' : step.current ? 'current' : ''\n                        }`}\n                      >\n                        {step.tier}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {/* Regular Categories */}\n          {categories.map(category => {\n            const earnedCount = category.badges.filter(b => b.unlockedAt).length\n            const totalCount = category.badges.length\n            const isCollapsed = collapsedCategories.has(category.id)\n            \n            return (\n              <div key={category.id} className=\"category-section\">\n                <div \n                  className=\"category-header\"\n                  onClick={() => toggleCategory(category.id)}\n                >\n                  <span className=\"category-icon\">{category.icon}</span>\n                  <h2 className=\"category-title\">{category.name}</h2>\n                  <span className=\"category-progress\">\n                    {earnedCount}/{totalCount}\n                  </span>\n                  <span className={`category-toggle ${isCollapsed ? 'collapsed' : ''}`}>\n                    ▼\n                  </span>\n                </div>\n                \n                {!isCollapsed && (\n                  <div className=\"achievements-grid\">\n                    {category.badges.map(badge => {\n                      const isEarned = !!badge.unlockedAt\n                      const rarityClass = getRarityClass(badge)\n                      \n                      return (\n                        <div \n                          key={badge.id}\n                          className={`achievement-card ${\n                            isEarned ? 'earned' : ''\n                          } ${rarityClass}`}\n                        >\n                          <div className=\"achievement-header\">\n                            <span className=\"achievement-icon\">{badge.icon}</span>\n                            <div className=\"achievement-info\">\n                              <h3 className=\"achievement-name\">{badge.name}</h3>\n                              <p className=\"achievement-description\">{badge.description}</p>\n                              <p className=\"achievement-requirements\">{badge.requirements}</p>\n                            </div>\n                          </div>\n                          \n                          {badge.tier && (\n                            <div className=\"achievement-tier\">\n                              Tier {badge.tier}\n                            </div>\n                          )}\n                          \n                          {badge.progress && (\n                            <div className=\"achievement-progress\">\n                              <div className=\"progress-bar\">\n                                <div \n                                  className=\"progress-fill\"\n                                  style={{ width: `${badge.progress.percentage}%` }}\n                                ></div>\n                              </div>\n                              <div className=\"progress-text\">\n                                {badge.progress.current.toLocaleString()} / {badge.progress.required.toLocaleString()}\n                                ({badge.progress.percentage}%)\n                              </div>\n                            </div>\n                          )}\n                          \n                          {isEarned && badge.unlockedAt && (\n                            <div className=\"achievement-date\">\n                              {formatDate(badge.unlockedAt)}\n                            </div>\n                          )}\n                        </div>\n                      )\n                    })}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n          \n          {categories.length === 0 && (\n            <div className=\"no-achievements\">\n              <div className=\"no-achievements-icon\">🎯</div>\n              <div className=\"no-achievements-text\">No Achievements Yet</div>\n              <div className=\"no-achievements-subtitle\">\n                Start participating in the Pixel Journey ecosystem to earn your first badges!\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      \n      <ShareModal\n        isOpen={showShareModal}\n        onClose={() => setShowShareModal(false)}\n        title={`${account}'s Achievements`}\n        description={`Check out my achievements in the Pixel Journey ecosystem! I've earned ${badgeStats?.totalBadges || 0} badges including ${badgeStats?.badgesByRarity?.legendary || 0} legendary achievements.`}\n        shareUrl={`${window.location.origin}/pxbadges?user=${account}`}\n        defaultShareText={`Check out my achievements in the Pixel Journey ecosystem! I've earned ${badgeStats?.totalBadges || 0} badges. #PixelJourney #Achievements`}\n        type=\"achievement\"\n        badges={badges}\n        totalBadges={badgeStats?.totalBadges || 0}\n        legendaryCount={badgeStats?.badgesByRarity?.legendary || 0}\n        username={account || ''}\n      />\n    </div>\n  )\n}\n\nexport default PxBadges","import React, { createContext, useContext, useState, useEffect, useCallback, type ReactNode } from 'react'\nimport { useWallet } from './WalletContext'\nimport { apiService } from '../services/api'\nimport { log } from '../services/loggingService'\nimport type { LightApiBalance, LightApiResponse } from '../services/api'\n\ninterface TokenBalanceContextType {\n  balances: Record<string, string>\n  lightApiBalances: LightApiBalance[]\n  isLoading: boolean\n  refreshBalances: () => Promise<void>\n  getTokenBalance: (symbol: string, contract?: string) => string\n}\n\nconst TokenBalanceContext = createContext<TokenBalanceContextType | undefined>(undefined)\n\ninterface TokenBalanceProviderProps {\n  children: ReactNode\n}\n\nexport const TokenBalanceProvider: React.FC<TokenBalanceProviderProps> = ({ children }) => {\n  const { account } = useWallet()\n  const [balances, setBalances] = useState<Record<string, string>>({})\n  const [lightApiBalances, setLightApiBalances] = useState<LightApiBalance[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [lastFetchTime, setLastFetchTime] = useState<number>(0)\n\n  // Debounce API calls - only fetch if last fetch was more than 5 seconds ago\n  const shouldFetch = useCallback(() => {\n    const now = Date.now()\n    return now - lastFetchTime > 5000 // 5 second debounce\n  }, [lastFetchTime])\n\n  const refreshBalances = useCallback(async () => {\n    if (!account) {\n      setBalances({})\n      setLightApiBalances([])\n      return\n    }\n\n    // Prevent spam - only fetch if enough time has passed\n    if (!shouldFetch() && lightApiBalances.length > 0) {\n      log.info('Skipping balance fetch - too recent', 'TokenBalanceContext')\n      return\n    }\n\n    setIsLoading(true)\n    try {\n      log.info('Fetching token balances from Light API', 'TokenBalanceContext', { account })\n      \n      const lightApiResponse: LightApiResponse | null = await apiService.getLightApiBalances(account)\n      \n      if (lightApiResponse && lightApiResponse.balances) {\n        const newBalances: Record<string, string> = {}\n        \n        // Store raw Light API balances\n        setLightApiBalances(lightApiResponse.balances)\n        \n        // Process balances into formatted strings\n        for (const balance of lightApiResponse.balances) {\n          const key = `${balance.currency}-${balance.contract}`\n          newBalances[balance.currency] = `${balance.amount} ${balance.currency}`\n          newBalances[key] = `${balance.amount} ${balance.currency}`\n        }\n        \n        setBalances(newBalances)\n        setLastFetchTime(Date.now())\n        \n        log.info('Successfully loaded token balances', 'TokenBalanceContext', { \n          account, \n          tokenCount: lightApiResponse.balances.length \n        })\n      } else {\n        log.warn('No balances returned from Light API', 'TokenBalanceContext', { account })\n        setBalances({})\n        setLightApiBalances([])\n      }\n    } catch (error) {\n      log.error('Failed to load token balances', 'TokenBalanceContext', error as Error, { account })\n      setBalances({})\n      setLightApiBalances([])\n    } finally {\n      setIsLoading(false)\n    }\n  }, [account, shouldFetch, lightApiBalances.length])\n\n  // Get balance for a specific token\n  const getTokenBalance = useCallback((symbol: string, contract?: string): string => {\n    if (contract) {\n      // Try with contract first for exact match\n      const exactMatch = lightApiBalances.find(\n        b => b.currency === symbol && b.contract === contract\n      )\n      if (exactMatch) {\n        return `${exactMatch.amount} ${exactMatch.currency}`\n      }\n    }\n    \n    // Fallback to symbol only\n    return balances[symbol] || `0.0000 ${symbol}`\n  }, [balances, lightApiBalances])\n\n  // Load balances when account changes\n  useEffect(() => {\n    refreshBalances()\n  }, [account])\n\n  // Set up periodic refresh every 30 seconds\n  useEffect(() => {\n    if (!account) return\n\n    const interval = setInterval(() => {\n      refreshBalances()\n    }, 30000) // 30 seconds\n\n    return () => clearInterval(interval)\n  }, [account, refreshBalances])\n\n  const value: TokenBalanceContextType = {\n    balances,\n    lightApiBalances,\n    isLoading,\n    refreshBalances,\n    getTokenBalance\n  }\n\n  return (\n    <TokenBalanceContext.Provider value={value}>\n      {children}\n    </TokenBalanceContext.Provider>\n  )\n}\n\nexport const useTokenBalance = (): TokenBalanceContextType => {\n  const context = useContext(TokenBalanceContext)\n  if (context === undefined) {\n    throw new Error('useTokenBalance must be used within a TokenBalanceProvider')\n  }\n  return context\n}","import { log } from './loggingService'\n\nexport interface SwapQuote {\n  input_amount: string  // Input token amount\n  output_amount: string  // Output token amount\n  price_impact: string  // In percent (e.g., '0.1')\n  minimum_received: string  // Adjusted min output after slippage\n  route: SwapRoute[]\n  memo: string  // Pre-built memo for transaction\n  input_token: TokenInfo\n  output_token: TokenInfo\n}\n\nexport interface TokenInfo {\n  symbol: string\n  contract: string\n  precision: number\n  token_id: string\n}\n\nexport interface AlcorToken {\n  id: string\n  symbol: string\n  contract: string\n  precision: number\n  logo?: string\n  usd_price?: number\n  system_price?: number\n}\n\nexport interface SwapRoute {\n  pool_id: number\n  token_in: string\n  token_out: string\n  amount_in: string\n  amount_out: string\n}\n\nexport interface SwapResult {\n  transaction_id: string\n  success: boolean\n  error?: string\n}\n\nclass AlcorService {\n  private readonly ALCOR_API_BASE = 'https://alcor.exchange/api/v2'\n  private readonly WAX_CONTRACT = 'eosio.token'\n  private readonly WPIXAL_CONTRACT = 'pixeljourney'\n  private readonly WAX_SYMBOL = 'WAX'\n  private readonly WPIXAL_SYMBOL = 'WPIXAL'\n  private readonly WAX_TOKEN_ID = 'wax-eosio.token'\n  private readonly WPIXAL_TOKEN_ID = 'wpixal-pixeljourney'\n  \n  // Cache for tokens to avoid repeated API calls\n  private tokensCache: AlcorToken[] | null = null\n  private tokensCacheExpiry: number = 0\n  private readonly CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\n\n  /**\n   * Get all available tokens from Alcor Exchange\n   */\n  async getAllTokens(): Promise<AlcorToken[]> {\n    try {\n      // Check cache first\n      if (this.tokensCache && Date.now() < this.tokensCacheExpiry) {\n        return this.tokensCache\n      }\n\n      const url = `${this.ALCOR_API_BASE}/tokens`\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors'\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const tokens = await response.json()\n      \n      // Transform the response to our format\n      this.tokensCache = tokens.map((token: any) => ({\n        id: token.id || `${token.symbol.toLowerCase()}-${token.contract}`,\n        symbol: token.symbol,\n        contract: token.contract,\n        precision: token.precision || 8,\n        logo: token.logo,\n        usd_price: token.usd_price,\n        system_price: token.system_price\n      }))\n      \n      this.tokensCacheExpiry = Date.now() + this.CACHE_DURATION\n      return this.tokensCache || []\n    } catch (error) {\n      log.error('Error fetching all tokens:', 'AlcorService.getAllTokens', error as Error)\n      // Return fallback tokens if API fails\n      return [\n        {\n          id: this.WAX_TOKEN_ID,\n          symbol: this.WAX_SYMBOL,\n          contract: this.WAX_CONTRACT,\n          precision: 8\n        },\n        {\n          id: this.WPIXAL_TOKEN_ID,\n          symbol: this.WPIXAL_SYMBOL,\n          contract: this.WPIXAL_CONTRACT,\n          precision: 8\n        }\n      ]\n    }\n  }\n\n  /**\n   * Get swap quote for any token pair using Alcor's swapRouter API\n   */\n  async getSwapQuoteForPair(\n    inputToken: TokenInfo,\n    outputToken: TokenInfo,\n    amount: string,\n    userAccount: string,\n    tradeType: 'EXACT_INPUT' | 'EXACT_OUTPUT' = 'EXACT_INPUT',\n    slippageTolerance: number = 0.05\n  ): Promise<SwapQuote> {\n    try {\n      const url = `${this.ALCOR_API_BASE}/swapRouter/getRoute?` +\n         `trade_type=${tradeType}&` +\n         `input=${inputToken.token_id}&` +\n         `output=${outputToken.token_id}&` +\n         `amount=${parseFloat(amount).toFixed(inputToken.precision)}&` +\n         `slippage=${slippageTolerance.toFixed(2)}&` +\n         `receiver=${userAccount}&` +\n         `maxHops=3&` +\n         `v2=true`\n\n       log.info('Fetching swap route from:', url)\n       \n       const response = await fetch(url)\n       if (!response.ok) {\n         throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n       }\n       \n       const data = await response.json()\n       log.info('Swap route response:', data)\n       \n       if (!data.swaps || data.swaps.length === 0) {\n         throw new Error('No swap route found for this token pair')\n       }\n       \n       const swap = data.swaps[0]\n       \n       return {\n         input_amount: data.maxSent || swap.maxSent || data.input || swap.input,\n         output_amount: data.output || swap.output || data.minReceived || swap.minReceived,\n         price_impact: data.priceImpact?.toString() || '0',\n         minimum_received: data.minReceived || swap.minReceived,\n         route: data.route?.map((poolId: number, index: number) => ({\n           pool_id: poolId,\n           token_in: index === 0 ? `${inputToken.symbol}@${inputToken.contract}` : 'intermediate',\n           token_out: index === data.route.length - 1 ? `${outputToken.symbol}@${outputToken.contract}` : 'intermediate',\n           amount_in: index === 0 ? (data.input || swap.input) : '0',\n           amount_out: index === data.route.length - 1 ? (data.output || swap.output) : '0'\n         })) || [],\n         memo: data.memo || swap.memo,\n         input_token: inputToken,\n         output_token: outputToken\n       }\n    } catch (error) {\n      log.error('Error getting swap quote for pair:', 'AlcorService.getSwapQuoteForPair', error as Error)\n      throw new Error(`Failed to get swap quote for ${inputToken.symbol}/${outputToken.symbol}: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Get a quote for buying exact WPIXAL amount using Alcor's swapRouter API (legacy method)\n   */\n  async getExactOutputQuote(wpixalAmount: string, userAccount: string, slippageTolerance: number = 0.05): Promise<SwapQuote> {\n    try {\n      const url = `${this.ALCOR_API_BASE}/swapRouter/getRoute?` +\n         `trade_type=EXACT_OUTPUT&` +\n         `input=${this.WAX_TOKEN_ID}&` +\n         `output=${this.WPIXAL_TOKEN_ID}&` +\n         `amount=${parseFloat(wpixalAmount).toFixed(8)}&` +\n         `slippage=${slippageTolerance.toFixed(2)}&` +\n         `receiver=${userAccount}&` +\n         `maxHops=3&` +\n         `v2=true`\n\n       log.error('Fetching swap route from:', url)\n       \n       const response = await fetch(url)\n       if (!response.ok) {\n         throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n       }\n       \n       const data = await response.json()\n       log.error('Swap route response:', data)\n       \n       if (!data.swaps || data.swaps.length === 0) {\n         throw new Error('No swap route found')\n       }\n       \n       const swap = data.swaps[0]\n       \n       return {\n         input_amount: data.maxSent || swap.maxSent,\n         output_amount: data.output || swap.output,\n         price_impact: data.priceImpact?.toString() || '0',\n         minimum_received: data.minReceived || swap.minReceived,\n         route: data.route?.map((poolId: number, index: number) => ({\n           pool_id: poolId,\n           token_in: index === 0 ? `${this.WAX_SYMBOL}@${this.WAX_CONTRACT}` : 'intermediate',\n           token_out: index === data.route.length - 1 ? `${this.WPIXAL_SYMBOL}@${this.WPIXAL_CONTRACT}` : 'intermediate',\n           amount_in: index === 0 ? (data.input || swap.input) : '0',\n           amount_out: index === data.route.length - 1 ? (data.output || swap.output) : '0'\n         })) || [],\n         memo: data.memo || swap.memo,\n         input_token: {\n           symbol: this.WAX_SYMBOL,\n           contract: this.WAX_CONTRACT,\n           precision: 8,\n           token_id: this.WAX_TOKEN_ID\n         },\n         output_token: {\n           symbol: this.WPIXAL_SYMBOL,\n           contract: this.WPIXAL_CONTRACT,\n           precision: 8,\n           token_id: this.WPIXAL_TOKEN_ID\n         }\n       }\n    } catch (error) {\n      log.error('Error getting exact output quote:', 'alcorService.getExactOutputQuote', error as Error)\n      throw new Error(`Failed to get swap quote: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Get a quote for swapping WAX to WPIXAL (legacy method for compatibility)\n   */\n  async getSwapQuote(waxAmount: string): Promise<SwapQuote> {\n    // Convert WAX input to approximate WPIXAL output for the exact output quote\n    const rate = await this.getExchangeRate()\n    const approximateWpixal = (parseFloat(waxAmount) / rate).toFixed(8)\n    return this.getExactOutputQuote(approximateWpixal, 'dummy.account', 0.5)\n  }\n\n\n\n  /**\n   * Execute WAX to WPIXAL swap for exact WPIXAL output (legacy method)\n   */\n  async executeSwap(wpixalAmount: string, userAccount: string, slippageTolerance: number = 0.5): Promise<unknown> {\n    try {\n      // Get the current quote\n      const quote = await this.getExactOutputQuote(wpixalAmount, userAccount, slippageTolerance)\n      \n      // Prepare the swap transaction\n      const transaction = {\n        expiration: new Date(Date.now() + 30 * 60 * 1000).toISOString(),  // 30 min expiration; adjust as needed\n        ref_block_num: 0,  // Filled by Wharfkit/node\n        ref_block_prefix: 0,  // Filled by Wharfkit/node\n        max_net_usage_words: 0,\n        max_cpu_usage_ms: 0,\n        delay_sec: 0,\n        context_free_actions: [],\n        actions: [\n          {\n            account: this.WAX_CONTRACT,\n            name: 'transfer',\n            authorization: [{\n              actor: userAccount,\n              permission: 'active'\n            }],\n            data: {\n              from: userAccount,\n              to: 'swap.alcor', // Alcor's swap contract\n              quantity: `${parseFloat(quote.input_amount).toFixed(8)} ${this.WAX_SYMBOL}`,\n              memo: quote.memo\n            }\n          }\n        ],\n        transaction_extensions: []\n      }\n\n      log.info('Swap transaction prepared', 'AlcorService.executeSwap', { \n        wpixalAmount, \n        maxWaxInput: quote.input_amount,\n        memo: quote.memo,\n        route: quote.route \n      })\n      \n      return transaction\n    } catch (error) {\n      log.error('Error executing swap:', 'AlcorService.executeSwap', error instanceof Error ? error : new Error(String(error)))\n      throw error\n    }\n  }\n\n  /**\n   * Execute swap for any token pair\n   */\n  async executeSwapForPair(\n    inputToken: TokenInfo,\n    outputToken: TokenInfo,\n    amount: string,\n    userAccount: string,\n    tradeType: 'EXACT_INPUT' | 'EXACT_OUTPUT' = 'EXACT_INPUT',\n    slippageTolerance: number = 0.05\n  ): Promise<unknown> {\n    try {\n      // Get the current quote\n      const quote = await this.getSwapQuoteForPair(\n        inputToken,\n        outputToken,\n        amount,\n        userAccount,\n        tradeType,\n        slippageTolerance\n      )\n      \n      // Prepare the swap transaction\n      const transaction = {\n        expiration: new Date(Date.now() + 30 * 60 * 1000).toISOString(),  // 30 min expiration\n        ref_block_num: 0,  // Filled by Wharfkit/node\n        ref_block_prefix: 0,  // Filled by Wharfkit/node\n        max_net_usage_words: 0,\n        max_cpu_usage_ms: 0,\n        delay_sec: 0,\n        context_free_actions: [],\n        actions: [\n          {\n            account: inputToken.contract,\n            name: 'transfer',\n            authorization: [{\n              actor: userAccount,\n              permission: 'active'\n            }],\n            data: {\n              from: userAccount,\n              to: 'swap.alcor', // Alcor's swap contract\n              quantity: `${parseFloat(quote.input_amount).toFixed(inputToken.precision)} ${inputToken.symbol}`,\n              memo: quote.memo\n            }\n          }\n        ],\n        transaction_extensions: []\n      }\n\n      log.info('Generic swap transaction prepared', 'AlcorService.executeSwapForPair', { \n        inputToken: inputToken.symbol,\n        outputToken: outputToken.symbol,\n        amount,\n        tradeType,\n        inputAmount: quote.input_amount,\n        outputAmount: quote.output_amount,\n        memo: quote.memo,\n        route: quote.route \n      })\n      \n      return transaction\n    } catch (error) {\n      log.error('Error executing swap for pair:', 'AlcorService.executeSwapForPair', error instanceof Error ? error : new Error(String(error)))\n      throw error\n    }\n  }\n\n  /**\n   * Calculate output amount for given input amount (EXACT_INPUT)\n   * Convenience method that wraps getSwapQuoteForPair\n   */\n  async calculateOutputAmount(\n    inputToken: TokenInfo,\n    outputToken: TokenInfo,\n    inputAmount: string,\n    userAccount: string,\n    slippage: number = 0.05\n  ): Promise<SwapQuote> {\n    return this.getSwapQuoteForPair(\n      inputToken,\n      outputToken,\n      inputAmount,\n      userAccount,\n      'EXACT_INPUT',\n      slippage\n    )\n  }\n\n  /**\n   * Calculate input amount for given output amount (EXACT_OUTPUT)\n   * Convenience method that wraps getSwapQuoteForPair\n   */\n  async calculateInputAmount(\n    inputToken: TokenInfo,\n    outputToken: TokenInfo,\n    outputAmount: string,\n    userAccount: string,\n    slippage: number = 0.05\n  ): Promise<SwapQuote> {\n    return this.getSwapQuoteForPair(\n      inputToken,\n      outputToken,\n      outputAmount,\n      userAccount,\n      'EXACT_OUTPUT',\n      slippage\n    )\n  }\n\n  /**\n   * Format token for Alcor API (symbol-contract format, both lowercase)\n   */\n  formatTokenId(symbol: string, contract: string): string {\n    return `${symbol.toLowerCase()}-${contract.toLowerCase()}`\n  }\n\n  /**\n   * Parse swap memo to extract trade information\n   */\n  parseSwapMemo(memo: string): { pools: number[], minOut: string } | null {\n    try {\n      // Alcor swap memo format: \"swap,pools:1,2,3,minOut:1.00000000\"\n      if (!memo.startsWith('swap,')) return null\n      \n      const parts = memo.split(',')\n      const pools: number[] = []\n      let minOut = '0'\n      \n      for (const part of parts) {\n        if (part.startsWith('pools:')) {\n          const poolIds = part.substring(6).split(':')\n          pools.push(...poolIds.map(id => parseInt(id)))\n        } else if (part.startsWith('minOut:')) {\n          minOut = part.substring(7)\n        }\n      }\n      \n      return { pools, minOut }\n    } catch (error) {\n      log.error('Error parsing swap memo:', 'AlcorService.parseSwapMemo', error as Error)\n      return null\n    }\n  }\n\n  /**\n   * Get current WAX/WPIXAL exchange rate (WAX needed for 1 WPIXAL)\n   */\n  async getExchangeRate(): Promise<number> {\n    try {\n      const quote = await this.getExactOutputQuote('1.00000000', 'dummy.account', 0)\n      return parseFloat(quote.input_amount)\n    } catch (error) {\n      log.error('Error getting exchange rate:', 'AlcorService.getExchangeRate', error instanceof Error ? error : new Error(String(error)))\n      // Return a fallback rate (approximate; update based on market)\n      return 0.000292  // ~1 WPIXAL ≈ 0.000292 WAX (inverse of your example)\n    }\n  }\n\n  /**\n   * Check if there's sufficient liquidity for the swap\n   */\n  async checkLiquidity(wpixalAmount: string): Promise<boolean> {\n    try {\n      const quote = await this.getExactOutputQuote(wpixalAmount, 'dummy.account', 0.5)\n      const priceImpact = parseFloat(quote.price_impact)\n      \n      // Consider liquidity insufficient if price impact is too high (>5%)\n      return priceImpact < 5.0\n    } catch (error) {\n      log.error('Error checking liquidity:', 'AlcorService.checkLiquidity', error instanceof Error ? error : new Error(String(error)))\n      return false\n    }\n  }\n\n\n\n  /**\n   * Estimate WAX needed for a specific WPIXAL amount\n   */\n  async estimateWaxNeeded(wpixalAmount: string): Promise<string> {\n    try {\n      const quote = await this.getExactOutputQuote(wpixalAmount, 'dummy.account', 0)\n      return quote.input_amount\n    } catch (error) {\n      log.error('Error estimating WAX needed:', 'AlcorService.estimateWaxNeeded', error instanceof Error ? error : new Error(String(error)))\n      throw error\n    }\n  }\n}\n\nexport const alcorService = new AlcorService()\n\n /* EXAMPLE SUGGESTION FROM GROK:\n import { log } from './loggingService'\n\nexport interface SwapQuote {\n  input_amount: string  // Max WAX input for exact output\n  output_amount: string  // Requested WPIXAL output\n  price_impact: string  // In percent (e.g., '0.1')\n  minimum_received: string  // Adjusted min WPIXAL after slippage\n  route: SwapRoute[]\n  memo: string  // Pre-built memo for transaction\n}\n\nexport interface SwapRoute {\n  pool_id: number\n  token_in: string\n  token_out: string\n  amount_in: string\n  amount_out: string\n}\n\nexport interface SwapResult {\n  transaction_id: string\n  success: boolean\n  error?: string\n}\n\nclass AlcorService {\n  private readonly ALCOR_API_BASE = 'https://wax.alcor.exchange/api/v2'\n  private readonly WAX_CONTRACT = 'eosio.token'\n  private readonly WPIXAL_CONTRACT = 'pixeljourney'\n  private readonly WAX_SYMBOL = 'WAX'\n  private readonly WPIXAL_SYMBOL = 'WPIXAL'\n  private readonly WAX_TOKEN_ID = 'wax-eosio.token'\n  private readonly WPIXAL_TOKEN_ID = 'wpixal-pixeljourney'\n\n//   /*\n//    * Get a quote for buying exact WPIXAL amount (EXACT_OUTPUT mode)\n   \n//   async getExactOutputQuote(wpixalAmount: string, userAccount: string, slippageTolerance: number = 0.5): Promise<SwapQuote> {\n//     try {\n//       const slippage = slippageTolerance / 100\n//       const url = `${this.ALCOR_API_BASE}/swapRouter/getRoute?` +\n//         `trade_type=EXACT_OUTPUT&` +\n//         `input=${this.WAX_TOKEN_ID}&` +\n//         `output=${this.WPIXAL_TOKEN_ID}&` +\n//         `amount=${wpixalAmount}&` +\n//         `slippage=${slippage}&` +\n//         `receiver=${userAccount}&` +\n//         `maxHops=3`\n\n//       const response = await fetch(url, {\n//         method: 'GET',\n//         headers: {\n//           'Accept': 'application/json',\n//           'Content-Type': 'application/json'\n//         },\n//         mode: 'cors'\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`)\n//       }\n\n//       const data = await response.json()\n//       if (!data || !data.maxSent || !data.memo) {\n//         throw new Error('Invalid quote response from Alcor router')\n//       }\n\n//       const maxWaxInput = data.maxSent\n//       const priceImpactPercent = (parseFloat(data.priceImpact || '0') * 100).toFixed(1)\n//       const routePools = data.route || []\n\n//       // Build route array (simplified for multi-hop; adjust tokens per hop if needed)\n//       const route: SwapRoute[] = routePools.map((poolId: string | number, index: number) => ({\n//         pool_id: typeof poolId === 'string' ? parseInt(poolId) : poolId,\n//         token_in: index === 0 ? `${this.WAX_SYMBOL}@${this.WAX_CONTRACT}` : 'intermediate',\n//         token_out: index === routePools.length - 1 ? `${this.WPIXAL_SYMBOL}@${this.WPIXAL_CONTRACT}` : 'intermediate',\n//         amount_in: index === 0 ? maxWaxInput : '0',\n//         amount_out: index === routePools.length - 1 ? wpixalAmount : '0'\n//       }))\n\n//       return {\n//         input_amount: maxWaxInput,\n//         output_amount: wpixalAmount,\n//         price_impact: priceImpactPercent,\n//         minimum_received: data.minReceived || wpixalAmount,  // API provides slippage-adjusted min\n//         route,\n//         memo: data.memo\n//       }\n//     } catch (error) {\n//       log.error('Error getting exact output quote:', 'AlcorService.getExactOutputQuote', error instanceof Error ? error : new Error(String(error)))\n//       throw error\n//     }\n//   }\n\n//   /**\n//    * Get available trading pairs to find the correct market\n//    */\n//   private async getTradingPairs(): Promise<any[]> {\n//     try {\n//       const url = `${this.ALCOR_API_BASE}/pairs`\n//       const response = await fetch(url, {\n//         method: 'GET',\n//         headers: {\n//           'Accept': 'application/json',\n//           'Content-Type': 'application/json'\n//         },\n//         mode: 'cors'\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`)\n//       }\n\n//       return await response.json()\n//     } catch (error) {\n//       log.error('Error fetching trading pairs:', 'AlcorService.getTradingPairs', error instanceof Error ? error : new Error(String(error)))\n//       return []\n//     }\n//   }\n\n//   /**\n//    * Execute WAX to WPIXAL swap for exact WPIXAL output\n//    */\n//   async executeSwap(wpixalAmount: string, userAccount: string, slippageTolerance: number = 0.5): Promise<unknown> {\n//     try {\n//       // Get the current quote\n//       const quote = await this.getExactOutputQuote(wpixalAmount, userAccount, slippageTolerance)\n      \n//       // Prepare the swap transaction\n//       const transaction = {\n//         expiration: new Date(Date.now() + 30 * 60 * 1000).toISOString(),  // 30 min expiration; adjust as needed\n//         ref_block_num: 0,  // Filled by Wharfkit/node\n//         ref_block_prefix: 0,  // Filled by Wharfkit/node\n//         max_net_usage_words: 0,\n//         max_cpu_usage_ms: 0,\n//         delay_sec: 0,\n//         context_free_actions: [],\n//         actions: [\n//           {\n//             account: this.WAX_CONTRACT,\n//             name: 'transfer',\n//             authorization: [{\n//               actor: userAccount,\n//               permission: 'active'\n//             }],\n//             data: {\n//               from: userAccount,\n//               to: 'swap.alcor', // Alcor's swap contract\n//               quantity: `${parseFloat(quote.input_amount).toFixed(8)} ${this.WAX_SYMBOL}`,\n//               memo: quote.memo\n//             }\n//           }\n//         ],\n//         transaction_extensions: []\n//       }\n\n//       log.info('Swap transaction prepared', 'AlcorService.executeSwap', { \n//         wpixalAmount, \n//         maxWaxInput: quote.input_amount,\n//         memo: quote.memo,\n//         route: quote.route \n//       })\n      \n//       return transaction\n//     } catch (error) {\n//       log.error('Error executing swap:', 'AlcorService.executeSwap', error instanceof Error ? error : new Error(String(error)))\n//       throw error\n//     }\n//   }\n\n//   /**\n//    * Get current WAX/WPIXAL exchange rate (WAX needed for 1 WPIXAL)\n//    */\n//   async getExchangeRate(): Promise<number> {\n//     try {\n//       const quote = await this.getExactOutputQuote('1.00000000', 'dummy.account', 0)\n//       return parseFloat(quote.input_amount)\n//     } catch (error) {\n//       log.error('Error getting exchange rate:', 'AlcorService.getExchangeRate', error instanceof Error ? error : new Error(String(error)))\n//       // Return a fallback rate (approximate; update based on market)\n//       return 0.000292  // ~1 WPIXAL ≈ 0.000292 WAX (inverse of your example)\n//     }\n//   }\n\n//   /**\n//    * Check if there's sufficient liquidity for the swap\n//    */\n//   async checkLiquidity(wpixalAmount: string): Promise<boolean> {\n//     try {\n//       const quote = await this.getExactOutputQuote(wpixalAmount, 'dummy.account', 0.5)\n//       const priceImpact = parseFloat(quote.price_impact)\n      \n//       // Consider liquidity insufficient if price impact is too high (>5%)\n//       return priceImpact < 5.0\n//     } catch (error) {\n//       log.error('Error checking liquidity:', 'AlcorService.checkLiquidity', error instanceof Error ? error : new Error(String(error)))\n//       return false\n//     }\n//   }\n\n//   /**\n//    * Estimate WAX needed for a specific WPIXAL amount\n//    */\n//   async estimateWaxNeeded(wpixalAmount: string): Promise<string> {\n//     try {\n//       const quote = await this.getExactOutputQuote(wpixalAmount, 'dummy.account', 0)\n//       return quote.input_amount\n//     } catch (error) {\n//       log.error('Error estimating WAX needed:', 'AlcorService.estimateWaxNeeded', error instanceof Error ? error : new Error(String(error)))\n//       throw error\n//     }\n//   }\n// }\n\n// export const alcorService = new AlcorService() */}","/**\n * Utility functions for handling token icons\n */\n\n/**\n * Generates the Alcor UI GitHub icon URL for a token\n * @param symbol - Token symbol (e.g., 'WAX', 'WPIXAL')\n * @param contract - Token contract (e.g., 'eosio.token', 'pixeljourney')\n * @returns The Alcor UI GitHub icon URL\n */\nexport const getAlcorIconUrl = (symbol: string, contract: string): string => {\n  const baseUrl = 'https://raw.githubusercontent.com/alcorexchange/alcor-ui/refs/heads/master/assets/tokens/wax'\n  const fileName = `${symbol.toLowerCase()}_${contract.toLowerCase()}.png`\n  return `${baseUrl}/${fileName}`\n}\n\n/**\n * Gets the appropriate token icon - tries Alcor UI first, falls back to emoji\n * @param symbol - Token symbol\n * @param contract - Token contract\n * @param onError - Optional callback when image fails to load\n * @returns Object with iconUrl and fallbackEmoji\n */\nexport const getTokenIcon = (symbol: string, contract: string, onError?: () => void) => {\n  const iconUrl = getAlcorIconUrl(symbol, contract)\n  const fallbackEmoji = getTokenEmoji(symbol)\n  \n  return {\n    iconUrl,\n    fallbackEmoji,\n    onError\n  }\n}\n\n/**\n * Gets emoji fallback for common tokens\n * @param symbol - Token symbol\n * @returns Emoji string\n */\nexport const getTokenEmoji = (symbol: string): string => {\n  const emojiMap: Record<string, string> = {\n    'WAX': '🪙',\n    'WPIXAL': '👽',\n    'PXJ': '♻️',\n    'KING': '👑',\n    'WAXUSDC': '💵',\n    'WAXWBTC': '₿',\n    'WUF': '🐶',\n    'LSWAX': '💎',\n    'BRWL': '⚔️',\n    'TLM': '⛏️',\n    'WOMBAT': '🐨',\n    'TACO': '🌮',\n    'SHING': '✨',\n    'YEET': '🚀',\n    'DMT': '🖥️',\n    'FGL': '🎮',\n    'SOREN': '✈️'\n  }\n  \n  return emojiMap[symbol.toUpperCase()] || '🪙'\n}\n\n/**\n * Creates an image element that tries to load the Alcor icon and falls back to emoji\n * @param symbol - Token symbol\n * @param contract - Token contract\n * @param className - CSS class for the image\n * @returns Promise that resolves to either an img element or emoji string\n */\nexport const createTokenIcon = (symbol: string, contract: string, className?: string): Promise<HTMLImageElement | string> => {\n  return new Promise((resolve) => {\n    const img = new Image()\n    const iconUrl = getAlcorIconUrl(symbol, contract)\n    const fallbackEmoji = getTokenEmoji(symbol)\n    \n    img.onload = () => {\n      if (className) {\n        img.className = className\n      }\n      img.alt = symbol\n      resolve(img)\n    }\n    \n    img.onerror = () => {\n      resolve(fallbackEmoji)\n    }\n    \n    img.src = iconUrl\n  })\n}\n\n/**\n * Checks if an Alcor icon exists for a token\n * @param symbol - Token symbol\n * @param contract - Token contract\n * @returns Promise that resolves to boolean\n */\nexport const checkAlcorIconExists = async (symbol: string, contract: string): Promise<boolean> => {\n  try {\n    const iconUrl = getAlcorIconUrl(symbol, contract)\n    const response = await fetch(iconUrl, { method: 'HEAD' })\n    return response.ok\n  } catch {\n    return false\n  }\n}","import React, { useState } from 'react'\n\ninterface TokenIconProps {\n  iconUrl?: string\n  fallbackEmoji?: string\n  symbol: string\n  className?: string\n}\n\nconst TokenIcon: React.FC<TokenIconProps> = ({ \n  iconUrl, \n  fallbackEmoji = '🪙', \n  symbol, \n  className = '' \n}) => {\n  const [imageError, setImageError] = useState(false)\n\n  const handleImageError = () => {\n    setImageError(true)\n  }\n\n  // If no iconUrl provided or image failed to load, show emoji\n  if (!iconUrl || imageError) {\n    return <span className={className}>{fallbackEmoji}</span>\n  }\n\n  return (\n    <img \n      src={iconUrl} \n      alt={symbol} \n      className={className}\n      onError={handleImageError}\n      style={{ width: '2rem', height: '2rem', objectFit: 'contain' }}\n    />\n  )\n}\n\nexport default TokenIcon","import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useTokenBalance } from '../contexts/TokenBalanceContext'\nimport { alcorService } from '../services/alcorService'\nimport { log } from '../services/loggingService'\nimport { getAlcorIconUrl, getTokenEmoji } from '../utils/tokenIconUtils'\nimport TokenIcon from './TokenIcon'\nimport '../css/token-dropdown.css'\n\nexport interface TokenOption {\n  symbol: string\n  contract: string\n  amount: string\n  decimals: number\n  iconUrl?: string\n  fallbackEmoji?: string\n  priority?: number\n}\n\ninterface TokenDropdownProps {\n  selectedToken: string\n  onTokenSelect: (token: string) => void\n  availableTokens?: string[]\n  className?: string\n  filterByAvailable?: boolean // If true, only show tokens from availableTokens\n}\n\n// Favored tokens that should appear first and have priority - moved outside component\nconst favoredTokenConfigs: Record<string, { contract: string; decimals: number; priority: number }> = {\n  'PXJ': { contract: 'pixeljourney', decimals: 8, priority: 1 },\n  'WPIXAL': { contract: 'pixeljourney', decimals: 8, priority: 2 },\n  'WAX': { contract: 'eosio.token', decimals: 8, priority: 3 },\n  'KING': { contract: 'alpha.waxfun', decimals: 8, priority: 4 },\n  'WAXUSDC': { contract: 'eth.token', decimals: 8, priority: 5 },\n  'WAXWBTC': { contract: 'eth.token', decimals: 8, priority: 6 }\n}\n\n// Contracts to exclude from token dropdown (known problematic or duplicate contracts)\nconst EXCLUDED_CONTRACTS = new Set([\n  'msourceroyal',  // Known to have duplicate/fake tokens\n  'msourcetoken',  // Related problematic contract\n  'swap.taco',     // Swap contract, not actual tokens\n  'beta.waxfun',   // Beta contract\n])\n\n// Function to check if a token should be excluded\nconst shouldExcludeToken = (symbol: string, contract: string): boolean => {\n  // Exclude tokens from problematic contracts\n  if (EXCLUDED_CONTRACTS.has(contract)) {\n    return true\n  }\n  \n  // Exclude duplicate WAX tokens that are not from the official contract\n  if (symbol === 'WAX' && contract !== 'eosio.token') {\n    return true\n  }\n  \n  return false\n}\n\n// Default available tokens - moved outside component to prevent recreation\nconst DEFAULT_AVAILABLE_TOKENS = ['WAX', 'WPIXAL']\n\nconst TokenDropdown: React.FC<TokenDropdownProps> = ({\n  selectedToken,\n  onTokenSelect,\n  availableTokens = DEFAULT_AVAILABLE_TOKENS,\n  className = '',\n  filterByAvailable = false\n}) => {\n  const { account } = useWallet()\n  const { lightApiBalances } = useTokenBalance()\n  const [isOpen, setIsOpen] = useState(false)\n  const [tokens, setTokens] = useState<TokenOption[]>([])\n  const [alcorTokens, setAlcorTokens] = useState<any[]>([])\n  const [loading, setLoading] = useState(false)\n  const dropdownRef = useRef<HTMLDivElement>(null)\n\n  // Load available tokens from Alcor\n  const loadAlcorTokens = useCallback(async () => {\n    try {\n      const tokens = await alcorService.getAllTokens()\n      setAlcorTokens(tokens)\n      return tokens\n    } catch (error) {\n      log.error('Failed to load Alcor tokens', 'TokenDropdown.loadAlcorTokens', error as Error)\n      // Fallback to common token configurations\n      const fallbackTokens = [\n        { symbol: 'WAX', contract: 'eosio.token', precision: 8, logo: null },\n        { symbol: 'WPIXAL', contract: 'pixeljourney', precision: 8, logo: null }\n      ]\n      setAlcorTokens(fallbackTokens)\n      return fallbackTokens\n    }\n  }, [])\n\n  // Get token config from favored tokens first, then Alcor tokens\n  const getTokenConfig = useMemo(() => {\n    return (symbol: string) => {\n      // Check favored tokens first\n      const favoredToken = favoredTokenConfigs[symbol]\n      if (favoredToken) {\n        return {\n          contract: favoredToken.contract,\n          decimals: favoredToken.decimals,\n          iconUrl: getAlcorIconUrl(symbol, favoredToken.contract),\n          fallbackEmoji: getTokenEmoji(symbol),\n          priority: favoredToken.priority\n        }\n      }\n      \n      // Then check Alcor tokens\n      const alcorToken = alcorTokens.find(t => t.symbol === symbol)\n      if (alcorToken) {\n        return {\n          contract: alcorToken.contract,\n          decimals: alcorToken.precision,\n          iconUrl: getAlcorIconUrl(symbol, alcorToken.contract),\n          fallbackEmoji: getTokenEmoji(symbol),\n          priority: 999 // Lower priority for non-favored tokens\n        }\n      }\n      \n      // Final fallback\n      return { \n        contract: 'eosio.token', \n        decimals: 8, \n        iconUrl: getAlcorIconUrl(symbol, 'eosio.token'),\n        fallbackEmoji: getTokenEmoji(symbol),\n        priority: 1000 \n      }\n    }\n  }, [alcorTokens])\n\n  // Load token balances from shared context\n  const loadTokenBalances = useCallback(async () => {\n    // Ensure Alcor tokens are loaded first\n    if (alcorTokens.length === 0) {\n      await loadAlcorTokens()\n    }\n\n    if (!account) {\n      // Set default tokens with 0 balance when not connected\n      const tokensToShow = filterByAvailable ? availableTokens : alcorTokens.map(t => t.symbol)\n      const defaultTokens = tokensToShow.map(symbol => {\n        const config = getTokenConfig(symbol)\n        return {\n          symbol,\n          contract: config.contract,\n          amount: '0.0000',\n          decimals: config.decimals,\n          iconUrl: config.iconUrl,\n          fallbackEmoji: config.fallbackEmoji,\n          priority: config.priority || 999\n        }\n      })\n      setTokens(defaultTokens)\n      return\n    }\n\n    setLoading(true)\n    try {\n      const tokenOptions: TokenOption[] = []\n      \n      // Determine which tokens to process\n      const tokensToProcess = filterByAvailable ? availableTokens : alcorTokens.map(t => t.symbol)\n      \n      // Process tokens and match with shared Light API data\n      const processedTokens = new Set<string>() // Track processed token combinations\n      \n      for (const symbol of tokensToProcess) {\n        const config = getTokenConfig(symbol)\n        if (!config) continue\n        \n        const tokenKey = `${symbol}-${config.contract}`\n        if (processedTokens.has(tokenKey)) continue // Skip if already processed\n        \n        processedTokens.add(tokenKey)\n        \n        const balance = lightApiBalances.find(\n          b => b.currency === symbol && b.contract === config.contract\n        )\n        \n        tokenOptions.push({\n          symbol,\n          contract: config.contract,\n          amount: balance ? balance.amount : '0.0000',\n          decimals: balance ? parseInt(balance.decimals) : config.decimals,\n          iconUrl: config.iconUrl,\n          fallbackEmoji: config.fallbackEmoji,\n          priority: config.priority || 999\n        })\n      }\n      \n      // Sort tokens by priority (lower numbers first)\n      tokenOptions.sort((a, b) => (a.priority || 999) - (b.priority || 999))\n      \n      // If not filtering by available tokens, add any additional tokens from Light API\n       if (!filterByAvailable) {\n         for (const balance of lightApiBalances) {\n           const tokenKey = `${balance.currency}-${balance.contract}`\n           \n           // Check if we already processed this token combination\n           if (processedTokens.has(tokenKey)) continue\n           \n           // Skip tokens from excluded contracts or problematic tokens\n           if (shouldExcludeToken(balance.currency, balance.contract)) continue\n           \n           const config = getTokenConfig(balance.currency)\n           if (config) {\n             processedTokens.add(tokenKey)\n             tokenOptions.push({\n               symbol: balance.currency,\n               contract: balance.contract,\n               amount: balance.amount,\n               decimals: parseInt(balance.decimals),\n               iconUrl: config.iconUrl,\n               fallbackEmoji: config.fallbackEmoji,\n               priority: config.priority || 999\n             })\n           }\n         }\n         // Sort again after adding additional tokens\n         tokenOptions.sort((a, b) => (a.priority || 999) - (b.priority || 999))\n       }\n       \n       setTokens(tokenOptions)\n    } catch (error) {\n      log.error('Failed to load token balances', 'TokenDropdown.loadTokenBalances', error as Error)\n      \n      // Fallback to default tokens with 0 balance\n      const tokensToShow = filterByAvailable ? availableTokens : alcorTokens.map(t => t.symbol)\n      const defaultTokens = tokensToShow.map(symbol => {\n        const config = getTokenConfig(symbol)\n        return {\n          symbol,\n          contract: config.contract,\n          amount: '0.0000',\n          decimals: config.decimals,\n          iconUrl: config.iconUrl,\n          fallbackEmoji: config.fallbackEmoji,\n          priority: config.priority || 999\n        }\n      })\n      \n      // Sort fallback tokens by priority\n      defaultTokens.sort((a, b) => (a.priority || 999) - (b.priority || 999))\n      \n      setTokens(defaultTokens)\n    } finally {\n      setLoading(false)\n    }\n  }, [account, availableTokens, alcorTokens, filterByAvailable, lightApiBalances, loadAlcorTokens])\n\n  // Load Alcor tokens on component mount\n  useEffect(() => {\n    loadAlcorTokens()\n  }, [loadAlcorTokens])\n\n  useEffect(() => {\n    loadTokenBalances()\n  }, [loadTokenBalances])\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [])\n\n  const handleTokenSelect = (token: TokenOption) => {\n    onTokenSelect(token.symbol)\n    setIsOpen(false)\n  }\n\n  const selectedTokenData = tokens.find(t => t.symbol === selectedToken)\n  const selectedTokenConfig = getTokenConfig(selectedToken)\n\n  return (\n    <div className={`token-dropdown ${className}`} ref={dropdownRef}>\n      <button \n        className=\"token-button\"\n        onClick={() => setIsOpen(!isOpen)}\n        type=\"button\"\n      >\n        <span className=\"token-icon\">\n          <TokenIcon\n            iconUrl={selectedTokenData?.iconUrl}\n            fallbackEmoji={selectedTokenData?.fallbackEmoji || selectedTokenConfig?.fallbackEmoji}\n            symbol={selectedToken}\n            className=\"token-logo\"\n          />\n        </span>\n        <span className=\"token-symbol\">{selectedToken}</span>\n        <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>▼</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"token-dropdown-menu\">\n          {loading ? (\n            <div className=\"token-dropdown-loading\">\n              <span>Loading tokens...</span>\n            </div>\n          ) : (\n            <>\n              {tokens.map((token, index) => (\n                <button\n                  key={`${token.contract}-${token.symbol}-${index}`}\n                  className={`token-option ${token.symbol === selectedToken ? 'selected' : ''}`}\n                  onClick={() => handleTokenSelect(token)}\n                  type=\"button\"\n                >\n                  <div className=\"token-option-left\">\n                    <span className=\"token-option-icon\">\n                      <TokenIcon\n                        iconUrl={token.iconUrl}\n                        fallbackEmoji={token.fallbackEmoji}\n                        symbol={token.symbol}\n                        className=\"token-logo\"\n                      />\n                    </span>\n                    <div className=\"token-option-info\">\n                      <span className=\"token-option-symbol\">{token.symbol}</span>\n                      <span className=\"token-option-contract\">{token.contract}</span>\n                    </div>\n                  </div>\n                  <div className=\"token-option-balance\">\n                    {parseFloat(token.amount).toFixed(4)}\n                  </div>\n                </button>\n              ))}\n              {tokens.length === 0 && (\n                <div className=\"token-dropdown-empty\">\n                  <span>No tokens available</span>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default TokenDropdown","import React, { useState, useCallback, useEffect } from 'react'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useTokenBalance } from '../contexts/TokenBalanceContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport TokenDropdown from './TokenDropdown'\nimport { log } from '../services/loggingService'\nimport { alcorService } from '../services/alcorService'\nimport { getAlcorIconUrl } from '../utils/tokenIconUtils'\n\nimport '../css/swap-interface.css'\n\ninterface SwapInterfaceProps {\n  isModal?: boolean\n  onClose?: () => void\n  initialSellAmount?: number\n  initialBuyAmount?: number\n}\n\nconst SwapInterface: React.FC<SwapInterfaceProps> = ({ \n  isModal = false, \n  onClose, \n  initialSellAmount = 0,\n  initialBuyAmount = 1\n}) => {\n  const { showSuccess, showError } = useNotifications()\n  const { account, session } = useWallet()\n  const { getTokenBalance } = useTokenBalance()\n  const [sellAmount, setSellAmount] = useState<string>(initialSellAmount.toString())\n  const [buyAmount, setBuyAmount] = useState<string>(initialBuyAmount.toString())\n  const [sellToken, setSellToken] = useState<string>('WAX')\n  const [buyToken, setBuyToken] = useState<string>('WPIXAL')\n  const [loading, setLoading] = useState(false)\n  const [quoteData, setQuoteData] = useState<any>(null)\n  const [slippage, setSlippage] = useState<number>(0.5)\n  const [showSlippageSettings, setShowSlippageSettings] = useState(false)\n  const [alcorTokens, setAlcorTokens] = useState<any[]>([])\n  const [isCalculating, setIsCalculating] = useState(false)\n  const [lastInputField, setLastInputField] = useState<'sell' | 'buy'>('sell')\n\n  // Load Alcor tokens\n  const loadAlcorTokens = useCallback(async () => {\n    try {\n      const tokens = await alcorService.getAllTokens()\n      setAlcorTokens(tokens)\n      return tokens\n    } catch (error) {\n      log.error('Failed to load Alcor tokens', 'SwapInterface.loadAlcorTokens', error as Error)\n      return []\n    }\n  }, [])\n\n  // Favored tokens that should appear first and have priority\n  const favoredTokenConfigs = {\n    'PXJ': { \n      contract: 'pixeljourney', \n      precision: 8, \n      priority: 1,\n      icon: getAlcorIconUrl('PXJ', 'pixeljourney')\n    },\n    'WPIXAL': { \n      contract: 'pixeljourney', \n      precision: 8, \n      priority: 2,\n      icon: getAlcorIconUrl('WPIXAL', 'pixeljourney')\n    },\n    'WAX': { \n      contract: 'eosio.token', \n      precision: 8, \n      priority: 3,\n      icon: getAlcorIconUrl('WAX', 'eosio.token')\n    },\n    'KING': { \n      contract: 'alpha.waxfun', \n      precision: 8, \n      priority: 4,\n      icon: getAlcorIconUrl('KING', 'alpha.waxfun')\n    },\n    'WAXUSDC': { \n      contract: 'eth.token', \n      precision: 8, \n      priority: 5,\n      icon: getAlcorIconUrl('WAXUSDC', 'eth.token')\n    },\n    'WAXWBTC': { \n      contract: 'eth.token', \n      precision: 8, \n      priority: 6,\n      icon: getAlcorIconUrl('WAXWBTC', 'eth.token')\n    },\n    'WUF': { \n      contract: 'wuffi', \n      precision: 4, \n      priority: 7,\n      icon: getAlcorIconUrl('WUF', 'wuffi')\n    },\n    'LSWAX': { \n      contract: 'token.fusion', \n      precision: 8, \n      priority: 8,\n      icon: getAlcorIconUrl('LSWAX', 'token.fusion')\n    },\n    'BRWL': { \n      contract: 'brawlertoken', \n      precision: 4, \n      priority: 9,\n      icon: getAlcorIconUrl('BRWL', 'brawlertoken')\n    },\n    'TLM': { \n      contract: 'alien.worlds', \n      precision: 4, \n      priority: 10,\n      icon: getAlcorIconUrl('TLM', 'alien.worlds')\n    },\n    'WOMBAT': { \n      contract: 'wombattokens', \n      precision: 4, \n      priority: 11,\n      icon: getAlcorIconUrl('WOMBAT', 'wombattokens')\n    },\n    'TACO': { \n      contract: 't.taco', \n      precision: 8, \n      priority: 12,\n      icon: getAlcorIconUrl('TACO', 't.taco')\n    },\n    'SHING': { \n      contract: 't.taco', \n      precision: 8, \n      priority: 13,\n      icon: getAlcorIconUrl('SHING', 't.taco')\n    },\n    'YEET': { \n      contract: 'token.yeet', \n      precision: 4, \n      priority: 14,\n      icon: getAlcorIconUrl('YEET', 'token.yeet')\n    },\n    'DMT': { \n      contract: 'defiminingtk', \n      precision: 4, \n      priority: 15,\n      icon: getAlcorIconUrl('DMT', 'defiminingtk')\n    },\n    'FGL': { \n      contract: 'fgltokenmgmt', \n      precision: 4, \n      priority: 16,\n      icon: getAlcorIconUrl('FGL', 'fgltokenmgmt')\n    },\n    'SOREN': { \n      contract: 'farfromhomes', \n      precision: 4, \n      priority: 17,\n      icon: getAlcorIconUrl('SOREN', 'farfromhomes')\n    }\n  }\n\n  // Get token info from Alcor tokens or favored configs\n  const getTokenInfo = useCallback((symbol: string) => {\n    // First check favored tokens\n    if (favoredTokenConfigs[symbol as keyof typeof favoredTokenConfigs]) {\n      const config = favoredTokenConfigs[symbol as keyof typeof favoredTokenConfigs]\n      return {\n        symbol: symbol,\n        contract: config.contract,\n        precision: config.precision,\n        token_id: `${symbol.toLowerCase()}-${config.contract.toLowerCase()}`,\n        decimals: config.precision,\n        icon: config.icon,\n        logo: config.icon\n      }\n    }\n    \n    // Then check Alcor tokens\n    const alcorToken = alcorTokens.find(token => token.symbol === symbol)\n    if (alcorToken) {\n      return {\n        symbol: alcorToken.symbol,\n        contract: alcorToken.contract,\n        precision: alcorToken.decimals,\n        token_id: `${alcorToken.symbol.toLowerCase()}-${alcorToken.contract.toLowerCase()}`,\n        decimals: alcorToken.decimals,\n        icon: alcorToken.logo || '/icons/default-token.png',\n        logo: alcorToken.logo || '/icons/default-token.png'\n      }\n    }\n    \n    return null\n  }, [alcorTokens])\n\n  useEffect(() => {\n    loadAlcorTokens()\n  }, [])\n\n  // Helper function to extract numeric balance from balance string\n  const getNumericBalance = useCallback((symbol: string, contract?: string): number => {\n    const balanceString = getTokenBalance(symbol, contract)\n    const numericPart = balanceString.split(' ')[0]\n    return parseFloat(numericPart) || 0\n  }, [getTokenBalance])\n\n  // Calculate swap amounts using Alcor API\n  const calculateSwapAmount = useCallback(async (\n    inputAmount: string,\n    inputToken: string,\n    outputToken: string,\n    tradeType: 'EXACT_INPUT' | 'EXACT_OUTPUT'\n  ) => {\n    if (!inputAmount || parseFloat(inputAmount) <= 0 || !account) {\n      return null\n    }\n\n    try {\n      setIsCalculating(true)\n\n      const inputTokenInfo = getTokenInfo(inputToken)\n      const outputTokenInfo = getTokenInfo(outputToken)\n\n      if (!inputTokenInfo || !outputTokenInfo) {\n        log.error('Token info not found', 'SwapInterface.calculateSwapAmount')\n        return null\n      }\n\n      let quote\n      if (tradeType === 'EXACT_INPUT') {\n        quote = await alcorService.calculateOutputAmount(\n          inputTokenInfo,\n          outputTokenInfo,\n          inputAmount,\n          account || 'market.pxj',\n          slippage / 100\n        )\n      } else {\n        quote = await alcorService.calculateInputAmount(\n          inputTokenInfo,\n          outputTokenInfo,\n          inputAmount,\n          account || 'market.pxj',\n          slippage / 100\n        )\n      }\n\n      setQuoteData(quote)\n      return quote\n\n    } catch (error) {\n      log.error('Failed to calculate swap amount', 'SwapInterface.calculateSwapAmount', error as Error)\n      return null\n    } finally {\n      setIsCalculating(false)\n    }\n  }, [account, slippage, getTokenInfo])\n\n  // Handle sell amount change (EXACT_INPUT)\n  const handleSellAmountChange = useCallback(async (value: string) => {\n    setSellAmount(value)\n    setLastInputField('sell')\n\n    if (!value || parseFloat(value) <= 0) {\n      setBuyAmount('')\n      setQuoteData(null)\n      return\n    }\n\n    const quote = await calculateSwapAmount(value, sellToken, buyToken, 'EXACT_INPUT')\n    if (quote) {\n      setBuyAmount(quote.output_amount)\n    }\n  }, [sellToken, buyToken, calculateSwapAmount])\n\n  // Handle buy amount change (EXACT_OUTPUT)\n  const handleBuyAmountChange = useCallback(async (value: string) => {\n    setBuyAmount(value)\n    setLastInputField('buy')\n\n    if (!value || parseFloat(value) <= 0) {\n      setSellAmount('')\n      setQuoteData(null)\n      return\n    }\n\n    const quote = await calculateSwapAmount(value, sellToken, buyToken, 'EXACT_OUTPUT')\n    if (quote) {\n      setSellAmount(quote.input_amount)\n    }\n  }, [sellToken, buyToken, calculateSwapAmount])\n\n  // Recalculate when tokens change\n  useEffect(() => {\n    if (lastInputField === 'sell' && sellAmount) {\n      handleSellAmountChange(sellAmount)\n    } else if (lastInputField === 'buy' && buyAmount) {\n      handleBuyAmountChange(buyAmount)\n    }\n  }, [sellToken, buyToken, lastInputField, sellAmount, buyAmount, handleSellAmountChange, handleBuyAmountChange])\n\n  // Manual quote refresh function\n  const getQuote = useCallback(async () => {\n    if (lastInputField === 'sell' && sellAmount) {\n      await handleSellAmountChange(sellAmount)\n    } else if (lastInputField === 'buy' && buyAmount) {\n      await handleBuyAmountChange(buyAmount)\n    }\n  }, [lastInputField, sellAmount, buyAmount, handleSellAmountChange, handleBuyAmountChange])\n\n  const handleSwapTokens = () => {\n    const tempToken = sellToken\n    const tempAmount = sellAmount\n    \n    setSellToken(buyToken)\n    setBuyToken(tempToken)\n    setSellAmount(buyAmount)\n    setBuyAmount(tempAmount)\n  }\n\n  const handleBalanceClick = () => {\n    const balance = getNumericBalance(sellToken)\n    handleSellAmountChange(balance.toString())\n  }\n\n  const handleSliderChange = (percentage: number) => {\n    const balance = getNumericBalance(sellToken)\n    const amount = (balance * percentage / 100).toFixed(4)\n    handleSellAmountChange(amount)\n  }\n\n  const executeSwap = async () => {\n    if (!account || !session) {\n      showError('Please connect your wallet first')\n      return\n    }\n\n    if (!quoteData) {\n      showError('No quote available')\n      return\n    }\n\n    try {\n      setLoading(true)\n      \n      // Get token info for both sell and buy tokens\n      const sellTokenInfo = getTokenInfo(sellToken)\n      const buyTokenInfo = getTokenInfo(buyToken)\n      \n      if (!sellTokenInfo || !buyTokenInfo) {\n        throw new Error(`Token configuration not found for ${!sellTokenInfo ? sellToken : buyToken}`)\n      }\n      \n      // Use generic Alcor swap execution for any token pair\n      const swapTransaction: any = await alcorService.executeSwapForPair(\n        sellTokenInfo,\n        buyTokenInfo,\n        sellAmount,\n        account,\n        'EXACT_INPUT',\n        slippage / 100\n      )\n      \n      const result: any = await session.transact({ actions: swapTransaction.actions })\n      \n      showSuccess(`Successfully swapped ${sellAmount} ${sellToken} for ${buyAmount} ${buyToken}`)\n      log.info('Swap transaction completed', 'SwapInterface.executeSwap', {\n        sellAmount,\n        sellToken,\n        buyAmount,\n        buyToken,\n        transactionId: result?.transaction?.id || result?.transactionId || result?.id || 'unknown'\n      })\n      \n      // Balances will be automatically refreshed by TokenBalanceContext\n      \n      // Reset form\n      setSellAmount('0')\n      setBuyAmount('0')\n      setQuoteData(null)\n      \n      if (isModal && onClose) {\n        onClose()\n      }\n    } catch (error) {\n      log.error('Error executing swap', 'SwapInterface.executeSwap', error as Error)\n      showError('Failed to execute swap transaction')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const content = (\n    <div className={`swap-interface ${isModal ? 'modal-content' : ''}`}>\n      {isModal && (\n        <div className=\"swap-header\">\n          <h2>Swap Tokens</h2>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n      )}\n      \n      <div className=\"swap-container\">\n        {/* Settings Button - moved to top right */}\n        <div className=\"settings-container\">\n          <button \n            className=\"settings-toggle\"\n            onClick={() => setShowSlippageSettings(!showSlippageSettings)}\n          >\n            ⚙️\n          </button>\n                    <button \n            className=\"refresh-quote-button\" \n            onClick={getQuote}\n            disabled={isCalculating || (!sellAmount && !buyAmount)}\n            title=\"Refresh price quote\"\n          >\n            {isCalculating ? '⟳' : '🔄'}\n          </button>\n        </div>\n\n        {showSlippageSettings && (\n          <div className=\"slippage-settings\">\n            <label>Slippage Tolerance</label>\n            <div className=\"slippage-options\">\n              <button \n                className={slippage === 1.0 ? 'active' : ''}\n                onClick={() => setSlippage(1.0)}\n              >\n                1%\n              </button>\n              <button \n                className={slippage === 5.0 ? 'active' : ''}\n                onClick={() => setSlippage(5.0)}\n              >\n                5%\n              </button>\n              <button \n                className={slippage === 25.0 ? 'active' : ''}\n                onClick={() => setSlippage(25.0)}\n              >\n                25.0%\n              </button>\n              <input\n                type=\"number\"\n                value={slippage}\n                onChange={(e) => setSlippage(parseFloat(e.target.value) || 0.5)}\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"50\"\n                className=\"custom-slippage\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Sell Section */}\n        <div className=\"swap-section sell-section\">\n          <div className=\"swap-section-header\">\n            <span className=\"section-label\">Sell</span>\n            <span className=\"balance\" onClick={handleBalanceClick} style={{ cursor: 'pointer' }}>\n              Balance: {getNumericBalance(sellToken).toFixed(4)} {sellToken}\n            </span>\n          </div>\n          \n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              value={sellAmount}\n              onChange={(e) => handleSellAmountChange(e.target.value)}\n              placeholder=\"0\"\n              className=\"amount-input\"\n            />\n            \n            <div className=\"token-selector\">\n              <TokenDropdown\n                selectedToken={sellToken}\n                onTokenSelect={setSellToken}\n                filterByAvailable={false}\n                className=\"sell-token-dropdown\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"percentage-slider\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={sellAmount ? Math.round((parseFloat(sellAmount) / getNumericBalance(sellToken)) * 100) : 0}\n              onChange={(e) => handleSliderChange(parseInt(e.target.value))}\n              className=\"slider\"\n            />\n            <div className=\"slider-labels\">\n              <span>0%</span>\n              <span>25%</span>\n              <span>50%</span>\n              <span>75%</span>\n              <span>100%</span>\n            </div>\n          </div>\n          \n        </div>\n\n        {/* Swap Arrow */}\n        <div className=\"swap-arrow-container\">\n          <button className=\"swap-arrow\" onClick={handleSwapTokens}>\n            ↓\n          </button>\n\n        </div>\n\n        {/* Buy Section */}\n        <div className=\"swap-section buy-section\">\n          <div className=\"swap-section-header\">\n            <span className=\"section-label\">Buy</span>\n            <span className=\"balance\">\n              Balance: {getNumericBalance(buyToken).toFixed(4)} {buyToken}\n            </span>\n          </div>\n          \n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              value={buyAmount}\n              onChange={(e) => handleBuyAmountChange(e.target.value)}\n              placeholder=\"0\"\n              className=\"amount-input\"\n              title=\"Enter desired output amount\"\n            />\n            \n            <div className=\"token-selector\">\n              <TokenDropdown\n                selectedToken={buyToken}\n                onTokenSelect={setBuyToken}\n                filterByAvailable={false}\n                className=\"buy-token-dropdown\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Quote Information */}\n        {quoteData && (\n          <div className=\"quote-info\">\n            <div className=\"quote-row\">\n              <span className=\"quote-label\">Rate</span>\n              <span className=\"quote-value\">\n                {quoteData.rate || '0.00340412'} WPIXAL per WAX (0.02%)\n              </span>\n            </div>\n            <div className=\"quote-row\">\n              <span className=\"quote-label\">Expected Output</span>\n              <span className=\"quote-value\">{quoteData.expectedOutput || buyAmount}</span>\n            </div>\n            <div className=\"quote-row\">\n              <span className=\"quote-label\">Price Impact</span>\n              <span className=\"quote-value\">{quoteData.priceImpact || '< 0.01%'}</span>\n            </div>\n            <div className=\"quote-row\">\n              <span className=\"quote-label\">Maximum Send after slippage</span>\n              <span className=\"quote-value\">\n                {quoteData.maxSent || '309.45013892'} WAX (0.50%)\n              </span>\n            </div>\n          </div>\n        )}\n\n        {/* Slippage Settings */}\n        \n        {/* Swap Button */}\n        <button \n          className={`swap-button ${loading || !account || !quoteData || parseFloat(sellAmount) <= 0 ? 'disabled' : ''}`}\n          onClick={executeSwap}\n          disabled={loading || !account || !quoteData || parseFloat(sellAmount) <= 0}\n        >\n          {loading ? (\n            <span className=\"loading-text\">\n              <span className=\"spinner\"></span>\n              Processing...\n            </span>\n          ) : !account ? (\n            'Connect Wallet'\n          ) : !quoteData ? (\n            'Enter Amount'\n          ) : parseFloat(sellAmount) <= 0 ? (\n            'Enter Valid Amount'\n          ) : (\n            `Swap ${sellToken} To ${buyToken}`\n          )}\n        </button>\n      </div>\n\n\n    </div>\n  )\n\n  if (isModal) {\n    return (\n      <div className=\"swap-modal-overlay\" onClick={onClose}>\n        <div onClick={(e) => e.stopPropagation()}>\n          {content}\n        </div>\n      </div>\n    )\n  }\n\n  return content\n}\n\nexport default SwapInterface","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useWallet } from '../hooks/useWallet'\nimport { apiService } from '../services/api'\nimport { balanceService } from '../services/balanceService'\nimport { priceService } from '../services/priceService'\nimport type { WaxAccountInfo, WaxCurrencyBalance } from '../services/api'\nimport { useNotifications } from '../hooks/useNotifications'\nimport StakingModal from './StakingModal'\nimport RAMModal from './RAMModal'\nimport TokenTransferModal from './TokenTransferModal'\nimport PortfolioAnalytics from './PortfolioAnalytics'\nimport { useGetAccountResources } from './CustomHooks/useGetAccountResources'\nimport { useGetPowerupState } from './CustomHooks/useGetPowerupState'\nimport { useGetChainInfo } from './CustomHooks/useGetChainInfo'\nimport { estimateCpuWithElasticLimit, netCalc, predictResourceAmounts, submitPowerupTx, waxToCpuFrac, waxToNetFrac } from '../powerup_functions.js'\nimport { formatWAXPrice, formatNumber } from '../utils/formatUtils'\nimport { log } from '../services/loggingService' \nimport { badgeService } from '../services/badgeService'\nimport type { UserBadge } from '../services/badgeService'\nimport PxBadges from './PxBadges'\nimport '../css/user-profile.css'\nimport SwapInterface from './SwapInterface'\n\ninterface Transaction {\n  transaction_id: string\n  block_time: string\n  action_name: string\n  asset_id?: string\n  asset_name?: string\n  collection_name?: string\n  price?: string\n  from?: string\n  to?: string\n  type: 'purchase' | 'sale' | 'transfer' | 'mint' | 'token_send' | 'token_receive'\n  status: 'completed' | 'pending' | 'failed'\n  memo?: string\n}\n\ninterface UserStats {\n  totalPurchases: number\n  totalSales: number\n  totalSpent: string\n  totalEarned: string\n  favoriteCollections: string[]\n  joinDate: string\n  nftsOwned: number\n  nftsListed: number\n  reputation?: string\n  totalTransactions?: number\n  tierStatus?: string\n}\n\ninterface TokenInfo {\n  symbol: string\n  contract: string\n}\n\nconst UserProfile: React.FC = () => {\n  const { account, isConnected, session, login } = useWallet()\n  const { showError, showSuccess } = useNotifications()\n  const navigate = useNavigate()\n  const [activeTab, setActiveTab] = useState<'overview' | 'transactions' | 'portfolio' | 'pxbadges' | 'network-resources' | 'powerup' | 'token-balances' | 'swap'>('overview')\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [collectionAvatars, setCollectionAvatars] = useState<Record<string, string>>({})\n  const [userStats, setUserStats] = useState<UserStats | null>(null)\n  const [accountData, setAccountData] = useState<WaxAccountInfo | null>(null)\n  const [resourceData, setResourceData] = useState<{\n    cpu: { used: number; available: number; max: number }\n    net: { used: number; available: number; max: number }\n    ram: { used: number; available: number; max: number }\n  } | null>(null)\n  const [tokenBalances, setTokenBalances] = useState<(WaxCurrencyBalance & { value: string })[]>([])\n  const [waxBalance, setWaxBalance] = useState<string>('0.0000 WAX')\n  const [selectedTokens, setSelectedTokens] = useState<Set<string>>(new Set())\n  const [bulkSellLoading, setBulkSellLoading] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [userBadges, setUserBadges] = useState<UserBadge[]>([])  \n  const [lastTransactionDate, setLastTransactionDate] = useState<string | null>(null)\n  const [transactionFilter, setTransactionFilter] = useState<'all' | 'purchase' | 'sale' | 'transfer' | 'tokens'>('all')\n  const [dateRange, setDateRange] = useState<'7d' | '30d' | '90d' | 'all' | 'custom'>('all')\n  const [customDateRange, setCustomDateRange] = useState({ start: '', end: '' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [transactionsPerPage] = useState(10)\n  const [sortBy, setSortBy] = useState<'date' | 'amount' | 'type'>('date')\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc')\n  const [isExporting, setIsExporting] = useState(false)\n  const [isLoadingTransactions, setIsLoadingTransactions] = useState(false)\n  const [transactionError, setTransactionError] = useState<string | null>(null)\n  const [exportError, setExportError] = useState<string | null>(null)\n  \n  // Modal states\n  const [stakingModal, setStakingModal] = useState<{\n    isOpen: boolean\n    resourceType: 'cpu' | 'net'\n    action: 'stake' | 'unstake'\n  }>({ isOpen: false, resourceType: 'cpu', action: 'stake' })\n  const [ramModal, setRAMModal] = useState<{\n    isOpen: boolean\n    action: 'buy' | 'sell'\n  }>({ isOpen: false, action: 'buy' })\n  const [tokenTransferModal, setTokenTransferModal] = useState<{\n    isOpen: boolean\n    token: (WaxCurrencyBalance & { value: string }) | null\n  }>({ isOpen: false, token: null })\n\n  // Powerup state variables\n  const [accountToBoost, setAccountToBoost] = useState(account || '')\n  const [cpuAllocation, setCpuAllocation] = useState(100)\n  const [powerupAmount, setPowerupAmount] = useState(0)\n\n  const [txIsLoading, setTxIsLoading] = useState(false)\n\n  // Custom hooks for powerup functionality\n  const [, getResources] = useGetAccountResources()\n  const [powerupState, getPowerupState] = useGetPowerupState()\n  const [chainInfo, getChainInfo] = useGetChainInfo()\n\n  const loadTransactions = useCallback(async () => {\n    log.debug('loadTransactions called with account', 'UserProfile', { account })\n    setIsLoadingTransactions(true)\n    setTransactionError(null)\n    \n    if (!account) {\n      log.debug('No account connected, using test account', 'UserProfile')\n      // Use a test account with known transactions for demonstration\n      const testAccount = 'pixeljourney'\n      \n      try {\n        log.debug('Fetching transactions for test account', 'UserProfile', { testAccount })\n        const realTransactions = await apiService.getUserTransactions(testAccount, 20)\n        log.debug('Test transactions fetched', 'UserProfile', { count: realTransactions?.length || 0, sample: realTransactions?.slice(0, 2) })\n        \n        if (!realTransactions || realTransactions.length === 0) {\n          log.warn('No test transactions returned', 'UserProfile')\n          setTransactions([])\n        } else {\n          // Test transactions loaded successfully\n          const typedTransactions = realTransactions.map(tx => ({\n            ...tx,\n            type: tx.type as 'purchase' | 'sale' | 'transfer' | 'mint' | 'token_send' | 'token_receive',\n            status: (tx.status || 'completed') as 'completed' | 'pending' | 'failed'\n          }))\n          setTransactions(typedTransactions)\n        }\n      } catch (err) {\n        log.error('Error loading test transactions', 'UserProfile', err as Error, {\n          name: err instanceof Error ? err.name : 'Unknown',\n          message: err instanceof Error ? err.message : String(err),\n          stack: err instanceof Error ? err.stack : undefined\n        })\n        const errorMessage = err instanceof Error ? err.message : 'Unable to load transaction history. Please try again later.'\n        setTransactionError(errorMessage)\n        showError('Transaction Error', errorMessage)\n      } finally {\n        setIsLoadingTransactions(false)\n      }\n      return\n    }\n    \n    try {\n      log.debug('Loading transactions for connected account', 'UserProfile', { account, apiServiceAvailable: !!apiService, getUserTransactionsType: typeof apiService.getUserTransactions })\n      \n      // Fetch real transaction data from API\n      const realTransactions = await apiService.getUserTransactions(account, 20)\n      log.debug('Fetched transactions', 'UserProfile', { count: realTransactions?.length || 0, sample: realTransactions?.slice(0, 2) })\n      \n      if (!realTransactions || realTransactions.length === 0) {\n        log.warn('No transactions returned from API', 'UserProfile')\n        setTransactions([])\n      } else {\n        const typedTransactions = realTransactions.map(tx => ({\n          ...tx,\n          type: tx.type as 'purchase' | 'sale' | 'transfer' | 'mint' | 'token_send' | 'token_receive',\n          status: (tx.status || 'completed') as 'completed' | 'pending' | 'failed'\n        }))\n        setTransactions(typedTransactions)\n      }\n    } catch (err) {\n      log.error('Error loading transactions', 'UserProfile', err as Error, {\n        name: err instanceof Error ? err.name : 'Unknown',\n        message: err instanceof Error ? err.message : String(err),\n        stack: err instanceof Error ? err.stack : undefined\n      })\n      const errorMessage = err instanceof Error ? err.message : 'Unable to load transaction history. Please try again later.'\n      setTransactionError(errorMessage)\n      showError('Transaction Error', errorMessage)\n    } finally {\n      setIsLoadingTransactions(false)\n    }\n  }, [account, showError])\n\n  const loadUserStats = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      // Fetch real user stats from API\n      const realStats = await apiService.getUserStats(account)\n      setUserStats(realStats)\n      \n      // Fetch collection avatars\n      if (realStats.favoriteCollections.length > 0) {\n        fetchCollectionAvatars(realStats.favoriteCollections)\n      }\n    } catch (err) {\n      log.error('Error loading user stats', 'UserProfile', err as Error)\n      throw err\n    }\n  }, [account])\n\n\n\n  // Fetch account data from WAX blockchain\n  const fetchAccountData = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      const data = await apiService.getWaxAccountInfo(account)\n      if (data) {\n        setAccountData(data)\n        \n        // Extract resource data\n        if (data.cpu_limit && data.net_limit && data.ram_quota) {\n          setResourceData({\n            cpu: {\n              used: data.cpu_limit.used,\n              available: data.cpu_limit.available,\n              max: data.cpu_limit.max\n            },\n            net: {\n              used: data.net_limit.used,\n              available: data.net_limit.available,\n              max: data.net_limit.max\n            },\n            ram: {\n              used: data.ram_usage,\n              available: data.ram_quota - data.ram_usage,\n              max: data.ram_quota\n            }\n          })\n        }\n      }\n    } catch (error) {\n      log.error('Failed to fetch account data', 'UserProfile', error as Error)\n      showError('Account Data Error', 'Unable to fetch account information. Some features may not work properly.')\n    }\n  }, [account, showError])\n\n  // Fetch latest transaction date for \"Last Active\" field\n  const fetchLastTransactionDate = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      const transactions = await apiService.getUserTransactions(account, 1)\n      if (transactions && transactions.length > 0) {\n        setLastTransactionDate(transactions[0].block_time)\n      }\n    } catch (error) {\n      log.error('Failed to fetch last transaction date', 'UserProfile', error as Error)\n      // Fallback to account creation date or last_code_update if transaction fetch fails\n      setLastTransactionDate(null)\n    }\n  }, [account])\n\n  // Define contracts to exclude from token balance fetching\n  const EXCLUDED_CONTRACTS = useMemo(() => [\n    'swap.taco',\n    'alpha.waxfun',\n    'beta.waxfun'\n  ], [])\n\n  // Define top tokens to prioritize for price fetching\n  const TOP_TOKENS = useMemo(() => [\n    { symbol: 'WAX', contract: 'eosio.token' },\n    { symbol: 'PXJ', contract: 'pixeljourney' },\n    { symbol: 'WPIXAL', contract: 'pixeljourney' },\n    { symbol: 'WUF', contract: 'wuffi' },\n    { symbol: 'TLM', contract: 'alien.worlds' }\n  ], [])\n\n  // Fallback method using individual token calls\n  const fetchTokenBalancesFallback = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      const balances: (WaxCurrencyBalance & { value: string })[] = []\n      \n      // Filter TOP_TOKENS to exclude problematic contracts\n      const validTopTokens = TOP_TOKENS.filter((token: TokenInfo) => \n        !EXCLUDED_CONTRACTS.includes(token.contract)\n      )\n      \n      for (let i = 0; i < validTopTokens.length; i++) {\n        const token = validTopTokens[i]\n        try {\n          // Add delay between requests to avoid rate limiting (500ms)\n          if (i > 0) {\n            await delay(500)\n          }\n          \n          const tokenBalances = await apiService.getWaxCurrencyBalance(account, token.contract, token.symbol)\n          if (tokenBalances && tokenBalances.length > 0) {\n            let usdValue = 'N/A'\n            \n            // Fetch USD price for supported tokens using PriceService\n            const balanceAmount = parseFloat(tokenBalances[0].balance.split(' ')[0])\n            \n            try {\n              if (token.symbol === 'WAX' && token.contract === 'eosio.token') {\n                const waxPriceUSD = await priceService.getWaxPriceUSD()\n                usdValue = formatNumber(balanceAmount * waxPriceUSD, 2)\n              } else if (token.symbol === 'WPIXAL' && token.contract === 'pixeljourney') {\n                const wpixalPriceUSD = await priceService.getWpixalPriceUSD()\n                usdValue = formatNumber(balanceAmount * wpixalPriceUSD, 4)\n              } else if (token.symbol === 'PXJ' && token.contract === 'pixeljourney') {\n                const pxjPriceUSD = await priceService.getPxjPriceUSD()\n                usdValue = formatNumber(balanceAmount * pxjPriceUSD, 6)\n              } else if (token.symbol === 'WUF' && token.contract === 'wuffi') {\n                // WUF price not implemented yet\n                usdValue = '0.00'\n              } else {\n                usdValue = 'N/A'\n              }\n            } catch (error) {\n              log.warn(`Failed to fetch price for ${token.symbol} in fallback`, 'UserProfile', { error })\n              usdValue = '0.00'\n            }\n            \n            const balanceWithValue = {\n              ...tokenBalances[0],\n              value: usdValue\n            }\n            \n            // Set WAX balance state if this is WAX token - use shared balance service\n            if (token.symbol === 'WAX' && token.contract === 'eosio.token') {\n              try {\n                const waxBalance = await balanceService.getWaxBalance(account)\n                setWaxBalance(waxBalance)\n              } catch (error) {\n                log.warn('Failed to get WAX balance from balance service, using fallback', 'UserProfile', { error })\n                setWaxBalance(balanceWithValue.balance)\n              }\n            }\n            \n            balances.push(balanceWithValue as WaxCurrencyBalance & { value: string })\n          }\n        } catch (error) {\n          log.error(`Failed to fetch ${token.symbol} balance`, 'UserProfile', error as Error)\n        }\n      }\n      setTokenBalances(balances)\n    } catch (error) {\n      log.error('Failed to fetch token balances with fallback', 'UserProfile', error as Error)\n    }\n  }, [account, TOP_TOKENS, EXCLUDED_CONTRACTS])\n\n  const fetchUserBadges = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      const badges = await badgeService.checkUserBadges(account)\n      setUserBadges(badges.badges)\n    } catch (error) {\n      log.error('Failed to fetch user badges', 'UserProfile.fetchUserBadges', error as Error, { account })\n    }\n  }, [account])\n\n  // Fetch token balances using WAX Light API\n  const fetchTokenBalances = useCallback(async () => {\n    if (!account) return\n    \n    try {\n      // Use WAX Light API to get all token balances at once\n      const lightApiBalances = await apiService.getLightApiBalances(account)\n      \n      if (lightApiBalances && lightApiBalances.balances) {\n        const balancesWithValues: (WaxCurrencyBalance & { value: string })[] = []\n        \n        // Sort balances by amount (descending) and prioritize top tokens\n        const sortedBalances = lightApiBalances.balances\n          .filter(balance => parseFloat(balance.amount) > 0.0001) // Filter out dust amounts to reduce processing\n          .sort((a, b) => parseFloat(b.amount) - parseFloat(a.amount))\n          .sort((a, b) => {\n            const aIsTop = TOP_TOKENS.some((token: TokenInfo) => token.symbol === a.currency && token.contract === a.contract)\n            const bIsTop = TOP_TOKENS.some((token: TokenInfo) => token.symbol === b.currency && token.contract === b.contract)\n            if (aIsTop && !bIsTop) return -1\n            if (!aIsTop && bIsTop) return 1\n            return 0\n          })\n        \n        // Filter out excluded contracts but allow all other tokens (we'll only fetch prices for specific ones)\n        const validBalances = sortedBalances.filter(balance => \n          !EXCLUDED_CONTRACTS.includes(balance.contract)\n        )\n        \n        // Show all valid tokens (no limit)\n        for (let i = 0; i < validBalances.length; i++) {\n          const balance = validBalances[i]\n          try {\n            // Add delay between requests to avoid rate limiting (300ms for better UX)\n            if (i > 0) {\n              await delay(300)\n            }\n            \n            // Get USD price for supported tokens using the updated PriceService\n            let usdValue = '0.00'\n            const balanceAmount = parseFloat(balance.amount)\n            \n            try {\n              if (balance.currency === 'WAX' && balance.contract === 'eosio.token') {\n                const waxPriceUSD = await priceService.getWaxPriceUSD()\n                usdValue = formatNumber(balanceAmount * waxPriceUSD, 2)\n              } else if (balance.currency === 'WPIXAL' && balance.contract === 'pixeljourney') {\n                const wpixalPriceUSD = await priceService.getWpixalPriceUSD()\n                usdValue = formatNumber(balanceAmount * wpixalPriceUSD, 4)\n              } else if (balance.currency === 'PXJ' && balance.contract === 'pixeljourney') {\n                const pxjPriceUSD = await priceService.getPxjPriceUSD()\n                usdValue = formatNumber(balanceAmount * pxjPriceUSD, 6)\n              } else if (balance.currency === 'WUF' && balance.contract === 'wuffi') {\n                // WUF price not implemented yet, set to 0.00\n                usdValue = '0.00'\n              } else {\n                usdValue = 'N/A' // No price data available for other tokens\n              }\n            } catch (error) {\n              log.warn(`Failed to fetch price for ${balance.currency}`, 'UserProfile', { error })\n              usdValue = '0.00'\n            }\n            \n            // Convert to WaxCurrencyBalance format\n            const formattedBalance = {\n              balance: `${balance.amount} ${balance.currency}`,\n              symbol: balance.currency,\n              contract: balance.contract,\n              value: usdValue\n            }\n            \n            // Set WAX balance state if this is WAX token - use shared balance service\n            if (balance.currency === 'WAX' && balance.contract === 'eosio.token') {\n              try {\n                const waxBalance = await balanceService.getWaxBalance(account)\n                setWaxBalance(waxBalance)\n              } catch (error) {\n                log.warn('Failed to get WAX balance from balance service, using fallback', 'UserProfile', { error })\n                setWaxBalance(formattedBalance.balance)\n              }\n            }\n            \n            balancesWithValues.push(formattedBalance as WaxCurrencyBalance & { value: string })\n          } catch (error) {\n            log.error(`Failed to get price for ${balance.currency}`, 'UserProfile', error as Error)\n            // Fallback with zero value if price fetch fails\n            const formattedBalance = {\n              balance: `${balance.amount} ${balance.currency}`,\n              symbol: balance.currency,\n              contract: balance.contract,\n              value: '0.00'\n            }\n            balancesWithValues.push(formattedBalance as WaxCurrencyBalance & { value: string })\n          }\n        }\n        \n        setTokenBalances(balancesWithValues)\n      }\n    } catch (error) {\n      log.error('Failed to fetch token balances', 'UserProfile', error as Error)\n      // Fallback to old method if Light API fails\n      await fetchTokenBalancesFallback()\n    }\n  }, [account, EXCLUDED_CONTRACTS, TOP_TOKENS, fetchTokenBalancesFallback])\n   \n  const loadUserData = useCallback(async () => {\n    if (!account) return\n    \n    setLoading(true)\n    setError(null)\n    \n    try {\n      // Load user transactions\n      await loadTransactions()\n      \n      // Load user statistics\n      await loadUserStats()\n      \n      // Fetch token balances (includes WAX balance)\n      await fetchTokenBalances()\n      \n      // Fetch user badges\n      await fetchUserBadges()\n      \n      // User settings functionality removed\n    } catch (err) {\n      log.error('Error loading user data', 'UserProfile', err as Error)\n      setError('Failed to load user data')\n      showError('User Data Error', 'Unable to load user profile data. Please try refreshing the page.')\n    } finally {\n      setLoading(false)\n    }\n  }, [account, showError, fetchTokenBalances, loadTransactions, loadUserStats, fetchUserBadges])\n\n  // Fetch token balances using WAX Light API\n\n  useEffect(() => {\n    if (isConnected && account) {\n      const initializeData = async () => {\n        try {\n          // Load user data (includes token balances which includes WAX)\n          await loadUserData()\n          await fetchAccountData()\n          await fetchLastTransactionDate()\n          // Initialize powerup data\n          await getPowerupState()\n          await getChainInfo()\n          getResources()\n        } catch (error) {\n          log.error('Error initializing user data', 'UserProfile', error as Error)\n          showError('Failed to Load User Data', 'Unable to initialize user profile. Please try refreshing the page.')\n          setError('Failed to load user data')\n        }\n      }\n      initializeData()\n    }\n  }, [isConnected, account]) // Removed function dependencies to prevent unnecessary re-renders\n\n  // Update account to boost when account changes\n  useEffect(() => {\n    if (account) {\n      setAccountToBoost(account)\n    }\n  }, [account])\n\n  // Helper functions for powerup\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      if (value === '' || !isNaN(Number(value))) {\n        if (value !== '') {\n          const maxWax = parseFloat(waxBalance.split(' ')[0])\n          if (Number(value) > maxWax) {\n            return\n          }\n        }\n        setPowerupAmount(Number(value))\n      }\n    }\n  }\n\n  const handleSliderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const percentage = Number(e.target.value)\n    const maxWax = parseFloat(waxBalance.split(' ')[0])\n    const newAmount = Number((maxWax * percentage) / 100).toFixed(8)\n    setPowerupAmount(Number(newAmount))\n  }\n\n  const handleCpuSliderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const percent = Number(e.target.value)\n    setCpuAllocation(percent)\n  }\n\n  const calculateResourceUsage = (currentUsed: number, max: number) => {\n    if (max === 0) return 0\n    return (currentUsed / max) * 100\n  }\n\n\n  \n\n  \n  // Helper function to add delay between API calls\n  const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\n  // Define contracts to exclude from token balance fetching\n  // Define top tokens to prioritize for price fetching\n\n\n\n  \n\n  \n\n\n\n\n  // Modal handlers\n  const openStakingModal = (resourceType: 'cpu' | 'net', action: 'stake' | 'unstake') => {\n    setStakingModal({ isOpen: true, resourceType, action })\n  }\n\n  const closeStakingModal = () => {\n    setStakingModal({ isOpen: false, resourceType: 'cpu', action: 'stake' })\n  }\n\n  const openRAMModal = (action: 'buy' | 'sell') => {\n    setRAMModal({ isOpen: true, action })\n  }\n\n  const closeRAMModal = () => {\n    setRAMModal({ isOpen: false, action: 'buy' })\n  }\n\n  const openTokenTransferModal = (token: WaxCurrencyBalance & { value: string }) => {\n    setTokenTransferModal({ isOpen: true, token })\n  }\n\n  const closeTokenTransferModal = () => {\n    setTokenTransferModal({ isOpen: false, token: null })\n  }\n\n  const handleTokenTransferSuccess = () => {\n    // Refresh account data after successful transfer\n    fetchAccountData()\n    closeTokenTransferModal()\n  }\n\n  const handleResourceSuccess = () => {\n    // Refresh account data after successful transaction\n    fetchAccountData()\n  }\n\n\n\n  const handleSelectAll = () => {\n    if (selectedTokens.size === tokenBalances.length) {\n      setSelectedTokens(new Set())\n    } else {\n      const allTokenKeys = tokenBalances.map((_, index) => index.toString())\n      setSelectedTokens(new Set(allTokenKeys))\n    }\n  }\n\n  const handleBulkSell = async () => {\n     if (selectedTokens.size === 0 || !account) return\n     \n     setBulkSellLoading(true)\n     try {\n       const selectedTokenData = Array.from(selectedTokens).map(index => \n         tokenBalances[parseInt(index)]\n       ).filter(token => token.symbol !== 'PXJ') // Don't sell PXJ for PXJ\n       \n       if (selectedTokenData.length === 0) {\n         showError('Invalid Selection', 'No valid tokens selected for swap (PXJ cannot be swapped for itself)')\n         return\n       }\n       \n       let totalPxjReceived = 0\n       const swapResults = []\n       \n       for (const token of selectedTokenData) {\n         try {\n           // Get swap quote from Alcor\n           const amount = parseFloat(token.balance.split(' ')[0])\n           const swapQuote = await apiService.getAlcorSwapQuote({\n             from_token: token.symbol,\n             from_contract: token.contract,\n             to_token: 'PXJ',\n             to_contract: 'pixeljourney',\n             amount: amount.toString(),\n             slippage: 0.5\n           })\n           \n           if (swapQuote && parseFloat(swapQuote.output.amount) > 0) {\n             // In a real implementation, you would execute the swap here\n             // This would require wallet integration and transaction signing\n             swapResults.push({\n               token: token.symbol,\n               amount: amount,\n               pxjReceived: parseFloat(swapQuote.output.amount),\n               success: true\n             })\n             totalPxjReceived += parseFloat(swapQuote.output.amount)\n           } else {\n             swapResults.push({\n               token: token.symbol,\n               amount: amount,\n               pxjReceived: 0,\n               success: false,\n               error: 'No liquidity available'\n             })\n           }\n         } catch (error) {\n           log.error(`Failed to get swap quote for ${token.symbol}`, 'UserProfile', error as Error)\n           swapResults.push({\n             token: token.symbol,\n             amount: parseFloat(token.balance.split(' ')[0]),\n             pxjReceived: 0,\n             success: false,\n             error: 'Swap quote failed'\n           })\n         }\n       }\n       \n       // Show results summary\n       const successfulSwaps = swapResults.filter(r => r.success)\n       const failedSwaps = swapResults.filter(r => !r.success)\n       \n       let message = `Bulk Sell Summary:\\n\\n`\n       if (successfulSwaps.length > 0) {\n         message += `Successful swaps (${successfulSwaps.length}):\\n`\n         successfulSwaps.forEach(swap => {\n           message += `• ${swap.amount} ${swap.token} → ${swap.pxjReceived.toFixed(8)} PXJ\\n`\n         })\n         message += `\\nTotal PXJ received: ${totalPxjReceived.toFixed(8)} PXJ\\n`\n       }\n       \n       if (failedSwaps.length > 0) {\n         message += `\\nFailed swaps (${failedSwaps.length}):\\n`\n         failedSwaps.forEach(swap => {\n           message += `• ${swap.amount} ${swap.token} - ${swap.error}\\n`\n         })\n       }\n       \n       message += `\\nNote: This is a preview. Actual swaps would require wallet confirmation.`\n       \n       showSuccess('Bulk Sell Summary', message)\n       setSelectedTokens(new Set())\n       \n       // Refresh balances after successful swaps\n       if (successfulSwaps.length > 0) {\n         await fetchTokenBalances()\n       }\n       \n     } catch (error) {\n       log.error('Bulk sell failed', 'UserProfile', error as Error)\n       showError('Bulk Sell Failed', 'Bulk sell failed. Please try again.')\n     } finally {\n       setBulkSellLoading(false)\n     }\n   }\n\n\n\n  // Handle powerup operations\n\n\n\n\n  const fetchCollectionAvatars = async (collections: string[]) => {\n    const avatars: Record<string, string> = {}\n    \n    for (const collection of collections) {\n      try {\n        const response = await fetch(`https://aa.dapplica.io/atomicassets/v1/collections/${collection}`)\n        const data = await response.json()\n        \n        if (data.success && data.data?.img) {\n          const img = data.data.img\n          avatars[collection] = img.startsWith('http') ? img : `https://ipfs.io/ipfs/${img}`\n        }\n      } catch (error) {\n        log.error(`Error fetching avatar for collection ${collection}`, 'UserProfile', error as Error)\n      }\n    }\n    \n    setCollectionAvatars(avatars)\n  }\n\n\n\n\n\n  const filteredTransactions = transactions.filter(tx => {\n    // Filter by type\n    if (transactionFilter !== 'all') {\n      if (transactionFilter === 'tokens') {\n        // Show both token_send and token_receive for 'tokens' filter\n        if (tx.type !== 'token_send' && tx.type !== 'token_receive') return false\n      } else if (tx.type !== transactionFilter) {\n        return false\n      }\n    }\n    \n    // Filter by search query\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase()\n      const matchesAssetName = tx.asset_name?.toLowerCase().includes(query)\n      const matchesCollection = tx.collection_name?.toLowerCase().includes(query)\n      const matchesTxId = tx.transaction_id.toLowerCase().includes(query)\n      const matchesFrom = tx.from?.toLowerCase().includes(query)\n      const matchesTo = tx.to?.toLowerCase().includes(query)\n      \n      if (!matchesAssetName && !matchesCollection && !matchesTxId && !matchesFrom && !matchesTo) {\n        return false\n      }\n    }\n    \n    // Filter by date range\n    if (dateRange !== 'all') {\n      const txDate = new Date(tx.block_time)\n      \n      if (dateRange === 'custom') {\n        // Custom date range filtering\n        if (customDateRange.start && customDateRange.end) {\n          const startDate = new Date(customDateRange.start)\n          const endDate = new Date(customDateRange.end)\n          endDate.setHours(23, 59, 59, 999) // Include the entire end date\n          \n          if (txDate < startDate || txDate > endDate) return false\n        } else if (customDateRange.start) {\n          // Only start date specified\n          const startDate = new Date(customDateRange.start)\n          if (txDate < startDate) return false\n        } else if (customDateRange.end) {\n          // Only end date specified\n          const endDate = new Date(customDateRange.end)\n          endDate.setHours(23, 59, 59, 999)\n          if (txDate > endDate) return false\n        }\n      } else {\n        // Predefined date ranges\n        const now = new Date()\n        const daysAgo = dateRange === '7d' ? 7 : dateRange === '30d' ? 30 : 90\n        const cutoffDate = new Date(now.getTime() - (daysAgo * 24 * 60 * 60 * 1000))\n        \n        if (txDate < cutoffDate) return false\n      }\n    }\n    \n    return true\n  })\n  \n  // Sort transactions\n  const sortedTransactions = [...filteredTransactions].sort((a, b) => {\n    let comparison = 0\n    \n    switch (sortBy) {\n      case 'date':\n        comparison = new Date(a.block_time).getTime() - new Date(b.block_time).getTime()\n        break\n      case 'amount': {\n        const aAmount = parseFloat(a.price?.replace(' WAX', '') || '0')\n        const bAmount = parseFloat(b.price?.replace(' WAX', '') || '0')\n        comparison = aAmount - bAmount\n        break\n      }\n      case 'type':\n        comparison = a.type.localeCompare(b.type)\n        break\n    }\n    \n    return sortOrder === 'desc' ? -comparison : comparison\n  })\n  \n  // Pagination\n  const totalPages = Math.ceil(sortedTransactions.length / transactionsPerPage)\n  const startIndex = (currentPage - 1) * transactionsPerPage\n  const paginatedTransactions = sortedTransactions.slice(startIndex, startIndex + transactionsPerPage)\n  \n  // Export functionality\n  const exportTransactions = (format: 'csv' | 'json') => {\n    setIsExporting(true)\n    setExportError(null)\n    \n    try {\n      let content: string\n      let filename: string\n      let mimeType: string\n      \n      if (format === 'csv') {\n        const headers = ['Transaction ID', 'Date', 'Type', 'Asset Name', 'Collection', 'Price', 'From', 'To', 'Status']\n        const csvRows = [headers.join(',')]\n        \n        filteredTransactions.forEach(tx => {\n          const row = [\n            tx.transaction_id,\n            tx.block_time,\n            tx.type,\n            tx.asset_name || '',\n            tx.collection_name || '',\n            tx.price || '',\n            tx.from || '',\n            tx.to || '',\n            tx.status\n          ].map(field => `\"${field}\"`)\n          csvRows.push(row.join(','))\n        })\n        \n        content = csvRows.join('\\n')\n        filename = `transactions_${account}_${new Date().toISOString().split('T')[0]}.csv`\n        mimeType = 'text/csv'\n      } else {\n        content = JSON.stringify(filteredTransactions, null, 2)\n        filename = `transactions_${account}_${new Date().toISOString().split('T')[0]}.json`\n        mimeType = 'application/json'\n      }\n      \n      const blob = new Blob([content], { type: mimeType })\n      const url = URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = filename\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      log.error('Export failed', 'UserProfile', error as Error)\n      const errorMessage = error instanceof Error ? error.message : 'Failed to export transactions. Please try again.'\n      setExportError(errorMessage)\n      showError('Export Error', errorMessage)\n    } finally {\n      setIsExporting(false)\n    }\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  const formatWAX = (amount: string) => {\n    return formatWAXPrice(parseFloat(amount.replace(' WAX', '')))\n  }\n\n  if (!isConnected) {\n    return (\n      <div className=\"user-profile\">\n        <div className=\"profile-container\">\n          <div className=\"not-connected\">\n            <div className=\"not-connected-icon\">🔒</div>\n            <h2>Connect Your Wallet</h2>\n            <p>Please connect your wallet to view your profile and transaction history.</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"user-profile\">\n      <div className=\"profile-container\">\n        <div className=\"profile-header\">\n          <div className=\"profile-avatar\">\n            <div className=\"avatar-placeholder\">\n              {account?.charAt(0).toUpperCase()}\n            </div>\n          </div>\n          <div className=\"profile-info\">\n            <h1>{account}</h1>\n            <div className=\"profile-badges\">\n              {userBadges.map((badge) => (\n                <span key={badge.id} className={`badge ${badge.id}`} title={badge.description}>\n                  {badge.icon} {badge.name}\n                </span>\n              ))}\n              {userBadges.length === 0 && (\n                <span className=\"badge no-badges\">No badges earned yet</span>\n              )}\n            </div>\n          </div>\n          <div className=\"profile-stats-quick\">\n            {userStats && (\n              <>\n                <div className=\"stat-item\">\n                  <span className=\"stat-value\">{userStats.nftsOwned}</span>\n                  <span className=\"stat-label\">NFTs Owned</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-value\">{userStats.totalPurchases}</span>\n                  <span className=\"stat-label\">Purchases</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-value\">{userStats.totalSales}</span>\n                  <span className=\"stat-label\">Sales</span>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"profile-tabs\" role=\"tablist\" aria-label=\"Profile sections\">\n          <div className=\"tab-row\">\n            <button \n              className={`tab-button ${activeTab === 'overview' ? 'active' : ''}`}\n              onClick={() => setActiveTab('overview')}\n              role=\"tab\"\n              aria-selected={activeTab === 'overview'}\n              aria-controls=\"overview-panel\"\n              id=\"overview-tab\"\n            >\n              Overview\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'transactions' ? 'active' : ''}`}\n              onClick={() => setActiveTab('transactions')}\n              role=\"tab\"\n              aria-selected={activeTab === 'transactions'}\n              aria-controls=\"transactions-panel\"\n              id=\"transactions-tab\"\n            >\n              Transactions\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'portfolio' ? 'active' : ''}`}\n              onClick={() => setActiveTab('portfolio')}\n              role=\"tab\"\n              aria-selected={activeTab === 'portfolio'}\n              aria-controls=\"portfolio-panel\"\n              id=\"portfolio-tab\"\n            >\n              Portfolio Analytics\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'pxbadges' ? 'active' : ''}`}\n              onClick={() => setActiveTab('pxbadges')}\n              role=\"tab\"\n              aria-selected={activeTab === 'pxbadges'}\n              aria-controls=\"pxbadges-panel\"\n              id=\"pxbadges-tab\"\n            >\n              PxBadges\n            </button>\n          </div>\n          <div className=\"tab-row\">\n            <button \n              className={`tab-button ${activeTab === 'network-resources' ? 'active' : ''}`}\n              onClick={() => setActiveTab('network-resources')}\n              role=\"tab\"\n              aria-selected={activeTab === 'network-resources'}\n              aria-controls=\"network-resources-panel\"\n              id=\"network-resources-tab\"\n            >\n              Network Resources\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'powerup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('powerup')}\n              role=\"tab\"\n              aria-selected={activeTab === 'powerup'}\n              aria-controls=\"powerup-panel\"\n              id=\"powerup-tab\"\n            >\n              Powerup\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'token-balances' ? 'active' : ''}`}\n              onClick={() => setActiveTab('token-balances')}\n              role=\"tab\"\n              aria-selected={activeTab === 'token-balances'}\n              aria-controls=\"token-balances-panel\"\n              id=\"token-balances-tab\"\n            >\n              Token Balances\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'swap' ? 'active' : ''}`}\n              onClick={() => setActiveTab('swap')}\n              role=\"tab\"\n              aria-selected={activeTab === 'swap'}\n              aria-controls=\"swap-panel\"\n              id=\"swap-tab\"\n            >\n              Swap\n            </button>\n          </div>\n        </div>\n\n        <div className=\"profile-content\">\n          {loading && (\n            <div className=\"loading-state\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading profile data...</p>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"error-state\">\n              <p>{error}</p>\n              <button onClick={loadUserData} className=\"retry-button\">\n                Retry\n              </button>\n            </div>\n          )}\n\n          {!loading && !error && (\n            <>\n              {activeTab === 'overview' && userStats && (\n                <div className=\"overview-tab\">\n                  <div className=\"balance-info\">\n                    <div className=\"balance-item\">\n                      <span className=\"balance-label\">WAX Balance:</span>\n                      <span className=\"balance-value\">{waxBalance}</span>\n                    </div>\n                    <div className=\"balance-item\">\n                      <span className=\"balance-label\">USD Value:</span>\n                      <span className=\"balance-value\">$0.00</span>\n                    </div>\n                  </div>\n\n                  <div className=\"account-info\">\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Account Name:</span>\n                      <span className=\"info-value\">{account}</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Created:</span>\n                      <span className=\"info-value\">{accountData?.created ? new Date(accountData.created).toLocaleDateString() : 'Loading...'}</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Last Active:</span>\n                      <span className=\"info-value\">{lastTransactionDate ? new Date(lastTransactionDate).toLocaleDateString() : (accountData?.last_code_update ? new Date(accountData.last_code_update).toLocaleDateString() : 'Loading...')}</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"info-label\">Reputation:</span>\n                      <span className=\"info-value\">{userStats?.reputation || '⭐⭐⭐⭐⭐ (4.8/5)'}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"stats-grid\">\n                    <div className=\"stat-item\">\n                      <div className=\"stat-value\">{userStats?.nftsOwned || 0}</div>\n                      <div className=\"stat-label\">NFTs Owned</div>\n                    </div>\n                    <div className=\"stat-item\">\n                      <div className=\"stat-value\">{userStats?.totalTransactions || 0}</div>\n                      <div className=\"stat-label\">Transactions</div>\n                    </div>\n                    <div className=\"stat-item\">\n                      <div className=\"stat-value\">{userStats?.totalEarned || '0'}</div>\n                      <div className=\"stat-label\">WAX Earned</div>\n                    </div>\n                    <div className=\"stat-item\">\n                      <div className=\"stat-value\">{userStats?.tierStatus || 'Bronze'}</div>\n                      <div className=\"stat-label\">Tier Status</div>\n                    </div>\n                  </div>\n\n                  <div className=\"favorite-collections\">\n                    <h3>Favorite Collections</h3>\n                    <div className=\"collections-list\">\n                      {userStats.favoriteCollections.map((collection, index) => (\n                        <div key={index} className=\"collection-item\">\n                          <div className=\"user-collection-avatar\">\n                            {collectionAvatars[collection] ? (\n                              <img \n                                src={collectionAvatars[collection]} \n                                alt={`${collection} avatar`}\n                                onError={(e) => {\n                                  e.currentTarget.style.display = 'none';\n                                  (e.currentTarget.nextElementSibling as HTMLElement)!.style.display = 'flex';\n                                }}\n                              />\n                            ) : null}\n                            <div className=\"fallback-avatar\" style={{ display: collectionAvatars[collection] ? 'none' : 'flex' }}>\n                              {collection.charAt(0).toUpperCase()}\n                            </div>\n                          </div>\n                          <span className=\"collection-name\">{collection}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'transactions' && (\n                <div className=\"transactions-tab\">\n                  {/* Wallet Connection Prompt */}\n                  {!isConnected && (\n                    <div className=\"wallet-connection-prompt\">\n                      <div className=\"prompt-content\">\n                        <h3>🔗 Connect Your Wallet</h3>\n                        <p>Connect your WAX wallet to view your personal transaction history and account details.</p>\n                        <button className=\"connect-wallet-btn\" onClick={login}>\n                          Connect Wallet\n                        </button>\n                        <div className=\"demo-notice\">\n                          <p>📊 Currently showing demo data from account: <strong>pixeljourney</strong></p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Quick Filter Buttons */}\n                  <div className=\"quick-filters\">\n                    <button \n                      className={`filter-btn ${transactionFilter === 'all' ? 'active' : ''}`}\n                      onClick={() => setTransactionFilter('all')}\n                    >\n                      🔍 All Activity\n                    </button>\n                    <button \n                      className={`filter-btn ${transactionFilter === 'purchase' ? 'active' : ''}`}\n                      onClick={() => setTransactionFilter('purchase')}\n                    >\n                      🛒 Purchases\n                    </button>\n                    <button \n                      className={`filter-btn ${transactionFilter === 'sale' ? 'active' : ''}`}\n                      onClick={() => setTransactionFilter('sale')}\n                    >\n                      💰 Sales\n                    </button>\n                    <button \n                      className={`filter-btn ${transactionFilter === 'transfer' ? 'active' : ''}`}\n                      onClick={() => setTransactionFilter('transfer')}\n                    >\n                      🔄 Transfers\n                    </button>\n                    <button \n                      className={`filter-btn ${transactionFilter === 'tokens' ? 'active' : ''}`}\n                      onClick={() => setTransactionFilter('tokens')}\n                    >\n                      💸 Tokens\n                    </button>\n                  </div>\n                  \n                  <div className=\"transactions-header\">\n                    <div className=\"transactions-stats\">\n                      <div className=\"stat-item\">\n                        <span className=\"stat-value\">{sortedTransactions.length}</span>\n                        <span className=\"stat-label\">Total Found</span>\n                      </div>\n                      <div className=\"stat-item\">\n                        <span className=\"stat-value\">{transactions.length}</span>\n                        <span className=\"stat-label\">All Transactions</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"transactions-actions\">\n                      <button \n                        className=\"export-btn\"\n                        onClick={() => exportTransactions('csv')}\n                        disabled={isExporting || filteredTransactions.length === 0}\n                      >\n                        {isExporting ? '⏳' : '📊'} Export CSV\n                      </button>\n                      <button \n                        className=\"export-btn\"\n                        onClick={() => exportTransactions('json')}\n                        disabled={isExporting || filteredTransactions.length === 0}\n                      >\n                        {isExporting ? '⏳' : '📄'} Export JSON\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"transactions-controls\">\n                    <div className=\"search-section\">\n                      <div className=\"search-input-wrapper\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Search by asset name, collection, transaction ID, or address...\"\n                          value={searchQuery}\n                          onChange={(e) => {\n                            setSearchQuery(e.target.value)\n                            setCurrentPage(1) // Reset to first page when searching\n                          }}\n                          className=\"search-input\"\n                        />\n                        <span className=\"search-icon\">🔍</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"filters-section\">\n                      <div className=\"filter-group\">\n                        <label>Type:</label>\n                        <select \n                          value={transactionFilter} \n                          onChange={(e) => {\n                            setTransactionFilter(e.target.value as 'all' | 'purchase' | 'sale' | 'transfer' | 'tokens')\n                            setCurrentPage(1)\n                          }}\n                          className=\"filter-select\"\n                        >\n                          <option value=\"all\">All Types</option>\n                          <option value=\"purchase\">🛒 Purchases</option>\n                          <option value=\"sale\">💰 Sales</option>\n                          <option value=\"transfer\">🔄 Transfers</option>\n                          <option value=\"tokens\">💸 Token Transactions</option>\n                        </select>\n                      </div>\n                      \n                      <div className=\"filter-group\">\n                        <label>Date:</label>\n                        <select \n                          value={dateRange} \n                          onChange={(e) => {\n                            setDateRange(e.target.value as '7d' | '30d' | '90d' | 'all' | 'custom')\n                            setCurrentPage(1)\n                          }}\n                          className=\"filter-select\"\n                        >\n                          <option value=\"7d\">Last 7 days</option>\n                          <option value=\"30d\">Last 30 days</option>\n                          <option value=\"90d\">Last 90 days</option>\n                          <option value=\"all\">All time</option>\n                          <option value=\"custom\">📅 Custom Range</option>\n                        </select>\n                        \n                        {/* Custom Date Range Picker */}\n                        {dateRange === 'custom' && (\n                          <div className=\"custom-date-range\">\n                            <div className=\"date-input-group\">\n                              <label>From:</label>\n                              <input\n                                type=\"date\"\n                                className=\"date-input\"\n                                value={customDateRange.start}\n                                onChange={(e) => {\n                                  setCustomDateRange(prev => ({\n                                    ...prev,\n                                    start: e.target.value\n                                  }))\n                                  setCurrentPage(1)\n                                }}\n                              />\n                            </div>\n                            <div className=\"date-input-group\">\n                              <label>To:</label>\n                              <input\n                                type=\"date\"\n                                className=\"date-input\"\n                                value={customDateRange.end}\n                                onChange={(e) => {\n                                  setCustomDateRange(prev => ({\n                                    ...prev,\n                                    end: e.target.value\n                                  }))\n                                  setCurrentPage(1)\n                                }}\n                              />\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                      \n                      <div className=\"filter-group\">\n                        <label>Sort:</label>\n                        <select \n                          value={`${sortBy}-${sortOrder}`}\n                          onChange={(e) => {\n                            const [newSortBy, newSortOrder] = e.target.value.split('-') as [typeof sortBy, typeof sortOrder]\n                            setSortBy(newSortBy)\n                            setSortOrder(newSortOrder)\n                          }}\n                          className=\"filter-select\"\n                        >\n                          <option value=\"date-desc\">📅 Newest First</option>\n                          <option value=\"date-asc\">📅 Oldest First</option>\n                          <option value=\"amount-desc\">💰 Highest Amount</option>\n                          <option value=\"amount-asc\">💰 Lowest Amount</option>\n                          <option value=\"type-asc\">🔤 Type A-Z</option>\n                          <option value=\"type-desc\">🔤 Type Z-A</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Loading State */}\n                  {isLoadingTransactions && (\n                    <div className=\"loading-state\">\n                      <div className=\"loading-spinner\">⏳</div>\n                      <h3>Loading Transactions...</h3>\n                      <p>Fetching your transaction history from the blockchain.</p>\n                    </div>\n                  )}\n                  \n                  {/* Error State */}\n                  {transactionError && !isLoadingTransactions && (\n                    <div className=\"error-state\">\n                      <div className=\"error-icon\">❌</div>\n                      <h3>Failed to Load Transactions</h3>\n                      <p>{transactionError}</p>\n                      <button \n                        className=\"retry-btn\"\n                        onClick={() => loadTransactions()}\n                      >\n                        🔄 Retry\n                      </button>\n                    </div>\n                  )}\n                  \n                  {/* Export Error */}\n                  {exportError && (\n                    <div className=\"export-error\">\n                      <span className=\"error-text\">Export failed: {exportError}</span>\n                      <button \n                        className=\"dismiss-error-btn\"\n                        onClick={() => setExportError(null)}\n                      >\n                        ✕\n                      </button>\n                    </div>\n                  )}\n\n                  <div className=\"transactions-list\">\n                    {!isLoadingTransactions && !transactionError && paginatedTransactions.length === 0 ? (\n                      <div className=\"no-transactions\">\n                        <div className=\"no-transactions-icon\">📭</div>\n                        <h3>No transactions found</h3>\n                        <p>\n                          {searchQuery ? \n                            `No transactions match your search \"${searchQuery}\"` : \n                            'No transactions found for the selected filters.'\n                          }\n                        </p>\n                        {(searchQuery || transactionFilter !== 'all' || dateRange !== 'all') && (\n                          <button \n                            className=\"clear-filters-btn\"\n                            onClick={() => {\n                              setSearchQuery('')\n                              setTransactionFilter('all')\n                              setDateRange('all')\n                              setCustomDateRange({ start: '', end: '' })\n                              setCurrentPage(1)\n                            }}\n                          >\n                            Clear All Filters\n                          </button>\n                        )}\n                      </div>\n                    ) : (\n                      <>\n                        <div className=\"transactions-grid\">\n                          {paginatedTransactions.map((tx) => (\n                            <div key={tx.transaction_id} className=\"transaction-card\">\n                              <div className=\"transaction-header\">\n                                <div className=\"transaction-icon\">\n                                  {tx.type === 'purchase' && '🛒'}\n                                  {tx.type === 'sale' && '💰'}\n                                  {tx.type === 'transfer' && '🔄'}\n                                  {tx.type === 'token_send' && '📤'}\n                                  {tx.type === 'token_receive' && '📥'}\n                                  {tx.type === 'mint' && '✨'}\n                                </div>\n                                <div className=\"transaction-type-badge\">\n                                  <span className={`type-badge ${tx.type}`}>\n                                    {tx.type.charAt(0).toUpperCase() + tx.type.slice(1).replace('_', ' ')}\n                                  </span>\n                                </div>\n                                <div className=\"transaction-status\">\n                                  <span className={`status-badge ${tx.status}`}>\n                                    {tx.status === 'completed' && '✅'}\n                                    {tx.status === 'pending' && '⏳'}\n                                    {tx.status === 'failed' && '❌'}\n                                  </span>\n                                </div>\n                              </div>\n                              \n                              <div className=\"transaction-content\">\n                                <div className=\"asset-info\">\n                                  <h4 className=\"asset-name\">{tx.asset_name || 'Unknown Asset'}</h4>\n                                  {tx.collection_name && (\n                                    <span className=\"collection-name\">{tx.collection_name}</span>\n                                  )}\n                                </div>\n                                \n                                {tx.price && (\n                                  <div className=\"transaction-amount\">\n                                    <span className={`amount ${(tx.type === 'sale' || tx.type === 'token_receive') ? 'positive' : 'negative'}`}>\n                                      {(tx.type === 'sale' || tx.type === 'token_receive') ? '+' : '-'}{formatWAX(tx.price)}\n                                    </span>\n                                  </div>\n                                )}\n                                \n                                <div className=\"transaction-meta\">\n                                  <div className=\"meta-row\">\n                                    <span className=\"meta-label\">Date:</span>\n                                    <span className=\"meta-value\">{formatDate(tx.block_time)}</span>\n                                  </div>\n                                  \n                                  {tx.from && tx.from !== account && (\n                                    <div className=\"meta-row\">\n                                      <span className=\"meta-label\">From:</span>\n                                      <span className=\"meta-value address\">{tx.from}</span>\n                                    </div>\n                                  )}\n                                  \n                                  {tx.to && tx.to !== account && (\n                                    <div className=\"meta-row\">\n                                      <span className=\"meta-label\">To:</span>\n                                      <span className=\"meta-value address\">{tx.to}</span>\n                                    </div>\n                                  )}\n                                  \n                                  <div className=\"meta-row\">\n                                    <span className=\"meta-label\">TX ID:</span>\n                                    <span \n                                      className=\"meta-value transaction-id-link\"\n                                      onClick={() => navigate(`/transactions/${tx.transaction_id}`)}\n                                      title=\"View transaction details\"\n                                    >\n                                      {tx.transaction_id.slice(0, 12)}...\n                                    </span>\n                                  </div>\n                                  \n                                  {tx.memo && (\n                                    <div className=\"meta-row\">\n                                      <span className=\"meta-label\">Memo:</span>\n                                      <span className=\"meta-value memo\">{tx.memo}</span>\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                        \n                        {totalPages > 1 && (\n                          <div className=\"pagination\">\n                            <div className=\"pagination-info\">\n                              <span>\n                                Showing {startIndex + 1}-{Math.min(startIndex + transactionsPerPage, sortedTransactions.length)} of {sortedTransactions.length} transactions\n                              </span>\n                            </div>\n                            \n                            <div className=\"pagination-controls\">\n                              <button \n                                className=\"pagination-btn\"\n                                onClick={() => setCurrentPage(1)}\n                                disabled={currentPage === 1}\n                                title=\"First page\"\n                              >\n                                ⏮️\n                              </button>\n                              \n                              <button \n                                className=\"pagination-btn\"\n                                onClick={() => setCurrentPage(currentPage - 1)}\n                                disabled={currentPage === 1}\n                                title=\"Previous page\"\n                              >\n                                ⏪\n                              </button>\n                              \n                              <div className=\"page-numbers\">\n                                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                                  let pageNum\n                                  if (totalPages <= 5) {\n                                    pageNum = i + 1\n                                  } else if (currentPage <= 3) {\n                                    pageNum = i + 1\n                                  } else if (currentPage >= totalPages - 2) {\n                                    pageNum = totalPages - 4 + i\n                                  } else {\n                                    pageNum = currentPage - 2 + i\n                                  }\n                                  \n                                  return (\n                                    <button\n                                      key={pageNum}\n                                      className={`page-number ${currentPage === pageNum ? 'active' : ''}`}\n                                      onClick={() => setCurrentPage(pageNum)}\n                                    >\n                                      {pageNum}\n                                    </button>\n                                  )\n                                })}\n                              </div>\n                              \n                              <button \n                                className=\"pagination-btn\"\n                                onClick={() => setCurrentPage(currentPage + 1)}\n                                disabled={currentPage === totalPages}\n                                title=\"Next page\"\n                              >\n                                ⏩\n                              </button>\n                              \n                              <button \n                                className=\"pagination-btn\"\n                                onClick={() => setCurrentPage(totalPages)}\n                                disabled={currentPage === totalPages}\n                                title=\"Last page\"\n                              >\n                                ⏭️\n                              </button>\n                            </div>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'portfolio' && (\n                <div className=\"portfolio-tab\">\n                  <PortfolioAnalytics />\n                </div>\n              )}\n\n              {activeTab === 'pxbadges' && (\n                <PxBadges />\n              )}\n\n              {activeTab === 'network-resources' && (\n                <div className=\"network-resources-tab\">\n                  <div className=\"resources-header\">\n                    <h2>Network Resources</h2>\n                    <p>Manage your WAX account resources (CPU, NET, RAM)</p>\n                  </div>\n\n                  <div className=\"resources-grid\">\n                    <div className=\"resource-card cpu\">\n                      <div className=\"resource-header\">\n                        <div className=\"resource-icon\">⚡</div>\n                        <div className=\"resource-info\">\n                          <h3>CPU</h3>\n                          <p>Processing power for transactions</p>\n                        </div>\n                      </div>\n                      <div className=\"resource-stats\">\n                        <div className=\"usage-bar\">\n                          <div className=\"usage-fill cpu\" style={{width: resourceData ? `${(resourceData.cpu.used / resourceData.cpu.max) * 100}%` : '45%'}}></div>\n                        </div>\n                        <div className=\"usage-text\">\n                          {resourceData ? \n                            `${((resourceData.cpu.used / resourceData.cpu.max) * 100).toFixed(1)}% used (${(resourceData.cpu.used / 1000).toFixed(1)}ms / ${(resourceData.cpu.max / 1000).toFixed(1)}ms)` : \n                            '45% used (4.5ms / 10ms)'\n                          }\n                        </div>\n                      </div>\n                      <div className=\"resource-actions\">\n                        <button className=\"stake-btn\" onClick={() => openStakingModal('cpu', 'stake')}>Stake CPU</button>\n                        <button className=\"unstake-btn\" onClick={() => openStakingModal('cpu', 'unstake')}>Unstake CPU</button>\n                      </div>\n                    </div>\n\n                    <div className=\"resource-card net\">\n                      <div className=\"resource-header\">\n                        <div className=\"resource-icon\">🌐</div>\n                        <div className=\"resource-info\">\n                          <h3>NET</h3>\n                          <p>Network bandwidth for transactions</p>\n                        </div>\n                      </div>\n                      <div className=\"resource-stats\">\n                        <div className=\"usage-bar\">\n                          <div className=\"usage-fill net\" style={{width: resourceData ? `${(resourceData.net.used / resourceData.net.max) * 100}%` : '30%'}}></div>\n                        </div>\n                        <div className=\"usage-text\">\n                          {resourceData ? \n                            `${((resourceData.net.used / resourceData.net.max) * 100).toFixed(1)}% used (${(resourceData.net.used / 1024).toFixed(1)}KB / ${(resourceData.net.max / 1024).toFixed(1)}KB)` : \n                            '30% used (3KB / 10KB)'\n                          }\n                        </div>\n                      </div>\n                      <div className=\"resource-actions\">\n                        <button className=\"stake-btn\" onClick={() => openStakingModal('net', 'stake')}>Stake NET</button>\n                        <button className=\"unstake-btn\" onClick={() => openStakingModal('net', 'unstake')}>Unstake NET</button>\n                      </div>\n                    </div>\n\n                    <div className=\"resource-card ram\">\n                      <div className=\"resource-header\">\n                        <div className=\"resource-icon\">💾</div>\n                        <div className=\"resource-info\">\n                          <h3>RAM</h3>\n                          <p>Storage space for account data</p>\n                        </div>\n                      </div>\n                      <div className=\"resource-stats\">\n                        <div className=\"usage-bar\">\n                          <div className=\"usage-fill ram\" style={{width: resourceData ? `${(resourceData.ram.used / resourceData.ram.max) * 100}%` : '65%'}}></div>\n                        </div>\n                        <div className=\"usage-text\">\n                          {resourceData ? \n                            `${((resourceData.ram.used / resourceData.ram.max) * 100).toFixed(1)}% used (${(resourceData.ram.used / 1024).toFixed(1)}KB / ${(resourceData.ram.max / 1024).toFixed(1)}KB)` : \n                            '65% used (6.5KB / 10KB)'\n                          }\n                        </div>\n                      </div>\n                      <div className=\"resource-actions\">\n                        <button className=\"buy-ram-btn\" onClick={() => openRAMModal('buy')}>Buy RAM</button>\n                        <button className=\"sell-ram-btn\" onClick={() => openRAMModal('sell')}>Sell RAM</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'powerup' && (\n                <div className=\"powerup-tab\">\n                  <div className=\"powerup-header\">\n                    <h2>Powerup Resources</h2>\n                    <p>Boost your account resources for 24 hours</p>\n                  </div>\n\n                  <div className=\"powerup-stats\">\n                    <div className=\"current-usage\">\n                      <h3>Current Resource Usage</h3>\n                      <div className=\"usage-grid\">\n                        <div className=\"usage-item\">\n                          <span className=\"usage-label\">CPU:</span>\n                          <div className=\"usage-bar\">\n                            <div className=\"usage-fill\" style={{width: resourceData ? `${calculateResourceUsage(resourceData.cpu.used, resourceData.cpu.max)}%` : '0%'}}></div>\n                          </div>\n                          <span className=\"usage-percent\">{resourceData ? `${calculateResourceUsage(resourceData.cpu.used, resourceData.cpu.max).toFixed(1)}%` : '0%'}</span>\n                        </div>\n                        <div className=\"usage-item\">\n                          <span className=\"usage-label\">NET:</span>\n                          <div className=\"usage-bar\">\n                            <div className=\"usage-fill\" style={{width: resourceData ? `${calculateResourceUsage(resourceData.net.used, resourceData.net.max)}%` : '0%'}}></div>\n                          </div>\n                          <span className=\"usage-percent\">{resourceData ? `${calculateResourceUsage(resourceData.net.used, resourceData.net.max).toFixed(1)}%` : '0%'}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"powerup-form\">\n                    <div className=\"form-section\">\n                      <label>Account to Boost:</label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"Enter account name\" \n                        value={accountToBoost}\n                        onChange={(e) => setAccountToBoost(e.target.value)}\n                      />\n                    </div>\n\n                    <div className=\"form-section\">\n                      <label>WAX Amount to Spend:</label>\n                      <div className=\"amount-input-container\">\n                        <input \n                          type=\"number\" \n                          placeholder=\"0.0000\" \n                          value={powerupAmount || ''}\n                          onChange={handleInputChange}\n                          step=\"0.0001\"\n                          min=\"0\"\n                          max={parseFloat(waxBalance.split(' ')[0])}\n                        />\n                        <span className=\"wax-label\">WAX</span>\n                      </div>\n                      <div className=\"slider-container\">\n                        <input \n                          type=\"range\" \n                          min=\"0\" \n                          max=\"100\" \n                          value={parseFloat(waxBalance.split(' ')[0]) > 0 ? (powerupAmount / parseFloat(waxBalance.split(' ')[0])) * 100 : 0}\n                          onChange={handleSliderChange}\n                          className=\"slider\" \n                        />\n                        <div className=\"slider-value\">{formatWAXPrice(powerupAmount)} (Max: {waxBalance})</div>\n                      </div>\n                    </div>\n\n                    <div className=\"form-section\">\n                      <label>CPU/NET Ratio: {cpuAllocation}% CPU / {100 - cpuAllocation}% NET</label>\n                      <div className=\"progress-container\">\n                        <div className=\"progress-bar-container\">\n                          <div className=\"progress-bar cpu\" style={{width: `${cpuAllocation}%`}}></div>\n                          <div className=\"progress-bar net\" style={{width: `${100 - cpuAllocation}%`}}></div>\n                        </div>\n                        <div className=\"progress-text\">\n                          <span className=\"cpu-text\">{cpuAllocation}% CPU</span>\n                          <span className=\"separator\"> / </span>\n                          <span className=\"net-text\">{100 - cpuAllocation}% NET</span>\n                        </div>\n                      </div>\n                      <div className=\"slider-container\">\n                        <input \n                          type=\"range\" \n                          min=\"0\" \n                          max=\"100\" \n                          value={cpuAllocation}\n                          onChange={handleCpuSliderChange}\n                          className=\"slider\" \n                        />\n                      </div>\n                    </div>\n\n                    {powerupAmount > 0 && powerupState && chainInfo && (\n                      <div className=\"powerup-estimation\">\n                        <h4>Estimated Boost (24 hours):</h4>\n                        <div className=\"boost-details\">\n                          <div className=\"boost-item\">\n                            <span>CPU:</span>\n                            <span>{estimateCpuWithElasticLimit(\n                              waxToCpuFrac(powerupAmount, cpuAllocation),\n                              waxToNetFrac(powerupAmount, cpuAllocation),\n                              powerupState?.cpu,\n                              powerupState?.net,\n                              chainInfo\n                            )}</span>\n                          </div>\n                          <div className=\"boost-item\">\n                            <span>NET:</span>\n                            <span>{netCalc(\n                              predictResourceAmounts(\n                                waxToCpuFrac(powerupAmount, cpuAllocation),\n                                waxToNetFrac(powerupAmount, cpuAllocation),\n                                powerupState?.cpu,\n                                powerupState?.net\n                              ).netAmount,\n                              chainInfo\n                            )}</span>\n                          </div>\n                        </div>\n                        <div className=\"cost-info\">\n                          <div className=\"cost-item\">\n                            <span>CPU Cost:</span>\n                            <span>{predictResourceAmounts(\n                              waxToCpuFrac(powerupAmount, cpuAllocation),\n                              waxToNetFrac(powerupAmount, cpuAllocation),\n                              powerupState?.cpu,\n                              powerupState?.net\n                            ).cpuFee.toFixed(8)} WAX</span>\n                          </div>\n                          <div className=\"cost-item\">\n                            <span>NET Cost:</span>\n                            <span>{predictResourceAmounts(\n                              waxToCpuFrac(powerupAmount, cpuAllocation),\n                              waxToNetFrac(powerupAmount, cpuAllocation),\n                              powerupState?.cpu,\n                              powerupState?.net\n                            ).netFee.toFixed(8)} WAX</span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    <button \n                      className=\"powerup-btn\"\n                      disabled={!powerupAmount || powerupAmount <= 0 || !accountToBoost || txIsLoading}\n                      onClick={() => {\n                        if (powerupAmount > 0 && accountToBoost && session) {\n                          const cpuFrac = waxToCpuFrac(powerupAmount, cpuAllocation)\n                          const netFrac = waxToNetFrac(powerupAmount, cpuAllocation)\n                          submitPowerupTx(\n                            accountToBoost,\n                            powerupAmount,\n                            cpuFrac,\n                            netFrac,\n                            setTxIsLoading,\n                            session\n                          )\n                        }\n                      }}\n                    >\n                      {txIsLoading ? 'Processing...' : 'Boost Resources'}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'token-balances' && (\n                <div className=\"token-balances-tab\">\n                  <div className=\"balances-header\">\n                    <h2>Token Balances</h2>\n                    <p>View your token balances with USD values</p>\n                    <div className=\"balance-summary\">\n                      <div className=\"balance-summary-item\">\n                        <span className=\"balance-summary-label\">Total Tokens:</span>\n                        <span className=\"balance-summary-value\">{tokenBalances.length}</span>\n                      </div>\n                      <div className=\"balance-summary-item\">\n                        <span className=\"balance-summary-label\">With USD Values:</span>\n                        <span className=\"balance-summary-value\">{tokenBalances.filter(t => t.value !== 'N/A' && t.value !== '0.00').length}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"balances-controls\">\n                    <div className=\"search-sort\">\n                      <input \n                        type=\"text\" \n                        placeholder=\"Search tokens...\" \n                        className=\"search-input\"\n                      />\n                      <select className=\"sort-select\">\n                        <option value=\"balance\">Sort by Balance</option>\n                        <option value=\"value\">Sort by Value</option>\n                        <option value=\"name\">Sort by Name</option>\n                      </select>\n                    </div>\n                    <div className=\"bulk-actions\">\n                      <button className=\"select-all-btn\" onClick={handleSelectAll}>\n                        {selectedTokens.size === tokenBalances.length ? 'Deselect All' : 'Select All'}\n                      </button>\n                      <span className=\"selected-info\">{selectedTokens.size} selected</span>\n                      <button \n                        className=\"bulk-sell-btn\" \n                        onClick={handleBulkSell}\n                        disabled={selectedTokens.size === 0 || bulkSellLoading}\n                      >\n                        {bulkSellLoading ? 'Processing...' : `Bulk Sell into PXJ ${selectedTokens.size > 0 ? `(${selectedTokens.size})` : '(Coming Soon)'}`}\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"token-balances-grid\">\n                    {tokenBalances.length === 0 ? (\n                      <div className=\"no-tokens-message\">\n                        <div className=\"no-tokens-icon\">🪙</div>\n                        <h3>No Token Balances Found</h3>\n                        <p>Your account doesn't have any token balances or they're still loading.</p>\n                      </div>\n                    ) : (\n                      tokenBalances.map((token, index) => (\n                        <div key={`${token.contract}-${token.symbol}-${index}`} className=\"token-balance-card\">\n                          <div className=\"token-header\">\n                            <div className=\"token-icon\">🪙</div>\n                            <div className=\"token-details\">\n                              <h3>{token.symbol}</h3>\n                              <p className=\"token-contract\">{token.contract}</p>\n                            </div>\n                          </div>\n                          <div className=\"token-amounts\">\n                            <div className=\"token-balance\">\n                              <span className=\"balance-label\">Balance:</span>\n                              <span className=\"balance-value\">{token.balance}</span>\n                            </div>\n                            <div className=\"token-usd-value\">\n                              <span className=\"usd-label\">USD Value:</span>\n                              <span className={`usd-value ${token.value === 'N/A' ? 'unavailable' : token.value === '0.00' ? 'zero' : 'available'}`}>\n                                {token.value === 'N/A' ? 'N/A' : `$${token.value}`}\n                              </span>\n                            </div>\n                          </div>\n                          <div className=\"token-actions\">\n                            <button \n                              className=\"token-action-btn transfer\" \n                              onClick={() => openTokenTransferModal(token)}\n                            >\n                              Transfer\n                            </button>\n                            <button className=\"token-action-btn trade\" disabled>\n                              Trade\n                            </button>\n                          </div>\n                        </div>\n                      ))\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'swap' && (\n                <div className=\"swap-tab\">\n                  <div className=\"swap-tab-header\">\n                    <h2>Token Swap</h2>\n                    <p>Swap tokens directly using Alcor DEX integration</p>\n                  </div>\n                  <SwapInterface />\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n      \n      {/* Modals */}\n      <StakingModal\n        isOpen={stakingModal.isOpen}\n        onClose={closeStakingModal}\n        resourceType={stakingModal.resourceType}\n        action={stakingModal.action}\n        onSuccess={handleResourceSuccess}\n      />\n      \n      <RAMModal\n        isOpen={ramModal.isOpen}\n        onClose={closeRAMModal}\n        action={ramModal.action}\n        onSuccess={handleResourceSuccess}\n      />\n      \n      <TokenTransferModal\n        isOpen={tokenTransferModal.isOpen}\n        onClose={closeTokenTransferModal}\n        token={tokenTransferModal.token}\n        onSuccess={handleTokenTransferSuccess}\n      />\n    </div>\n  )\n}\n\nexport default UserProfile","import { useState, useCallback } from 'react';\nimport { useWallet } from '../../hooks/useWallet';\nimport { log } from '../../services/loggingService';\n\n/**\n * Custom hook to fetch account resources (CPU, NET, RAM) from WAX blockchain\n * @returns {Array} [resources, getResources, resourcesAreLoading]\n */\nexport const useGetAccountResources = () => {\n  const { account, session } = useWallet();\n  const [resources, setResources] = useState(null);\n  const [resourcesAreLoading, setResourcesAreLoading] = useState(false);\n\n  const getResources = useCallback(async (accountName = null) => {\n    if (!session && !accountName) {\n      log.warn('No wallet session or account name provided');\n      return;\n    }\n\n    const targetAccount = accountName || account;\n    if (!targetAccount) {\n      log.warn('No target account found');\n      return;\n    }\n\n    setResourcesAreLoading(true);\n\n    try {\n      // Import apiService to use endpoint rotation\n      const { apiService } = await import('../../services/api');\n      \n      // Get account info from WAX RPC using apiService\n      const accountData = await apiService.getWaxAccountInfo(targetAccount);\n      \n      if (!accountData) {\n        throw new Error('Failed to fetch account resources: No data returned');\n      }\n      \n      // Extract resource information\n      const resourceData = {\n        account_name: targetAccount,\n        cpu_limit: {\n          used: accountData.cpu_limit?.used || 0,\n          available: accountData.cpu_limit?.available || 0,\n          max: accountData.cpu_limit?.max || 0\n        },\n        net_limit: {\n          used: accountData.net_limit?.used || 0,\n          available: accountData.net_limit?.available || 0,\n          max: accountData.net_limit?.max || 0\n        },\n        ram_usage: accountData.ram_usage || 0,\n        ram_quota: accountData.ram_quota || 0,\n        total_resources: accountData.total_resources || {},\n        self_delegated_bandwidth: accountData.self_delegated_bandwidth || {},\n        refund_request: accountData.refund_request || null,\n        voter_info: accountData.voter_info || null\n      };\n\n      setResources(resourceData);\n      log.info('Account resources fetched:', resourceData);\n      \n    } catch (error) {\n      log.error('Error fetching account resources:', error);\n      setResources(null);\n    } finally {\n      setResourcesAreLoading(false);\n    }\n  }, [session, account]);\n\n  return [resources, getResources, resourcesAreLoading];\n};\n\nexport default useGetAccountResources;","import { useState, useCallback } from 'react';\n\n/**\n * Custom hook to fetch powerup state from WAX blockchain\n * @returns {Array} [powerupState, getPowerupState, powerupStateIsLoading]\n */\nexport const useGetPowerupState = () => {\n  const [powerupState, setPowerupState] = useState(null);\n  const [powerupStateIsLoading, setPowerupStateIsLoading] = useState(false);\n\n  const getPowerupState = useCallback(async () => {\n    setPowerupStateIsLoading(true);\n\n    try {\n      // Import apiService to use endpoint rotation\n      const { apiService } = await import('../../services/api');\n      \n      // Get powerup state from WAX RPC using apiService\n      const data = await apiService.getPowerupState();\n      \n      if (data.rows && data.rows.length > 0) {\n        const state = data.rows[0];\n        \n        // Structure the powerup state data\n        const powerupStateData = {\n          version: state.version || 0,\n          net: {\n            version: state.net?.version || 0,\n            weight: state.net?.weight || '0',\n            weight_ratio: state.net?.weight_ratio || '0',\n            assumed_stake_weight: state.net?.assumed_stake_weight || '0',\n            initial_weight_ratio: state.net?.initial_weight_ratio || '0',\n            target_weight_ratio: state.net?.target_weight_ratio || '0',\n            initial_timestamp: state.net?.initial_timestamp || '',\n            target_timestamp: state.net?.target_timestamp || '',\n            exponent: state.net?.exponent || 2,\n            decay_secs: state.net?.decay_secs || 86400,\n            min_price: state.net?.min_price || '0',\n            max_price: state.net?.max_price || '0',\n            utilization: state.net?.utilization || '0',\n            adjusted_utilization: state.net?.adjusted_utilization || '0',\n            utilization_timestamp: state.net?.utilization_timestamp || ''\n          },\n          cpu: {\n            version: state.cpu?.version || 0,\n            weight: state.cpu?.weight || '0',\n            weight_ratio: state.cpu?.weight_ratio || '0',\n            assumed_stake_weight: state.cpu?.assumed_stake_weight || '0',\n            initial_weight_ratio: state.cpu?.initial_weight_ratio || '0',\n            target_weight_ratio: state.cpu?.target_weight_ratio || '0',\n            initial_timestamp: state.cpu?.initial_timestamp || '',\n            target_timestamp: state.cpu?.target_timestamp || '',\n            exponent: state.cpu?.exponent || 2,\n            decay_secs: state.cpu?.decay_secs || 86400,\n            min_price: state.cpu?.min_price || '0',\n            max_price: state.cpu?.max_price || '0',\n            utilization: state.cpu?.utilization || '0',\n            adjusted_utilization: state.cpu?.adjusted_utilization || '0',\n            utilization_timestamp: state.cpu?.utilization_timestamp || ''\n          },\n          powerup_days: state.powerup_days || 1,\n          min_powerup_fee: state.min_powerup_fee || '0.0001 WAX'\n        };\n\n        setPowerupState(powerupStateData);\n      } else {\n        console.warn('No powerup state data found');\n        setPowerupState(null);\n      }\n      \n    } catch (error) {\n      console.error('Error fetching powerup state:', error);\n      setPowerupState(null);\n    } finally {\n      setPowerupStateIsLoading(false);\n    }\n  }, []);\n\n  return [powerupState, getPowerupState, powerupStateIsLoading];\n};\n\nexport default useGetPowerupState;","import { useState, useCallback } from 'react';\n\n/**\n * Custom hook to fetch chain information from WAX blockchain\n * @returns {Array} [chainInfo, getChainInfo, chainInfoIsLoading]\n */\nexport const useGetChainInfo = () => {\n  const [chainInfo, setChainInfo] = useState(null);\n  const [chainInfoIsLoading, setChainInfoIsLoading] = useState(false);\n\n  const getChainInfo = useCallback(async () => {\n    setChainInfoIsLoading(true);\n\n    try {\n      // Import apiService to use endpoint rotation\n      const { apiService } = await import('../../services/api');\n      \n      // Get chain info from WAX RPC using apiService\n      const data = await apiService.getChainInfo();\n      \n      // Structure the chain info data\n      const chainInfoData = {\n        server_version: data.server_version || '',\n        chain_id: data.chain_id || '',\n        head_block_num: data.head_block_num || 0,\n        last_irreversible_block_num: data.last_irreversible_block_num || 0,\n        last_irreversible_block_id: data.last_irreversible_block_id || '',\n        head_block_id: data.head_block_id || '',\n        head_block_time: data.head_block_time || '',\n        head_block_producer: data.head_block_producer || '',\n        virtual_block_cpu_limit: data.virtual_block_cpu_limit || 0,\n        virtual_block_net_limit: data.virtual_block_net_limit || 0,\n        block_cpu_limit: data.block_cpu_limit || 0,\n        block_net_limit: data.block_net_limit || 0,\n        server_version_string: data.server_version_string || '',\n        fork_db_head_block_num: data.fork_db_head_block_num || 0,\n        fork_db_head_block_id: data.fork_db_head_block_id || ''\n      };\n\n      setChainInfo(chainInfoData);\n      \n    } catch (error) {\n      console.error('Error fetching chain info:', error);\n      setChainInfo(null);\n    } finally {\n      setChainInfoIsLoading(false);\n    }\n  }, []);\n\n  return [chainInfo, getChainInfo, chainInfoIsLoading];\n};\n\nexport default useGetChainInfo;","import React, { useState, useEffect, useCallback } from 'react'\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport { balanceService } from '../services/balanceService'\nimport type { NFTAsset, WaxAccountInfo, WaxCurrencyBalance } from '../services/api'\nimport { badgeService } from '../services/badgeService'\nimport type { UserBadge } from '../services/badgeService'\nimport { log } from '../services/loggingService'\nimport NFTDetailsModal from './NFTDetailsModal'\nimport '../css/user-profile-lookup.css'\n\n\ninterface UserProfileData {\n  account: string\n  nftsOwned: NFTAsset[]\n  totalNFTs: number\n  collections: string[]\n  joinDate: string\n  isVerified: boolean\n  badges: string[]\n}\n\ninterface UserStats {\n  totalAssets: number\n  uniqueCollections: number\n  totalValue: string\n  rareAssets: number\n}\n\ninterface ResourceData {\n  cpu: { used: number; available: number; max: number }\n  net: { used: number; available: number; max: number }\n  ram: { used: number; available: number; max: number }\n}\n\n// Helper function to get account creation date from blockchain\nconst getAccountCreationDate = async (account: string): Promise<string> => {\n  try {\n    // Try to get account info from WAX API\n    const accountInfo = await apiService.getWaxAccountInfo(account);\n    if (accountInfo && accountInfo.created) {\n      return new Date(accountInfo.created).toISOString().split('T')[0];\n    }\n  } catch (error) {\n    log.warn('Could not fetch account creation date:', 'UserProfileLookup.getAccountCreationDate', error);\n  }\n  \n  try {\n    // Fallback: try to get first transaction date\n    const transactions = await apiService.getUserTransactions(account, 1);\n    if (transactions && transactions.length > 0) {\n      const firstTx = transactions[transactions.length - 1];\n      if (firstTx.block_time) {\n        return new Date(firstTx.block_time).toISOString().split('T')[0];\n      }\n    }\n  } catch (error) {\n    log.warn('Could not fetch first transaction date:', 'UserProfileLookup.getAccountCreationDate', error);\n  }\n  \n  // Final fallback: return a reasonable default\n  return '2023-01-01';\n};\n\nconst UserProfileLookup: React.FC = () => {\n  const { account: paramAccount } = useParams<{ account: string }>()\n  const [searchParams] = useSearchParams()\n  const navigate = useNavigate()\n  \n  // Get account from either URL params or query params\n  const account = paramAccount || searchParams.get('user')\n  const [profileData, setProfileData] = useState<UserProfileData | null>(null)\n  const [userStats, setUserStats] = useState<UserStats | null>(null)\n  const [accountInfo, setAccountInfo] = useState<WaxAccountInfo | null>(null)\n  const [waxBalance, setWaxBalance] = useState<string>('0.0000')\n  const [tokenBalances, setTokenBalances] = useState<(WaxCurrencyBalance & { value: string })[]>([])\n  const [resourceData, setResourceData] = useState<ResourceData | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [selectedNFT, setSelectedNFT] = useState<NFTAsset | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [collectionAvatars, setCollectionAvatars] = useState<Record<string, string>>({})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [filter, setFilter] = useState<'all' | 'pixals' | 'waxrock' | 'ingredients'>('all')\n  const [userBadges, setUserBadges] = useState<UserBadge[]>([])\n  const itemsPerPage = 20\n  \n  // Pixal metadata filters\n  const [pixalFilters, setPixalFilters] = useState({\n    Body: '',\n    Eyes: '',\n    Head: '',\n    Mouth: '',\n    WaxRock: '',\n    PixelPet: '',\n    Background: '',\n    'Hats and Hair': '',\n    'Glasses and Masks': '',\n    'Special Accessories': ''\n  })\n  const [availableTraits, setAvailableTraits] = useState<Record<string, string[]>>({})\n\n  const fetchTokenBalances = useCallback(async (userAccount: string) => {\n    try {\n      const tokenContracts = ['token.pxj', 'eosio.token']\n      const balances: (WaxCurrencyBalance & { value: string })[] = []\n      \n      for (const contract of tokenContracts) {\n        try {\n          const contractBalances = await apiService.getWaxCurrencyBalance(userAccount, contract)\n          const balancesWithValue = await Promise.all(contractBalances.map(async balance => ({\n            ...balance,\n            contract: contract,\n            value: await calculateTokenValue(balance.balance, balance.symbol)\n          })))\n          balances.push(...balancesWithValue)\n        } catch (error) {\n          log.error(`Failed to fetch balance for ${contract}:`, 'UserProfileLookup.fetchTokenBalances', error as Error)\n        }\n      }\n      \n      setTokenBalances(balances)\n    } catch (error) {\n      log.error('Error fetching token balances:', 'UserProfileLookup.fetchTokenBalances', error as Error)\n    }\n  }, [])\n\n  const loadUserProfile = useCallback(async () => {\n    if (!account) return\n    \n    setLoading(true)\n    setError(null)\n    \n    try {\n      // Load user's NFT inventory\n      const inventory = await apiService.getUserInventory(account)\n      \n      // Get unique collections\n      const collections = [...new Set(inventory.map(nft => nft.collection))]\n      \n      // Check for user badges\n        const badgeResult = await badgeService.checkUserBadges(account)\n        setUserBadges(badgeResult.badges)\n      \n      // Extract available traits from Pixal NFTs\n      const pixalNFTs = inventory.filter(nft => nft.collection === 'pixeljourney' && nft.schema === 'pixals')\n      const traits: Record<string, Set<string>> = {\n        Body: new Set(),\n        Eyes: new Set(),\n        Head: new Set(),\n        Mouth: new Set(),\n        WaxRock: new Set(),\n        PixelPet: new Set(),\n        Background: new Set(),\n        'Hats and Hair': new Set(),\n        'Glasses and Masks': new Set(),\n        'Special Accessories': new Set()\n      }\n      \n      pixalNFTs.forEach(nft => {\n        Object.keys(traits).forEach(trait => {\n          const value = nft.data?.[trait] as string\n          if (value && value !== 'none' && value !== '') {\n            traits[trait].add(value)\n          }\n        })\n      })\n      \n      const availableTraitsObj: Record<string, string[]> = {}\n      Object.entries(traits).forEach(([trait, values]) => {\n        availableTraitsObj[trait] = Array.from(values).sort()\n      })\n      setAvailableTraits(availableTraitsObj)\n      \n      // Load WAX Chain API data\n      await Promise.all([\n        fetchWaxAccountInfo(account),\n        fetchWaxBalance(account),\n        fetchTokenBalances(account)\n      ])\n      \n      // Get real account creation date from blockchain\n      const joinDate = await getAccountCreationDate(account);\n      \n      const profileData: UserProfileData = {\n          account,\n          nftsOwned: inventory,\n          totalNFTs: inventory.length,\n          collections,\n          joinDate,\n          isVerified: badgeResult.badges.some(badge => badge.id === 'pixal-pfp'),\n          badges: badgeResult.badges.map(badge => badge.name)\n        }\n      \n      // Calculate user stats\n      const totalValue = await calculateTotalValue(inventory)\n      const stats: UserStats = {\n        totalAssets: inventory.length,\n        uniqueCollections: collections.length,\n        totalValue,\n        rareAssets: inventory.filter(nft => nft.template_mint && nft.template_mint <= 100).length\n      }\n      \n      setProfileData(profileData)\n      setUserStats(stats)\n      \n      // Fetch collection avatars\n      if (collections.length > 0) {\n        fetchCollectionAvatars(collections)\n      }\n      \n\n    } catch (err) {\n      log.error('Error loading user profile:', 'UserProfileLookup.loadUserProfile', err as Error)\n      setError('Failed to load user profile. Please check the account name and try again.')\n    } finally {\n      setLoading(false)\n    }\n  }, [account, fetchTokenBalances])\n\n  useEffect(() => {\n    if (account) {\n      loadUserProfile()\n    }\n  }, [account, loadUserProfile])\n\n  const fetchWaxAccountInfo = async (userAccount: string) => {\n    try {\n      const accountInfo = await apiService.getWaxAccountInfo(userAccount)\n      setAccountInfo(accountInfo)\n      \n      // Extract resource data\n      if (accountInfo) {\n        const resources: ResourceData = {\n          cpu: {\n            used: accountInfo.cpu_limit.used,\n            available: accountInfo.cpu_limit.available,\n            max: accountInfo.cpu_limit.max\n          },\n          net: {\n            used: accountInfo.net_limit.used,\n            available: accountInfo.net_limit.available,\n            max: accountInfo.net_limit.max\n          },\n          ram: {\n            used: accountInfo.ram_usage,\n            available: accountInfo.ram_quota - accountInfo.ram_usage,\n            max: accountInfo.ram_quota\n          }\n        }\n        setResourceData(resources)\n      }\n    } catch (error) {\n      log.error('Failed to fetch WAX account info:', 'UserProfileLookup.fetchWaxAccountInfo', error as Error)\n    }\n  }\n\n  const fetchWaxBalance = async (userAccount: string) => {\n    try {\n      const balance = await balanceService.getWaxBalance(userAccount)\n      setWaxBalance(balance)\n    } catch (error) {\n      log.error('Failed to fetch WAX balance:', 'UserProfileLookup.fetchWaxBalance', error as Error)\n    }\n  }\n\n\n\n  const calculateTokenValue = async (balance: string, symbol: string): Promise<string> => {\n    const amount = parseFloat(balance.split(' ')[0])\n    \n    try {\n      // Get real token price from Alcor Exchange\n      const tokenContracts: Record<string, string> = {\n        'TLM': 'alien.worlds',\n        'NEFTY': 'neftyblocksp',\n        'SEST': 'sest.token'\n      }\n      \n      const contract = tokenContracts[symbol]\n      if (contract) {\n        const priceData = await apiService.getAlcorTokenPrice(symbol, contract)\n        if (priceData && priceData.usd_price) {\n          return `$${(amount * priceData.usd_price).toFixed(4)}`\n        }\n      }\n      \n      // Fallback prices if API fails\n      const fallbackPrices: Record<string, number> = {\n        'TLM': 0.02,\n        'NEFTY': 0.001,\n        'SEST': 0.0001\n      }\n      const price = fallbackPrices[symbol] || 0.001\n      return `$${(amount * price).toFixed(4)}`\n    } catch (error) {\n      log.error(`Error fetching price for ${symbol}:`, 'UserProfileLookup.fetchWaxAccountInfo', error as Error)\n      const fallbackPrices: Record<string, number> = {\n        'TLM': 0.02,\n        'NEFTY': 0.001,\n        'SEST': 0.0001\n      }\n      const price = fallbackPrices[symbol] || 0.001\n      return `$${(amount * price).toFixed(4)}`\n    }\n  }\n\n\n\n  const calculateTotalValue = async (inventory: NFTAsset[]): Promise<string> => {\n    if (inventory.length === 0) return '0.00 WAX'\n    \n    try {\n      // Group NFTs by collection for batch analysis\n      const collectionGroups = inventory.reduce((groups, nft) => {\n        const collection = nft.collection\n        if (!groups[collection]) groups[collection] = []\n        groups[collection].push(nft)\n        return groups\n      }, {} as Record<string, NFTAsset[]>)\n      \n      let totalValue = 0\n      \n      // Calculate value for each collection\n      for (const [collection, nfts] of Object.entries(collectionGroups)) {\n        try {\n          // Get collection stats including floor price\n          const stats = await apiService.getCollectionStats(collection)\n          let collectionFloorPrice = 0\n          \n          if (stats && stats.floor_price) {\n            collectionFloorPrice = parseFloat(stats.floor_price)\n          } else {\n            // Fallback: get recent sales data for the collection\n            const salesResponse = await fetch(\n              `${apiService.atomicMarketAPI}/atomicmarket/v1/sales?state=3&collection_name=${collection}&limit=50&order=desc&sort=updated`\n            )\n            const salesData = await salesResponse.json()\n            \n            if (salesData.success && salesData.data?.length > 0) {\n              interface SaleData {\n                price?: {\n                  amount: string\n                  token_precision?: number\n                }\n              }\n              \n              const prices = salesData.data\n                .filter((sale: SaleData) => sale.price?.amount)\n                .map((sale: SaleData) => parseFloat(sale.price!.amount) / Math.pow(10, sale.price!.token_precision || 8))\n              \n              if (prices.length > 0) {\n                collectionFloorPrice = Math.min(...prices)\n              }\n            }\n          }\n          \n          // If we still don't have a floor price, use a conservative estimate\n          if (collectionFloorPrice === 0) {\n            collectionFloorPrice = 1.0 // 1 WAX default for unknown collections\n          }\n          \n          // Calculate value for this collection's NFTs\n          // Use floor price as base, with adjustments for rarity\n          nfts.forEach(nft => {\n            let nftValue = collectionFloorPrice\n            \n            // Adjust for rarity based on template mint number\n            if (nft.template_mint) {\n              if (nft.template_mint <= 10) {\n                nftValue *= 3.0 // Very rare (top 10 mints)\n              } else if (nft.template_mint <= 50) {\n                nftValue *= 2.0 // Rare (top 50 mints)\n              } else if (nft.template_mint <= 100) {\n                nftValue *= 1.5 // Uncommon (top 100 mints)\n              }\n            }\n            \n            totalValue += nftValue\n          })\n          \n        } catch (error) {\n          log.warn(`Failed to get market data for collection ${collection}, using fallback pricing:`, 'UserProfileLookup.calculateTotalValue', error as Error)\n          // Fallback: use conservative estimate of 1.5 WAX per NFT\n          totalValue += nfts.length * 1.5\n        }\n      }\n      \n      return `${totalValue.toFixed(2)} WAX`\n      \n    } catch (error) {\n      log.error('Error calculating total portfolio value:', 'UserProfileLookup.calculateTotalValue', error as Error)\n      // Ultimate fallback to mock calculation\n      const fallbackValue = inventory.length * 2.0\n      return `${fallbackValue.toFixed(2)} WAX`\n    }\n  }\n\n  const getFilteredNFTs = () => {\n    if (!profileData) return []\n    \n    let filtered = profileData.nftsOwned\n    \n    switch (filter) {\n      case 'pixals':\n        filtered = filtered.filter(nft => nft.collection === 'pixeljourney' && nft.schema === 'pixals')\n        \n        // Apply Pixal metadata filters\n        Object.entries(pixalFilters).forEach(([trait, value]) => {\n          if (value && value !== '') {\n            filtered = filtered.filter(nft => {\n              const traitValue = nft.data?.[trait] as string\n              return traitValue && traitValue.toLowerCase().includes(value.toLowerCase())\n            })\n          }\n        })\n        break\n      case 'waxrock': {\n        // Fix WaxRock detection - check for Pixals with valid WaxRock traits\n        filtered = filtered.filter(nft => {\n          const waxRock = nft.data?.WaxRock as string\n          return nft.collection === 'pixeljourney' && \n                 nft.schema === 'pixals' && \n                 waxRock && \n                 waxRock !== 'none'\n        })\n        break\n      }\n      case 'ingredients':\n        filtered = filtered.filter(nft => nft.collection === 'pixeljourney' && nft.schema === 'ingredients')\n        break\n      default:\n        break\n    }\n    \n    return filtered\n  }\n\n  const getPaginatedNFTs = () => {\n    const filtered = getFilteredNFTs()\n    const startIndex = (currentPage - 1) * itemsPerPage\n    return filtered.slice(startIndex, startIndex + itemsPerPage)\n  }\n\n  const getTotalPages = () => {\n    const filtered = getFilteredNFTs()\n    return Math.ceil(filtered.length / itemsPerPage)\n  }\n\n  const handleNFTClick = (nft: NFTAsset) => {\n    setSelectedNFT(nft)\n    setIsModalOpen(true)\n  }\n\n  const fetchCollectionAvatars = async (collections: string[]) => {\n    const avatars: Record<string, string> = {}\n    \n    for (const collection of collections) {\n      try {\n        const response = await fetch(`https://aa.dapplica.io/atomicassets/v1/collections/${collection}`)\n        const data = await response.json()\n        \n        if (data.success && data.data?.img) {\n          const img = data.data.img\n          avatars[collection] = img.startsWith('http') ? img : `https://ipfs.io/ipfs/${img}`\n        }\n      } catch (error) {\n        log.error(`Error fetching avatar for collection ${collection}:`, 'UserProfileLookup.fetchCollectionAvatars', error as Error)\n      }\n    }\n    \n    setCollectionAvatars(avatars)\n  }\n\n\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false)\n    setSelectedNFT(null)\n  }\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page)\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }\n\n  if (loading) {\n    return (\n      <div className=\"user-profile-lookup\">\n        <div className=\"profile-container\">\n          <div className=\"loading-state\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading user profile...</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"user-profile-lookup\">\n        <div className=\"profile-container\">\n          <div className=\"error-state\">\n            <div className=\"error-icon\">⚠️</div>\n            <h2>Profile Not Found</h2>\n            <p>{error}</p>\n            <div className=\"error-actions\">\n              <button onClick={() => navigate(-1)} className=\"btn-secondary\">\n                Go Back\n              </button>\n              <button onClick={loadUserProfile} className=\"btn-primary\">\n                Try Again\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!profileData || !userStats) {\n    return (\n      <div className=\"user-profile-lookup\">\n        <div className=\"profile-container\">\n          <div className=\"no-data\">\n            <p>No profile data available</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const filteredNFTs = getFilteredNFTs()\n  const paginatedNFTs = getPaginatedNFTs()\n  const totalPages = getTotalPages()\n\n  return (\n    <div className=\"user-profile-lookup\">\n      <div className=\"profile-container\">\n        {/* Profile Header */}\n        <div className=\"profile-header\">\n          <div className=\"profile-avatar\">\n            <div className=\"avatar-placeholder\">\n              {account?.charAt(0).toUpperCase()}\n            </div>\n          </div>\n          <div className=\"profile-info\">\n            <h1>{account}</h1>\n            <div className=\"profile-badges\">\n              {profileData.isVerified && (\n                <span className=\"badge verified\">✓ Verified</span>\n              )}\n              {userBadges.map((badge) => (\n                <span key={badge.id} className={`badge ${badge.id}`} title={badge.description}>\n                  {badge.icon} {badge.name}\n                </span>\n              ))}\n            </div>\n          </div>\n          <div className=\"profile-stats-quick\">\n            <div className=\"stat-item\">\n              <span className=\"stat-value\">{userStats.totalAssets}</span>\n              <span className=\"stat-label\">NFTs Owned</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-value\">{userStats.uniqueCollections}</span>\n              <span className=\"stat-label\">Collections</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-value\">{userStats.rareAssets}</span>\n              <span className=\"stat-label\">Rare Assets</span>\n            </div>\n          </div>\n        </div>\n\n        {/* WAX Account Information */}\n        {accountInfo && (\n          <div className=\"account-info-section\">\n            <h3>Account Information</h3>\n            <div className=\"account-info-grid\">\n              <div className=\"user-info-card\">\n                <div className=\"info-icon\">👤</div>\n                <div className=\"info-details\">\n                  <h4>Account Name</h4>\n                  <p>{accountInfo.account_name}</p>\n                </div>\n              </div>\n              <div className=\"user-info-card\">\n                <div className=\"info-icon\">📅</div>\n                <div className=\"info-details\">\n                  <h4>Created</h4>\n                  <p>{new Date(accountInfo.created).toLocaleDateString()}</p>\n                </div>\n              </div>\n              <div className=\"user-info-card\">\n                <div className=\"info-icon\">🔑</div>\n                <div className=\"info-details\">\n                  <h4>Permissions</h4>\n                  <p>{accountInfo.permissions?.length || 0} keys</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* WAX Balance & Tokens */}\n        <div className=\"balance-section\">\n          <h3>Balances</h3>\n          <div className=\"balance-grid\">\n            <div className=\"balance-card primary\">\n              <div className=\"balance-icon\">💰</div>\n              <div className=\"balance-details\">\n                <h4>WAX Balance</h4>\n                <p className=\"balance-value\">{waxBalance}</p>\n              </div>\n            </div>\n            {tokenBalances.map((token, index) => (\n              <div key={index} className=\"balance-card\">\n                <div className=\"balance-icon\">🪙</div>\n                <div className=\"balance-details\">\n                   <h4>{token.symbol}</h4>\n                   <p className=\"balance-value\">{token.balance}</p>\n                   <p className=\"balance-usd\">{token.value}</p>\n                 </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Resources */}\n        {resourceData && (\n          <div className=\"resources-section\">\n            <h3>Resources</h3>\n            <div className=\"resources-grid\">\n              <div className=\"resource-card\">\n                <div className=\"resource-header\">\n                  <span className=\"resource-icon\">⚡</span>\n                  <h4>CPU</h4>\n                </div>\n                <div className=\"resource-bar\">\n                  <div \n                    className=\"resource-fill\" \n                    style={{ width: `${(resourceData.cpu.used / resourceData.cpu.max) * 100}%` }}\n                  ></div>\n                </div>\n                <div className=\"resource-stats\">\n                  <span>{resourceData.cpu.used.toLocaleString()} / {resourceData.cpu.max.toLocaleString()}</span>\n                  <span>{((resourceData.cpu.used / resourceData.cpu.max) * 100).toFixed(1)}%</span>\n                </div>\n              </div>\n              <div className=\"resource-card\">\n                <div className=\"resource-header\">\n                  <span className=\"resource-icon\">🌐</span>\n                  <h4>NET</h4>\n                </div>\n                <div className=\"resource-bar\">\n                  <div \n                    className=\"resource-fill\" \n                    style={{ width: `${(resourceData.net.used / resourceData.net.max) * 100}%` }}\n                  ></div>\n                </div>\n                <div className=\"resource-stats\">\n                  <span>{resourceData.net.used.toLocaleString()} / {resourceData.net.max.toLocaleString()}</span>\n                  <span>{((resourceData.net.used / resourceData.net.max) * 100).toFixed(1)}%</span>\n                </div>\n              </div>\n              <div className=\"resource-card\">\n                <div className=\"resource-header\">\n                  <span className=\"resource-icon\">💾</span>\n                  <h4>RAM</h4>\n                </div>\n                <div className=\"resource-bar\">\n                  <div \n                    className=\"resource-fill\" \n                    style={{ width: `${(resourceData.ram.used / resourceData.ram.max) * 100}%` }}\n                  ></div>\n                </div>\n                <div className=\"resource-stats\">\n                  <span>{(resourceData.ram.used / 1024).toFixed(2)} KB / {(resourceData.ram.max / 1024).toFixed(2)} KB</span>\n                  <span>{((resourceData.ram.used / resourceData.ram.max) * 100).toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Stats Cards */}\n        <div className=\"stats-grid\">\n          <div className=\"stat-card\">\n            <div className=\"stat-icon\">🎨</div>\n            <div className=\"stat-details\">\n              <h3>Total Assets</h3>\n              <p className=\"stat-value\">{userStats.totalAssets}</p>\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-icon\">📚</div>\n            <div className=\"stat-details\">\n              <h3>Collections</h3>\n              <p className=\"stat-value\">{userStats.uniqueCollections}</p>\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-icon\">💎</div>\n            <div className=\"stat-details\">\n              <h3>Estimated Value</h3>\n              <p className=\"stat-value\">{userStats.totalValue}</p>\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-icon\">⭐</div>\n            <div className=\"stat-details\">\n              <h3>Rare Assets</h3>\n              <p className=\"stat-value\">{userStats.rareAssets}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Collections List */}\n        <div className=\"collections-section\">\n          <h3>Collections ({profileData.collections.length})</h3>\n          <div className=\"collections-list\">\n            {profileData.collections.map((collection, index) => (\n              <div key={index} className=\"collection-item\" onClick={() => navigate(`/collections/${collection}`)}>\n                <div className=\"user-collection-avatar\">\n                  {collectionAvatars[collection] ? (\n                    <img \n                      src={collectionAvatars[collection]} \n                      alt={`${collection} avatar`}\n                      onError={(e) => {\n                        e.currentTarget.style.display = 'none';\n                        (e.currentTarget.nextElementSibling as HTMLElement)!.style.display = 'flex';\n                      }}\n                    />\n                  ) : null}\n                  <div className=\"fallback-avatar\" style={{ display: collectionAvatars[collection] ? 'none' : 'flex' }}>\n                    {collection.charAt(0).toUpperCase()}\n                  </div>\n                </div>\n                <span className=\"collection-name\">{collection}</span>\n                <span className=\"collection-count\">\n                  {profileData.nftsOwned.filter(nft => nft.collection === collection).length}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* NFT Inventory */}\n        <div className=\"inventory-section\">\n          <div className=\"inventory-header\">\n            <h3>NFT Inventory ({filteredNFTs.length})</h3>\n            <div className=\"filter-tabs\">\n              <button \n                className={`filter-tab ${filter === 'all' ? 'active' : ''}`}\n                onClick={() => { setFilter('all'); setCurrentPage(1) }}\n              >\n                All ({profileData.nftsOwned.length})\n              </button>\n              <button \n                className={`filter-tab ${filter === 'pixals' ? 'active' : ''}`}\n                onClick={() => { setFilter('pixals'); setCurrentPage(1) }}\n              >\n                Pixals ({profileData.nftsOwned.filter(nft => nft.collection === 'pixeljourney' && nft.schema === 'pixals').length})\n              </button>\n              <button \n                className={`filter-tab ${filter === 'waxrock' ? 'active' : ''}`}\n                onClick={() => { setFilter('waxrock'); setCurrentPage(1) }}\n              >\n                WaxRock ({profileData.nftsOwned.filter(nft => {\n                  const waxRock = nft.data?.WaxRock as string\n                  return nft.collection === 'pixeljourney' && \n                         nft.schema === 'pixals' && \n                         waxRock && \n                         waxRock !== 'none'\n                }).length})\n              </button>\n              <button \n                className={`filter-tab ${filter === 'ingredients' ? 'active' : ''}`}\n                onClick={() => { setFilter('ingredients'); setCurrentPage(1) }}\n              >\n                Ingredients ({profileData.nftsOwned.filter(nft => nft.collection === 'pixeljourney' && nft.schema === 'ingredients').length})\n              </button>\n            </div>\n            \n            {/* Pixal Metadata Filters */}\n            {filter === 'pixals' && (\n              <div className=\"pixal-filters\">\n                <h4>Filter by Traits</h4>\n                <div className=\"filters-grid\">\n                  {Object.entries(pixalFilters).map(([trait, value]) => (\n                    <div key={trait} className=\"filter-group\">\n                      <label>{trait}</label>\n                      <select\n                        value={value}\n                        onChange={(e) => {\n                          setPixalFilters(prev => ({\n                            ...prev,\n                            [trait]: e.target.value\n                          }))\n                          setCurrentPage(1)\n                        }}\n                      >\n                        <option value=\"\">All {trait}</option>\n                        {availableTraits[trait]?.map(traitValue => (\n                          <option key={traitValue} value={traitValue}>\n                            {traitValue}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  ))}\n                </div>\n                <button \n                  className=\"clear-filters-btn\"\n                  onClick={() => {\n                    setPixalFilters({\n                      Body: '',\n                      Eyes: '',\n                      Head: '',\n                      Mouth: '',\n                      WaxRock: '',\n                      PixelPet: '',\n                      Background: '',\n                      'Hats and Hair': '',\n                      'Glasses and Masks': '',\n                      'Special Accessories': ''\n                    })\n                    setCurrentPage(1)\n                  }}\n                >\n                  Clear All Filters\n                </button>\n              </div>\n            )}\n          </div>\n\n          {paginatedNFTs.length === 0 ? (\n            <div className=\"empty-inventory\">\n              <div className=\"empty-icon\">📦</div>\n              <h3>No NFTs Found</h3>\n              <p>This user doesn't have any NFTs in the selected category.</p>\n            </div>\n          ) : (\n            <>\n              <div className=\"nft-grid\">\n                {paginatedNFTs.map((nft) => (\n                  <div key={nft.asset_id} className=\"nft-card\" onClick={() => handleNFTClick(nft)}>\n                    <div className=\"nft-image\">\n                      {nft.video ? (\n                        <video \n                          src={nft.video} \n                          className=\"nft-media\"\n                          muted \n                          loop\n                          onMouseEnter={(e) => e.currentTarget.play()}\n                          onMouseLeave={(e) => e.currentTarget.pause()}\n                          onError={(e) => {\n                            // Fallback to image if video fails\n                            const img = document.createElement('img')\n                            img.src = nft.image\n                            img.className = 'nft-media'\n                            img.alt = nft.name\n                            img.loading = 'lazy'\n                            e.currentTarget.parentNode?.replaceChild(img, e.currentTarget)\n                          }}\n                        />\n                      ) : (\n                        <img src={nft.image} alt={nft.name} className=\"nft-media\" loading=\"lazy\" />\n                      )}\n                    </div>\n                    <div className=\"nft-info\">\n                      <h4 className=\"nft-name\">{nft.name}</h4>\n                      <p className=\"nft-collection\">{nft.collection}</p>\n                      <div className=\"nft-schema-template\">\n                        <span className=\"nft-schema\">{nft.schema}</span>\n                        {nft.template_id && (\n                          <span className=\"nft-template\">T#{nft.template_id}</span>\n                        )}\n                      </div>\n                      <div className=\"nft-details\">\n                        <span className=\"nft-mint\">#{nft.template_mint}</span>\n                        {nft.max_supply && parseInt(nft.max_supply) > 0 && (\n                          <span className=\"nft-supply\">/{nft.max_supply}</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Pagination */}\n              {totalPages > 1 && (\n                <div className=\"pagination\">\n                  <button \n                    className=\"pagination-btn\" \n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1}\n                  >\n                    Previous\n                  </button>\n                  \n                  <div className=\"pagination-numbers\">\n                    {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                      let pageNum\n                      if (totalPages <= 5) {\n                        pageNum = i + 1\n                      } else if (currentPage <= 3) {\n                        pageNum = i + 1\n                      } else if (currentPage >= totalPages - 2) {\n                        pageNum = totalPages - 4 + i\n                      } else {\n                        pageNum = currentPage - 2 + i\n                      }\n                      \n                      return (\n                        <button\n                          key={pageNum}\n                          className={`pagination-number ${currentPage === pageNum ? 'active' : ''}`}\n                          onClick={() => handlePageChange(pageNum)}\n                        >\n                          {pageNum}\n                        </button>\n                      )\n                    })}\n                  </div>\n                  \n                  <button \n                    className=\"pagination-btn\" \n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages}\n                  >\n                    Next\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* NFT Details Modal */}\n      {selectedNFT && (\n        <NFTDetailsModal\n          nft={selectedNFT}\n          isOpen={isModalOpen}\n          onClose={handleCloseModal}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default UserProfileLookup","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { apiService } from '../services/api'\nimport { NeftyBlendService } from '../services/neftyBlendService'\nimport NFTDetailsModal from './NFTDetailsModal'\nimport UnpackModal from './UnpackModal'\nimport MediaRenderer from './MediaRenderer'\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { useNotifications } from '../hooks/useNotifications'\nimport '../css/inventory-page.css'\nimport '../css/packs-page.css'\n\nexport interface PackNFT {\n  asset_id: string\n  name: string\n  img: string\n  video?: string\n  collection: {\n    name: string\n    collection_name: string\n  }\n  schema: {\n    schema_name: string\n  }\n  template: {\n    template_id: string\n    max_supply: string\n  }\n  data: Record<string, string | number | boolean | null | undefined>\n  mint_number?: number\n}\n\nconst Packs: React.FC = () => {\n  const { settings } = useDisplaySettings()\n  const { showSuccess, showError } = useNotifications()\n  \n  const [packs, setPacks] = useState<PackNFT[]>([])\n  const [loading, setLoading] = useState(false)\n  const [selectedNft, setSelectedNft] = useState<PackNFT | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n  const [isMultiSelectMode, setIsMultiSelectMode] = useState(false)\n  const [showUnpackModal, setShowUnpackModal] = useState(false)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [hasMoreNFTs, setHasMoreNFTs] = useState(false)\n  const [apiPage, setApiPage] = useState(1)\n\n  const { isConnected, account, login, session } = useWallet()\n\n  const itemsPerPage = 20\n\n  // Debounce search term\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm)\n    }, 300)\n\n    return () => clearTimeout(timer)\n  }, [searchTerm])\n\n  const loadPacks = useCallback(async (page = 1, append = false) => {\n    if (!account) return\n    \n    if (page === 1) {\n      setLoading(true)\n    }\n    \n    try {\n      const response = await apiService.getUserInventoryPaginated(account, page, 100)\n      \n      // Convert API response to PackNFT format and filter for packs only\n      const allNFTs: PackNFT[] = response.assets.map(nft => ({\n        asset_id: nft.asset_id,\n        name: nft.name,\n        img: nft.image,\n        video: nft.video || (nft.traits?.video as string) || undefined,\n        collection: {\n          name: nft.collection,\n          collection_name: nft.collection\n        },\n        schema: {\n          schema_name: nft.schema\n        },\n        template: {\n          template_id: nft.template_id?.toString() || '0',\n          max_supply: (nft.max_supply || 0).toString()\n        },\n        data: nft.traits || {},\n        mint_number: nft.template_mint\n      }))\n      \n      // Filter only pack NFTs\n      const packNFTs = allNFTs.filter(nft => NeftyBlendService.isPackNFT(nft))\n      \n      if (append) {\n        setPacks(prev => [...prev, ...packNFTs])\n      } else {\n        setPacks(packNFTs)\n        setCurrentPage(1)\n      }\n      \n      setHasMoreNFTs(response.assets.length === 100)\n      setApiPage(page)\n    } catch (error) {\n      console.error('Error loading packs:', error)\n      showError('Failed to load pack inventory')\n    } finally {\n      setLoading(false)\n    }\n  }, [account, showError])\n\n  useEffect(() => {\n    if (isConnected && account) {\n      loadPacks(1, false)\n    } else {\n      setPacks([])\n    }\n  }, [isConnected, account, loadPacks])\n\n  // Filter packs based on search term\n  const filteredPacks = useMemo(() => {\n    if (!debouncedSearchTerm) return packs\n    \n    const searchLower = debouncedSearchTerm.toLowerCase()\n    return packs.filter(pack => \n      pack.name.toLowerCase().includes(searchLower) ||\n      pack.collection.collection_name.toLowerCase().includes(searchLower) ||\n      pack.schema.schema_name.toLowerCase().includes(searchLower)\n    )\n  }, [packs, debouncedSearchTerm])\n\n  // Paginate filtered packs\n  const paginatedPacks = useMemo(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage\n    const endIndex = startIndex + itemsPerPage\n    return filteredPacks.slice(startIndex, endIndex)\n  }, [filteredPacks, currentPage, itemsPerPage])\n\n  const totalPages = Math.ceil(filteredPacks.length / itemsPerPage)\n  const filteredCount = filteredPacks.length\n\n  const handleNFTClick = (pack: PackNFT) => {\n    if (isMultiSelectMode) {\n      const newSelected = new Set(selectedItems)\n      if (newSelected.has(pack.asset_id)) {\n        newSelected.delete(pack.asset_id)\n      } else {\n        newSelected.add(pack.asset_id)\n      }\n      setSelectedItems(newSelected)\n    } else {\n      setSelectedNft(pack)\n      setIsModalOpen(true)\n    }\n  }\n\n  const handleBulkUnpack = () => {\n    if (selectedItems.size === 0) return\n    setShowUnpackModal(true)\n  }\n\n  const handleLoadMore = () => {\n    if (hasMoreNFTs) {\n      loadPacks(apiPage + 1, true)\n    }\n  }\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page)\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }\n\n  const toggleMultiSelect = () => {\n    setIsMultiSelectMode(!isMultiSelectMode)\n    setSelectedItems(new Set())\n  }\n\n  if (!isConnected) {\n    return (\n      <div className=\"page-content\">\n        <div className=\"page-header\">\n          <h1>Pack Inventory</h1>\n          <p>Manage and unpack your NFT packs</p>\n        </div>\n        <div className=\"connect-wallet-prompt\">\n          <div className=\"connect-card\">\n            <h3>Connect Your Wallet</h3>\n            <p>Connect your WAX wallet to view your pack inventory</p>\n            <button className=\"connect-btn\" onClick={login}>\n              Connect Wallet\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"page-content packs-page\">\n      <div className=\"page-header\">\n        <h1>Pack Inventory</h1>\n        <p>Manage and unpack your NFT packs, chests, boxes, and containers</p>\n      </div>\n\n      {/* Search and Controls */}\n      <div className=\"inventory-controls\">\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search packs...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n        \n        <div className=\"control-buttons\">\n          <button \n            className={`multi-select-btn ${isMultiSelectMode ? 'active' : ''}`}\n            onClick={toggleMultiSelect}\n          >\n            {isMultiSelectMode ? '✓ Multi-Select' : 'Multi-Select'}\n          </button>\n          \n          {isMultiSelectMode && selectedItems.size > 0 && (\n            <button className=\"bulk-btn unpack-btn\" onClick={handleBulkUnpack}>\n              📦 Unpack ({selectedItems.size})\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Loading State */}\n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading your packs...</p>\n        </div>\n      )}\n\n      {/* Pack Grid */}\n      {!loading && (\n        <>\n          <div className=\"inventory-page-stats\">\n            <p>{filteredCount} packs found</p>\n          </div>\n          \n          {packs.length > 0 ? (\n            <>\n              <div className=\"inventory-page-grid\">\n                {paginatedPacks.map((pack) => (\n                  <div\n                    key={pack.asset_id}\n                    className={`nft-card ${\n                      isMultiSelectMode && selectedItems.has(pack.asset_id) ? 'selected' : ''\n                    }`}\n                    onClick={() => handleNFTClick(pack)}\n                  >\n                    {isMultiSelectMode && (\n                      <div className=\"selection-checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedItems.has(pack.asset_id)}\n                          onChange={() => {}}\n                        />\n                      </div>\n                    )}\n                    \n                    <div className=\"nft-image-container\">\n                      <MediaRenderer\n                          imageUrl={getAssetImageUrl({ img: pack.img })}\n                          videoUrl={pack.video ? getAssetVideoUrl({ video: pack.video }) : undefined}\n                          alt={pack.name}\n                          className=\"w-full h-full object-cover\"\n                          controls={settings.showVideoControls}\n                          autoPlay={settings.autoPlayVideos}\n                          muted={settings.muteVideos}\n                        />\n                      \n                      <div className=\"pack-indicator\">\n                        📦 Pack\n                      </div>\n                    </div>\n                    \n                    <div className=\"nft-info\">\n                      <h3 className=\"nft-name\">{pack.name}</h3>\n                      <p className=\"nft-collection\">{typeof pack.collection === 'string' ? pack.collection : pack.collection?.collection_name || pack.collection?.name || 'Unknown'}</p>\n                      <p className=\"nft-schema\">{pack.schema.schema_name}</p>\n                      {pack.mint_number && (\n                        <p className=\"nft-mint\">Mint #{pack.mint_number}</p>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Load More Button */}\n              {hasMoreNFTs && (\n                <div className=\"load-more-container\">\n                  <button className=\"load-more-btn\" onClick={handleLoadMore}>\n                    Load More Packs\n                  </button>\n                </div>\n              )}\n\n              {/* Pagination */}\n              {totalPages > 1 && (\n                <div className=\"pagination-container\">\n                  <div className=\"pagination\">\n                    <button\n                      className=\"pagination-btn\"\n                      onClick={() => handlePageChange(currentPage - 1)}\n                      disabled={currentPage === 1}\n                    >\n                      Previous\n                    </button>\n                    \n                    {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                      const page = i + 1\n                      return (\n                        <button\n                          key={page}\n                          className={`pagination-btn ${currentPage === page ? 'active' : ''}`}\n                          onClick={() => handlePageChange(page)}\n                        >\n                          {page}\n                        </button>\n                      )\n                    })}\n                    \n                    <button\n                      className=\"pagination-btn\"\n                      onClick={() => handlePageChange(currentPage + 1)}\n                      disabled={currentPage === totalPages}\n                    >\n                      Next\n                    </button>\n                  </div>\n                  \n                  <div className=\"pagination-info\">\n                    Page {currentPage} of {totalPages}\n                  </div>\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">📦</div>\n              <h3>No Packs Found</h3>\n              <p>You don't have any pack NFTs in your inventory yet.</p>\n              <p>Packs, chests, boxes, and containers will appear here when you acquire them.</p>\n            </div>\n          )}\n        </>\n      )}\n\n      {/* NFT Details Modal */}\n      {selectedNft && (\n        <NFTDetailsModal\n          nft={{\n            asset_id: selectedNft.asset_id,\n            name: selectedNft.name,\n            image: selectedNft.img,\n            collection: selectedNft.collection.collection_name,\n            schema: selectedNft.schema.schema_name,\n            template_mint: selectedNft.mint_number,\n            traits: selectedNft.data,\n            price: null,\n            sale_id: null,\n            seller: null\n          }}\n          isOpen={isModalOpen}\n          onClose={() => {\n            setIsModalOpen(false)\n            setSelectedNft(null)\n          }}\n        />\n      )}\n\n      {/* Unpack Modal */}\n      <UnpackModal \n        selectedNFTs={packs.filter(pack => selectedItems.has(pack.asset_id))}\n        isOpen={showUnpackModal}\n        onClose={() => {\n          setShowUnpackModal(false)\n        }}\n        userAccount={account || ''}\n        walletSession={session}\n        onUnpackComplete={() => {\n          setSelectedItems(new Set())\n          setIsMultiSelectMode(false)\n          loadPacks(1, false)\n          showSuccess('Packs unpacked successfully!')\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Packs","import React, { useState, useEffect } from 'react'\nimport type { NFTAsset } from '../services/api'\nimport { priceService } from '../services/priceService'\nimport { watchlistService } from '../services/watchlistService'\n\nimport { log } from '../services/loggingService'\nimport '../css/watchlist.css'\n\ninterface WatchlistItem {\n  nft: NFTAsset\n  targetPrice?: number\n  alertType: 'below' | 'above' | 'any'\n  addedAt: number\n  lastPrice: number\n  priceChange?: number\n}\n\nconst Watchlist: React.FC = () => {\n  const [watchlistItems, setWatchlistItems] = useState<WatchlistItem[]>([])\n  const [loading, setLoading] = useState(true)\n  const [usdPrices, setUsdPrices] = useState<Record<string, string>>({})\n  const [showAddAlert, setShowAddAlert] = useState<string | null>(null)\n  const [alertPrice, setAlertPrice] = useState('')\n  const [alertType, setAlertType] = useState<'below' | 'above' | 'any'>('below')\n\n  useEffect(() => {\n    loadWatchlist()\n  }, [])\n\n  useEffect(() => {\n    const loadUsdPrices = async () => {\n      const prices: Record<string, string> = {}\n      for (const item of watchlistItems) {\n        if (item.nft.price) {\n          prices[item.nft.asset_id] = await priceService.convertWaxToUSDAsync(item.nft.price)\n        }\n      }\n      setUsdPrices(prices)\n    }\n    \n    if (watchlistItems.length > 0) {\n      loadUsdPrices()\n    }\n  }, [watchlistItems])\n\n  const loadWatchlist = async () => {\n    try {\n      setLoading(true)\n      const items = await watchlistService.getWatchlist()\n      setWatchlistItems(items)\n    } catch (error) {\n      log.error('Error loading watchlist', 'Watchlist', error as Error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const removeFromWatchlist = async (assetId: string) => {\n    try {\n      await watchlistService.removeFromWatchlist(assetId)\n      setWatchlistItems(prev => prev.filter(item => item.nft.asset_id !== assetId))\n    } catch (error) {\n      log.error('Error removing from watchlist', 'Watchlist', error as Error)\n    }\n  }\n\n  const addPriceAlert = async (assetId: string) => {\n    if (!alertPrice) return\n    \n    try {\n      await watchlistService.setPriceAlert(assetId, {\n        targetPrice: parseFloat(alertPrice),\n        alertType,\n        enabled: true\n      })\n      \n      // Update local state\n      setWatchlistItems(prev => prev.map(item => \n        item.nft.asset_id === assetId \n          ? { ...item, targetPrice: parseFloat(alertPrice), alertType }\n          : item\n      ))\n      \n      setShowAddAlert(null)\n      setAlertPrice('')\n    } catch (error) {\n      log.error('Error adding price alert', 'Watchlist', error as Error)\n    }\n  }\n\n  const removePriceAlert = async (assetId: string) => {\n    try {\n      await watchlistService.removePriceAlert(assetId)\n      setWatchlistItems(prev => prev.map(item => \n        item.nft.asset_id === assetId \n          ? { ...item, targetPrice: undefined, alertType: 'any' }\n          : item\n      ))\n    } catch (error) {\n      log.error('Error removing price alert', 'Watchlist', error as Error)\n    }\n  }\n\n  const getPriceChangeColor = (change?: number) => {\n    if (!change) return 'var(--text-secondary)'\n    return change > 0 ? 'var(--success-color)' : 'var(--error-color)'\n  }\n\n  const getPriceChangeIcon = (change?: number) => {\n    if (!change) return ''\n    return change > 0 ? '↗' : '↘'\n  }\n\n  if (loading) {\n    return (\n      <div className=\"watchlist-container\">\n        <div className=\"watchlist-loading\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading your watchlist...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"watchlist-container\">\n      <div className=\"watchlist-header\">\n        <h1>My Watchlist</h1>\n        <p className=\"watchlist-subtitle\">\n          Track your favorite NFTs and get notified when prices change\n        </p>\n      </div>\n\n      {watchlistItems.length === 0 ? (\n        <div className=\"watchlist-empty\">\n          <div className=\"empty-icon\">👁️</div>\n          <h3>Your watchlist is empty</h3>\n          <p>Add NFTs to your watchlist from the marketplace to track their prices</p>\n          <a href=\"/marketplace\" className=\"btn-primary\">\n            Browse Marketplace\n          </a>\n        </div>\n      ) : (\n        <div className=\"watchlist-grid\">\n          {watchlistItems.map((item) => (\n            <div key={item.nft.asset_id} className=\"watchlist-card\">\n              <div className=\"watchlist-card-image\">\n                <img \n                  src={item.nft.image} \n                  alt={item.nft.name}\n                  onError={(e) => {\n                    const target = e.target as HTMLImageElement\n                    target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n                  }}\n                />\n                {item.targetPrice && (\n                  <div className=\"alert-badge\">\n                    <span className=\"alert-icon\">🔔</span>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"watchlist-card-content\">\n                <h3 className=\"nft-name\">{item.nft.name}</h3>\n                <p className=\"nft-collection\">{item.nft.collection}</p>\n                \n                <div className=\"price-info\">\n                  <div className=\"current-price\">\n                    <span className=\"price-label\">Current Price:</span>\n                    <div className=\"price-values\">\n                      <span className=\"wax-price\">{item.nft.price} WAX</span>\n                      {usdPrices[item.nft.asset_id] && (\n                        <span className=\"usd-price\">${usdPrices[item.nft.asset_id]}</span>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {item.priceChange !== undefined && (\n                    <div className=\"price-change\" style={{ color: getPriceChangeColor(item.priceChange) }}>\n                      <span className=\"change-icon\">{getPriceChangeIcon(item.priceChange)}</span>\n                      <span>{Math.abs(item.priceChange).toFixed(2)}%</span>\n                    </div>\n                  )}\n                </div>\n                \n                {item.targetPrice && (\n                  <div className=\"price-alert-info\">\n                    <span className=\"alert-label\">Alert when price is {item.alertType}:</span>\n                    <span className=\"alert-price\">{item.targetPrice} WAX</span>\n                  </div>\n                )}\n                \n                <div className=\"watchlist-actions\">\n                  {item.targetPrice ? (\n                    <button \n                      className=\"btn-secondary btn-sm\"\n                      onClick={() => removePriceAlert(item.nft.asset_id)}\n                    >\n                      Remove Alert\n                    </button>\n                  ) : (\n                    <button \n                      className=\"btn-primary btn-sm\"\n                      onClick={() => setShowAddAlert(item.nft.asset_id)}\n                    >\n                      Add Price Alert\n                    </button>\n                  )}\n                  \n                  <button \n                    className=\"btn-danger btn-sm\"\n                    onClick={() => removeFromWatchlist(item.nft.asset_id)}\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n              \n              {showAddAlert === item.nft.asset_id && (\n                <div className=\"price-alert-form\">\n                  <h4>Set Price Alert</h4>\n                  <div className=\"form-group\">\n                    <label>Alert Type:</label>\n                    <select \n                      value={alertType} \n                      onChange={(e) => setAlertType(e.target.value as 'below' | 'above' | 'any')}\n                    >\n                      <option value=\"below\">Price drops below</option>\n                      <option value=\"above\">Price rises above</option>\n                      <option value=\"any\">Any price change</option>\n                    </select>\n                  </div>\n                  \n                  {alertType !== 'any' && (\n                    <div className=\"form-group\">\n                      <label>Target Price (WAX):</label>\n                      <input \n                        type=\"number\" \n                        step=\"0.01\" \n                        value={alertPrice}\n                        onChange={(e) => setAlertPrice(e.target.value)}\n                        placeholder=\"Enter price in WAX\"\n                      />\n                    </div>\n                  )}\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"btn-primary btn-sm\"\n                      onClick={() => addPriceAlert(item.nft.asset_id)}\n                      disabled={alertType !== 'any' && !alertPrice}\n                    >\n                      Set Alert\n                    </button>\n                    <button \n                      className=\"btn-secondary btn-sm\"\n                      onClick={() => setShowAddAlert(null)}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Watchlist","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Footer: React.FC = () => {\n  const links = [\n    {\n      title: 'Pixel Journey',\n      url: 'https://pixeljourney.xyz',\n      icon: (\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n          <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n          <path d=\"M8 14s1.5 2 4 2 4-2 4-2\"/>\n          <line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"/>\n          <line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"/>\n        </svg>\n      )\n    },\n    {\n      title: 'Documentation',\n      url: 'https://docs.pixeljourney.xyz',\n      icon: (\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n          <polyline points=\"14,2 14,8 20,8\"/>\n          <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\n          <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\n          <polyline points=\"10,9 9,9 8,9\"/>\n        </svg>\n      )\n    },\n    {\n      title: 'Discord',\n      url: 'http://discord.gg/pixel-journey-1130670500776005734',\n      icon: (\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028c.462-.63.874-1.295 1.226-1.994a.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z\"/>\n        </svg>\n      )\n    },\n    {\n      title: 'Twitter/X',\n      url: 'https://x.com/PXJourney',\n      icon: (\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"/>\n        </svg>\n      )\n    },\n\n  ]\n\n\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-container\">\n        <div className=\"footer-content\">\n          {/* Brand Section - Left */}\n          <div className=\"footer-brand\">\n            <a href=\"https://pixeljourney.xyz\" className=\"footer-logo\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <img \n                src=\"https://pixeljourney.xyz/img/logo.png\" \n                alt=\"Pixel Journey\" \n                className=\"footer-logo-image\"\n              />\n              <span className=\"footer-logo-text\">Pixel Journey</span>\n            </a>\n            <p className=\"footer-description\">\n              Explore the Pixel Journey ecosystem - a comprehensive NFT marketplace \n              and gaming platform across multiple blockchains.\n            </p>\n          </div>\n\n          {/* PXJourney across Web3 - Center */}\n          <div className=\"footer-section footer-center\">\n            <h3 className=\"footer-section-title\">PXJourney across Web3</h3>\n            <div className=\"blockchain-grid\">\n              <a href=\"https://opensea.io/collection/pixeljourney-eth\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"blockchain-item\">\n                <img src=\"https://pixeljourney.xyz/img/blockchain-icons/ethereum.svg\" alt=\"Ethereum\" className=\"blockchain-logo\" />\n                <span className=\"blockchain-name\">Ethereum</span>\n              </a>\n              <a href=\"https://opensea.io/collection/pixeljourney-polygon\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"blockchain-item\">\n                <img src=\"https://pixeljourney.xyz/img/blockchain-icons/polygon.jpeg\" alt=\"Polygon\" className=\"blockchain-logo\" />\n                <span className=\"blockchain-name\">Polygon</span>\n              </a>\n              <a href=\"https://opensea.io/collection/pixeljourney-base\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"blockchain-item\">\n                <img src=\"https://pixeljourney.xyz/img/blockchain-icons/base.jpg\" alt=\"Base\" className=\"blockchain-logo\" />\n                <span className=\"blockchain-name\">Base</span>\n              </a>\n              <a href=\"https://nft.monbase.com/collections/66c4eb2ca339b05c5a660e44/detail\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"blockchain-item\">\n                <img src=\"https://pixeljourney.xyz/img/blockchain-icons/BSC.png\" alt=\"BNB Chain\" className=\"blockchain-logo\" />\n                <span className=\"blockchain-name\">BNB Chain</span>\n              </a>\n            </div>\n            <div className=\"bridge-section\">\n              <a href=\"https://bridge.mycloudwallet.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"bridge-link\">\n                Bridge Now\n              </a>\n            </div>\n          </div>\n\n          {/* PXJourney across WAX - New Section */}\n          <div className=\"footer-section footer-wax\">\n            <h3 className=\"footer-section-title\">\n              <a href=\"https://wax.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wax-title-link\">\n                PXJourney across WAX\n              </a>\n            </h3>\n            <div className=\"wax-dapps-grid\">\n              <a href=\"https://market.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wax-dapp-item purple-glow\">\n                <span className=\"dapp-icon\">🛍️</span>\n                <span className=\"dapp-name\">PxMarket</span>\n              </a>\n              <a href=\"https://stake.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wax-dapp-item green-glow\">\n                <span className=\"dapp-icon\">🧑‍🌾</span>\n                <span className=\"dapp-name\">PxStaking</span>\n              </a>\n              <a href=\"https://lb.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wax-dapp-item golden-glow\">\n                <span className=\"dapp-icon\">🏆</span>\n                <span className=\"dapp-name\">PxLeaderboards</span>\n              </a>\n              <Link to=\"/pxcrafting\" className=\"wax-dapp-item craft-glow\">\n                <span className=\"dapp-icon\">♻️</span>\n                <span className=\"dapp-name\">PxCraft</span>\n              </Link>\n            </div>\n            <div className=\"journey-section\">\n              <Link to=\"/journeymap\" className=\"journey-link\">\n                Journey Map\n              </Link>\n            </div>\n          </div>\n\n          {/* Quick Links - Right */}\n          <div className=\"footer-section footer-right\">\n            <h4 className=\"footer-title\">Quick Links</h4>\n            <div className=\"footer-links\">\n              {links.map((link, index) => (\n                <a \n                  key={index}\n                  href={link.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"footer-link\"\n                >\n                  <span className=\"footer-link-icon\">{link.icon}</span>\n                  {link.title}\n                </a>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Footer Bottom */}\n        <div className=\"footer-bottom\">\n          <div className=\"footer-bottom-content\">\n            <p className=\"footer-copyright\">\n              © 2025 Pixel Journey. All rights reserved.\n            </p>\n            <div className=\"footer-bottom-links\">\n              <span className=\"footer-note\">\n                Requires a Pixal PFP to unlock full market access\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { useState, useEffect, useCallback } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport type { CollectionData } from '../services/api'\nimport MediaRenderer from './MediaRenderer'\nimport { useDisplaySettings } from '../hooks/useDisplaySettings'\nimport { formatWAXPrice } from '../utils/formatUtils'\nimport '../css/activity-stats.css'\n\ninterface Sale {\n  sale_id: string\n  asset_id: string\n  collection_name: string\n  schema_name: string\n  template_id: string\n  asset_name: string\n  seller: string\n  buyer: string\n  price: string\n  updated_at_time: string\n  state: number\n  image?: string\n  video?: string\n}\n\n\n\ninterface CollectionStats {\n  collection_name: string\n  assets: string\n  burned: string\n  templates: string\n  schemas: string\n  volume: string\n  sales: string\n  floor_price: string\n}\n\ninterface MarketStats {\n  total_sales: string\n  total_volume: string\n  total_assets: string\n  active_listings: string\n}\n\ninterface NFTTradingStats {\n  dailyVolume: string\n  dailySales: number\n  totalTransactions: number\n  activeListings: number\n  averagePrice: string\n  topCollectionsByVolume: TopCollection[]\n}\n\ninterface TopCollection {\n  collection_name: string\n  volume_24h: string\n  sales_24h: number\n  floor_price: string\n  assets_count: string\n}\n\ninterface RecentTrade {\n  sale_id: string\n  collection_name: string\n  asset_name: string\n  price: string\n  buyer: string\n  seller: string\n  timestamp: string\n}\n\nconst ActivityStats: React.FC = React.memo(() => {\n  const navigate = useNavigate()\n  const { settings } = useDisplaySettings()\n  const [activeTab, setActiveTab] = useState<'activity' | 'stats'>('activity')\n  const [recentSales, setRecentSales] = useState<Sale[]>([])\n  const [collectionStats, setCollectionStats] = useState<CollectionStats[]>([])\n  const [marketStats, setMarketStats] = useState<MarketStats | null>(null)\n  const [nftTradingStats, setNftTradingStats] = useState<NFTTradingStats | null>(null)\n  const [recentTrades, setRecentTrades] = useState<RecentTrade[]>([])\n  const [topCollections, setTopCollections] = useState<TopCollection[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [refreshing, setRefreshing] = useState(false)\n\n  const loadActivityData = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      // Fetch recent sales using API service\n      const salesData = await apiService.getRecentSales(50)\n      setRecentSales(salesData.map(sale => {\n        const asset = sale.assets[0]\n        return {\n          sale_id: sale.sale_id,\n          asset_id: asset?.asset_id || '',\n          collection_name: asset?.collection?.collection_name || '',\n          schema_name: asset?.schema?.schema_name || '',\n          template_id: asset?.template?.template_id || '',\n          asset_name: asset?.name || '',\n          seller: sale.seller || '',\n          buyer: sale.buyer || '',\n          price: sale.listing_price || '0',\n          updated_at_time: sale.updated_at_time || '',\n          state: sale.state || 0,\n          image: asset?.data?.img as string || undefined,\n          video: asset?.data?.video as string || undefined\n        }\n      }))\n    } catch (err) {\n      console.error('Error loading activity data:', err)\n      setError('Failed to load activity data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const loadStatsData = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      // Fetch collections using API service\n      const collectionsData = await apiService.getCollections({ limit: 20, whitelistOnly: true })\n      \n      if (collectionsData.length > 0) {\n        // Get market stats for each collection\n        const statsPromises = collectionsData.slice(0, 10).map(async (collection: CollectionData) => {\n          try {\n            const marketData = await apiService.getCollectionStats(collection.collection_name)\n            \n            return {\n              collection_name: collection.collection_name,\n              assets: '0', // CollectionData doesn't have assets count, would need separate API call\n              burned: '0', // CollectionData doesn't have burned count, would need separate API call\n              templates: '0', // CollectionData doesn't have templates count, would need separate API call\n              schemas: '0', // CollectionData doesn't have schemas count, would need separate API call\n              volume: marketData?.volume || '0',\n              sales: marketData?.sales || '0',\n              floor_price: marketData?.floor || '0'\n            }\n          } catch {\n            return {\n              collection_name: collection.collection_name,\n              assets: '0',\n              burned: '0',\n              templates: '0',\n              schemas: '0',\n              volume: '0',\n              sales: '0',\n              floor_price: '0'\n            }\n          }\n        })\n        \n        const stats = await Promise.all(statsPromises)\n        setCollectionStats(stats)\n      }\n      \n      // Fetch overall market stats using API service\n      const latestData = await apiService.getMarketStats()\n      \n      if (latestData && latestData.results && latestData.results.length > 0) {\n        const latestResult = latestData.results[latestData.results.length - 1]\n        setMarketStats({\n          total_sales: latestResult.sales || '0',\n          total_volume: latestResult.volume || '0',\n          total_assets: '0', // This would need a separate API call\n          active_listings: '0' // This would need a separate API call\n        })\n      }\n      \n      // Load NFT Trading data from AtomicAssets API\n      const [nftStats, topCollectionsData, recentTrades] = await Promise.all([\n        apiService.getNFTTradingStats(),\n        apiService.getTopCollectionsByVolume(10),\n        apiService.getRecentNFTTrades(20)\n      ])\n      \n      if (nftStats) {\n        setNftTradingStats({\n          dailyVolume: nftStats.dailyVolume || '0',\n          dailySales: nftStats.dailySales || 0,\n          totalTransactions: nftStats.totalTransactions || 0,\n          activeListings: nftStats.activeListings || 0,\n          averagePrice: nftStats.averagePrice || '0',\n          topCollectionsByVolume: topCollectionsData.map(col => ({\n            collection_name: col.collection_name,\n            volume_24h: '0',\n            sales_24h: 0,\n            floor_price: '0',\n            assets_count: '0'\n          }))\n        })\n      }\n      setTopCollections(topCollectionsData.map(col => ({\n        collection_name: col.collection_name,\n        volume_24h: '0',\n        sales_24h: 0,\n        floor_price: '0',\n        assets_count: '0'\n      })) || [])\n      setRecentTrades((recentTrades || []).map(trade => ({\n        sale_id: trade.sale_id,\n        collection_name: trade.collection_name || '',\n        asset_name: String(trade.assets?.[0]?.data?.name || trade.assets?.[0]?.template?.immutable_data?.name || 'Unknown Asset'),\n        price: String(trade.listing_price || trade.price?.amount || '0'),\n        buyer: trade.buyer || '',\n        seller: trade.seller || '',\n        timestamp: trade.updated_at_time || ''\n      })))\n      \n    } catch (err) {\n      console.error('Error loading stats data:', err)\n      setError('Failed to load statistics data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleRefresh = useCallback(async () => {\n    setRefreshing(true)\n    if (activeTab === 'activity') {\n      await loadActivityData()\n    } else {\n      await loadStatsData()\n    }\n    setRefreshing(false)\n  }, [activeTab])\n\n  const handleUserClick = useCallback((user: string) => {\n    navigate(`/user-profile-lookup?user=${encodeURIComponent(user)}`)\n  }, [navigate])\n\n  const handleAssetClick = useCallback((assetId: string) => {\n    navigate(`/assets/${assetId}`)\n  }, [navigate])\n\n  const handleCollectionClick = useCallback((collectionName: string) => {\n    navigate(`/collections/${encodeURIComponent(collectionName)}`)\n  }, [navigate])\n\n  const handleSaleClick = useCallback((saleId: string) => {\n    // For now, navigate to listing details. In the future, this could be transaction details\n    navigate(`/listings/${saleId}`)\n  }, [navigate])\n\n  const handleTradeClick = useCallback((saleId: string) => {\n    // Navigate to transaction details if we have a transaction ID, otherwise to listing\n    navigate(`/listings/${saleId}`)\n  }, [navigate])\n\n  useEffect(() => {\n    if (activeTab === 'activity') {\n      loadActivityData()\n    } else {\n      loadStatsData()\n    }\n  }, [activeTab])\n\n  const formatPrice = (price: string) => {\n    // If price is already formatted (contains WAX), return as is\n    if (typeof price === 'string' && price.includes('WAX')) {\n      return price\n    }\n    // Otherwise, handle raw price data\n    const numPrice = parseFloat(price) / 100000000\n    return formatWAXPrice(numPrice)\n  }\n\n  const formatNumber = (num: string) => {\n    const number = parseInt(num)\n    if (number >= 1000000) {\n      return `${(number / 1000000).toFixed(1)}M`\n    } else if (number >= 1000) {\n      return `${(number / 1000).toFixed(1)}K`\n    }\n    return number.toString()\n  }\n\n  const formatDate = (timestamp: string) => {\n    const date = new Date(parseInt(timestamp) * 1000)\n    return date.toLocaleString()\n  }\n\n  return (\n    <div className=\"activity-stats-page\">\n      <div className=\"activity-stats-header\">\n        <h1 className=\"activity-stats-title\">Market Activity & Statistics</h1>\n        <p className=\"activity-stats-subtitle\">Real-time marketplace data and analytics</p>\n      </div>\n\n      <div className=\"activity-stats-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'activity' ? 'active' : ''}`}\n          onClick={() => setActiveTab('activity')}\n        >\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <path d=\"M3 3v18h18\"></path>\n            <path d=\"M7 12l4-4 4 4 6-6\"></path>\n          </svg>\n          Activity Feed\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}\n          onClick={() => setActiveTab('stats')}\n        >\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n            <line x1=\"9\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n            <line x1=\"15\" y1=\"11\" x2=\"15\" y2=\"15\"></line>\n          </svg>\n          Statistics\n        </button>\n        \n        <button \n          className={`refresh-btn ${refreshing ? 'refreshing' : ''}`}\n          onClick={handleRefresh}\n          disabled={refreshing}\n        >\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <polyline points=\"23 4 23 10 17 10\"></polyline>\n            <polyline points=\"1 20 1 14 7 14\"></polyline>\n            <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>\n          </svg>\n          {refreshing ? 'Refreshing...' : 'Refresh'}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n          </svg>\n          {error}\n        </div>\n      )}\n\n      {activeTab === 'activity' && (\n        <div className=\"activity-content\">\n          <div className=\"section-header\">\n            <h2>Recent Sales</h2>\n            <p>Latest NFT sales across all collections</p>\n          </div>\n          \n          {loading ? (\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading recent sales...</p>\n            </div>\n          ) : (\n            <div className=\"sales-feed\">\n              {recentSales.map((sale) => (\n                <div key={sale.sale_id} className=\"sale-item clickable-sale\" onClick={() => handleSaleClick(sale.sale_id)}>\n                  <div className=\"sale-media\">\n                    <MediaRenderer\n                      imageUrl={sale.image}\n                      videoUrl={sale.video}\n                      alt={sale.asset_name || `Asset #${sale.asset_id}`}\n                      className=\"sale-image\"\n                      enableAnimations={settings.enableAnimatedNFTs}\n                    />\n                  </div>\n                  <div className=\"sale-info\">\n                    <div className=\"sale-asset\">\n                      <h4 \n                        className=\"clickable-asset-name\"\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          handleAssetClick(sale.asset_id)\n                        }}\n                      >\n                        {sale.asset_name || `Asset #${sale.asset_id}`}\n                      </h4>\n                      <p \n                        className=\"sale-collection clickable-collection\"\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          handleCollectionClick(sale.collection_name)\n                        }}\n                      >\n                        {sale.collection_name}\n                      </p>\n                    </div>\n                    <div className=\"sale-details\">\n                      <div className=\"sale-price\">{formatPrice(sale.price)}</div>\n                      <div className=\"sale-time\">{formatDate(sale.updated_at_time)}</div>\n                      <div className=\"sale-status\">\n                        {sale.state === 3 ? (\n                          <span className=\"status-sold\">✅ Sold</span>\n                        ) : sale.state === 2 ? (\n                          <span className=\"status-canceled\">❌ Canceled</span>\n                        ) : sale.state === 1 ? (\n                          <span className=\"status-active\">🔄 Active</span>\n                        ) : (\n                          <span className=\"status-active\">🔄 Active</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"sale-parties\">\n                    <div className=\"sale-party\">\n                      <span className=\"party-label\">Seller:</span>\n                      <span \n                        className=\"party-name clickable\" \n                        onClick={(e) => {\n                          e.stopPropagation()\n                          handleUserClick(sale.seller)\n                        }}\n                      >\n                        {sale.seller}\n                      </span>\n                    </div>\n                    <div className=\"sale-party\">\n                      <span className=\"party-label\">Buyer:</span>\n                      <span \n                        className=\"party-name clickable\" \n                        onClick={(e) => {\n                          e.stopPropagation()\n                          handleUserClick(sale.buyer)\n                        }}\n                      >\n                        {sale.buyer}\n                      </span>\n                    </div>\n                    <div className=\"sale-party\">\n                      <span className=\"party-label\">Sale ID:</span>\n                      <span \n                        className=\"sale-id-link clickable\" \n                        onClick={(e) => {\n                          e.stopPropagation()\n                          handleSaleClick(sale.sale_id)\n                        }}\n                        title=\"View sale details\"\n                      >\n                        {sale.sale_id.slice(0, 8)}...\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {recentSales.length === 0 && !loading && (\n                <div className=\"empty-state\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                    <path d=\"M12 6v6l4 2\"></path>\n                  </svg>\n                  <h3>No recent sales</h3>\n                  <p>No sales data available at the moment</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'stats' && (\n        <div className=\"stats-content\">\n          {marketStats && (\n            <div className=\"market-overview\">\n              <h2>Market Overview</h2>\n              <div className=\"stats-grid\">\n                <div className=\"stat-card\">\n                  <div className=\"stat-value\">{formatNumber(marketStats.total_sales)}</div>\n                  <div className=\"stat-label\">Total Sales</div>\n                </div>\n                <div className=\"stat-card\">\n                  <div className=\"stat-value\">{formatPrice(marketStats.total_volume)}</div>\n                  <div className=\"stat-label\">Total Volume</div>\n                </div>\n                <div className=\"stat-card\">\n                  <div className=\"stat-value\">{formatNumber(marketStats.total_assets)}</div>\n                  <div className=\"stat-label\">Total Assets</div>\n                </div>\n                <div className=\"stat-card\">\n                  <div className=\"stat-value\">{formatNumber(marketStats.active_listings)}</div>\n                  <div className=\"stat-label\">Active Listings</div>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* WAX NFT Trading Data */}\n          {nftTradingStats && (\n            <div className=\"nft-trading-stats-section\">\n              <h2>WAX NFT Trading Data</h2>\n              <div className=\"nft-stats-grid\">\n                <div className=\"stat-card nft-card\">\n                  <div className=\"stat-value\">{nftTradingStats.dailyVolume} WAX</div>\n                  <div className=\"stat-label\">24h Trading Volume</div>\n                </div>\n                <div className=\"stat-card nft-card\">\n                  <div className=\"stat-value\">{formatNumber(nftTradingStats.dailySales.toString())}</div>\n                  <div className=\"stat-label\">24h Sales</div>\n                </div>\n                <div className=\"stat-card nft-card\">\n                  <div className=\"stat-value\">{formatNumber(nftTradingStats.activeListings.toString())}</div>\n                  <div className=\"stat-label\">Active Listings</div>\n                </div>\n                <div className=\"stat-card nft-card\">\n                  <div className=\"stat-value\">{nftTradingStats.averagePrice} WAX</div>\n                  <div className=\"stat-label\">Average Sale Price</div>\n                </div>\n              </div>\n              \n              {/* Top Collections Section */}\n              {topCollections.length > 0 && (\n                <div className=\"top-collections-section\">\n                  <h3>Top Collections by Volume</h3>\n                  <div className=\"top-collections-grid\">\n                    {topCollections.slice(0, 6).map((collection) => (\n                      <div key={collection.collection_name} className=\"collection-card\">\n                        <div className=\"collection-name\">{collection.collection_name}</div>\n                        <div className=\"collection-volume\">{collection.volume_24h} WAX</div>\n                        <div className=\"collection-sales\">{collection.sales_24h} sales</div>\n                        <div className=\"collection-floor\">Floor: {collection.floor_price} WAX</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n              \n              {/* Recent Trades Section */}\n              {recentTrades.length > 0 && (\n                <div className=\"recent-trades-section\">\n                  <h3>Recent NFT Trades</h3>\n                  <div className=\"recent-trades-list\">\n                    {recentTrades.slice(0, 8).map((trade) => (\n                      <div key={trade.sale_id} className=\"trade-item clickable-trade\" onClick={() => handleTradeClick(trade.sale_id)}>\n                        <div className=\"trade-asset\">\n                          <span \n                            className=\"asset-name clickable-asset-name\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              // Note: We don't have asset_id in trade object, so we'll navigate to the sale for now\n                              handleTradeClick(trade.sale_id)\n                            }}\n                          >\n                            {trade.asset_name}\n                          </span>\n                          <span \n                            className=\"collection-name clickable-collection\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleCollectionClick(trade.collection_name)\n                            }}\n                          >\n                            {trade.collection_name}\n                          </span>\n                        </div>\n                        <div className=\"trade-price\">{trade.price} WAX</div>\n                        <div className=\"trade-time\">{formatDate(trade.timestamp)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          \n          <div className=\"section-header\">\n            <h2>Collection Statistics</h2>\n            <p>Performance metrics for top collections</p>\n          </div>\n          \n          {loading ? (\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading collection statistics...</p>\n            </div>\n          ) : (\n            <div className=\"collections-table\">\n              <div className=\"table-header\">\n                <div className=\"table-cell\">Collection</div>\n                <div className=\"table-cell\">Assets</div>\n                <div className=\"table-cell\">Volume</div>\n                <div className=\"table-cell\">Sales</div>\n                <div className=\"table-cell\">Floor Price</div>\n              </div>\n              \n              {collectionStats.map((collection) => (\n                <div key={collection.collection_name} className=\"table-row\">\n                  <div className=\"table-cell collection-name\">{collection.collection_name}</div>\n                  <div className=\"table-cell\">{formatNumber(collection.assets)}</div>\n                  <div className=\"table-cell\">{formatPrice(collection.volume)}</div>\n                  <div className=\"table-cell\">{formatNumber(collection.sales)}</div>\n                  <div className=\"table-cell\">{formatPrice(collection.floor_price)}</div>\n                </div>\n              ))}\n              \n              {collectionStats.length === 0 && !loading && (\n                <div className=\"empty-state\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                    <line x1=\"9\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n                    <line x1=\"15\" y1=\"11\" x2=\"15\" y2=\"15\"></line>\n                  </svg>\n                  <h3>No statistics available</h3>\n                  <p>Statistics data is currently unavailable</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  )\n})\n\nActivityStats.displayName = 'ActivityStats'\n\nexport default ActivityStats","// Real-time auction service for AtomicMarket integration\nimport { ErrorMessageService } from './errorMessageService'\nimport { apiService } from './api'\nimport { logger } from './loggingService'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\n\nexport interface AuctionBid {\n  bidder: string\n  bid_amount: string\n  timestamp: string\n  transaction_id?: string\n}\n\nexport interface AuctionUpdate {\n  auction_id: string\n  current_bid?: string\n  bidder?: string\n  end_time: string\n  status: 'active' | 'ended' | 'cancelled'\n  bid_count: number\n  last_bid_time?: string\n}\n\nexport interface AuctionSubscription {\n  auction_id: string\n  callback: (update: AuctionUpdate) => void\n}\n\nclass AuctionService {\n  private subscriptions: Map<string, AuctionSubscription[]> = new Map()\n  private pollInterval: NodeJS.Timeout | null = null\n  private isPolling = false\n  private readonly POLL_INTERVAL = 30000 // 30 seconds - reduced frequency\n  private readonly MAX_REQUESTS_PER_MINUTE = 30\n  private readonly REQUEST_DELAY = 2000 // 2 seconds between requests\n  private lastRequestTime = 0\n  private requestCount = 0\n  private requestResetTime = Date.now() + 60000\n  private auctionCache: Map<string, { data: AuctionUpdate; timestamp: number }> = new Map()\n  private readonly CACHE_DURATION = 15000 // 15 seconds cache\n\n  // Subscribe to auction updates\n  subscribe(auctionId: string, callback: (update: AuctionUpdate) => void): () => void {\n    if (!this.subscriptions.has(auctionId)) {\n      this.subscriptions.set(auctionId, [])\n    }\n    \n    const subscription: AuctionSubscription = { auction_id: auctionId, callback }\n    this.subscriptions.get(auctionId)!.push(subscription)\n    \n    // Start polling if not already started\n    this.startPolling()\n    \n    // Return unsubscribe function\n    return () => {\n      const subs = this.subscriptions.get(auctionId)\n      if (subs) {\n        const index = subs.indexOf(subscription)\n        if (index > -1) {\n          subs.splice(index, 1)\n        }\n        \n        // Remove auction from subscriptions if no more subscribers\n        if (subs.length === 0) {\n          this.subscriptions.delete(auctionId)\n        }\n      }\n      \n      // Stop polling if no more subscriptions\n      if (this.subscriptions.size === 0) {\n        this.stopPolling()\n      }\n    }\n  }\n\n  // Start polling for auction updates\n  private startPolling(): void {\n    if (this.isPolling) return\n    \n    this.isPolling = true\n    this.pollInterval = setInterval(() => {\n      this.pollAuctionUpdates()\n    }, this.POLL_INTERVAL)\n  }\n\n  // Stop polling\n  private stopPolling(): void {\n    if (this.pollInterval) {\n      clearInterval(this.pollInterval)\n      this.pollInterval = null\n    }\n    this.isPolling = false\n  }\n\n  // Poll for auction updates\n  private async pollAuctionUpdates(): Promise<void> {\n    const auctionIds = Array.from(this.subscriptions.keys())\n    \n    if (auctionIds.length === 0) {\n      this.stopPolling()\n      return\n    }\n\n    try {\n      // Clear expired cache entries periodically\n      this.clearExpiredCache()\n      \n      // Fetch updates for all subscribed auctions\n      const updates = await this.fetchAuctionUpdates(auctionIds)\n      \n      // Notify subscribers\n      updates.forEach(update => {\n        const subscribers = this.subscriptions.get(update.auction_id)\n        if (subscribers) {\n          subscribers.forEach(sub => {\n            try {\n              sub.callback(update)\n            } catch (error) {\n              ErrorMessageService.logError('AuctionService.pollAuctionUpdates.callback', error, {\n                auctionId: update.auction_id\n              })\n            }\n          })\n        }\n      })\n    } catch (error) {\n      ErrorMessageService.logError('AuctionService.pollAuctionUpdates', error, {\n        auctionIds\n      })\n    }\n  }\n\n  // Fetch auction updates from API with rate limiting and caching\n  private async fetchAuctionUpdates(auctionIds: string[]): Promise<AuctionUpdate[]> {\n    const updates: AuctionUpdate[] = []\n    const now = Date.now()\n    \n    // Reset request count if minute has passed\n    if (now > this.requestResetTime) {\n      this.requestCount = 0\n      this.requestResetTime = now + 60000\n    }\n    \n    for (const auctionId of auctionIds) {\n      // Check cache first\n      const cached = this.auctionCache.get(auctionId)\n      if (cached && (now - cached.timestamp) < this.CACHE_DURATION) {\n        updates.push(cached.data)\n        continue\n      }\n      \n      // Check rate limits\n      if (this.requestCount >= this.MAX_REQUESTS_PER_MINUTE) {\n        logger.warn('Rate limit reached, skipping auction', 'AUCTION', { auctionId })\n        // Use cached data if available, even if expired\n        if (cached) {\n          updates.push(cached.data)\n        }\n        continue\n      }\n      \n      // Ensure minimum delay between requests\n      const timeSinceLastRequest = now - this.lastRequestTime\n      if (timeSinceLastRequest < this.REQUEST_DELAY) {\n        await new Promise(resolve => setTimeout(resolve, this.REQUEST_DELAY - timeSinceLastRequest))\n      }\n      \n      try {\n        const url = `${apiService.getCurrentAtomicEndpoint()}/atomicmarket/v1/auctions/${auctionId}`\n        const response = await apiService.fetchWithRetry(url)\n        const data = await response.json()\n        \n        this.requestCount++\n        this.lastRequestTime = Date.now()\n        \n        if (data.success && data.data) {\n          const auction = data.data\n          const update: AuctionUpdate = {\n            auction_id: auctionId,\n            current_bid: auction.current_bid,\n            bidder: auction.current_bidder,\n            end_time: auction.end_time,\n            status: this.getAuctionStatus(auction),\n            bid_count: auction.bid_count || 0,\n            last_bid_time: auction.updated_at_time\n          }\n          \n          // Cache the result\n          this.auctionCache.set(auctionId, {\n            data: update,\n            timestamp: Date.now()\n          })\n          \n          updates.push(update)\n        }\n      } catch (error) {\n        ErrorMessageService.logError('AuctionService.fetchAuctionUpdates.single', error, {\n          auctionId\n        })\n        \n        // Use cached data if available on error\n        if (cached) {\n          updates.push(cached.data)\n        }\n      }\n    }\n    \n    return updates\n  }\n\n  // Determine auction status\n  private getAuctionStatus(auction: { end_time: string; state: number }): 'active' | 'ended' | 'cancelled' {\n    const now = Date.now()\n    const endTime = new Date(auction.end_time + 'Z').getTime()\n    \n    if (auction.state === 3) return 'cancelled'\n    if (now > endTime) return 'ended'\n    return 'active'\n  }\n\n  // Get auction bid history\n  async getAuctionBids(auctionId: string): Promise<AuctionBid[]> {\n    try {\n      // Get auction details first to find the seller and asset info\n      const auctionResponse = await apiService.getAuctions({ \n        limit: 1 \n      })\n      \n      if (!auctionResponse.success || !auctionResponse.data.length) {\n        return []\n      }\n      \n      const auction = auctionResponse.data[0]\n      const assetIds = auction.assets.map(asset => asset.asset_id)\n      \n      // Query Hyperion for auction bid transactions\n      const bidHistory = await this.fetchAuctionBidHistory(auctionId, assetIds)\n      \n      return bidHistory.sort((a, b) => \n        new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n      )\n    } catch (error) {\n      ErrorMessageService.logError('AuctionService.getAuctionBids', error, { auctionId })\n      return []\n    }\n  }\n\n  // Fetch real auction bid history from blockchain\n  private async fetchAuctionBidHistory(auctionId: string, assetIds: string[]): Promise<AuctionBid[]> {\n    try {\n      // Query Hyperion API for atomicmarket auction bid actions\n      const hyperionEndpoints = [\n        API_ENDPOINTS.WAX_CHAIN.EOSRIO,\n        API_ENDPOINTS.WAX_CHAIN.WAXSWEDEN,\n        API_ENDPOINTS.HYPERION[2] // eosdetroit hyperion endpoint\n      ]\n      \n      for (const endpoint of hyperionEndpoints) {\n        try {\n          const response = await fetch(`${endpoint}/v2/history/get_actions?account=atomicmarket&filter=atomicmarket:auctionbid&limit=100&sort=desc&after=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()}`, {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json'\n            }\n          })\n          \n          if (!response.ok) continue\n          \n          const data = await response.json()\n          const bids: AuctionBid[] = []\n          \n          if (data.actions) {\n            for (const action of data.actions) {\n              if (action.act?.data?.auction_id === auctionId) {\n                bids.push({\n                  bidder: action.act.data.bidder || action.act.authorization?.[0]?.actor || 'unknown',\n                  bid_amount: action.act.data.bid || '0.0000 WAX',\n                  timestamp: action.timestamp,\n                  transaction_id: action.trx_id\n                })\n              }\n            }\n          }\n          \n          return bids\n        } catch (endpointError) {\n          logger.warn('Failed to fetch from endpoint', 'AUCTION', { endpoint, error: endpointError })\n          continue\n        }\n      }\n      \n      // If all endpoints fail, return empty array\n      return []\n    } catch (error) {\n      ErrorMessageService.logError('AuctionService.fetchAuctionBidHistory', error, { auctionId, assetIds })\n      return []\n    }\n  }\n\n  // Calculate time remaining for auction\n  getTimeRemaining(endTime: string): {\n    total: number\n    days: number\n    hours: number\n    minutes: number\n    seconds: number\n    isExpired: boolean\n  } {\n    const now = Date.now()\n    \n    // Handle different date formats and validate\n    let end: number\n    if (!endTime) {\n      // If no endTime provided, consider expired\n      return {\n        total: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        isExpired: true\n      }\n    }\n    \n    // Try different date parsing approaches\n    if (endTime.includes('T') && !endTime.endsWith('Z')) {\n      // ISO format without Z\n      end = new Date(endTime + 'Z').getTime()\n    } else if (endTime.includes('T') && endTime.endsWith('Z')) {\n      // ISO format with Z\n      end = new Date(endTime).getTime()\n    } else {\n      // Unix timestamp or other format\n      const timestamp = parseInt(endTime)\n      if (!isNaN(timestamp)) {\n        // If it's a valid number, treat as unix timestamp\n        end = timestamp > 1000000000000 ? timestamp : timestamp * 1000\n      } else {\n        // Try parsing as regular date\n        end = new Date(endTime).getTime()\n      }\n    }\n    \n    // Validate the parsed date\n    if (isNaN(end)) {\n      logger.warn('Invalid endTime format', 'AUCTION', { endTime })\n      return {\n        total: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        isExpired: true\n      }\n    }\n    \n    const total = end - now\n    \n    if (total <= 0) {\n      return {\n        total: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        isExpired: true\n      }\n    }\n    \n    const days = Math.floor(total / (1000 * 60 * 60 * 24))\n    const hours = Math.floor((total % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    const minutes = Math.floor((total % (1000 * 60 * 60)) / (1000 * 60))\n    const seconds = Math.floor((total % (1000 * 60)) / 1000)\n    \n    return {\n      total,\n      days,\n      hours,\n      minutes,\n      seconds,\n      isExpired: false\n    }\n  }\n\n  // Format time remaining as string\n  formatTimeRemaining(endTime: string): string {\n    const time = this.getTimeRemaining(endTime)\n    \n    if (time.isExpired) {\n      return 'Auction ended'\n    }\n    \n    if (time.days > 0) {\n      return `${time.days}d ${time.hours}h ${time.minutes}m`\n    } else if (time.hours > 0) {\n      return `${time.hours}h ${time.minutes}m ${time.seconds}s`\n    } else if (time.minutes > 0) {\n      return `${time.minutes}m ${time.seconds}s`\n    } else {\n      return `${time.seconds}s`\n    }\n  }\n\n  // Check if auction is ending soon (less than 5 minutes)\n  isEndingSoon(endTime: string): boolean {\n    const time = this.getTimeRemaining(endTime)\n    return !time.isExpired && time.total < 5 * 60 * 1000 // 5 minutes in milliseconds\n  }\n\n  // Clear expired cache entries\n  private clearExpiredCache(): void {\n    const now = Date.now()\n    for (const [auctionId, cached] of this.auctionCache.entries()) {\n      if (now - cached.timestamp > this.CACHE_DURATION * 2) {\n        this.auctionCache.delete(auctionId)\n      }\n    }\n  }\n\n  // Cleanup all subscriptions\n  cleanup(): void {\n    this.subscriptions.clear()\n    this.stopPolling()\n    this.auctionCache.clear()\n  }\n}\n\n// Export singleton instance\nexport const auctionService = new AuctionService()","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { apiService } from '../services/api'\nimport { auctionService } from '../services/auctionService'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useNotifications } from \"../hooks/useNotifications\";\nimport MediaRenderer from './MediaRenderer'\nimport { formatWAXPrice } from '../utils/formatUtils'\nimport { getAssetImageUrl, getAssetVideoUrl } from '../utils/mediaUtils'\nimport { log } from '../services/loggingService'\nimport { WharfKitService } from '../services/wharfkit'\n\nimport type { Auction } from '../types'\nimport '../css/auctions.css'\n\nconst Auctions: React.FC = React.memo(() => {\n  const navigate = useNavigate()\n  const { isConnected, account, session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  const [auctions, setAuctions] = useState<Auction[]>([])\n  const [loading, setLoading] = useState(true)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [hasMore, setHasMore] = useState(true)\n  const [totalPages, setTotalPages] = useState(1)\n  const [filter, setFilter] = useState<'all' | 'ending-soon' | 'new'>('all')\n  const [sortBy, setSortBy] = useState<'price_asc' | 'price_desc' | 'created_desc' | 'created_asc'>('created_desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedCollection, setSelectedCollection] = useState('')\n  const [hideEmptyAuctions, setHideEmptyAuctions] = useState(false)\n  const [showCreateModal, setShowCreateModal] = useState(false)\n  const [showBidModal, setShowBidModal] = useState(false)\n  const [selectedAuction, setSelectedAuction] = useState<Auction | null>(null)\n  const [bidAmount, setBidAmount] = useState('')\n  const [isPlacingBid, setIsPlacingBid] = useState(false)\n  const [isCreatingAuction, setIsCreatingAuction] = useState(false)\n  \n  // Create Auction form states\n  const [selectedAssets, setSelectedAssets] = useState<Set<string>>(new Set())\n  const [userAssets, setUserAssets] = useState<Array<{asset_id: string, name: string, image: string, collection_name: string, template_mint?: string}>>([])\n  const [isLoadingAssets, setIsLoadingAssets] = useState(false)\n  const [startingPrice, setStartingPrice] = useState('')\n  const [durationWeeks, setDurationWeeks] = useState(0)\n  const [durationDays, setDurationDays] = useState(1)\n  const [durationHours, setDurationHours] = useState(0)\n  const [durationMinutes, setDurationMinutes] = useState(0)\n  const [auctionMemo, setAuctionMemo] = useState('')\n  const [collections, setCollections] = useState<Array<{collection_name: string, name: string}>>([])  \n\n  const getSortField = useCallback(() => {\n    switch (sortBy) {\n      case 'price_asc':\n      case 'price_desc':\n        return 'price'\n      case 'created_desc':\n      case 'created_asc':\n      default:\n        return 'created'\n    }\n  }, [sortBy])\n\n  const getSortOrder = useCallback(() => {\n    switch (sortBy) {\n      case 'price_asc':\n      case 'created_asc':\n        return 'asc'\n      case 'price_desc':\n      case 'created_desc':\n      default:\n        return 'desc'\n    }\n  }, [sortBy])\n\n  const loadAuctions = useCallback(async (page: number = 1, append: boolean = false) => {\n    try {\n      if (page === 1) {\n        setLoading(true)\n        setCurrentPage(1)\n        setHasMore(true)\n      } else {\n        setLoadingMore(true)\n      }\n      setError(null)\n      \n      const response = await apiService.getAuctions({\n        state: 1, // Active auctions\n        limit: 36,\n        offset: (page - 1) * 36,\n        sort: getSortField(),\n        order: getSortOrder(),\n        hide_empty_auctions: hideEmptyAuctions,\n        search: searchTerm || undefined,\n        collection_name: selectedCollection || undefined,\n        collection_blacklist: 'flinttffunko,onlyfanzgaly,farmerpetsco,fantaspeop',\n        seller_blacklist: 'dximg.wam,xpvrs.wam,5rrrc.wam,nnmnmnmnn.gm',\n        symbol: 'WAX'\n      })\n      \n      if (!response.success || !response.data) {\n        throw new Error('Failed to fetch auctions data')\n      }\n      \n      // Use the formatted auction data from the API service\n      const formattedAuctions: Auction[] = response.data.map((auction) => ({\n        auction_id: auction.auction_id,\n        asset_id: auction.asset_id,\n        seller: auction.seller,\n        price: auction.price,\n        end_time: auction.end_time,\n        collection_name: auction.collection_name,\n        template_id: auction.template_id,\n        asset_name: auction.asset_name,\n        image: auction.image,\n        current_bid: auction.current_bid || null,\n        bidder: auction.bidder || null,\n        collection_info: undefined // Remove individual collection fetching to prevent API spam\n      }))\n      \n      if (append && page > 1) {\n        setAuctions(prev => [...prev, ...formattedAuctions])\n      } else {\n        setAuctions(formattedAuctions)\n      }\n      \n      // Update pagination state\n      const itemsPerPage = 36\n      const hasMoreData = formattedAuctions.length === itemsPerPage\n      setHasMore(hasMoreData)\n      setCurrentPage(page)\n      \n      if (hasMoreData) {\n        setTotalPages(page + 1)\n      } else {\n        setTotalPages(page)\n      }\n      \n    } catch (err) {\n      log.error('Error loading auctions', 'Auctions', err as Error)\n      setError('Failed to load auctions. Please try again later.')\n    } finally {\n      setLoading(false)\n      setLoadingMore(false)\n    }\n  }, [getSortField, getSortOrder, hideEmptyAuctions, searchTerm, selectedCollection])\n\n  const loadMoreAuctions = useCallback(() => {\n    if (!loadingMore && hasMore) {\n      loadAuctions(currentPage + 1, true)\n    }\n  }, [loadAuctions, currentPage, hasMore, loadingMore])\n\n  const resetAndLoadAuctions = useCallback(() => {\n    setCurrentPage(1)\n    setHasMore(true)\n    loadAuctions(1, false)\n  }, [loadAuctions])\n\n  useEffect(() => {\n    resetAndLoadAuctions()\n  }, [resetAndLoadAuctions, filter, searchTerm, selectedCollection, hideEmptyAuctions, sortBy])\n\n  // Load collections for filtering\n  useEffect(() => {\n    const loadCollections = async () => {\n      try {\n        const collectionsData = await apiService.getCollections({ limit: 50, whitelistOnly: true })\n        if (collectionsData && collectionsData.length > 0) {\n          const mappedCollections = collectionsData.map(col => ({\n            collection_name: col.collection_name,\n            name: col.name || col.collection_name\n          }))\n          setCollections(mappedCollections)\n        }\n      } catch (error) {\n        log.error('Failed to load collections', 'Auctions', error as Error)\n        // Fallback to default collections\n        setCollections([\n          { collection_name: 'pixeljourney', name: 'Pixel Journey' },\n          { collection_name: 'friedfactory', name: 'Fried Factory' }\n        ])\n      }\n    }\n    loadCollections()\n  }, [])\n\n  // Load user assets for auction creation\n  const loadUserAssets = async () => {\n    if (!account) return\n    \n    setIsLoadingAssets(true)\n    try {\n      const url = `${apiService.atomicAssetsAPI}/atomicassets/v1/assets?owner=${account}&limit=100`\n      const response = await apiService.fetchWithRetry(url)\n      const data = await response.json()\n      \n      if (data.success && data.data) {\n        const assets = data.data.map((asset: {asset_id: string, name?: string, collection: {collection_name: string}, template_mint?: string, data?: {img?: string}}) => ({\n          asset_id: asset.asset_id,\n          name: asset.name || `${asset.collection.collection_name} #${asset.template_mint || asset.asset_id}`,\n          collection_name: asset.collection.collection_name,\n          image: asset.data?.img ? `https://ipfs.io/ipfs/${asset.data.img}` : undefined,\n          template_mint: asset.template_mint,\n          isSelected: false\n        }))\n        setUserAssets(assets)\n      }\n    } catch (error) {\n      log.error('Error loading user assets', 'Auctions', error as Error)\n      setUserAssets([])\n    } finally {\n      setIsLoadingAssets(false)\n    }\n  }\n\n\n\n  const formatPrice = (price: string) => {\n    const waxPrice = parseFloat(price) / 100000000\n    return formatWAXPrice(waxPrice)\n  }\n\n  // Optimized filtering with useMemo\n  const filteredAuctions = useMemo(() => {\n    return auctions.filter(auction => {\n      // Search filter\n      if (searchTerm) {\n        const searchLower = searchTerm.toLowerCase()\n        const matchesSearch = \n          auction.asset_name?.toLowerCase().includes(searchLower) ||\n          auction.asset_id?.toString().includes(searchLower) ||\n          auction.collection_name?.toLowerCase().includes(searchLower)\n        if (!matchesSearch) return false\n      }\n\n      // Collection filter\n      if (selectedCollection && auction.collection_name !== selectedCollection) {\n        return false\n      }\n\n      // Hide empty auctions filter - check if auction has actual bids\n      if (hideEmptyAuctions && (!auction.bidder || !auction.current_bid || auction.current_bid === '0')) {\n        return false\n      }\n\n      return true\n    })\n  }, [auctions, searchTerm, selectedCollection, hideEmptyAuctions])\n\n  // Real-time auction updates\n  useEffect(() => {\n    const unsubscribeFunctions: (() => void)[] = []\n\n    // Subscribe to updates for all visible auctions\n    filteredAuctions.forEach(auction => {\n      const unsubscribe = auctionService.subscribe(auction.auction_id, (update) => {\n        setAuctions(prevAuctions => \n          prevAuctions.map(prevAuction => \n            prevAuction.auction_id === update.auction_id\n              ? {\n                  ...prevAuction,\n                  current_bid: update.current_bid || prevAuction.current_bid,\n                  bidder: update.bidder || prevAuction.bidder,\n                  end_time: update.end_time\n                }\n              : prevAuction\n          )\n        )\n      })\n      unsubscribeFunctions.push(unsubscribe)\n    })\n\n    // Cleanup subscriptions when component unmounts or auctions change\n    return () => {\n      unsubscribeFunctions.forEach(unsubscribe => unsubscribe())\n    }\n  }, [filteredAuctions])\n\n  const handlePlaceBid = (auction: Auction) => {\n    if (!isConnected || !account) {\n      showError('Wallet Required', 'Please connect your wallet to place bids')\n      return\n    }\n    \n    if (auction.seller === account) {\n      showError('Invalid Action', 'You cannot bid on your own auction')\n      return\n    }\n    \n    setSelectedAuction(auction)\n    setBidAmount('')\n    setShowBidModal(true)\n  }\n  \n  const submitBid = async () => {\n    if (!selectedAuction || !session || !account) {\n      showError('Error', 'Please connect your wallet first')\n      return\n    }\n    \n    const bidFloat = parseFloat(bidAmount)\n    if (isNaN(bidFloat) || bidFloat <= 0) {\n      showError('Invalid Bid', 'Please enter a valid bid amount')\n      return\n    }\n    \n    // Check if bid is valid\n    const currentBidAmount = parseFloat(selectedAuction.current_bid || selectedAuction.price) / 100000000\n    const hasExistingBids = selectedAuction.current_bid && selectedAuction.bidder\n    \n    if (hasExistingBids && bidFloat <= currentBidAmount) {\n      showError('Invalid Bid', `Bid must be higher than current bid of ${formatWAXPrice(currentBidAmount)}`)\n      return\n    } else if (!hasExistingBids && bidFloat < currentBidAmount) {\n      showError('Invalid Bid', `Bid must be at least the starting price of ${formatWAXPrice(currentBidAmount)}`)\n      return\n    }\n    \n    setIsPlacingBid(true)\n    \n    try {\n      // Format bid amount with WAX precision (8 decimals)\n      const formattedBid = bidFloat.toFixed(8)\n      const bidString = `${formattedBid} WAX`\n      \n      // Create the bid action for AtomicMarket\n      const action = {\n        account: 'atomicmarket',\n        name: 'auctionbid',\n        authorization: [{\n          actor: account,\n          permission: WharfKitService.safeGetPermission(session)\n        }],\n        data: {\n          bidder: account,\n          auction_id: selectedAuction.auction_id,\n          bid: bidString,\n          taker_marketplace: 'market.pxj'\n        }\n      }\n      \n      // Execute the transaction\n      const result = await session.transact({ actions: [action] })\n      \n      if (result) {\n        showSuccess('Bid Placed', `Successfully placed bid of ${formatWAXPrice(bidFloat)}`)\n        setShowBidModal(false)\n        setBidAmount('')\n        setSelectedAuction(null)\n        \n        // Reload auctions to show updated bid\n        loadAuctions()\n      }\n    } catch (error: unknown) {\n      log.error('Error placing bid', 'Auctions', error as Error)\n      const errorMessage = error instanceof Error ? error.message : 'Failed to place bid. Please try again.'\n      showError('Bid Failed', errorMessage)\n    } finally {\n      setIsPlacingBid(false)\n    }\n  }\n\n  const handleViewDetails = (auction: Auction) => {\n    // Navigate to asset details page\n    navigate(`/assets/${auction.asset_id}`)\n  }\n\n  const handleCreateAuction = () => {\n    setShowCreateModal(true)\n    if (account) {\n      loadUserAssets()\n    }\n  }\n\n  const toggleAssetSelection = (assetId: string) => {\n    const newSelected = new Set(selectedAssets)\n    if (newSelected.has(assetId)) {\n      newSelected.delete(assetId)\n    } else {\n      newSelected.add(assetId)\n    }\n    setSelectedAssets(newSelected)\n  }\n\n  // Calculate total duration in seconds\n  const calculateTotalDuration = () => {\n    return (durationWeeks * 7 * 24 * 60 * 60) + \n           (durationDays * 24 * 60 * 60) + \n           (durationHours * 60 * 60) + \n           (durationMinutes * 60)\n  }\n\n  // Update duration handlers\n  const updateDurationComponent = (component: 'weeks' | 'days' | 'hours' | 'minutes', value: number) => {\n    const clampedValue = Math.max(0, Math.min(value, getMaxValue(component)))\n    \n    switch (component) {\n      case 'weeks':\n        setDurationWeeks(clampedValue)\n        break\n      case 'days':\n        setDurationDays(clampedValue)\n        break\n      case 'hours':\n        setDurationHours(clampedValue)\n        break\n      case 'minutes':\n        setDurationMinutes(clampedValue)\n        break\n    }\n  }\n\n  const getMaxValue = (component: 'weeks' | 'days' | 'hours' | 'minutes') => {\n    switch (component) {\n      case 'weeks': return 4 // Max 4 weeks\n      case 'days': return 30 // Max 30 days\n      case 'hours': return 23 // Max 23 hours\n      case 'minutes': return 59 // Max 59 minutes\n      default: return 0\n    }\n  }\n\n  const formatDurationDisplay = () => {\n    const parts = []\n    if (durationWeeks > 0) parts.push(`${durationWeeks} week${durationWeeks > 1 ? 's' : ''}`)\n    if (durationDays > 0) parts.push(`${durationDays} day${durationDays > 1 ? 's' : ''}`)\n    if (durationHours > 0) parts.push(`${durationHours} hour${durationHours > 1 ? 's' : ''}`)\n    if (durationMinutes > 0) parts.push(`${durationMinutes} minute${durationMinutes > 1 ? 's' : ''}`)\n    \n    if (parts.length === 0) return 'No duration set'\n    return parts.join(', ')\n  }\n\n  const handleCreateAuctionSubmit = async () => {\n    if (selectedAssets.size === 0) {\n      showError('No Assets Selected', 'Please select at least one asset to auction')\n      return\n    }\n    \n    if (!startingPrice || parseFloat(startingPrice) <= 0) {\n      showError('Invalid Price', 'Please enter a valid starting price')\n      return\n    }\n    \n    const totalDurationSeconds = calculateTotalDuration()\n    if (totalDurationSeconds < 3600) { // Minimum 1 hour\n      showError('Invalid Duration', 'Auction duration must be at least 1 hour')\n      return\n    }\n    \n    if (totalDurationSeconds > 2592000) { // Maximum 30 days\n      showError('Invalid Duration', 'Auction duration cannot exceed 30 days')\n      return\n    }\n    \n    try {\n      setIsCreatingAuction(true)\n      \n      // Create auction transaction using AtomicMarket announceauct action\n      const assetIds = Array.from(selectedAssets).map(id => parseInt(id))\n      const startingBidAmount = `${parseFloat(startingPrice).toFixed(8)} WAX`\n      \n      const actions = [{\n        account: 'atomicmarket',\n        name: 'announceauct',\n        authorization: [{\n          actor: account || '',\n          permission: session?.permission || 'active'\n        }],\n        data: {\n          seller: account || '',\n          asset_ids: assetIds,\n          starting_bid: startingBidAmount,\n          duration: totalDurationSeconds,\n          maker_marketplace: 'market.pxj'\n        }\n      }]\n      \n      if (session) {\n        await session.transact({ actions })\n      }\n      \n      showSuccess('Auction Created', `Successfully created auction for ${selectedAssets.size} asset(s). Remember to transfer your assets to the atomicmarket contract to activate the auction.`)\n      setShowCreateModal(false)\n      \n      // Reset form\n      setSelectedAssets(new Set())\n      setStartingPrice('')\n      setDurationWeeks(0)\n      setDurationDays(1)\n      setDurationHours(0)\n      setDurationMinutes(0)\n      setAuctionMemo('')\n      \n      // Refresh auctions list\n      loadAuctions()\n    } catch (error) {\n      log.error('Failed to create auction', 'Auctions', error as Error)\n      showError('Auction Creation Failed', error instanceof Error ? error.message : 'Failed to create auction')\n    } finally {\n      setIsCreatingAuction(false)\n    }\n  }\n\n  return (\n    <div className=\"auctions-page\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>Auctions</h1>\n            <p>Discover and bid on unique NFTs from the WAX ecosystem</p>\n          </div>\n          <button className=\"create-auction-btn\" onClick={handleCreateAuction}>\n            Create Auction\n          </button>\n        </div>\n      </div>\n\n      <div className=\"auctions-controls\">\n        <div className=\"search-section\">\n          <div className=\"search-input-wrapper\">\n              <svg className=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n              </svg>\n              <input\n                type=\"text\"\n                placeholder=\"Search auctions by name or asset ID...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-input\"\n              />\n            </div>\n        </div>\n\n        <div className=\"filters-section\">\n          <div className=\"filter-group\">\n            <label>Collection:</label>\n            <select \n              value={selectedCollection} \n              onChange={(e) => setSelectedCollection(e.target.value)}\n              className=\"collection-filter\"\n            >\n              <option value=\"\">All Collections</option>\n              {collections.map(collection => (\n                <option key={collection.collection_name} value={collection.collection_name}>\n                  {collection.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"filter-group\">\n            <label>Sort by:</label>\n            <select \n              value={sortBy} \n              onChange={(e) => setSortBy(e.target.value as typeof sortBy)}\n              className=\"sort-filter\"\n            >\n              <option value=\"price_asc\">Price: Low to High</option>\n              <option value=\"price_desc\">Price: High to Low</option>\n              <option value=\"created_desc\">Newest First</option>\n              <option value=\"created_asc\">Oldest First</option>\n            </select>\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={hideEmptyAuctions}\n                onChange={(e) => setHideEmptyAuctions(e.target.checked)}\n              />\n              <span className=\"checkmark\"></span>\n              Hide auctions without bids\n            </label>\n          </div>\n        </div>\n\n        <div className=\"auctions-filters\">\n          <button \n            className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\n            onClick={() => setFilter('all')}\n          >\n            All Auctions\n          </button>\n          <button \n            className={`filter-btn ${filter === 'ending-soon' ? 'active' : ''}`}\n            onClick={() => setFilter('ending-soon')}\n          >\n            Ending Soon\n          </button>\n          <button \n            className={`filter-btn ${filter === 'new' ? 'active' : ''}`}\n            onClick={() => setFilter('new')}\n          >\n            New Auctions\n          </button>\n        </div>\n      </div>\n\n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading auctions...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-container\">\n          <p className=\"error-message\">{error}</p>\n          <button onClick={() => loadAuctions()} className=\"retry-btn\">\n            Try Again\n          </button>\n        </div>\n      )}\n\n      {!loading && !error && filteredAuctions.length === 0 && auctions.length > 0 && (\n        <div className=\"empty-state\">\n          <h3>No Matching Auctions</h3>\n          <p>No auctions match your current filters. Try adjusting your search criteria.</p>\n        </div>\n      )}\n\n      {!loading && !error && auctions.length === 0 && (\n        <div className=\"empty-state\">\n          <h3>No Active Auctions</h3>\n          <p>There are currently no active auctions. Check back later!</p>\n        </div>\n      )}\n\n      {!loading && !error && filteredAuctions.length > 0 && (\n        <div className=\"auctions-grid\">\n          {filteredAuctions.map((auction) => (\n            <div \n              key={auction.auction_id} \n              className=\"auction-card clickable-card\"\n              onClick={() => navigate(`/auctions/${auction.auction_id}`)}\n            >\n              <div className=\"auction-image\">\n                <MediaRenderer\n                  imageUrl={auction.image}\n                  videoUrl={auction.video}\n                  alt={auction.asset_name}\n                  className=\"auction-media\"\n                  enableAnimations={true}\n                />\n                <div className=\"auction-timer\">\n                  {auctionService.formatTimeRemaining(auction.end_time)}\n                </div>\n              </div>\n              \n              <div className=\"auction-info\">\n                <h3 className=\"auction-title\">{auction.asset_name}</h3>\n                \n                <div className=\"auction-collection-info\">\n                  {auction.collection_info?.img && (\n                    <img \n                      src={auction.collection_info.img} \n                      alt={auction.collection_info.name}\n                      className=\"collection-avatar\"\n                    />\n                  )}\n                  <div className=\"collection-details\">\n                    <p className=\"collection-name\">\n                      {auction.collection_info?.name || auction.collection_name}\n                    </p>\n                    {auction.collection_info?.description && (\n                      <p className=\"collection-description\">\n                        {auction.collection_info.description.length > 60 \n                          ? `${auction.collection_info.description.substring(0, 60)}...`\n                          : auction.collection_info.description\n                        }\n                      </p>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"seller-info\">\n                  <span className=\"label\">Seller: </span>\n                  <button \n                    onClick={(e) => {\n                      e.stopPropagation();\n                      navigate(`/user-profile-lookup?user=${encodeURIComponent(auction.seller)}`);\n                    }}\n                    className=\"seller-account\"\n                  >\n                    {auction.seller}\n                  </button>\n                </div>\n                \n                <div className=\"auction-pricing\">\n                  <div className=\"current-bid\">\n                    <span className=\"label\">{auction.current_bid ? 'Current Bid:' : 'Starting Price:'}</span>\n                    <span className=\"price\">\n                      {auction.current_bid ? formatPrice(auction.current_bid) : formatPrice(auction.price)}\n                    </span>\n                  </div>\n                  \n                  {auction.bidder && (\n                    <div className=\"bidder\">\n                      <span className=\"label\">Top Bidder:</span>\n                      <button \n                        onClick={(e) => {\n                          e.stopPropagation();\n                          navigate(`/user-profile-lookup?user=${encodeURIComponent(auction.bidder || '')}`);\n                        }}\n                        className=\"account\"\n                      >\n                        {auction.bidder}\n                      </button>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"auction-actions\">\n                  <button \n                    className=\"bid-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handlePlaceBid(auction);\n                    }}\n                    disabled={!isConnected || auction.seller === account}\n                  >\n                    {!isConnected ? 'Connect Wallet' : \n                     auction.seller === account ? 'Your Auction' : 'Place Bid'}\n                  </button>\n                  <button \n                    className=\"view-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleViewDetails(auction);\n                    }}\n                  >\n                    View Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Pagination Controls */}\n      {!loading && !error && filteredAuctions.length > 0 && (\n        <div className=\"pagination-container\">\n          {hasMore && (\n            <button \n              className=\"load-more-btn\"\n              onClick={loadMoreAuctions}\n              disabled={loadingMore}\n            >\n              {loadingMore ? (\n                <>\n                  <div className=\"loading-spinner small\"></div>\n                  Loading more...\n                </>\n              ) : (\n                'Load More Auctions'\n              )}\n            </button>\n          )}\n          \n          <div className=\"pagination-info\">\n            <span>Page {currentPage} of {totalPages}</span>\n            <span>{filteredAuctions.length} auctions loaded</span>\n          </div>\n        </div>\n      )}\n\n      {/* Coming Soon Notice */}\n      <div className=\"coming-soon-notice\">\n        <h3>🚧 Integration in Progress</h3>\n        <p>\n          Full AtomicMarket auction integration is currently being implemented. \n          This page will soon display live auction data and allow bidding functionality.\n        </p>\n      </div>\n\n      {/* Enhanced Bid Modal */}\n      {showBidModal && selectedAuction && (\n        <div className=\"modal-overlay\" onClick={() => setShowBidModal(false)}>\n          <div className=\"bid-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"bid-modal-header\">\n              <h2>Place Your Bid</h2>\n              <button \n                className=\"close-btn\"\n                onClick={() => setShowBidModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"bid-modal-body\">\n              {/* Enhanced Auction Summary */}\n              <div className=\"bid-auction-summary\">\n                <div className=\"bid-asset-image\">\n                  <MediaRenderer\n                    imageUrl={selectedAuction.image}\n                    videoUrl={selectedAuction.video}\n                    alt={selectedAuction.asset_name}\n                    className=\"bid-modal-media\"\n                    enableAnimations={true}\n                  />\n                  <div className=\"auction-timer-small\">\n                    {auctionService.formatTimeRemaining(selectedAuction.end_time)}\n                  </div>\n                </div>\n                <div className=\"bid-asset-info\">\n                  <h3>{selectedAuction.asset_name}</h3>\n                  <div className=\"bid-collection-info\">\n                    {selectedAuction.collection_info?.img && (\n                      <img \n                        src={selectedAuction.collection_info.img} \n                        alt={selectedAuction.collection_info.name}\n                        className=\"collection-avatar-small\"\n                      />\n                    )}\n                    <span className=\"collection-name\">{selectedAuction.collection_info?.name || selectedAuction.collection_name}</span>\n                  </div>\n                  <div className=\"bid-current-info\">\n                    <div className=\"current-bid-display\">\n                      <span className=\"label\">{selectedAuction.current_bid ? 'Current Bid' : 'Starting Price'}</span>\n                      <span className=\"amount\">{formatPrice(selectedAuction.current_bid || selectedAuction.price)}</span>\n                    </div>\n                    {selectedAuction.bidder && (\n                      <div className=\"current-bidder\">\n                        <span className=\"label\">Leading Bidder</span>\n                        <button \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            navigate(`/user-profile-lookup?user=${encodeURIComponent(selectedAuction.bidder || '')}`);\n                          }}\n                          className=\"bidder-account\"\n                        >\n                          {selectedAuction.bidder}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Bid Input Section */}\n              <div className=\"bid-input-section\">\n                <div className=\"bid-form-group\">\n                  <label>Your Bid Amount</label>\n                  <div className=\"bid-input-wrapper\">\n                    <input \n                      type=\"number\" \n                      value={bidAmount}\n                      onChange={(e) => setBidAmount(e.target.value)}\n                      placeholder=\"0.0000\"\n                      step=\"0.0001\"\n                      min={selectedAuction.current_bid && selectedAuction.bidder ? parseFloat(selectedAuction.current_bid) / 100000000 + 0.0001 : parseFloat(selectedAuction.price) / 100000000}\n                      className=\"bid-amount-input\"\n                      disabled={isPlacingBid}\n                    />\n                    <span className=\"currency-label\">WAX</span>\n                  </div>\n                  <div className=\"bid-requirements\">\n                    <p className=\"minimum-bid\">\n                      {selectedAuction.current_bid && selectedAuction.bidder ? \n                        `Minimum: ${formatWAXPrice(parseFloat(selectedAuction.current_bid) / 100000000 + 0.0001)}` :\n                `Starting Price: ${formatWAXPrice(parseFloat(selectedAuction.price) / 100000000)}`\n                      }\n                    </p>\n                    {bidAmount && (\n                      <p className=\"bid-total\">\n                        Total: {formatWAXPrice(parseFloat(bidAmount))}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Previous Bids Section */}\n              <div className=\"previous-bids-section\">\n                <h4>Bid History</h4>\n                <div className=\"bids-list\">\n                  {selectedAuction.bidder ? (\n                    <div className=\"bid-item\">\n                      <div className=\"bidder-info\">\n                        <button \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            navigate(`/user-profile-lookup?user=${encodeURIComponent(selectedAuction.bidder || '')}`);\n                          }}\n                          className=\"bidder\"\n                        >\n                          {selectedAuction.bidder}\n                        </button>\n                        <span className=\"bid-time\">Current leading bid</span>\n                      </div>\n                      <span className=\"bid-amount\">{formatPrice(selectedAuction.current_bid || selectedAuction.price)}</span>\n                    </div>\n                  ) : (\n                    <div className=\"no-bids\">\n                      <p>No bids yet - be the first to bid!</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Bid Warning */}\n              <div className=\"bid-notice\">\n                <div className=\"notice-icon\">💡</div>\n                <div className=\"notice-text\">\n                  <p><strong>Important:</strong> Ensure you have sufficient WAX balance for your bid. Bids are binding and cannot be cancelled.</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bid-modal-footer\">\n              <button \n                className=\"cancel-bid-btn\"\n                onClick={() => setShowBidModal(false)}\n                disabled={isPlacingBid}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"submit-bid-btn\"\n                onClick={submitBid}\n                disabled={isPlacingBid || !bidAmount || \n                  (selectedAuction.current_bid && selectedAuction.bidder ? \n                    parseFloat(bidAmount) <= parseFloat(selectedAuction.current_bid) / 100000000 :\n                    parseFloat(bidAmount) < parseFloat(selectedAuction.price) / 100000000\n                  )}\n              >\n                {isPlacingBid ? (\n                  <>\n                    <span className=\"loading-spinner-small\"></span>\n                    Placing Bid...\n                  </>\n                ) : (\n                  `Place Bid • ${bidAmount || '0.0000'} WAX`\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Create Auction Modal */}\n      {showCreateModal && (\n        <div className=\"modal-overlay auction-modal\" onClick={() => setShowCreateModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Create Auction</h2>\n              <button \n                className=\"close-btn\"\n                onClick={() => setShowCreateModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"asset-selection-section\">\n                {/* Asset Selection Section */}\n                <div className=\"form-group\">\n                  <label>Select Assets to Auction</label>\n                  <div className=\"asset-selection-container\">\n                    {isLoadingAssets ? (\n                      <div className=\"loading-assets\">\n                        <div className=\"loading-spinner\"></div>\n                        <span>Loading your assets...</span>\n                      </div>\n                    ) : userAssets.length > 0 ? (\n                      <div className=\"assets-grid\">\n                        {userAssets.map(asset => (\n                          <div \n                            key={asset.asset_id}\n                            className={`asset-item ${selectedAssets.has(asset.asset_id) ? 'selected' : ''}`}\n                            onClick={() => toggleAssetSelection(asset.asset_id)}\n                          >\n                            <div className=\"asset-image\">\n                              <MediaRenderer\n                                imageUrl={getAssetImageUrl(asset)}\n                                videoUrl={getAssetVideoUrl(asset)}\n                                alt={asset.name || `Asset #${asset.asset_id}`}\n                                className=\"asset-media\"\n                                enableAnimations={true}\n                                loading=\"lazy\"\n                              />\n                              {selectedAssets.has(asset.asset_id) && (\n                                <div className=\"selection-indicator\">\n                                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                    <path d=\"M9,20.42l-6.21,-6.21l2.83,-2.83L9,14.77l9.88,-9.89l2.83,2.83L9,20.42z\"/>\n                                  </svg>\n                                </div>\n                              )}\n                            </div>\n                            <div className=\"asset-info\">\n                              <div className=\"asset-name\">{asset.name || `Asset #${asset.asset_id}`}</div>\n                              <div className=\"asset-collection\">{asset.collection_name}</div>\n                              {asset.template_mint && (\n                                <div className=\"asset-mint-info\">Mint #{asset.template_mint}</div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"no-assets\">\n                        <svg className=\"no-assets-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                          <path d=\"M20,7l-8,-4l-8,4m16,0l-8,4m8,-4v10l-8,4m0,-10L4,7m8,4v10M4,7v10l8,4\"/>\n                        </svg>\n                        <h3>No Assets Found</h3>\n                        <p>You don't have any assets to auction. Visit the marketplace to acquire some NFTs first.</p>\n                      </div>\n                    )}\n                  </div>\n                  {selectedAssets.size > 0 && (\n                    <div className=\"selection-summary\">\n                      <span>{selectedAssets.size} asset{selectedAssets.size > 1 ? 's' : ''} selected</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"auction-form-section\">\n              \n              <div className=\"form-group\">\n                <label>Starting Price (WAX)</label>\n                <input \n                  type=\"number\" \n                  placeholder=\"0.0000\"\n                  step=\"0.0001\"\n                  min=\"0\"\n                  value={startingPrice}\n                  onChange={(e) => setStartingPrice(e.target.value)}\n                  className=\"form-input\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Auction Duration</label>\n                <div className=\"duration-inputs\">\n                  <div className=\"duration-field\">\n                    <label className=\"duration-label\">Weeks</label>\n                    <input \n                      type=\"number\"\n                      min=\"0\"\n                      max=\"4\"\n                      value={durationWeeks}\n                      onChange={(e) => updateDurationComponent('weeks', parseInt(e.target.value) || 0)}\n                      className=\"duration-input\"\n                    />\n                  </div>\n                  <div className=\"duration-field\">\n                    <label className=\"duration-label\">Days</label>\n                    <input \n                      type=\"number\"\n                      min=\"0\"\n                      max=\"30\"\n                      value={durationDays}\n                      onChange={(e) => updateDurationComponent('days', parseInt(e.target.value) || 0)}\n                      className=\"duration-input\"\n                    />\n                  </div>\n                  <div className=\"duration-field\">\n                    <label className=\"duration-label\">Hours</label>\n                    <input \n                      type=\"number\"\n                      min=\"0\"\n                      max=\"23\"\n                      value={durationHours}\n                      onChange={(e) => updateDurationComponent('hours', parseInt(e.target.value) || 0)}\n                      className=\"duration-input\"\n                    />\n                  </div>\n                  <div className=\"duration-field\">\n                    <label className=\"duration-label\">Minutes</label>\n                    <input \n                      type=\"number\"\n                      min=\"0\"\n                      max=\"59\"\n                      value={durationMinutes}\n                      onChange={(e) => updateDurationComponent('minutes', parseInt(e.target.value) || 0)}\n                      className=\"duration-input\"\n                    />\n                  </div>\n                </div>\n                <div className=\"duration-summary\">\n                  <span className=\"duration-display\">{formatDurationDisplay()}</span>\n                  <span className=\"duration-total\">Total: {Math.floor(calculateTotalDuration() / 3600)}h {Math.floor((calculateTotalDuration() % 3600) / 60)}m</span>\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Memo (Optional)</label>\n                <textarea \n                  placeholder=\"Add a description for your auction\"\n                  className=\"form-textarea\"\n                  rows={3}\n                  value={auctionMemo}\n                  onChange={(e) => setAuctionMemo(e.target.value)}\n                />\n              </div>\n              </div>\n            </div>\n            \n            <div className=\"modal-footer\">\n              <button \n                className=\"cancel-btn\"\n                onClick={() => setShowCreateModal(false)}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"create-btn\"\n                onClick={handleCreateAuctionSubmit}\n                disabled={selectedAssets.size === 0 || !startingPrice || parseFloat(startingPrice) <= 0 || isCreatingAuction}\n              >\n                {isCreatingAuction ? (\n                  <>\n                    <span className=\"loading-spinner-small\"></span>\n                    Creating Auction...\n                  </>\n                ) : (\n                  `Create Auction${selectedAssets.size > 0 ? ` (${selectedAssets.size} asset${selectedAssets.size > 1 ? 's' : ''})` : ''}`\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default Auctions","import React, { useState, useEffect, useCallback } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { apiService } from '../services/api'\nimport { auctionService } from '../services/auctionService'\nimport MediaRenderer from './MediaRenderer'\nimport { API_ENDPOINTS } from '../config/marketplaceConfig'\nimport type { Auction } from '../types'\nimport '../css/auction-detail.css'\n\nconst AuctionDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const { isConnected, account, session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  \n  const [auction, setAuction] = useState<Auction | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [showBidModal, setShowBidModal] = useState(false)\n  const [bidAmount, setBidAmount] = useState('')\n  const [isPlacingBid, setIsPlacingBid] = useState(false)\n\n  const loadAuction = useCallback(async () => {\n    if (!id) return\n    \n    setLoading(true)\n    setError(null)\n    \n    try {\n      const response = await apiService.getAuction(id)\n      \n      if (!response.success || !response.data) {\n        setError('Auction not found')\n        return\n      }\n      \n      setAuction(response.data as unknown as Auction)\n    } catch (err) {\n      console.error('Error loading auction:', err)\n      setError('Failed to load auction details')\n    } finally {\n      setLoading(false)\n    }\n  }, [id])\n\n  useEffect(() => {\n    if (id) {\n      loadAuction()\n    }\n  }, [id, loadAuction])\n\n  // Real-time updates for this specific auction\n  useEffect(() => {\n    if (!auction) return\n\n    const unsubscribe = auctionService.subscribe(auction.auction_id, (update) => {\n      setAuction(prevAuction => {\n        if (!prevAuction) return null\n        return {\n          ...prevAuction,\n          current_bid: update.current_bid || prevAuction.current_bid,\n          bidder: update.bidder || prevAuction.bidder,\n          end_time: update.end_time\n        }\n      })\n    })\n\n    return () => unsubscribe()\n  }, [auction])\n\n  const handlePlaceBid = () => {\n    if (!isConnected || !account) {\n      showError('Wallet Required', 'Please connect your wallet to place bids')\n      return\n    }\n    \n    if (auction?.seller === account) {\n      showError('Invalid Action', 'You cannot bid on your own auction')\n      return\n    }\n    \n    setBidAmount('')\n    setShowBidModal(true)\n  }\n\n  const submitBid = async () => {\n    if (!auction || !session || !account) {\n      showError('Error', 'Please connect your wallet first')\n      return\n    }\n    \n    const bidFloat = parseFloat(bidAmount)\n    if (isNaN(bidFloat) || bidFloat <= 0) {\n      showError('Invalid Bid', 'Please enter a valid bid amount')\n      return\n    }\n    \n    const currentBidAmount = parseFloat(auction.current_bid || auction.price) / 100000000\n    const hasExistingBids = auction.current_bid && auction.bidder\n    \n    if (hasExistingBids && bidFloat <= currentBidAmount) {\n      showError('Invalid Bid', `Bid must be higher than current bid of ${currentBidAmount.toFixed(4)} WAX`)\n      return\n    }\n    \n    if (!hasExistingBids && bidFloat < parseFloat(auction.price) / 100000000) {\n      showError('Invalid Bid', `Bid must be at least ${(parseFloat(auction.price) / 100000000).toFixed(4)} WAX`)\n      return\n    }\n    \n    setIsPlacingBid(true)\n    \n    try {\n      const bidAmountInt = Math.floor(bidFloat * 100000000)\n      \n      const result = await session.transact({\n        actions: [{\n          account: 'atomicmarket',\n          name: 'auctionbid',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            bidder: account,\n            auction_id: auction.auction_id,\n            bid: `${bidAmountInt} WAX`,\n            taker_marketplace: 'market.pxj'\n          }\n        }]\n      })\n      \n      if (result) {\n        showSuccess('Bid Placed', `Successfully placed bid of ${bidFloat.toFixed(4)} WAX`)\n        setShowBidModal(false)\n        setBidAmount('')\n        \n        // Update auction state\n        setAuction(prev => prev ? {\n          ...prev,\n          current_bid: bidAmountInt.toString(),\n          bidder: account\n        } : null)\n      }\n    } catch (error: unknown) {\n      console.error('Error placing bid:', error)\n      showError('Bid Failed', error instanceof Error ? error.message : 'Failed to place bid')\n    } finally {\n      setIsPlacingBid(false)\n    }\n  }\n\n  const formatPrice = (price: string) => {\n    const waxPrice = parseFloat(price) / 100000000\n    return `${waxPrice.toFixed(4)} WAX`\n  }\n\n  // Use the robust auctionService formatTimeRemaining function\n  const formatTimeRemaining = (endTime: string) => {\n    return auctionService.formatTimeRemaining(endTime)\n  }\n\n  const handleUserClick = (userAccount: string) => {\n    navigate(`/user-profile-lookup?user=${encodeURIComponent(userAccount)}`)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"auction-detail-page\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading auction details...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error || !auction) {\n    return (\n      <div className=\"auction-detail-page\">\n        <div className=\"error-container\">\n          <h2>Auction Not Found</h2>\n          <p>{error || 'The requested auction could not be found.'}</p>\n          <button \n            className=\"btn-primary\"\n            onClick={() => navigate('/auctions')}\n          >\n            Back to Auctions\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  const timeRemaining = formatTimeRemaining(auction.end_time)\n  const isEnded = timeRemaining === 'Auction ended'\n  const currentPrice = auction.current_bid ? formatPrice(auction.current_bid) : formatPrice(auction.price)\n\n  return (\n    <div className=\"auction-detail-page\">\n      <div className=\"auction-detail-container\">\n        {/* Back Navigation */}\n        <button \n          className=\"back-button\"\n          onClick={() => navigate('/auctions')}\n        >\n          ← Back to Auctions\n        </button>\n\n        <div className=\"auction-detail-content\">\n          {/* NFT Image and Info */}\n          <div className=\"auction-image-section\">\n            <div className=\"auction-image-container\">\n              <MediaRenderer\n                imageUrl={auction.image ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${auction.image}` : undefined}\n                videoUrl={auction.video ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${auction.video}` : undefined}\n                alt={auction.asset_name || 'NFT'}\n                className=\"auction-image\"\n                enableAnimations={true}\n              />\n            </div>\n            \n            <div className=\"auction-basic-info\">\n              <h1 className=\"auction-title\">\n                {auction.asset_name || `Asset #${auction.asset_id || 'Unknown'}`}\n              </h1>\n              \n              <div className=\"auction-collection\">\n                Collection: {auction.collection_name || 'Unknown'}\n              </div>\n              \n              <div className=\"auction-id\">\n                Auction ID: {auction.auction_id}\n              </div>\n            </div>\n          </div>\n\n          {/* Auction Details */}\n          <div className=\"auction-info-section\">\n            <div className=\"auction-status\">\n              <div className={`status-badge ${isEnded ? 'ended' : 'active'}`}>\n                {isEnded ? 'Ended' : 'Active'}\n              </div>\n              \n              {!isEnded && (\n                <div className=\"time-remaining\">\n                  <span className=\"time-label\">Time Remaining:</span>\n                  <span className=\"time-value\">{timeRemaining}</span>\n                </div>\n              )}\n            </div>\n\n            <div className=\"price-section\">\n              <div className=\"current-price\">\n                <span className=\"price-label\">\n                  {auction.current_bid ? 'Current Bid:' : 'Starting Price:'}\n                </span>\n                <span className=\"price-value\">{currentPrice}</span>\n              </div>\n            </div>\n\n            <div className=\"participants-section\">\n              <div className=\"seller-info\">\n                <span className=\"participant-label\">Seller:</span>\n                <button \n                  className=\"participant-link\"\n                  onClick={() => handleUserClick(auction.seller)}\n                >\n                  {auction.seller}\n                </button>\n              </div>\n              \n              {auction.bidder && (\n                <div className=\"bidder-info\">\n                  <span className=\"participant-label\">Top Bidder:</span>\n                  <button \n                    className=\"participant-link\"\n                    onClick={() => handleUserClick(auction.bidder || '')}\n                  >\n                    {auction.bidder}\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"auction-actions\">\n              {!isEnded && (\n                <button\n                  className=\"btn-primary bid-button\"\n                  onClick={handlePlaceBid}\n                  disabled={!isConnected || auction.seller === account}\n                >\n                  {!isConnected ? 'Connect Wallet' : \n                   auction.seller === account ? 'Your Auction' : 'Place Bid'}\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Bid Modal */}\n      {showBidModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowBidModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Place Bid</h3>\n              <button \n                className=\"modal-close\"\n                onClick={() => setShowBidModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"auction-summary\">\n                <MediaRenderer\n                  imageUrl={auction.image ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${auction.image}` : undefined}\n                  videoUrl={auction.video ? `${API_ENDPOINTS.IPFS.GATEWAYS[0]}${auction.video}` : undefined}\n                  alt={auction.asset_name || 'NFT'}\n                  className=\"modal-nft-image\"\n                  enableAnimations={true}\n                />\n                <div className=\"modal-nft-info\">\n                  <h4>{auction.asset_name || `Asset #${auction.asset_id || 'Unknown'}`}</h4>\n                  <p>Current: {currentPrice}</p>\n                </div>\n              </div>\n              \n              {auction.bidder && (\n                <div className=\"current-bidder\">\n                  <span className=\"label\">Leading Bidder</span>\n                  <button \n                    className=\"bidder-account\"\n                    onClick={() => handleUserClick(auction.bidder!)}\n                  >\n                    {auction.bidder}\n                  </button>\n                </div>\n              )}\n              \n              <div className=\"bid-input-section\">\n                <label htmlFor=\"bidAmount\">Your Bid (WAX)</label>\n                <input\n                  id=\"bidAmount\"\n                  type=\"number\"\n                  step=\"0.0001\"\n                  placeholder=\"Enter bid amount\"\n                  value={bidAmount}\n                  onChange={(e) => setBidAmount(e.target.value)}\n                  min={auction.current_bid && auction.bidder ? \n                    parseFloat(auction.current_bid) / 100000000 + 0.0001 : \n                    parseFloat(auction.price) / 100000000\n                  }\n                />\n                <div className=\"bid-requirement\">\n                  Minimum: {auction.current_bid && auction.bidder ?\n                    `${(parseFloat(auction.current_bid) / 100000000 + 0.0001).toFixed(4)} WAX` :\n                    `${(parseFloat(auction.price) / 100000000).toFixed(4)} WAX`\n                  }\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"modal-footer\">\n              <button \n                className=\"btn-secondary\"\n                onClick={() => setShowBidModal(false)}\n                disabled={isPlacingBid}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"btn-primary\"\n                onClick={submitBid}\n                disabled={isPlacingBid || !bidAmount}\n              >\n                {isPlacingBid ? 'Placing Bid...' : 'Place Bid'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default AuctionDetail","import React, { useState } from 'react'\nimport '../css/learn.css'\n\ninterface GuideSection {\n  id: string\n  title: string\n  content: React.ReactNode\n}\n\nconst Learn: React.FC = () => {\n  const [activeSection, setActiveSection] = useState<string>('getting-started')\n\n  const guides: GuideSection[] = [\n    {\n      id: 'getting-started',\n      title: 'Getting Started on WAX',\n      content: (\n        <div className=\"guide-content\">\n          <h3>Welcome to the WAX Blockchain!</h3>\n          <p>\n            WAX (Worldwide Asset eXchange) is a purpose-built blockchain for NFTs and gaming. \n            Here's how to get started:\n          </p>\n          \n          <div className=\"step-list\">\n            <div className=\"step\">\n              <div className=\"step-number\">1</div>\n              <div className=\"step-content\">\n                <h4>Create a WAX Wallet</h4>\n                <p>Visit <a href=\"https://wallet.wax.io\" target=\"_blank\" rel=\"noopener noreferrer\">wallet.wax.io</a> to create your free WAX account. No gas fees required!</p>\n              </div>\n            </div>\n            \n            <div className=\"step\">\n              <div className=\"step-number\">2</div>\n              <div className=\"step-content\">\n                <h4>Get Some WAX Tokens</h4>\n                <p>Purchase WAX tokens from exchanges like Binance, KuCoin, or use the built-in WAX wallet exchange.</p>\n              </div>\n            </div>\n            \n            <div className=\"step\">\n              <div className=\"step-number\">3</div>\n              <div className=\"step-content\">\n                <h4>Connect Your Wallet</h4>\n                <p>Use the \"Connect Wallet\" button in the top right to connect your WAX wallet to PxMarket.</p>\n              </div>\n            </div>\n            \n            <div className=\"step\">\n              <div className=\"step-number\">4</div>\n              <div className=\"step-content\">\n                <h4>Start Trading!</h4>\n                <p>Browse collections, buy NFTs, and start building your digital asset portfolio.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'pixel-journey',\n      title: 'About Pixel Journey',\n      content: (\n        <div className=\"guide-content\">\n          <h3>Welcome to Pixel Journey!</h3>\n          <p>\n            Pixel Journey is a comprehensive NFT ecosystem on the WAX blockchain, featuring \n            unique pixel art collections and gaming utilities.\n          </p>\n          \n          <div className=\"feature-grid\">\n            <div className=\"feature-card\">\n              <h4>🎨 Pixel Art NFTs</h4>\n              <p>Collect unique pixel art characters, items, and accessories with various rarity levels.</p>\n            </div>\n            \n            <div className=\"feature-card\">\n              <h4>🎮 Gaming Integration</h4>\n              <p>Use your NFTs in games and earn rewards through various gameplay mechanics.</p>\n            </div>\n            \n            <div className=\"feature-card\">\n              <h4>💎 Staking Rewards</h4>\n              <p>Stake your Pixel Journey NFTs to earn PXJ tokens and other rewards.</p>\n            </div>\n            \n            <div className=\"feature-card\">\n              <h4>🏪 Marketplace</h4>\n              <p>Trade your NFTs on our integrated marketplace with zero fees for holders.</p>\n            </div>\n          </div>\n          \n          <div className=\"collections-info\">\n            <h4>Main Collections:</h4>\n            <ul>\n              <li><strong>Pixals:</strong> The main character collection with various traits and rarities</li>\n              <li><strong>Pixel Ingredients:</strong> Crafting materials and consumables</li>\n              <li><strong>Pixel Tools:</strong> Equipment and utility items</li>\n              <li><strong>Pixel Lands:</strong> Virtual land parcels for building and development</li>\n            </ul>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'trading-tips',\n      title: 'Trading Tips & Strategies',\n      content: (\n        <div className=\"guide-content\">\n          <h3>Smart Trading on WAX</h3>\n          \n          <div className=\"tip-section\">\n            <h4>🔍 Research Before Buying</h4>\n            <ul>\n              <li>Check the collection's total supply and rarity distribution</li>\n              <li>Look at recent sales history and price trends</li>\n              <li>Verify the authenticity of the collection</li>\n              <li>Join the project's Discord or Telegram for community insights</li>\n            </ul>\n          </div>\n          \n          <div className=\"tip-section\">\n            <h4>💰 Pricing Strategies</h4>\n            <ul>\n              <li>Use floor price as a baseline for common items</li>\n              <li>Factor in rarity and trait combinations for pricing</li>\n              <li>Consider market timing and overall WAX ecosystem trends</li>\n              <li>Set competitive prices for quick sales or premium prices for rare items</li>\n            </ul>\n          </div>\n          \n          <div className=\"tip-section\">\n            <h4>⚠️ Risk Management</h4>\n            <ul>\n              <li>Never invest more than you can afford to lose</li>\n              <li>Diversify across different collections and projects</li>\n              <li>Be aware of market volatility and seasonal trends</li>\n              <li>Keep some WAX liquid for opportunities</li>\n            </ul>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'faq',\n      title: 'Frequently Asked Questions',\n      content: (\n        <div className=\"guide-content\">\n          <h3>Common Questions</h3>\n          \n          <div className=\"faq-list\">\n            <div className=\"faq-item\">\n              <h4>Q: Are there any fees for trading on PxMarket?</h4>\n              <p>A: PxMarket charges a small marketplace fee on sales. However, Pixel Journey NFT holders may receive fee discounts or exemptions.</p>\n            </div>\n            \n            <div className=\"faq-item\">\n              <h4>Q: How do I know if an NFT is authentic?</h4>\n              <p>A: Always verify the collection name and creator account. Authentic Pixel Journey NFTs are minted by verified accounts and will show the official collection badge.</p>\n            </div>\n            \n            <div className=\"faq-item\">\n              <h4>Q: Can I cancel a listing after it's posted?</h4>\n              <p>A: Yes, you can cancel your listings at any time from your inventory or profile page. There's no fee for canceling listings.</p>\n            </div>\n            \n            <div className=\"faq-item\">\n              <h4>Q: What happens if I lose access to my WAX wallet?</h4>\n              <p>A: Always keep your private keys and recovery phrases secure. If you lose access, you may lose your NFTs permanently. Consider using hardware wallets for valuable collections.</p>\n            </div>\n            \n            <div className=\"faq-item\">\n              <h4>Q: How do I participate in NFT drops and launches?</h4>\n              <p>A: Follow Pixel Journey on social media and join our Discord for announcements. Most drops happen directly through our platform or partner sites.</p>\n            </div>\n            \n            <div className=\"faq-item\">\n              <h4>Q: Can I use my NFTs in games?</h4>\n              <p>A: Many Pixel Journey NFTs have gaming utility. Check the NFT details page for specific game integrations and benefits.</p>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'advanced',\n      title: 'Advanced Features',\n      content: (\n        <div className=\"guide-content\">\n          <h3>Power User Features</h3>\n          \n          <div className=\"advanced-section\">\n            <h4>🔧 Bulk Operations</h4>\n            <p>Use our bulk tools to:</p>\n            <ul>\n              <li>List multiple NFTs at once with smart pricing</li>\n              <li>Transfer multiple items to different recipients</li>\n              <li>Burn unwanted NFTs in batches</li>\n              <li>Stake multiple NFTs for rewards</li>\n            </ul>\n          </div>\n          \n          <div className=\"advanced-section\">\n            <h4>📊 Analytics & Tracking</h4>\n            <p>Monitor your portfolio with:</p>\n            <ul>\n              <li>Real-time portfolio value tracking</li>\n              <li>Transaction history and profit/loss analysis</li>\n              <li>Collection performance metrics</li>\n              <li>Market trend indicators</li>\n            </ul>\n          </div>\n          \n          <div className=\"advanced-section\">\n            <h4>🎯 Watchlists & Alerts</h4>\n            <p>Stay informed with:</p>\n            <ul>\n              <li>Custom watchlists for tracking specific NFTs</li>\n              <li>Price alerts for collections you're interested in</li>\n              <li>New listing notifications</li>\n              <li>Auction ending reminders</li>\n            </ul>\n          </div>\n        </div>\n      )\n    }\n  ]\n\n  return (\n    <div className=\"learn-page\">\n      <div className=\"page-header\">\n        <h1>Learn Hub</h1>\n        <p>Everything you need to know about WAX, NFTs, and Pixel Journey</p>\n      </div>\n\n      <div className=\"learn-container\">\n        <div className=\"learn-sidebar\">\n          <nav className=\"learn-nav\">\n            {guides.map((guide) => (\n              <button\n                key={guide.id}\n                className={`nav-item ${activeSection === guide.id ? 'active' : ''}`}\n                onClick={() => setActiveSection(guide.id)}\n              >\n                {guide.title}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"learn-content\">\n          {guides.find(guide => guide.id === activeSection)?.content}\n        </div>\n      </div>\n\n      <div className=\"help-section\">\n        <h3>Need More Help?</h3>\n        <p>Access our documentation and join our community for support:</p>\n        <div className=\"community-links\">\n          <a href=\"https://docs.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"community-link docs\">\n            <span className=\"icon\">📚</span>\n            Documentation\n          </a>\n          <a href=\"#\" className=\"community-link discord\">\n            <span className=\"icon\">💬</span>\n            Discord Community\n          </a>\n          <a href=\"#\" className=\"community-link telegram\">\n            <span className=\"icon\">📱</span>\n            Telegram Group\n          </a>\n          <a href=\"#\" className=\"community-link twitter\">\n            <span className=\"icon\">🐦</span>\n            Twitter Updates\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Learn","import React, { useState } from 'react'\nimport '../css/journeymap.css'\n\ninterface Section {\n  id: string\n  title: string\n  content: React.ReactNode\n}\n\nconst JourneyMap: React.FC = () => {\n  const [activeSection, setActiveSection] = useState('overview')\n\n  const sections: Section[] = [\n    {\n      id: 'overview',\n      title: 'Overview',\n      content: (\n        <div className=\"section-content\">\n          <h3>PxMarket Journey Map</h3>\n          <p>Welcome to the comprehensive roadmap of the Pixel Journey ecosystem. This page serves as both a sitemap for current features and a development roadmap for future enhancements.</p>\n          \n          <div className=\"ecosystem-grid\">\n            <div className=\"ecosystem-card current\">\n              <h4>🏪 Current Platform</h4>\n              <p>PxMarket - Your gateway to the Pixel Journey NFT ecosystem</p>\n            </div>\n            <div className=\"ecosystem-card future\">\n              <h4>🚀 Future dApps</h4>\n              <p>Expanding ecosystem of interconnected applications</p>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'pxmarket-features',\n      title: 'PxMarket Features',\n      content: (\n        <div className=\"section-content\">\n          <h3>PxMarket Feature Map</h3>\n          <p>Explore all the features available in the current PxMarket platform:</p>\n          \n          <div className=\"feature-category\">\n            <h4>🛒 Marketplace Core</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">NFT Marketplace</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Collection Browser</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Asset Details</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Advanced Filtering</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>👤 User Features</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">User Profiles</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Inventory Management</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Watchlist</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Activity Tracking</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>💰 Trading & Economy</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Buy/Sell NFTs</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Bulk Operations</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Price Analytics</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Auctions</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Offers System</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Shopping Cart</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>🔄 WAX Integration</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">RWAX Tokenization</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">WAX Balance Management</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Resource Management (CPU/NET/RAM)</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Multi-Wallet Support</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>🏆 Staking & Rewards</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">NFT Staking</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Token Staking</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Reward Distribution</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">PXJ Badge System</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>🎁 Rewards & Gamification</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Pack Opening</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Chat System</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Live Transactions Feed</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Social Sharing</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item planned\">\n                <span className=\"feature-name\">Achievement System</span>\n                <span className=\"status-badge planned\">Planned</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>🛠️ Advanced Features</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">NFT Comparison Tool</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Portfolio Analytics</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Price Alerts</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Collection Analytics</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">Accessibility Features</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <div className=\"feature-item live\">\n                <span className=\"feature-name\">PWA Support</span>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"feature-category\">\n            <h4>🎨 Crafting & Creation</h4>\n            <div className=\"feature-list\">\n              <div className=\"feature-item beta\">\n                <span className=\"feature-name\">NFT Crafting System</span>\n                <span className=\"status-badge beta\">Beta</span>\n              </div>\n              <div className=\"feature-item planned\">\n                <span className=\"feature-name\">Custom Templates</span>\n                <span className=\"status-badge planned\">Planned</span>\n              </div>\n              <div className=\"feature-item planned\">\n                <span className=\"feature-name\">Community Creations</span>\n                <span className=\"status-badge planned\">Planned</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'wax-ecosystem',\n      title: 'WAX Ecosystem',\n      content: (\n        <div className=\"section-content\">\n          <h3>PXJourney across WAX</h3>\n          <p>Explore the expanding Pixel Journey ecosystem on the WAX blockchain:</p>\n          \n          <div className=\"dapp-grid\">\n            <div className=\"dapp-card live purple-glow\">\n              <div className=\"dapp-header\">\n                <h4>PxMarket</h4>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <p>NFT marketplace and trading platform</p>\n              <a href=\"https://market.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"dapp-link\">\n                Visit PxMarket →\n              </a>\n            </div>\n\n            <div className=\"dapp-card live green-glow\">\n              <div className=\"dapp-header\">\n                <h4>PxStaking</h4>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <p>Stake your Pixel Journey NFTs for rewards</p>\n              <a href=\"https://stake.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"dapp-link\">\n                Visit PxStaking →\n              </a>\n            </div>\n\n            <div className=\"dapp-card live golden-glow\">\n              <div className=\"dapp-header\">\n                <h4>PxLeaderboards</h4>\n                <span className=\"status-badge live\">Live</span>\n              </div>\n              <p>Track rankings and compete with other players</p>\n              <a href=\"https://lb.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"dapp-link\">\n                Visit PxLeaderboards →\n              </a>\n            </div>\n\n            <div className=\"dapp-card planned\">\n              <div className=\"dapp-header\">\n                <h4>PxDeFi</h4>\n                <span className=\"status-badge planned\">ETA TBD</span>\n              </div>\n              <p>Decentralized finance features for the ecosystem</p>\n              <div className=\"dapp-link disabled\">Coming via PxMilestones</div>\n            </div>\n\n            <div className=\"dapp-card coming-soon\">\n              <div className=\"dapp-header\">\n                <h4>PxCraft</h4>\n                <span className=\"status-badge coming-soon\">Coming Soon</span>\n              </div>\n              <p>Craft and create new NFTs from existing assets</p>\n              <div className=\"dapp-link disabled\">In Development</div>\n            </div>\n\n            <div className=\"dapp-card coming-soon\">\n              <div className=\"dapp-header\">\n                <h4>PxMilestones</h4>\n                <span className=\"status-badge coming-soon\">Coming Soon</span>\n              </div>\n              <p>Achievement and milestone tracking system</p>\n              <div className=\"dapp-link disabled\">In Development</div>\n            </div>\n\n            <div className=\"dapp-card planned\">\n              <div className=\"dapp-header\">\n                <h4>PxQuest</h4>\n                <span className=\"status-badge planned\">ETA TBD</span>\n              </div>\n              <p>Quest and mission system for earning rewards</p>\n              <div className=\"dapp-link disabled\">Coming via PxMilestones</div>\n            </div>\n\n            <div className=\"dapp-card planned\">\n              <div className=\"dapp-header\">\n                <h4>PxDAO</h4>\n                <span className=\"status-badge planned\">ETA TBD</span>\n              </div>\n              <p>Decentralized governance for the ecosystem</p>\n              <div className=\"dapp-link disabled\">Coming via PxMilestones</div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'external-links',\n      title: 'External Platforms',\n      content: (\n        <div className=\"section-content\">\n          <h3>Pixel Journey Across Platforms</h3>\n          <p>Find Pixel Journey on various platforms and marketplaces:</p>\n          \n          <div className=\"platform-category\">\n            <h4>🌐 Official Websites</h4>\n            <div className=\"link-grid\">\n              <a href=\"https://pixeljourney.xyz/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">Main Website</span>\n                <span className=\"platform-desc\">Official Pixel Journey homepage</span>\n              </a>\n              <a href=\"https://docs.pixeljourney.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">Documentation</span>\n                <span className=\"platform-desc\">Complete project documentation</span>\n              </a>\n            </div>\n          </div>\n\n          <div className=\"platform-category\">\n            <h4>🛒 NFT Marketplaces (WAX)</h4>\n            <div className=\"link-grid\">\n              <a href=\"https://atomichub.io/explorer/collection/wax-mainnet/pixeljourney\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">AtomicHub</span>\n                <span className=\"platform-desc\">Primary WAX marketplace</span>\n              </a>\n              <a href=\"https://neftyblocks.com/collection/pixeljourney/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">NeftyBlocks</span>\n                <span className=\"platform-desc\">WAX NFT marketplace</span>\n              </a>\n              <a href=\"https://nfthive.io/collection/pixeljourney\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">NFTHive</span>\n                <span className=\"platform-desc\">WAX marketplace and drops</span>\n              </a>\n              <a href=\"https://www.pfpwizard.xyz/pfp/pixals/ranking/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">PFP Wizard</span>\n                <span className=\"platform-desc\">Pixal PFP marketplace</span>\n              </a>\n            </div>\n          </div>\n\n          <div className=\"platform-category\">\n            <h4>🌉 Cross-Chain Marketplaces</h4>\n            <div className=\"link-grid\">\n              <a href=\"https://opensea.io/collection/pixeljourney-polygon\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">OpenSea (Polygon)</span>\n                <span className=\"platform-desc\">Polygon bridged collection</span>\n              </a>\n              <a href=\"https://opensea.io/collection/pixeljourney-base\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">OpenSea (Base)</span>\n                <span className=\"platform-desc\">Base bridged collection</span>\n              </a>\n              <a href=\"https://opensea.io/collection/pixeljourney-eth\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">OpenSea (Ethereum)</span>\n                <span className=\"platform-desc\">Ethereum bridged collection</span>\n              </a>\n              <a href=\"https://nft.monbase.com/collections/66c4eb2ca339b05c5a660e44/detail\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">MonBase</span>\n                <span className=\"platform-desc\">Base chain marketplace</span>\n              </a>\n            </div>\n          </div>\n\n          <div className=\"platform-category\">\n            <h4>💰 DeFi & Staking</h4>\n            <div className=\"link-grid\">\n              <a href=\"https://waxdao.io/v2/farm/pixeljourney\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">WaxDAO Farm</span>\n                <span className=\"platform-desc\">NFT staking rewards</span>\n              </a>\n              <a href=\"https://www.pfpwizard.xyz/pfp/pixals/buy/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"platform-link\">\n                <span className=\"platform-name\">PFP Wizard Buy</span>\n                <span className=\"platform-desc\">Get your Pixal PFP</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'social-community',\n      title: 'Social & Community',\n      content: (\n        <div className=\"section-content\">\n          <h3>Join the Community</h3>\n          <p>Connect with the Pixel Journey community across various platforms:</p>\n          \n          <div className=\"social-grid\">\n            <a href=\"https://twitter.com/PxJourney\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link twitter\">\n              <div className=\"social-icon\">🐦</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">Twitter/X</span>\n                <span className=\"social-desc\">Latest updates and announcements</span>\n              </div>\n            </a>\n\n            <a href=\"https://t.me/pixel_journey\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link telegram\">\n              <div className=\"social-icon\">📱</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">Telegram</span>\n                <span className=\"social-desc\">Community chat and discussions</span>\n              </div>\n            </a>\n\n            <a href=\"https://discord.gg/waxblockchain\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link discord\">\n              <div className=\"social-icon\">💬</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">WAX Discord</span>\n                <span className=\"social-desc\">Join the broader WAX community</span>\n              </div>\n            </a>\n\n            <a href=\"https://instagram.com/pixeljourney_xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link instagram\">\n              <div className=\"social-icon\">📸</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">Instagram</span>\n                <span className=\"social-desc\">Visual updates and behind-the-scenes</span>\n              </div>\n            </a>\n\n            <a href=\"https://coinmarketcap.com/community/profile/pixeljourney/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link cmc\">\n              <div className=\"social-icon\">📊</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">CoinMarketCap</span>\n                <span className=\"social-desc\">Project profile and metrics</span>\n              </div>\n            </a>\n\n            <a href=\"https://dappradar.com/nft-collection/pixel-journey\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link dappradar\">\n              <div className=\"social-icon\">📈</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">DappRadar</span>\n                <span className=\"social-desc\">NFT collection analytics</span>\n              </div>\n            </a>\n\n            <a href=\"https://pixel-journey.uncut.network/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link uncut\">\n              <div className=\"social-icon\">🎮</div>\n              <div className=\"social-info\">\n                <span className=\"social-name\">Uncut Network</span>\n                <span className=\"social-desc\">Gaming community presence</span>\n              </div>\n            </a>\n          </div>\n        </div>\n      )\n    },\n    {\n      id: 'roadmap',\n      title: 'Development Roadmap',\n      content: (\n        <div className=\"section-content\">\n          <h3>Future Development Roadmap</h3>\n          <p>Planned features and enhancements for the Pixel Journey ecosystem:</p>\n          \n          <div className=\"roadmap-timeline\">\n            <div className=\"roadmap-phase completed\">\n              <div className=\"phase-header\">\n                <h4>Phase 1: Foundation</h4>\n                <span className=\"phase-status completed\">Completed</span>\n              </div>\n              <ul>\n                <li>✅ PxMarket NFT marketplace launch</li>\n                <li>✅ Basic trading functionality</li>\n                <li>✅ User profiles and inventory</li>\n                <li>✅ PXJ token integration</li>\n              </ul>\n            </div>\n\n            <div className=\"roadmap-phase current\">\n              <div className=\"phase-header\">\n                <h4>Phase 2: Enhancement</h4>\n                <span className=\"phase-status current\">Current</span>\n              </div>\n              <ul>\n                <li>✅ Advanced filtering and search</li>\n                <li>✅ Bulk operations</li>\n                <li>🔄 Auction system (Beta)</li>\n                <li>🔄 Enhanced analytics</li>\n              </ul>\n            </div>\n\n            <div className=\"roadmap-phase planned\">\n              <div className=\"phase-header\">\n                <h4>Phase 3: Ecosystem Expansion</h4>\n                <span className=\"phase-status planned\">Q2 2025</span>\n              </div>\n              <ul>\n                <li>🔮 PxCraft crafting system</li>\n                <li>🔮 PxMilestones achievement system</li>\n                <li>🔮 Enhanced gamification</li>\n                <li>🔮 Cross-platform integration</li>\n              </ul>\n            </div>\n\n            <div className=\"roadmap-phase future\">\n              <div className=\"phase-header\">\n                <h4>Phase 4: Advanced Features</h4>\n                <span className=\"phase-status future\">Q3-Q4 2025</span>\n              </div>\n              <ul>\n                <li>🔮 PxQuest mission system</li>\n                <li>🔮 PxDeFi financial features</li>\n                <li>🔮 PxDAO governance</li>\n                <li>🔮 Mobile applications</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  ]\n\n  return (\n    <div className=\"journeymap-page\">\n      <div className=\"page-header\">\n        <h1>Journey Map</h1>\n        <p>Your comprehensive guide to the Pixel Journey ecosystem - current features, future roadmap, and community links</p>\n      </div>\n\n      <div className=\"journeymap-container\">\n        <div className=\"journeymap-sidebar\">\n          <nav className=\"journeymap-nav\">\n            {sections.map((section) => (\n              <button\n                key={section.id}\n                className={`nav-item ${activeSection === section.id ? 'active' : ''}`}\n                onClick={() => setActiveSection(section.id)}\n              >\n                {section.title}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"journeymap-content\">\n          {sections.find(section => section.id === activeSection)?.content}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default JourneyMap","import React, { useState, useEffect } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { stakingService, type BatchTransactionResult } from '../services/stakingService'\nimport { NFTImage } from './FallbackImage'\nimport { log } from '../services/loggingService'\nimport '../css/modal.css'\n\ninterface NFTAsset {\n  asset_id: string\n  template_id: string\n  name: string\n  image: string\n  data: Record<string, unknown>\n}\n\ninterface StakeDataRow {\n  user: string\n  staked_assets: string[]\n}\n\ninterface NFTStakingModalProps {\n  isOpen: boolean\n  onClose: () => void\n  templateId: string\n  templateName: string\n  action: 'stake' | 'unstake'\n  onSuccess?: () => void\n}\n\nconst NFTStakingModal: React.FC<NFTStakingModalProps> = ({ \n  isOpen, \n  onClose, \n  templateId,\n  templateName,\n  action, \n  onSuccess \n}) => {\n  const [assets, setAssets] = useState<NFTAsset[]>([])\n  const [selectedAssets, setSelectedAssets] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [batchProgress, setBatchProgress] = useState<{ current: number; total: number } | null>(null)\n  const [transactionResults, setTransactionResults] = useState<BatchTransactionResult | null>(null)\n  const { session, account } = useWallet()\n  const { addNotification, showSuccess, showError } = useNotifications()\n\n  useEffect(() => {\n    if (isOpen && account) {\n      fetchAssets()\n    }\n  }, [isOpen, account, templateId])\n\n  const fetchAssets = async () => {\n    if (!account) return\n    \n    setIsLoading(true)\n    try {\n      if (action === 'stake') {\n        // Fetch unstaked assets from AtomicAssets API\n        const { apiService } = await import('../services/api')\n        const endpoint = `${apiService.atomicAssetsAPI}/atomicassets/v1/assets?owner=${account}&template_id=${templateId}&page=1&limit=100&order=desc&sort=asset_id`\n        const response = await apiService.fetchWithRetry(endpoint)\n        const data = await response.json()\n        setAssets(data.data || [])\n      } else {\n        // For unstaking, we need to fetch staked assets from contract tables\n        const { apiService } = await import('../services/api')\n        const contractResponse = await apiService.waxRpcCall('/v1/chain/get_table_rows', {\n          json: true,\n          code: 'farms.waxdao',\n          scope: 'farms.waxdao',\n          table: 'stakers',\n          lower_bound: account,\n          upper_bound: account,\n          limit: 1\n        })\n        \n        const contractData = contractResponse as { rows: StakeDataRow[] }\n        const userStakeData = contractData.rows.find((row: StakeDataRow) => row.user === account)\n        const stakedAssetIds = userStakeData?.staked_assets || []\n        \n        // Fetch asset details from AtomicAssets API\n        if (stakedAssetIds.length === 0) {\n          setAssets([])\n        } else {\n          const assetsResponse = await apiService.fetchWithRetry(`${apiService.atomicAssetsAPI}/atomicassets/v1/assets?ids=${stakedAssetIds.join(',')}&page=1&limit=1000`)\n          if (!assetsResponse.ok) {\n            throw new Error('Failed to fetch asset details')\n          }\n          \n          const assetsData = await assetsResponse.json()\n          setAssets(assetsData.data || [])\n        }\n      }\n    } catch (error) {\n      log.error('Failed to fetch staking assets', 'NFTStakingModal.fetchAssets', error as Error, { account })\n      addNotification({ type: 'error', message: 'Failed to load assets' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAssetToggle = (assetId: string) => {\n    setSelectedAssets(prev => \n      prev.includes(assetId) \n        ? prev.filter(id => id !== assetId)\n        : [...prev, assetId]\n    )\n  }\n\n  const handleSelectAll = () => {\n    if (selectedAssets.length === assets.length) {\n      setSelectedAssets([])\n    } else {\n      setSelectedAssets(assets.map(asset => asset.asset_id))\n    }\n  }\n\n  const handleSubmit = async () => {\n    if (!session || selectedAssets.length === 0) return\n\n    setIsProcessing(true)\n    setBatchProgress({ current: 0, total: selectedAssets.length })\n    setTransactionResults(null)\n    \n    try {\n      let result: BatchTransactionResult\n      \n      if (action === 'stake') {\n        result = await stakingService.stakeNFTsBatch(\n          session,\n          selectedAssets,\n          'pixeljourney'\n        )\n      } else {\n        result = await stakingService.unstakeNFTsBatch(\n          session,\n          selectedAssets\n        )\n      }\n      \n      setTransactionResults(result)\n      \n      if (result.success) {\n        showSuccess(\n          'Transaction Successful',\n          `Successfully ${action}d ${result.successful_transactions.length} ${templateName} NFT${result.successful_transactions.length > 1 ? 's' : ''}`\n        )\n        \n        // Close modal after successful transaction\n        setTimeout(() => {\n          onSuccess?.()\n          onClose()\n        }, 2000)\n      } else {\n        const successCount = result.successful_transactions.length\n        const failCount = result.failed_transactions.length\n        \n        if (successCount > 0) {\n          showSuccess(\n            'Partial Success',\n            `${successCount} NFTs ${action}d successfully, ${failCount} failed`\n          )\n        } else {\n          showError(\n            'Transaction Failed',\n            `Failed to ${action} NFTs. Please try again.`\n          )\n        }\n      }\n      \n    } catch (error: unknown) {\n      log.error(`NFT ${action} operation failed`, `NFTStakingModal.handleBatchAction`, error as Error, { action, selectedAssetsCount: selectedAssets.length })\n      const errorMessage = error instanceof Error ? error.message : `Failed to ${action} NFTs`\n      showError(\n        'Transaction Error',\n        errorMessage\n      )\n    } finally {\n      setIsProcessing(false)\n      setBatchProgress(null)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content nft-staking-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>{action === 'stake' ? 'Stake' : 'Unstake'} {templateName} NFTs</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"modal-body\">\n          {isLoading ? (\n            <div className=\"loading-state\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading your {templateName} NFTs...</p>\n            </div>\n          ) : isProcessing ? (\n            <div className=\"processing-state\">\n              <div className=\"loading-spinner\"></div>\n              <p>{action === 'stake' ? 'Staking' : 'Unstaking'} your NFTs...</p>\n              {batchProgress && (\n                <div className=\"batch-progress\">\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-fill\"\n                      style={{ width: `${(batchProgress.current / batchProgress.total) * 100}%` }}\n                    ></div>\n                  </div>\n                  <p>Processing {batchProgress.current} of {batchProgress.total} NFTs</p>\n                </div>\n              )}\n              {transactionResults && (\n                <div className=\"transaction-results\">\n                  <div className=\"results-summary\">\n                    <div className=\"success-count\">\n                      ✅ {transactionResults.successful_transactions.length} successful\n                    </div>\n                    {transactionResults.failed_transactions.length > 0 && (\n                      <div className=\"error-count\">\n                        ❌ {transactionResults.failed_transactions.length} failed\n                      </div>\n                    )}\n                  </div>\n                  {transactionResults.failed_transactions.length > 0 && (\n                    <div className=\"failed-transactions\">\n                      <h4>Failed Transactions:</h4>\n                      {transactionResults.failed_transactions.slice(0, 5).map(failure => (\n                        <div key={failure.asset_id} className=\"failure-item\">\n                          <span>#{failure.asset_id}</span>\n                          <span className=\"error-message\">{failure.error}</span>\n                        </div>\n                      ))}\n                      {transactionResults.failed_transactions.length > 5 && (\n                        <p>... and {transactionResults.failed_transactions.length - 5} more</p>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              <div className=\"selection-controls\">\n                <button \n                  className=\"btn btn-secondary\"\n                  onClick={handleSelectAll}\n                >\n                  {selectedAssets.length === assets.length ? 'Deselect All' : 'Select All'}\n                </button>\n                <span className=\"selection-count\">\n                  {selectedAssets.length} of {assets.length} selected\n                </span>\n              </div>\n              \n              <div className=\"asset-grid\">\n                {assets.length === 0 ? (\n                  <div className=\"no-assets\">\n                    <p>No {templateName} NFTs available to {action}</p>\n                  </div>\n                ) : (\n                  assets.map(asset => (\n                    <div \n                      key={asset.asset_id}\n                      className={`asset-item ${selectedAssets.includes(asset.asset_id) ? 'selected' : ''}`}\n                      onClick={() => handleAssetToggle(asset.asset_id)}\n                    >\n                      <NFTImage \n                        src={asset.image || `https://ipfs.io/ipfs/${asset.data?.img || 'placeholder'}`} \n                        alt={asset.name}\n                      />\n                      <div className=\"asset-id\">#{asset.asset_id}</div>\n                      {selectedAssets.includes(asset.asset_id) && (\n                        <div className=\"selection-indicator\">✓</div>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n            </>\n          )}\n        </div>\n        \n        <div className=\"modal-footer\">\n          <button className=\"btn btn-secondary\" onClick={onClose}>\n            Cancel\n          </button>\n          <button \n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n            disabled={selectedAssets.length === 0 || isProcessing}\n          >\n            {isProcessing ? (\n              <>\n                <div className=\"loading-spinner\"></div>\n                {action === 'stake' ? 'Staking...' : 'Unstaking...'}\n              </>\n            ) : (\n              `${action === 'stake' ? 'Stake' : 'Unstake'} ${selectedAssets.length} NFT${selectedAssets.length !== 1 ? 's' : ''}`\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NFTStakingModal","import React, { useState, useEffect, useCallback } from 'react'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { stakingService, type TransactionResult, type TokenStakeInfo, type TokenFarmInfo } from '../services/stakingService'\nimport { TokenImage } from './FallbackImage'\nimport '../css/modal.css'\n\n// Helper function to get token icon URL\nconst getTokenIcon = (tokenSymbol: string): string => {\n  const tokenIcons: Record<string, string> = {\n    'PXJ': '/img/tokens/pxj.png',\n    'WUF': '/img/tokens/wuf.png',\n    'WAX': '/img/tokens/wax.png',\n    'PIXAL': '/img/tokens/pixal.png'\n  };\n  \n  return tokenIcons[tokenSymbol.toUpperCase()] || '/img/tokens/default.png';\n};\n\ninterface TokenStakingModalProps {\n  isOpen: boolean\n  onClose: () => void\n  action: 'stake' | 'unstake' | 'claim'\n  farmName?: string\n  onSuccess?: () => void\n}\n\nconst TokenStakingModal: React.FC<TokenStakingModalProps> = ({\n  isOpen,\n  onClose,\n  action,\n  farmName = 'pxjfarm1',\n  onSuccess\n}) => {\n  const { session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  const [amount, setAmount] = useState('')\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [farmInfo, setFarmInfo] = useState<TokenFarmInfo | null>(null)\n  const [userStakeInfo, setUserStakeInfo] = useState<TokenStakeInfo | null>(null)\n  const [userBalance, setUserBalance] = useState(0)\n  const [loading, setLoading] = useState(false)\n\n  // Fetch farm and user data when modal opens\n  const fetchData = useCallback(async () => {\n    if (!session) return\n    \n    setLoading(true)\n    try {\n      // Fetch farm info\n      const farm = await stakingService.getTokenFarmInfo(farmName)\n      setFarmInfo(farm)\n      \n      // Fetch user staking info\n      const userStake = await stakingService.getTokenStakingInfo(session.actor.toString(), farmName)\n      setUserStakeInfo(userStake)\n      \n      // Fetch user PXJ balance\n      const balanceResponse = await fetch('https://wax.greymass.com/v1/chain/get_currency_balance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: 'pixeljourney',\n          account: session.actor.toString(),\n          symbol: 'PXJ'\n        })\n      })\n      \n      if (balanceResponse.ok) {\n        const balanceData = await balanceResponse.json()\n        const balance = balanceData.length > 0 ? parseFloat(balanceData[0].split(' ')[0]) : 0\n        setUserBalance(balance)\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error)\n      showError('Failed to load staking data')\n    } finally {\n      setLoading(false)\n    }\n  }, [session, setLoading, farmName, setFarmInfo, setUserStakeInfo, setUserBalance, showError])\n\n  useEffect(() => {\n    if (isOpen && session) {\n      fetchData()\n    }\n  }, [isOpen, session, farmName, fetchData])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!session || isProcessing) return\n\n    if (action !== 'claim' && (!amount || parseFloat(amount) <= 0)) {\n      showError('Please enter a valid amount')\n      return\n    }\n\n    if (action === 'stake' && parseFloat(amount) > userBalance) {\n      showError('Insufficient PXJ balance')\n      return\n    }\n\n    if (action === 'unstake' && userStakeInfo && parseFloat(amount) > userStakeInfo.staked_amount) {\n      showError('Amount exceeds staked balance')\n      return\n    }\n\n    setIsProcessing(true)\n    try {\n      let result: TransactionResult\n      const formattedAmount = `${parseFloat(amount).toFixed(4)} PXJ`\n\n      switch (action) {\n        case 'stake':\n          result = await stakingService.stakeTokens(session, formattedAmount, farmName)\n          break\n        case 'unstake':\n          result = await stakingService.unstakeTokens(session, formattedAmount, farmName)\n          break\n        case 'claim':\n          result = await stakingService.claimTokenFarmRewards(session, farmName)\n          break\n        default:\n          throw new Error('Invalid action')\n      }\n\n      if (result.success) {\n        showSuccess(`Successfully ${action === 'stake' ? 'staked' : action === 'unstake' ? 'unstaked' : 'claimed'} tokens!`)\n        onSuccess?.()\n        onClose()\n      } else {\n        showError(result.error || `Failed to ${action} tokens`)\n      }\n    } catch (error) {\n      console.error(`Error ${action}ing tokens:`, error)\n      showError(error instanceof Error ? error.message : `Failed to ${action} tokens`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const formatTokenAmount = (amount: number) => {\n    return amount.toLocaleString(undefined, { minimumFractionDigits: 4, maximumFractionDigits: 4 })\n  }\n\n  const formatTimeRemaining = (timestamp: number) => {\n    const now = Date.now() / 1000\n    const remaining = timestamp - now\n    \n    if (remaining <= 0) return 'Available now'\n    \n    const days = Math.floor(remaining / 86400)\n    const hours = Math.floor((remaining % 86400) / 3600)\n    const minutes = Math.floor((remaining % 3600) / 60)\n    \n    if (days > 0) return `${days}d ${hours}h remaining`\n    if (hours > 0) return `${hours}h ${minutes}m remaining`\n    return `${minutes}m remaining`\n  }\n\n  if (!isOpen) return null\n\n  const getModalTitle = () => {\n    switch (action) {\n      case 'stake': return 'Stake PXJ Tokens'\n      case 'unstake': return 'Unstake PXJ Tokens'\n      case 'claim': return 'Claim Rewards'\n      default: return 'Token Staking'\n    }\n  }\n\n  const getActionButtonText = () => {\n    if (isProcessing) return 'Processing...'\n    switch (action) {\n      case 'stake': return 'Stake Tokens'\n      case 'unstake': return 'Unstake Tokens'\n      case 'claim': return 'Claim Rewards'\n      default: return 'Submit'\n    }\n  }\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content token-staking-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>{getModalTitle()}</h3>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"modal-body\">\n          {loading ? (\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading staking data...</p>\n            </div>\n          ) : (\n            <>\n              {/* Farm Information */}\n              {farmInfo && (\n                <div className=\"farm-info-section\">\n                  <h4>Farm Information</h4>\n                  <div className=\"info-grid\">\n                    <div className=\"info-item\">\n                      <span className=\"label\">Farm:</span>\n                      <span className=\"value\">{farmInfo.farm_name}</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">Total Staked:</span>\n                      <span className=\"value\">{formatTokenAmount(farmInfo.total_staked)} PXJ</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">Vesting Period:</span>\n                      <span className=\"value\">{Math.floor(farmInfo.vesting_time / 86400)} days</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* User Staking Information */}\n              {userStakeInfo && (\n                <div className=\"user-stake-info\">\n                  <h4>Your Staking Position</h4>\n                  <div className=\"info-grid\">\n                    <div className=\"info-item\">\n                      <span className=\"label\">Staked Amount:</span>\n                      <span className=\"value\">{formatTokenAmount(userStakeInfo.staked_amount)} PXJ</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">Pending Rewards:</span>\n                      <span className=\"value\">\n                        {userStakeInfo.pending_rewards.map(reward => \n                          `${formatTokenAmount(reward.amount)} ${reward.token}`\n                        ).join(', ') || 'None'}\n                      </span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">Unlock Time:</span>\n                      <span className=\"value\">{formatTimeRemaining(userStakeInfo.vesting_time)}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Balance Information */}\n              <div className=\"balance-info\">\n                <div className=\"balance-item\">\n                  <TokenImage src={getTokenIcon('PXJ')} alt=\"PXJ\" />\n                  <span>Available: {formatTokenAmount(userBalance)} PXJ</span>\n                </div>\n              </div>\n\n              {/* Action Form */}\n              <form onSubmit={handleSubmit} className=\"staking-form\">\n                {action !== 'claim' && (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"amount\">Amount (PXJ)</label>\n                    <div className=\"input-group\">\n                      <input\n                        type=\"number\"\n                        id=\"amount\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        placeholder=\"0.0000\"\n                        step=\"0.0001\"\n                        min=\"0\"\n                        max={action === 'stake' ? userBalance : userStakeInfo?.staked_amount || 0}\n                        required\n                        disabled={isProcessing}\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"max-btn\"\n                        onClick={() => {\n                          const maxAmount = action === 'stake' ? userBalance : userStakeInfo?.staked_amount || 0\n                          setAmount(maxAmount.toFixed(4))\n                        }}\n                        disabled={isProcessing}\n                      >\n                        MAX\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {action === 'claim' && userStakeInfo && userStakeInfo.pending_rewards.length > 0 && (\n                  <div className=\"rewards-preview\">\n                    <h4>Rewards to Claim:</h4>\n                    <div className=\"rewards-list\">\n                      {userStakeInfo.pending_rewards.map((reward, index) => (\n                        <div key={index} className=\"reward-item\">\n                          <TokenImage src={getTokenIcon(reward.token)} alt={reward.token} />\n                          <span>{formatTokenAmount(reward.amount)} {reward.token}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"form-actions\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    onClick={onClose}\n                    disabled={isProcessing}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    disabled={isProcessing || (action !== 'claim' && !amount)}\n                  >\n                    {getActionButtonText()}\n                  </button>\n                </div>\n              </form>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TokenStakingModal","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useWallet } from '../hooks/useWallet'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { stakingService, type TokenStakeInfo, type TokenFarmInfo } from '../services/stakingService'\nimport { apiService } from '../services/api'\nimport { log } from '../services/loggingService'\nimport { WharfKitService } from '../services/wharfkit'\nimport NFTStakingModal from './NFTStakingModal'\nimport TokenStakingModal from './TokenStakingModal'\nimport CraftingModal from './CraftingModal'\nimport { NFTImage, TokenImage } from './FallbackImage'\nimport '../css/staking.css'\n\ninterface NFTTemplate {\n  template_id: string\n  name: string\n  type: string\n  image: string\n  owned_count: number\n  staked_count: number\n  rewards_per_hour: {\n    pxj: number\n    wuf: number\n  }\n  estimated_value: number\n  apr: number\n  rarity: 'Common' | 'Uncommon' | 'Rare' | 'Epic' | 'Legendary'\n  market_price?: number\n  available_for_sale?: number\n}\n\ninterface StakingRewards {\n  pxj: number\n  wuf: number\n}\n\ninterface QuickBuyModalProps {\n  template: NFTTemplate | null\n  isOpen: boolean\n  onClose: () => void\n}\n\n// Helper functions to fetch real template data\nconst getTemplateEstimatedValue = async (templateId: string, rarity: string): Promise<number> => {\n  try {\n    // Try to get recent sales data for this template\n    const sales = await apiService.getSales({ template: templateId, limit: 10 });\n    if (sales && sales.data.length > 0) {\n      interface SaleData {\n        price?: {\n          amount: string\n        }\n      }\n      \n      // Calculate average price from recent sales\n      const avgPrice = sales.data.reduce((sum: number, sale: SaleData) => {\n        const price = parseFloat(sale.price?.amount || '0');\n        return sum + price;\n      }, 0) / sales.data.length;\n      return Math.floor(avgPrice * 100); // Convert to appropriate scale\n    }\n  } catch (error) {\n    log.warn('Could not fetch template sales data', 'Staking', error);\n  }\n  \n  // Fallback: estimate based on rarity\n  const rarityMultipliers = {\n    'Common': 1000,\n    'Uncommon': 2500,\n    'Rare': 5000,\n    'Epic': 15000,\n    'Legendary': 50000\n  };\n  return rarityMultipliers[rarity as keyof typeof rarityMultipliers] || 1000;\n};\n\nconst getTemplateMarketPrice = async (templateId: string): Promise<number> => {\n  try {\n    // Try to get current listings for this template\n    const listings = await apiService.getSales({ template: templateId, limit: 5 });\n    if (listings && listings.data.length > 0) {\n      interface ListingData {\n        price?: {\n          amount: string\n        }\n      }\n      \n      // Get the lowest listing price\n      const prices = listings.data.map((listing: ListingData) => parseFloat(listing.price?.amount || '0'));\n      const minPrice = Math.min(...prices.filter((p: number) => p > 0));\n      return Math.floor(minPrice);\n    }\n  } catch (error) {\n    log.warn('Could not fetch template listings', 'Staking', error);\n  }\n  \n  // Fallback: return a reasonable default\n  return 50;\n};\n\nconst QuickBuyModal: React.FC<QuickBuyModalProps> = ({ template, isOpen, onClose }) => {\n  if (!isOpen || !template) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content quick-buy-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Quick Buy - {template.name}</h3>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"buy-item-preview\">\n            <NFTImage src={template.image} alt={template.name} />\n            <div className=\"item-details\">\n              <h4>{template.name}</h4>\n              <p className=\"rarity\">{template.rarity}</p>\n              <p className=\"price\">{template.market_price || 'N/A'} WAX</p>\n              <p className=\"available\">{template.available_for_sale || 0} available</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-secondary\" onClick={onClose}>Cancel</button>\n          <button className=\"btn btn-primary\">Buy Now</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Staking: React.FC = () => {\n  const { session, isConnected, login } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  const [loading, setLoading] = useState(false)\n  \n  // NFT Staking State\n  const [nftTemplates, setNftTemplates] = useState<NFTTemplate[]>([])\n  const [rewards, setRewards] = useState<StakingRewards>({ pxj: 0, wuf: 0 })\n  const [nftLoading, setNftLoading] = useState(false)\n  const [totalStakingPower, setTotalStakingPower] = useState(0)\n  const [selectedTemplate, setSelectedTemplate] = useState<NFTTemplate | null>(null)\n  const [stakingModalOpen, setStakingModalOpen] = useState(false)\n  const [craftingModalOpen, setCraftingModalOpen] = useState(false)\n  const [quickBuyModalOpen, setQuickBuyModalOpen] = useState(false)\n  const [selectedBuyTemplate, setSelectedBuyTemplate] = useState<NFTTemplate | null>(null)\n  const [simulationMode, setSimulationMode] = useState(false)\n\n  // Token Staking State\n  const [tokenStakeInfo, setTokenStakeInfo] = useState<TokenStakeInfo | null>(null)\n  const [tokenFarmInfo, setTokenFarmInfo] = useState<TokenFarmInfo | null>(null)\n  const [tokenStakingModalOpen, setTokenStakingModalOpen] = useState(false)\n  const [tokenStakingAction, setTokenStakingAction] = useState<'stake' | 'unstake' | 'claim'>('stake')\n  const [tokenLoading, setTokenLoading] = useState(false)\n  const [userPxjBalance, setUserPxjBalance] = useState(0)\n\n  // Default ingredient templates based on HTML example\n  const defaultTemplates: NFTTemplate[] = useMemo(() => [\n    {\n      template_id: '1001',\n      name: 'Black Ingredient',\n      type: 'Legendary',\n      rarity: 'Legendary',\n      image: '', // Will be handled by NFTImage component fallback\n      owned_count: 0,\n      staked_count: 0,\n      rewards_per_hour: { pxj: 50, wuf: 25 },\n      estimated_value: 100000,\n      apr: 120,\n      market_price: 2500,\n      available_for_sale: 3\n    },\n    {\n      template_id: '1002',\n      name: 'Tertiary Ingredient',\n      type: 'Epic',\n      rarity: 'Epic',\n      image: '', // Will be handled by NFTImage component fallback\n      owned_count: 0,\n      staked_count: 0,\n      rewards_per_hour: { pxj: 10, wuf: 5 },\n      estimated_value: 25000,\n      apr: 80,\n      market_price: 500,\n      available_for_sale: 12\n    },\n    {\n      template_id: '1003',\n      name: 'Secondary Ingredient',\n      type: 'Rare',\n      rarity: 'Rare',\n      image: '', // Will be handled by NFTImage component fallback\n      owned_count: 0,\n      staked_count: 0,\n      rewards_per_hour: { pxj: 2, wuf: 1 },\n      estimated_value: 5000,\n      apr: 40,\n      market_price: 100,\n      available_for_sale: 25\n    },\n    {\n      template_id: '1004',\n      name: 'Primary Ingredient',\n      type: 'Common',\n      rarity: 'Common',\n      image: '', // Will be handled by NFTImage component fallback\n      owned_count: 0,\n      staked_count: 0,\n      rewards_per_hour: { pxj: 0.1, wuf: 0.05 },\n      estimated_value: 1000,\n      apr: 10,\n      market_price: 25,\n      available_for_sale: 50\n    }\n  ], [])\n\n  const fetchNFTTemplates = useCallback(async () => {\n    setNftLoading(true)\n    try {\n      if (!session) {\n        // Show default templates when not connected\n        setNftTemplates(defaultTemplates)\n        setNftLoading(false)\n        return\n      }\n\n      // Try to fetch real data from APIs\n      try {\n        const { apiService } = await import('../services/api')\n        const templatesResponse = await apiService.fetchWithRetry(\n          `${apiService.atomicAssetsAPI}/atomicassets/v1/templates?collection_name=pixeljourney&schema_name=ingredients&page=1&limit=100&order=desc&sort=created`\n        )\n        \n        if (!templatesResponse.ok) {\n          throw new Error('AtomicAssets API failed')\n        }\n        \n        const templatesData = await templatesResponse.json()\n        \n        interface TemplateData {\n          template_id: string\n          name?: string\n          immutable_data?: Record<string, unknown>\n          [key: string]: unknown\n        }\n        \n        // Get owned counts for all templates using batch method\n        const templateIds = templatesData.data.slice(0, 10).map((t: TemplateData) => t.template_id)\n        const countsResult = await apiService.getAssetCountsBatch(templateIds, session.actor.toString())\n        \n        // Process templates with user data\n        const templates: NFTTemplate[] = await Promise.all(\n          templatesData.data.slice(0, 10).map(async (template: TemplateData) => {\n            try {\n              // Get owned count from batch result\n              const owned_count = countsResult.data[template.template_id] || 0\n              \n              // Get staked count from contract tables with fallback\n              let staked_count = 0\n              try {\n                const stakedResponse = await fetch('https://wax.greymass.com/v1/chain/get_table_rows', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    json: true,\n                    code: 'farms.waxdao',\n                    scope: 'farms.waxdao',\n                    table: 'stakers',\n                    lower_bound: WharfKitService.safeGetActor(session),\n                    upper_bound: WharfKitService.safeGetActor(session),\n                    limit: 1\n                  })\n                })\n                \n                if (stakedResponse.ok) {\n                  const stakedData = await stakedResponse.json()\n                  interface StakeRow {\n                    user: string\n                    staked_assets?: unknown[]\n                  }\n                  \n                  const userStakeData = stakedData.rows.find((row: StakeRow) => row.user === session.actor.toString())\n                  const stakedAssets = userStakeData?.staked_assets || []\n                  \n                  // Count assets for this specific template\n                  // Note: This would require fetching asset details to match template_id\n                  // For now, using total staked count as approximation\n                  staked_count = stakedAssets.length\n                }\n              } catch (error) {\n                log.warn('Failed to fetch staked count for template', 'Staking', { templateId: template.template_id, error })\n              }\n              \n              // Calculate rewards and APR based on rarity\n              const rarity = String(template.immutable_data?.rarity || 'Common')\n              let baseReward = 0.1\n              let apr = 5\n              \n              switch (rarity.toLowerCase()) {\n                case 'legendary':\n                  baseReward = 50\n                  apr = 120\n                  break\n                case 'epic':\n                  baseReward = 10\n                  apr = 80\n                  break\n                case 'rare':\n                  baseReward = 2\n                  apr = 40\n                  break\n                case 'uncommon':\n                  baseReward = 0.5\n                  apr = 20\n                  break\n                default: // common\n                  baseReward = 0.1\n                  apr = 10\n              }\n              \n              return {\n                template_id: template.template_id,\n                name: template.immutable_data?.name || `Template ${template.template_id}`,\n                type: template.immutable_data?.type || rarity,\n                rarity: rarity as 'Common' | 'Uncommon' | 'Rare' | 'Epic' | 'Legendary',\n                image: template.immutable_data?.img ? \n                  `https://ipfs.io/ipfs/${template.immutable_data.img}` : \n                  '', // Will be handled by NFTImage component fallback\n                owned_count,\n                staked_count,\n                rewards_per_hour: { \n                  pxj: baseReward, \n                  wuf: baseReward * 0.5 \n                },\n                estimated_value: await getTemplateEstimatedValue(template.template_id, rarity as string),\n                apr,\n                market_price: await getTemplateMarketPrice(template.template_id),\n                available_for_sale: Math.floor(Math.random() * 20) + 1\n              }\n            } catch (error) {\n              log.error('Error processing template', 'Staking', error as Error)\n              return null\n            }\n          })\n        )\n        \n        const validTemplates = templates.filter(t => t !== null) as NFTTemplate[]\n        setNftTemplates(validTemplates.length > 0 ? validTemplates : defaultTemplates)\n        \n        // Log any errors from batch operation\n        if (countsResult.errors.length > 0) {\n          log.warn('Some template counts could not be fetched', 'Staking', { errors: countsResult.errors })\n        }\n        \n      } catch (apiError) {\n        log.warn('API fetch failed, using default templates', 'Staking', apiError)\n        setNftTemplates(defaultTemplates)\n      }\n      \n    } catch (error) {\n      log.error('Failed to fetch NFT templates', 'Staking', error as Error)\n      setNftTemplates(defaultTemplates)\n    } finally {\n      setNftLoading(false)\n    }\n  }, [session, setNftLoading, setNftTemplates, defaultTemplates])\n\n  const fetchRewards = useCallback(async () => {\n    if (!session) return\n    \n    try {\n      const stakingInfo = await stakingService.getStakingInfo(session.actor.toString())\n      \n      // Convert StakingReward[] to our local format\n      const rewardsData = stakingInfo.pending_rewards.reduce((acc, reward) => {\n        if (reward.token === 'PXJ') {\n          acc.pxj = reward.amount\n        } else if (reward.token === 'WUF') {\n          acc.wuf = reward.amount\n        }\n        return acc\n      }, { pxj: 0, wuf: 0 })\n      \n      setRewards(rewardsData)\n      setTotalStakingPower(stakingInfo.total_staking_power)\n      \n      // Update NFT templates with actual staked counts\n      const updatedTemplates = nftTemplates.map(template => {\n        const stakedNfts = stakingInfo.staked_nfts.filter(\n          nft => nft.template_id === template.template_id\n        )\n        return {\n          ...template,\n          staked_count: stakedNfts.length,\n          rewards_per_hour: stakedNfts.length > 0 ? \n            stakedNfts[0].rewards_per_hour as { pxj: number; wuf: number } : template.rewards_per_hour\n        }\n      })\n      \n      setNftTemplates(updatedTemplates)\n      \n    } catch (error) {\n      log.error('Failed to fetch rewards', 'Staking', error as Error)\n      // Fallback to local calculation for backwards compatibility\n      const now = Date.now()\n      const lastClaimTime = localStorage.getItem(`lastClaimTime_${WharfKitService.safeGetActor(session)}`) || now.toString()\n      const elapsedSeconds = (now - parseInt(lastClaimTime)) / 1000\n      const elapsedHours = elapsedSeconds / 3600\n      \n      const calculatedRewards = nftTemplates.reduce((acc, template) => {\n        const stakedPxjRewards = template.staked_count * template.rewards_per_hour.pxj * Math.floor(elapsedHours)\n        const stakedWufRewards = template.staked_count * template.rewards_per_hour.wuf * Math.floor(elapsedHours)\n        return {\n          pxj: acc.pxj + stakedPxjRewards,\n          wuf: acc.wuf + stakedWufRewards\n        }\n      }, { pxj: 0, wuf: 0 })\n      \n      setRewards(calculatedRewards)\n    }\n  }, [session, nftTemplates, setRewards, setTotalStakingPower, setNftTemplates])\n\n  const fetchTokenStakingData = useCallback(async () => {\n    if (!session) return\n    \n    setTokenLoading(true)\n    try {\n      // Fetch token farm info\n      const farmInfo = await stakingService.getTokenFarmInfo('pxjfarm1')\n      setTokenFarmInfo(farmInfo)\n      \n      // Fetch user token staking info\n      const userStakeInfo = await stakingService.getTokenStakingInfo(session.actor.toString(), 'pxjfarm1')\n      setTokenStakeInfo(userStakeInfo)\n      \n      // Fetch user PXJ balance\n      const balanceResponse = await fetch('https://wax.greymass.com/v1/chain/get_currency_balance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: 'pixeljourney',\n          account: session.actor.toString(),\n          symbol: 'PXJ'\n        })\n      })\n      \n      if (balanceResponse.ok) {\n        const balanceData = await balanceResponse.json()\n        const balance = balanceData.length > 0 ? parseFloat(balanceData[0].split(' ')[0]) : 0\n        setUserPxjBalance(balance)\n      }\n    } catch (error) {\n      log.error('Failed to fetch token staking data', 'Staking', error as Error)\n    } finally {\n      setTokenLoading(false)\n    }\n  }, [session, setTokenLoading, setTokenFarmInfo, setTokenStakeInfo, setUserPxjBalance])\n\n  const openTokenStakingModal = (action: 'stake' | 'unstake' | 'claim') => {\n    setTokenStakingAction(action)\n    setTokenStakingModalOpen(true)\n  }\n\n  const closeTokenStakingModal = () => {\n    setTokenStakingModalOpen(false)\n  }\n\n  const claimRewards = async () => {\n    if (!session) {\n      showError('Error', 'Please connect your wallet first')\n      return\n    }\n\n    // Check if there are rewards to claim\n    if (rewards.pxj === 0 && rewards.wuf === 0) {\n      showError('Error', 'No rewards available to claim')\n      return\n    }\n\n    setLoading(true)\n    try {\n      const result = await stakingService.claimAllRewards(session, 'pixeljourney')\n      \n      if (result.success) {\n        const claimedAmount = `PXJ: ${rewards.pxj.toFixed(1)} | WUF: ${rewards.wuf.toFixed(1)}`\n        showSuccess('Success', `Rewards claimed successfully! ${claimedAmount}`)\n        \n        // Reset rewards display and refresh data\n        setRewards({ pxj: 0, wuf: 0 })\n        await fetchRewards()\n        \n        // Store the claim time for local tracking\n        const now = Date.now()\n        localStorage.setItem(`lastClaimTime_${WharfKitService.safeGetActor(session)}`, now.toString())\n      } else {\n        showError('Error', result.error || 'Failed to claim rewards')\n      }\n      \n    } catch (error) {\n      log.error('Failed to claim rewards', 'Staking', error as Error)\n      showError('Error', 'Failed to claim rewards. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const openNFTStakingModal = (template: NFTTemplate) => {\n    setSelectedTemplate(template)\n    setStakingModalOpen(true)\n  }\n\n  const closeNFTStakingModal = () => {\n    setStakingModalOpen(false)\n    setSelectedTemplate(null)\n  }\n\n  const openQuickBuyModal = (template: NFTTemplate) => {\n    setSelectedBuyTemplate(template)\n    setQuickBuyModalOpen(true)\n  }\n\n  const closeQuickBuyModal = () => {\n    setQuickBuyModalOpen(false)\n    setSelectedBuyTemplate(null)\n  }\n\n  const refreshAllData = async () => {\n    setLoading(true)\n    await Promise.all([\n      fetchNFTTemplates(),\n      fetchRewards(),\n      fetchTokenStakingData()\n    ])\n    setLoading(false)\n  }\n\n  const getRarityColor = (rarity: string) => {\n    switch (rarity.toLowerCase()) {\n      case 'legendary': return '#f59e0b'\n      case 'epic': return '#8b5cf6'\n      case 'rare': return '#3b82f6'\n      case 'uncommon': return '#10b981'\n      default: return '#6b7280'\n    }\n  }\n\n  useEffect(() => {\n    fetchNFTTemplates()\n    if (session) {\n      fetchRewards()\n      fetchTokenStakingData()\n    }\n  }, [session, fetchNFTTemplates, fetchRewards, fetchTokenStakingData])\n\n  // Auto-refresh data\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (session) {\n        fetchRewards()\n        fetchTokenStakingData()\n      }\n    }, 30000) // Refresh rewards every 30 seconds\n\n    return () => clearInterval(interval)\n  }, [session, nftTemplates, fetchRewards, fetchTokenStakingData])\n\n  // Calculate total staking power\n  useEffect(() => {\n    const totalPower = nftTemplates.reduce((sum, template) => \n      sum + (template.staked_count * (template.rewards_per_hour.pxj + template.rewards_per_hour.wuf)), 0\n    )\n    setTotalStakingPower(totalPower)\n  }, [nftTemplates])\n\n  if (!isConnected) {\n    return (\n      <div className=\"staking-container\">\n        <div className=\"connect-wallet-prompt\">\n          <h2>Connect Your Wallet</h2>\n          <p>Connect your WAX wallet to access NFT staking features</p>\n          <button className=\"btn btn-primary\" onClick={login}>\n            Connect Wallet\n          </button>\n        </div>\n        \n        {/* Show default templates even when not connected */}\n        <div className=\"nft-staking-section\">\n          <h2>Pixel Journey NFT Staking</h2>\n          <p className=\"section-description\">Stake your Pixel Journey ingredients to earn PXJ and WUF rewards</p>\n          \n          <div className=\"template-grid\">\n            {defaultTemplates.map((template) => (\n              <div key={template.template_id} className=\"template-card\">\n                <div className=\"template-image\">\n                  <NFTImage \n                    src={template.image} \n                    alt={template.name}\n                    width={160}\n                    height={160}\n                    fallbackText={template.name}\n                  />\n                  <div \n                    className=\"rarity-badge\"\n                    style={{ backgroundColor: getRarityColor(template.rarity) }}\n                  >\n                    {template.rarity}\n                  </div>\n                </div>\n                <div className=\"template-info\">\n                  <div className=\"template-header\">\n                    <div className=\"template-name\">{template.name}</div>\n                    <div className=\"template-apr\">{template.apr}% APR</div>\n                  </div>\n                  <div className=\"template-stats\">\n                    <div className=\"stat-row\">\n                      <div className=\"stat-item\">\n                        <div className=\"stat-value\">{template.rewards_per_hour.pxj}</div>\n                        <div className=\"stat-label\">PXJ/hr</div>\n                      </div>\n                      <div className=\"stat-item\">\n                        <div className=\"stat-value\">{template.rewards_per_hour.wuf}</div>\n                        <div className=\"stat-label\">WUF/hr</div>\n                      </div>\n                    </div>\n                    <div className=\"staking-status\">\n                      <span>Connect wallet to view your assets</span>\n                    </div>\n                  </div>\n                  <div className=\"template-actions\">\n                    <button \n                      className=\"btn btn-secondary\"\n                      onClick={() => openQuickBuyModal(template)}\n                    >\n                      Quick Buy\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <QuickBuyModal\n          template={selectedBuyTemplate}\n          isOpen={quickBuyModalOpen}\n          onClose={closeQuickBuyModal}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"staking-container\">\n      {/* Header with refresh button */}\n      <div className=\"staking-header\">\n        <div className=\"header-content\">\n          <h1>NFT Staking Dashboard</h1>\n          <button\n            className=\"refresh-btn\"\n            onClick={refreshAllData}\n            disabled={loading}\n          >\n            {loading ? '🔄' : '↻'} Refresh\n          </button>\n        </div>\n      </div>\n\n      {/* Staking Portal Section */}\n      <div className=\"staking-portal-section\">\n        <div className=\"portal-card\">\n          <div className=\"portal-header\">\n            <div className=\"portal-icon\">🚀</div>\n            <div className=\"portal-info\">\n              <h2>Advanced Staking Portal</h2>\n              <p>Access our comprehensive staking platform with advanced features, analytics, and enhanced rewards management.</p>\n            </div>\n          </div>\n          <div className=\"portal-features\">\n            <div className=\"feature-item\">\n              <span className=\"feature-icon\">📊</span>\n              <span>Advanced Analytics</span>\n            </div>\n            <div className=\"feature-item\">\n              <span className=\"feature-icon\">⚡</span>\n              <span>Enhanced Rewards</span>\n            </div>\n            <div className=\"feature-item\">\n              <span className=\"feature-icon\">🔧</span>\n              <span>Advanced Tools</span>\n            </div>\n          </div>\n          <div className=\"portal-actions\">\n            <a \n              href=\"https://stake.pixeljourney.xyz\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"btn btn-primary portal-btn\"\n            >\n              Launch Staking Portal\n              <svg className=\"external-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Bar - Hidden by default as per HTML example */}\n      <div className=\"stats-bar\" style={{ display: 'none' }}>\n        <div className=\"stat\">\n          <TokenImage src=\"/img/tokens/pxj.png\" alt=\"PXJ\" />\n          <span>PXJ Balance: 0</span>\n        </div>\n        <div className=\"stat\">\n          <TokenImage src=\"/img/tokens/wuf.png\" alt=\"WUF\" />\n          <span>WUF Balance: 0</span>\n        </div>\n      </div>\n\n      {/* Dashboard Row with Rewards and Quick Claim */}\n      <div className=\"dashboard-row\">\n        {/* Rewards Section */}\n        <div className=\"rewards-section\" id=\"rewardsSection\" style={{ display: (rewards.pxj > 0 || rewards.wuf > 0) ? 'block' : 'none' }}>\n          <div className=\"rewards-header\">\n            <h3>Claimable Rewards</h3>\n            <div className=\"simulation-toggle\" onClick={() => setSimulationMode(!simulationMode)}>\n              <div className={`toggle ${simulationMode ? 'active' : ''}`}></div>\n            </div>\n          </div>\n          <div id=\"claimableRewards\">\n            {rewards.pxj.toFixed(2)} PXJ + {rewards.wuf.toFixed(2)} WUF\n          </div>\n          <button \n            className=\"claim-btn\"\n            onClick={claimRewards}\n            disabled={loading}\n          >\n            {loading ? 'Claiming...' : 'Claim All Rewards'}\n          </button>\n          {simulationMode && (\n            <div className=\"simulation-status\">\n              🔴 SIMULATION MODE ACTIVE\n            </div>\n          )}\n        </div>\n\n        {/* Quick Claim Section */}\n        <div className=\"quick-claim-section\">\n          <h4>Quick Actions</h4>\n          <button \n            className=\"quick-claim-btn\"\n            onClick={() => setCraftingModalOpen(true)}\n          >\n            Open Crafting\n          </button>\n        </div>\n      </div>\n\n      {/* Total Staking Power */}\n      {totalStakingPower > 0 && (\n        <div className=\"total-power\">\n          <h3>Total Staking Power</h3>\n          <div className=\"power-value-container\">\n            <div className=\"power-value\">{totalStakingPower.toFixed(1)}</div>\n            <div className=\"power-rate\">/hr</div>\n          </div>\n          <p>Combined rewards per hour from all staked NFTs</p>\n        </div>\n      )}\n\n      {/* Token Staking Section */}\n      <div className=\"token-staking-section\">\n        <div className=\"token-staking-header\">\n          <h2>PXJ Token Staking</h2>\n          <p className=\"section-description\">Stake your PXJ tokens in the pxjfarm1 to earn additional rewards</p>\n        </div>\n\n        {tokenLoading ? (\n          <div className=\"loading-state\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading token staking data...</p>\n          </div>\n        ) : (\n          <div className=\"token-staking-content\">\n            {/* Token Farm Info Card */}\n            {tokenFarmInfo && (\n              <div className=\"token-farm-card\">\n                <div className=\"farm-header\">\n                  <div className=\"farm-icon\">\n                    <TokenImage src=\"/img/tokens/pxj.png\" alt=\"PXJ\" />\n                  </div>\n                  <div className=\"farm-info\">\n                    <h3>{tokenFarmInfo.farm_name}</h3>\n                    <p className=\"farm-description\">PXJ Token Farm</p>\n                  </div>\n                </div>\n                \n                <div className=\"farm-stats\">\n                  <div className=\"stat-item\">\n                    <div className=\"stat-label\">Total Staked</div>\n                    <div className=\"stat-value\">{tokenFarmInfo.total_staked.toLocaleString()} PXJ</div>\n                  </div>\n                  <div className=\"stat-item\">\n                    <div className=\"stat-label\">Vesting Period</div>\n                    <div className=\"stat-value\">{Math.floor(tokenFarmInfo.vesting_time / 86400)} days</div>\n                  </div>\n                  <div className=\"stat-item\">\n                    <div className=\"stat-label\">Your Balance</div>\n                    <div className=\"stat-value\">{userPxjBalance.toLocaleString()} PXJ</div>\n                  </div>\n                </div>\n\n                {/* User Staking Position */}\n                {tokenStakeInfo && (\n                  <div className=\"user-position\">\n                    <h4>Your Staking Position</h4>\n                    <div className=\"position-stats\">\n                      <div className=\"position-item\">\n                        <span className=\"label\">Staked:</span>\n                        <span className=\"value\">{tokenStakeInfo.staked_amount.toLocaleString()} PXJ</span>\n                      </div>\n                      <div className=\"position-item\">\n                        <span className=\"label\">Pending Rewards:</span>\n                        <span className=\"value\">\n                          {tokenStakeInfo.pending_rewards.length > 0 \n                            ? tokenStakeInfo.pending_rewards.map(r => `${r.amount.toFixed(4)} ${r.token}`).join(', ')\n                            : 'None'\n                          }\n                        </span>\n                      </div>\n                      <div className=\"position-item\">\n                        <span className=\"label\">Unlock Time:</span>\n                        <span className=\"value\">\n                          {tokenStakeInfo.vesting_time > Date.now() / 1000 \n                            ? `${Math.ceil((tokenStakeInfo.vesting_time - Date.now() / 1000) / 86400)} days remaining`\n                            : 'Available now'\n                          }\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Action Buttons */}\n                <div className=\"token-actions\">\n                  <button \n                    className=\"btn btn-primary\"\n                    onClick={() => openTokenStakingModal('stake')}\n                    disabled={!isConnected || userPxjBalance <= 0}\n                  >\n                    Stake PXJ\n                  </button>\n                  <button \n                    className=\"btn btn-secondary\"\n                    onClick={() => openTokenStakingModal('unstake')}\n                    disabled={!isConnected || !tokenStakeInfo || tokenStakeInfo.staked_amount <= 0}\n                  >\n                    Unstake PXJ\n                  </button>\n                  <button \n                    className=\"btn btn-accent\"\n                    onClick={() => openTokenStakingModal('claim')}\n                    disabled={!isConnected || !tokenStakeInfo || tokenStakeInfo.pending_rewards.length === 0}\n                  >\n                    Claim Rewards\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {/* Connect Wallet Prompt */}\n            {!isConnected && (\n              <div className=\"connect-prompt\">\n                <h3>Connect Your Wallet</h3>\n                <p>Connect your WAX wallet to view and manage your PXJ token staking</p>\n                <button className=\"btn btn-primary\" onClick={login}>\n                  Connect Wallet\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* NFT Staking Section */}\n      <div className=\"nft-staking-section\">\n        <div className=\"nft-staking-header\">\n          <h2>Pixel Journey NFT Staking</h2>\n          <p className=\"section-description\">Stake your ingredients to earn PXJ and WUF rewards</p>\n        </div>\n\n        {nftLoading ? (\n          <div className=\"loading-state\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading NFT staking data...</p>\n          </div>\n        ) : (\n          <div className=\"template-grid\">\n            {nftTemplates.map((template) => (\n              <div key={template.template_id} className=\"template-card\">\n                <div \n                  className=\"template-image\"\n                  style={{ backgroundImage: `url(${template.image})` }}\n                >\n                  {template.owned_count > 0 && (\n                    <div className=\"asset-count\">{template.owned_count}</div>\n                  )}\n                  {template.staked_count > 0 && (\n                    <div className=\"staked-count\">⚡{template.staked_count}</div>\n                  )}\n                  <div \n                    className=\"rarity-badge\"\n                    style={{ backgroundColor: getRarityColor(template.rarity) }}\n                  >\n                    {template.rarity}\n                  </div>\n                  {!template.image.includes('placeholder') ? null : template.name}\n                </div>\n                <div className=\"template-info\">\n                  <div className=\"template-header\">\n                    <div className=\"template-name\">{template.name}</div>\n                    <div className=\"template-apr\">{template.apr}% APR</div>\n                  </div>\n                  <div className=\"template-stats\">\n                    <div className=\"stat-row\">\n                      <div className=\"stat-item\">\n                        <div className=\"stat-value\">{template.rewards_per_hour.pxj}</div>\n                        <div className=\"stat-label\">PXJ/hr</div>\n                      </div>\n                      <div className=\"stat-item\">\n                        <div className=\"stat-value\">{template.rewards_per_hour.wuf}</div>\n                        <div className=\"stat-label\">WUF/hr</div>\n                      </div>\n                    </div>\n                    <div className=\"staking-status\">\n                      <span>Staked: {template.staked_count}/{template.owned_count}</span>\n                    </div>\n                  </div>\n                  <div className=\"template-actions\">\n                    {template.owned_count > 0 ? (\n                      <button \n                        className=\"btn btn-primary\"\n                        onClick={() => openNFTStakingModal(template)}\n                      >\n                        Manage Staking\n                      </button>\n                    ) : (\n                      <button \n                        className=\"btn btn-secondary\"\n                        onClick={() => openQuickBuyModal(template)}\n                      >\n                        Quick Buy\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* PXJ Lockup & Leaderboard Info */}\n      <div className=\"crafting-mechanics\">\n        <h2>PXJ Lockup & Crafting Mechanics</h2>\n        <div className=\"mechanics-content\">\n          <div className=\"mechanics-overview\">\n            <h3>🔒 PXJ Lockup System</h3>\n            <p>Lock your PXJ tokens to participate in advanced crafting and upgrade systems. Each month, we distribute additional NFT rewards to collectors based on their PXJ lockup value.</p>\n            \n            <div className=\"leaderboard-info\">\n              <div className=\"leaderboard-card\">\n                <div className=\"leaderboard-header\">\n                  <span className=\"leaderboard-icon\">🏆</span>\n                  <h4>Monthly Leaderboard Rewards</h4>\n                </div>\n                <div className=\"leaderboard-details\">\n                  <p><strong>Entry Requirement:</strong> 25,000 PXJ locked per entry</p>\n                  <p>Rewards distributed based on upgraded ingredient lockup value</p>\n                  <a \n                    href=\"https://lb.pixeljourney.xyz/\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"btn btn-primary\"\n                  >\n                    View Leaderboard\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"crafting-process\">\n            <h3>⚗️ Ingredient Combination System</h3>\n            <div className=\"process-flow\">\n              <div className=\"process-step\">\n                <div className=\"step-icon\">🧪</div>\n                <h4>Primary Ingredients</h4>\n                <p>Common base materials that form the foundation of all crafting recipes</p>\n              </div>\n              \n              <div className=\"process-arrow\">→</div>\n              \n              <div className=\"process-step\">\n                <div className=\"step-icon\">⚡</div>\n                <h4>Secondary Ingredients</h4>\n                <p>Rare catalysts that enhance and modify the properties of primary ingredients</p>\n              </div>\n              \n              <div className=\"process-arrow\">→</div>\n              \n              <div className=\"process-step\">\n                <div className=\"step-icon\">💎</div>\n                <h4>Tertiary Ingredients</h4>\n                <p>Epic components that unlock powerful abilities and unique traits</p>\n              </div>\n              \n              <div className=\"process-arrow\">→</div>\n              \n              <div className=\"process-step\">\n                <div className=\"step-icon\">🌟</div>\n                <h4>Black Ingredients</h4>\n                <p>Legendary materials that create the most powerful and sought-after items</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"learn-more-section\">\n            <div className=\"learn-more-card\">\n              <h3>📚 Want to Learn More?</h3>\n              <p>Dive deeper into the Pixel Journey ecosystem with our comprehensive documentation covering all aspects of crafting, staking, and gameplay mechanics.</p>\n              <div className=\"learn-actions\">\n                <Link to=\"/learn\" className=\"btn-primary\">Visit Learn Page</Link>\n                <a \n                  href=\"https://docs.pixeljourney.xyz/season-1/recycling-and-crafting\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"btn-secondary\"\n                >\n                  Journey Docs\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Modals */}\n      <NFTStakingModal\n        isOpen={stakingModalOpen}\n        onClose={closeNFTStakingModal}\n        templateId={selectedTemplate?.template_id || ''}\n        templateName={selectedTemplate?.name || ''}\n        action=\"stake\"\n        onSuccess={() => {\n          fetchNFTTemplates()\n          fetchRewards()\n        }}\n      />\n\n      <TokenStakingModal\n        isOpen={tokenStakingModalOpen}\n        onClose={closeTokenStakingModal}\n        action={tokenStakingAction}\n        farmName=\"pxjfarm1\"\n        onSuccess={() => {\n          fetchTokenStakingData()\n          fetchRewards()\n        }}\n      />\n\n      <CraftingModal\n        isOpen={craftingModalOpen}\n        onClose={() => setCraftingModalOpen(false)}\n        ingredient={null}\n      />\n\n      <QuickBuyModal\n        template={selectedBuyTemplate}\n        isOpen={quickBuyModalOpen}\n        onClose={closeQuickBuyModal}\n      />\n    </div>\n  )\n}\n\nexport default Staking","import { log } from './loggingService'\nimport type { NFTAsset } from './api'\n\nexport interface AttributeValue {\n  value: string\n  maxSupply: number\n  numMinted: number\n}\n\nexport interface AttributeFilterData {\n  [attributeName: string]: {\n    values: AttributeValue[]\n  }\n}\n\nclass AttributeService {\n  private baseUrl = 'https://wax-api.hivebp.io/api'\n\n  /**\n   * Fetch available attribute filters for a collection\n   */\n  async getAttributeFilters(contract: string, schema?: string): Promise<AttributeFilterData> {\n    try {\n      const url = new URL(`${this.baseUrl}/filter-attributes/${contract}`)\n      \n      if (schema) {\n        url.searchParams.append('schema', schema)\n      }\n\n      const response = await fetch(url.toString())\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const data = await response.json()\n      return data\n    } catch (error) {\n      log.error('Error fetching attribute filters from API, will use fallback', 'AttributeService', error as Error)\n      // Return empty data structure as fallback\n      return {}\n    }\n  }\n\n  /**\n   * Extract attribute filters from NFT data as fallback when API is unavailable\n   */\n  extractAttributesFromNFTs(nfts: NFTAsset[], schema?: string): AttributeFilterData {\n    const attributeMap = new Map<string, Map<string, number>>()\n    \n    // Filter by schema if specified\n    const filteredNFTs = schema ? nfts.filter(nft => nft.schema === schema) : nfts\n    \n    filteredNFTs.forEach(nft => {\n      if (nft.traits) {\n        Object.entries(nft.traits).forEach(([key, value]) => {\n          if (value !== null && value !== undefined) {\n            if (!attributeMap.has(key)) {\n              attributeMap.set(key, new Map())\n            }\n            \n            const valueMap = attributeMap.get(key)!\n            const stringValue = String(value)\n            const currentCount = valueMap.get(stringValue) || 0\n            valueMap.set(stringValue, currentCount + 1)\n          }\n        })\n      }\n    })\n    \n    // Convert to AttributeFilterData format\n    const result: AttributeFilterData = {}\n    \n    attributeMap.forEach((valueMap, attributeName) => {\n      const values: AttributeValue[] = []\n      \n      valueMap.forEach((count, value) => {\n        values.push({\n          value,\n          numMinted: count,\n          maxSupply: count // Use count as approximation since we don't have max supply data\n        })\n      })\n      \n      // Sort values by count (most common first)\n      values.sort((a, b) => b.numMinted - a.numMinted)\n      \n      result[attributeName] = { values }\n    })\n    \n    return result\n  }\n\n  /**\n   * Format attributes for API query string\n   * @param filters Object with attribute name as key and selected values as array\n   * @returns Formatted attribute string for API\n   */\n  formatAttributesForQuery(filters: Record<string, string[]>): string {\n    const attributePairs: string[] = []\n    \n    Object.entries(filters).forEach(([attributeName, values]) => {\n      values.forEach(value => {\n        attributePairs.push(`${attributeName}:${encodeURIComponent(value)}`)\n      })\n    })\n    \n    return attributePairs.join('&')\n  }\n\n  /**\n   * Parse attribute query string back to object\n   * @param attributeString Formatted attribute string from API\n   * @returns Object with attribute filters\n   */\n  parseAttributeQuery(attributeString: string): Record<string, string[]> {\n    const filters: Record<string, string[]> = {}\n    \n    if (!attributeString) return filters\n    \n    const pairs = attributeString.split('&')\n    pairs.forEach(pair => {\n      const [attributeName, value] = pair.split(':')\n      if (attributeName && value) {\n        const decodedValue = decodeURIComponent(value)\n        if (!filters[attributeName]) {\n          filters[attributeName] = []\n        }\n        filters[attributeName].push(decodedValue)\n      }\n    })\n    \n    return filters\n  }\n}\n\nexport const attributeService = new AttributeService()\n// Types are already exported above","import React, { useState, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { rwaxService, type UserAsset, type FeeToken } from '../services/rwaxService'\nimport MediaRenderer from './MediaRenderer'\nimport { log } from '../services/loggingService'\n\ninterface TokenizeFromInventoryModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onSuccess?: () => void\n}\n\nconst TokenizeFromInventoryModal: React.FC<TokenizeFromInventoryModalProps> = ({\n  isOpen,\n  onClose,\n  onSuccess\n}) => {\n  const { account } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  \n  const [userAssets, setUserAssets] = useState<UserAsset[]>([])\n  const [feeTokens, setFeeTokens] = useState<FeeToken[]>([])\n  const [selectedAssets, setSelectedAssets] = useState<Set<string>>(new Set())\n  const [selectedFeeToken, setSelectedFeeToken] = useState<FeeToken | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalAssets, setTotalAssets] = useState(0)\n  const assetsPerPage = 12\n\n  // Load user's Pixal assets\n  const loadUserAssets = useCallback(async (page: number = 1) => {\n    if (!account) return\n    \n    setLoading(true)\n    setError('')\n    \n    try {\n      const offset = (page - 1) * assetsPerPage\n      const assets = await rwaxService.getUserPixalAssets(account, assetsPerPage, offset)\n      setUserAssets(assets)\n      setTotalAssets(assets.length) // In a real implementation, you'd get total count from API\n    } catch (error) {\n      log.error('Failed to load user Pixal assets', 'TokenizeFromInventoryModal.loadUserAssets', error as Error, { account, page })\n      setError('Failed to load your Pixal assets. Please try again.')\n      showError('Failed to load assets')\n    } finally {\n      setLoading(false)\n    }\n  }, [account, assetsPerPage, showError])\n\n  // Load fee tokens\n  const loadFeeTokens = useCallback(async () => {\n    try {\n      const tokens = await rwaxService.getFeeTokens()\n      setFeeTokens(tokens)\n    } catch (error) {\n      log.error('Failed to load fee tokens', 'TokenizeFromInventoryModal.loadFeeTokens', error as Error)\n      showError('Failed to load fee tokens')\n    }\n  }, [showError])\n\n  // Load data when modal opens\n  useEffect(() => {\n    if (isOpen && account) {\n      loadUserAssets(currentPage)\n      loadFeeTokens()\n    }\n  }, [isOpen, account, currentPage, loadUserAssets, loadFeeTokens])\n\n  // Handle asset selection\n  const toggleAssetSelection = (assetId: string) => {\n    const newSelection = new Set(selectedAssets)\n    if (newSelection.has(assetId)) {\n      newSelection.delete(assetId)\n    } else {\n      newSelection.add(assetId)\n    }\n    setSelectedAssets(newSelection)\n  }\n\n  // Select all assets on current page\n  const selectAllAssets = () => {\n    const allAssetIds = new Set(userAssets.map(asset => asset.assetId.toString()))\n    setSelectedAssets(allAssetIds)\n  }\n\n  // Clear all selections\n  const clearAllSelections = () => {\n    setSelectedAssets(new Set())\n  }\n\n  // Execute tokenization\n  const executeTokenization = async () => {\n    if (!account || selectedAssets.size === 0 || !selectedFeeToken) {\n      showError('Please select assets and a fee token')\n      return\n    }\n\n    setLoading(true)\n    try {\n      const assetIds = Array.from(selectedAssets)\n      const transaction = await rwaxService.executeTokenization(assetIds, selectedFeeToken)\n      \n      showSuccess(`Tokenization transaction prepared for ${assetIds.length} asset(s)`)\n      log.info('Tokenization transaction prepared', 'TokenizeFromInventoryModal.executeTokenization', { assetIds, feeToken: selectedFeeToken.symbol, transaction })\n      \n      // Reset selections and close modal\n      setSelectedAssets(new Set())\n      setSelectedFeeToken(null)\n      onClose()\n      \n      // Call success callback\n      if (onSuccess) {\n        onSuccess()\n      }\n    } catch (error) {\n      log.error('Tokenization execution failed', 'TokenizeFromInventoryModal.executeTokenization', error as Error, { assetIds: Array.from(selectedAssets), feeToken: selectedFeeToken?.symbol })\n      showError('Tokenization failed. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page)\n    setSelectedAssets(new Set()) // Clear selections when changing pages\n  }\n\n  if (!isOpen) return null\n\n  const totalPages = Math.ceil(totalAssets / assetsPerPage)\n  const selectedCount = selectedAssets.size\n\n  return createPortal(\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"tokenize-inventory-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Tokenize from Inventory</h2>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"modal-body\">\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n          \n          {/* Selection Controls */}\n          <div className=\"selection-controls\">\n            <div className=\"selection-info\">\n              <span>{selectedCount} asset{selectedCount !== 1 ? 's' : ''} selected</span>\n            </div>\n            <div className=\"selection-actions\">\n              <button \n                className=\"select-all-btn\"\n                onClick={selectAllAssets}\n                disabled={loading}\n              >\n                Select All on Page\n              </button>\n              <button \n                className=\"clear-all-btn\"\n                onClick={clearAllSelections}\n                disabled={loading || selectedCount === 0}\n              >\n                Clear All\n              </button>\n            </div>\n          </div>\n\n          {/* Assets Grid */}\n          <div className=\"assets-section\">\n            <h3>Your Pixal Assets</h3>\n            {loading ? (\n              <div className=\"loading-spinner\">\n                <div className=\"spinner\"></div>\n                <p>Loading your assets...</p>\n              </div>\n            ) : (\n              <div className=\"assets-grid\">\n                {userAssets.map((asset) => (\n                  <div \n                    key={asset.assetId}\n                    className={`asset-card ${selectedAssets.has(asset.assetId.toString()) ? 'selected' : ''}`}\n                    onClick={() => toggleAssetSelection(asset.assetId.toString())}\n                  >\n                    <div className=\"asset-image-container\">\n                      <MediaRenderer \n                        imageUrl={asset.image}\n                        alt={asset.name}\n                        className=\"asset-image\"\n                      />\n                      {selectedAssets.has(asset.assetId.toString()) && (\n                        <div className=\"selection-indicator\">\n                          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                            <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"asset-info\">\n                      <h4 className=\"asset-name\">{asset.name}</h4>\n                      <p className=\"asset-id\">#{asset.assetId.toString()}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"pagination\">\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1 || loading}\n                >\n                  Previous\n                </button>\n                <span className=\"pagination-info\">\n                  Page {currentPage} of {totalPages}\n                </span>\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages || loading}\n                >\n                  Next\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Fee Token Selection */}\n          {selectedCount > 0 && (\n            <div className=\"fee-selection\">\n              <h3>Select Fee Token</h3>\n              <div className=\"fee-tokens-grid\">\n                {feeTokens.map((token, index) => (\n                  <div \n                    key={index}\n                    className={`fee-option ${selectedFeeToken === token ? 'selected' : ''}`}\n                    onClick={() => setSelectedFeeToken(token)}\n                  >\n                    <div className=\"fee-info\">\n                      <span className=\"fee-amount\">{token.fee}</span>\n                      <span className=\"fee-contract\">({token.contract})</span>\n                    </div>\n                    {token.wax_value && token.symbol !== 'WAX' && (\n                      <div className=\"wax-equivalent\">\n                        ≈ {parseFloat(token.wax_value).toFixed(4)} WAX\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"modal-footer\">\n          <button className=\"cancel-button\" onClick={onClose} disabled={loading}>\n            Cancel\n          </button>\n          <button \n            className=\"tokenize-button\"\n            onClick={executeTokenization}\n            disabled={loading || selectedCount === 0 || !selectedFeeToken}\n          >\n            {loading ? 'Processing...' : `Tokenize ${selectedCount} Asset${selectedCount !== 1 ? 's' : ''}`}\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  )\n}\n\nexport default TokenizeFromInventoryModal","import React, { useState, useEffect } from 'react'\nimport { rwaxService, type TokenizedAsset, type FeeToken } from '../services/rwaxService'\nimport MediaRenderer from './MediaRenderer'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { log } from '../services/loggingService'\n\ninterface AssetDetailModalProps {\n  asset: TokenizedAsset | null\n  isOpen: boolean\n  onClose: () => void\n  onRedeem?: (asset: TokenizedAsset, feeToken: FeeToken) => void\n}\n\nconst AssetDetailModal: React.FC<AssetDetailModalProps> = ({\n  asset,\n  isOpen,\n  onClose,\n  onRedeem\n}) => {\n  const { account } = useWallet()\n  const { showError } = useNotifications()\n  \n  const [feeTokens, setFeeTokens] = useState<FeeToken[]>([])\n  const [selectedFeeToken, setSelectedFeeToken] = useState<FeeToken | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [showRedeemSection, setShowRedeemSection] = useState(false)\n\n  const loadFeeTokens = async () => {\n    try {\n      const tokens = await rwaxService.getFeeTokens()\n      setFeeTokens(tokens)\n    } catch (error) {\n      log.error('Failed to load fee tokens', 'AssetDetailModal.loadFeeTokens', error as Error)\n      showError('Failed to load fee tokens')\n    }\n  }\n\n  // Load fee tokens when modal opens\n  useEffect(() => {\n    if (isOpen && asset) {\n      loadFeeTokens()\n    }\n  }, [isOpen, asset, loadFeeTokens])\n\n  const handleRedeem = async () => {\n    if (!asset || !selectedFeeToken || !account) {\n      showError('Please select a fee token')\n      return\n    }\n\n    setLoading(true)\n    try {\n      if (onRedeem) {\n        await onRedeem(asset, selectedFeeToken)\n      }\n      onClose()\n    } catch (error) {\n      log.error('Asset redemption failed', 'AssetDetailModal.handleRedeem', error as Error, { assetId: asset?.assetId, feeToken: selectedFeeToken?.symbol })\n      showError('Redemption failed. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (!isOpen || !asset) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"asset-detail-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Asset Details</h2>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"modal-body\">\n          <div className=\"asset-main-info\">\n            <div className=\"asset-image-section\">\n              <MediaRenderer\n                imageUrl={asset.image}\n        alt={asset.name}\n                className=\"asset-image\"\n              />\n            </div>\n            \n            <div className=\"asset-info-section\">\n              <h3 className=\"asset-name\">{asset.name}</h3>\n              <div className=\"asset-metadata\">\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Asset ID:</span>\n                  <span className=\"value\">{asset.assetId}</span>\n                </div>\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Collection:</span>\n                  <span className=\"value\">{asset.collection?.displayName || asset.collection?.collectionName}</span>\n                </div>\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Schema:</span>\n                  <span className=\"value\">{asset.schema}</span>\n                </div>\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Mint #:</span>\n                  <span className=\"value\">{asset.mint}</span>\n                </div>\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Template ID:</span>\n                  <span className=\"value\">{asset.template?.templateId}</span>\n                </div>\n                <div className=\"metadata-item\">\n                  <span className=\"label\">WPIXAL Amount:</span>\n                  <span className=\"value highlight\">{asset.rwax.redeemAmount.toFixed(8)} WPIXAL</span>\n                </div>\n                {asset.rarityScore && (\n                  <div className=\"metadata-item\">\n                    <span className=\"label\">Rarity Score:</span>\n                    <span className=\"value highlight\">{asset.rarityScore.toFixed(2)}</span>\n                  </div>\n                )}\n                {asset.attributesFloor && (\n                  <div className=\"metadata-item\">\n                    <span className=\"label\">Attributes Floor:</span>\n                    <span className=\"value highlight\">{asset.attributesFloor.toFixed(8)} WPIXAL</span>\n                  </div>\n                )}\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Contract:</span>\n                  <span className=\"value\">{asset.contract}</span>\n                </div>\n                <div className=\"metadata-item\">\n                  <span className=\"label\">Owner:</span>\n                  <span className=\"value\">{asset.owner}</span>\n                </div>\n              </div>\n              \n              {/* Asset Attributes/Traits */}\n              {asset.immutableData && asset.immutableData.length > 0 && (\n                <div className=\"asset-attributes\">\n                  <h4>NFT Traits</h4>\n                  <div className=\"attributes-grid\">\n                    {asset.immutableData\n                      .filter(({ key, value }) => {\n                        // Filter out technical fields and focus on actual traits\n                        const excludeKeys = ['image', 'img', 'video', 'audio', 'model', 'description', 'name']\n                        return !excludeKeys.includes(key.toLowerCase()) && value && value[1] !== null && value[1] !== undefined && value[1] !== ''\n                      })\n                      .map(({ key, value }) => {\n                        // Format key to be more readable\n                        const formattedKey = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                        const displayValue = Array.isArray(value) ? value[1] : value\n                        \n                        return (\n                          <div key={key} className=\"trait-item\">\n                            <div className=\"trait-label\">{formattedKey}</div>\n                            <div className=\"trait-value\">{String(displayValue)}</div>\n                          </div>\n                        )\n                      })}\n                  </div>\n                  \n                  {/* Show description if available */}\n                  {(() => {\n                    const descriptionItem = asset.immutableData.find(item => item.key.toLowerCase() === 'description')\n                    const description = descriptionItem ? (Array.isArray(descriptionItem.value) ? descriptionItem.value[1] : descriptionItem.value) : null\n                    return description && String(description).trim() ? (\n                      <div className=\"asset-description\">\n                        <h4>Description</h4>\n                        <p>{String(description)}</p>\n                      </div>\n                    ) : null\n                  })()}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Redemption Section */}\n          {account && (\n            <div className=\"redemption-section\">\n              {!showRedeemSection ? (\n                <button \n                  className=\"show-redeem-button\"\n                  onClick={() => setShowRedeemSection(true)}\n                >\n                  Redeem this Asset\n                </button>\n              ) : (\n                <div className=\"redeem-form\">\n                  <h4>Redeem Asset</h4>\n                  <p className=\"redeem-description\">\n                    Redeem this tokenized asset by paying {asset.rwax.redeemAmount.toFixed(8)} WPIXAL plus a fee.\n                  </p>\n                  \n                  <div className=\"fee-selection\">\n                    <h5>Select Fee Token:</h5>\n                    <div className=\"fee-options\">\n                      {feeTokens.map((token, index) => (\n                        <div \n                          key={index}\n                          className={`fee-option ${selectedFeeToken === token ? 'selected' : ''}`}\n                          onClick={() => setSelectedFeeToken(token)}\n                        >\n                          <div className=\"fee-info\">\n                            <span className=\"fee-amount\">{token.fee}</span>\n                            <span className=\"fee-contract\">({token.contract})</span>\n                          </div>\n                          {token.wax_value && token.symbol !== 'WAX' && (\n                            <div className=\"wax-equivalent\">\n                              ≈ {parseFloat(token.wax_value).toFixed(4)} WAX\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"redeem-actions\">\n                    <button \n                      className=\"cancel-redeem-button\"\n                      onClick={() => setShowRedeemSection(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button \n                      className=\"confirm-redeem-button\"\n                      onClick={handleRedeem}\n                      disabled={!selectedFeeToken || loading}\n                    >\n                      {loading ? 'Processing...' : 'Confirm Redemption'}\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {!account && (\n            <div className=\"wallet-connect-message\">\n              <p>Connect your wallet to redeem this asset</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AssetDetailModal","import React, { useState, useEffect, useCallback } from 'react'\nimport { apiService } from '../services/api'\nimport { log } from '../services/loggingService'\nimport MediaRenderer from './MediaRenderer'\nimport '../css/rwax-live-transactions.css'\n\ninterface RWAXTransaction {\n  transfer_id: string\n  sender_name: string\n  recipient_name: string\n  assets: Array<{\n    asset_id?: string\n    name?: string\n    data?: {\n      img?: string\n      video?: string\n      [key: string]: string | number | boolean | undefined\n    }\n    template?: {\n      template_id: string\n      max_supply: string\n      immutable_data?: Record<string, string | number | boolean>\n    }\n    collection?: {\n      collection_name: string\n      name: string\n      img?: string\n    }\n    schema?: {\n      schema_name: string\n    }\n    template_mint?: string | number\n  }>\n  memo?: string\n  created_at_time: string\n  txid: string\n  type: 'tokenization' | 'redemption'\n}\n\ninterface RWAXLiveTransactionsProps {\n  limit?: number\n  refreshInterval?: number\n}\n\nconst RWAXLiveTransactions: React.FC<RWAXLiveTransactionsProps> = ({ \n  limit = 12, \n  refreshInterval = 30000 \n}) => {\n  const [transactions, setTransactions] = useState<RWAXTransaction[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null)\n  const [page, setPage] = useState(1)\n  const [hasMore, setHasMore] = useState(true)\n  const [loadingMore, setLoadingMore] = useState(false)\n\n  const fetchTransactions = useCallback(async (pageNum: number = 1, append: boolean = false) => {\n    try {\n      if (!append) {\n        setError(null)\n        setLoading(true)\n      } else {\n        setLoadingMore(true)\n      }\n      \n      const response = await apiService.getRWAXTransfers({\n        limit,\n        page: pageNum,\n        order: 'desc'\n      })\n      \n      if (response.success) {\n        const newTransactions = response.data\n        \n        if (append) {\n          setTransactions(prev => [...prev, ...newTransactions])\n        } else {\n          setTransactions(newTransactions)\n        }\n        \n        // Check if there are more transactions to load\n        setHasMore(newTransactions.length === limit)\n        setLastUpdate(new Date())\n      } else {\n        throw new Error('Failed to fetch RWAX transactions')\n      }\n      \n    } catch (err) {\n      log.error('Error fetching RWAX transactions', 'RWAXLiveTransactions', err as Error)\n      if (!append) {\n        setError('Failed to load RWAX transactions')\n      }\n    } finally {\n      setLoading(false)\n      setLoadingMore(false)\n    }\n  }, [limit])\n\n  const loadMore = async () => {\n    if (!loadingMore && hasMore) {\n      const nextPage = page + 1\n      setPage(nextPage)\n      await fetchTransactions(nextPage, true)\n    }\n  }\n\n  useEffect(() => {\n    fetchTransactions()\n    \n    // Set up auto-refresh\n    const interval = setInterval(() => {\n      fetchTransactions(1, false)\n      setPage(1)\n    }, refreshInterval)\n    \n    return () => clearInterval(interval)\n  }, [limit, refreshInterval, fetchTransactions])\n\n  const formatTime = (timestamp: string) => {\n    try {\n      const date = new Date(timestamp)\n      \n      // Check if date is valid\n      if (isNaN(date.getTime())) {\n        return 'Unknown'\n      }\n      \n      const now = new Date()\n      const diffMs = now.getTime() - date.getTime()\n      const diffMins = Math.floor(diffMs / 60000)\n      \n      // Handle negative differences (future dates)\n      if (diffMins < 0) return 'Just now'\n      if (diffMins < 1) return 'Just now'\n      if (diffMins < 60) return `${diffMins}m ago`\n      if (diffMins < 1440) return `${Math.floor(diffMins / 60)}h ago`\n      return `${Math.floor(diffMins / 1440)}d ago`\n    } catch (error) {\n      return 'Unknown'\n    }\n  }\n\n  const getTransactionIcon = (type: 'tokenization' | 'redemption') => {\n    return type === 'tokenization' ? '🔄' : '🎁'\n  }\n\n  const getTransactionLabel = (type: 'tokenization' | 'redemption') => {\n    return type === 'tokenization' ? 'Tokenized' : 'Redeemed'\n  }\n\n  const processImageUrl = (imageUrl?: string): string => {\n    if (!imageUrl) return '/placeholder-nft.png'\n    \n    // Handle IPFS URLs\n    if (imageUrl.startsWith('Qm') || imageUrl.startsWith('baf')) {\n      return `https://ipfs.io/ipfs/${imageUrl}`\n    }\n    \n    // Handle relative URLs\n    if (imageUrl.startsWith('/')) {\n      return `https://ipfs.io/ipfs${imageUrl}`\n    }\n    \n    return imageUrl\n  }\n\n  if (loading && transactions.length === 0) {\n    return (\n      <div className=\"rwax-live-transactions\">\n        <div className=\"rwax-live-transactions-header\">\n          <h3>Live RWAX Transactions</h3>\n          <div className=\"loading-spinner\"></div>\n        </div>\n        <div className=\"transactions-loading\">\n          <p>Loading RWAX transactions...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error && transactions.length === 0) {\n    return (\n      <div className=\"rwax-live-transactions\">\n        <div className=\"rwax-live-transactions-header\">\n          <h3>Live RWAX Transactions</h3>\n          <button onClick={() => fetchTransactions()} className=\"refresh-button\">\n            🔄\n          </button>\n        </div>\n        <div className=\"transactions-error\">\n          <p>{error}</p>\n          <button onClick={() => fetchTransactions()} className=\"retry-button\">\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"rwax-live-transactions\">\n      <div className=\"rwax-live-transactions-header\">\n        <h3>Live RWAX Transactions</h3>\n        <div className=\"header-actions\">\n          {lastUpdate && (\n            <span className=\"last-update\">\n              Updated {formatTime(lastUpdate.toISOString())}\n            </span>\n          )}\n          <button \n            onClick={() => {\n              fetchTransactions(1, false)\n              setPage(1)\n            }} \n            className=\"refresh-button\"\n            disabled={loading}\n          >\n            {loading ? '⏳' : '🔄'}\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"rwax-transactions-grid\">\n        {transactions.length === 0 ? (\n          <div className=\"no-transactions\">\n            <p>No recent RWAX transactions found</p>\n          </div>\n        ) : (\n          transactions.map((tx, index) => (\n            <div key={`${tx.txid}-${tx.transfer_id}-${index}`} className=\"rwax-transaction-card\">\n              <div className=\"transaction-header\">\n                <div className=\"transaction-type\">\n                  <span className=\"transaction-icon\">\n                    {getTransactionIcon(tx.type)}\n                  </span>\n                  <span className={`transaction-label ${tx.type}`}>\n                    {getTransactionLabel(tx.type)}\n                  </span>\n                </div>\n                <span className=\"transaction-time\">\n                  {formatTime(tx.created_at_time)}\n                </span>\n              </div>\n              \n              <div className=\"transaction-assets\">\n                {tx.assets.slice(0, 1).map((asset) => (\n                  <div key={asset.asset_id} className=\"asset-preview\">\n                    <MediaRenderer \n                      imageUrl={processImageUrl(asset.data?.img)}\n                      alt={asset.name || 'Unknown Asset'}\n                      className=\"asset-image\"\n                    />\n                    <div className=\"asset-info\">\n                      <h4 className=\"asset-name\">{asset.name || 'Unknown Asset'}</h4>\n                      <p className=\"asset-mint\">#{asset.template_mint || asset.asset_id || 'N/A'}</p>\n                    </div>\n                  </div>\n                ))}\n                {tx.assets.length > 1 && (\n                  <div className=\"additional-assets\">\n                    +{tx.assets.length - 1} more\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"transaction-details\">\n                <div className=\"transaction-accounts\">\n                  <span className=\"account from\">\n                    From: {tx.sender_name.length > 8 ? `${tx.sender_name.slice(0, 6)}...` : tx.sender_name}\n                  </span>\n                  <span className=\"account to\">\n                    To: {tx.recipient_name.length > 8 ? `${tx.recipient_name.slice(0, 6)}...` : tx.recipient_name}\n                  </span>\n                </div>\n                \n                <div className=\"transaction-actions\">\n                  <button \n                    className=\"view-tx-button\"\n                    onClick={() => window.open(`https://waxblock.io/transaction/${tx.txid}`, '_blank')}\n                    title=\"View on WAX Block Explorer\"\n                  >\n                    🔗\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n      \n      {hasMore && (\n        <div className=\"load-more-section\">\n          <button \n            onClick={loadMore}\n            className=\"load-more-button\"\n            disabled={loadingMore}\n          >\n            {loadingMore ? (\n              <>\n                <div className=\"loading-spinner small\"></div>\n                Loading more...\n              </>\n            ) : (\n              'Load More Transactions'\n            )}\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default RWAXLiveTransactions","import React, { useState, useCallback, useEffect } from 'react'\nimport '../css/attribute-filter.css'\n\ninterface PixalAttributeFilterProps {\n  onFiltersChange: (filters: Record<string, string[]>) => void\n  initialFilters?: Record<string, string[]>\n}\n\ninterface FilterState {\n  [attributeName: string]: {\n    isExpanded: boolean\n    selectedValues: Set<string>\n    searchTerm: string\n  }\n}\n\n// Hardcoded Pixal attributes to prevent API refresh loops\nconst PIXAL_ATTRIBUTES = {\n  'Background': [\n    'Nefty Spot',\n    'Blue Sky',\n    'Forest',\n    'Desert',\n    'Ocean',\n    'Mountain',\n    'City',\n    'Space',\n    'Sunset',\n    'Rainbow'\n  ],\n  'Body': [\n    'Pink-Blue Overalls',\n    'Red Shirt',\n    'Blue Hoodie',\n    'Green Jacket',\n    'Yellow Dress',\n    'Purple Suit',\n    'Orange Tank',\n    'Black Tee',\n    'White Polo',\n    'Gray Sweater'\n  ],\n  'Eyes': [\n    'Kawaii Green',\n    'Brown',\n    'Blue',\n    'Hazel',\n    'Gray',\n    'Amber',\n    'Violet',\n    'Red',\n    'Black',\n    'Gold'\n  ],\n  'Head': [\n    'Grey',\n    'Black Hair',\n    'Brown Hair',\n    'Blonde Hair',\n    'Red Hair',\n    'Blue Hair',\n    'Green Hair',\n    'Purple Hair',\n    'Bald',\n    'Hat'\n  ]\n}\n\nexport const PixalAttributeFilter: React.FC<PixalAttributeFilterProps> = ({\n  onFiltersChange,\n  initialFilters = {}\n}) => {\n  const [filterState, setFilterState] = useState<FilterState>({})\n\n  // Initialize filter state\n  useEffect(() => {\n    const newFilterState: FilterState = {}\n    \n    Object.keys(PIXAL_ATTRIBUTES).forEach(attributeName => {\n      newFilterState[attributeName] = {\n        isExpanded: false,\n        selectedValues: new Set(initialFilters[attributeName] || []),\n        searchTerm: ''\n      }\n    })\n    \n    setFilterState(newFilterState)\n  }, []) // Only run once on mount\n\n  // Handle attribute value selection\n  const handleValueToggle = useCallback((attributeName: string, value: string) => {\n    setFilterState(prev => {\n      const newState = { ...prev }\n      if (!newState[attributeName]) {\n        newState[attributeName] = {\n          isExpanded: false,\n          selectedValues: new Set(),\n          searchTerm: ''\n        }\n      }\n      \n      const selectedValues = new Set(newState[attributeName].selectedValues)\n      if (selectedValues.has(value)) {\n        selectedValues.delete(value)\n      } else {\n        selectedValues.add(value)\n      }\n      \n      newState[attributeName] = {\n        ...newState[attributeName],\n        selectedValues\n      }\n      \n      return newState\n    })\n  }, [])\n\n  // Handle attribute expansion toggle\n  const handleAttributeToggle = useCallback((attributeName: string) => {\n    setFilterState(prev => ({\n      ...prev,\n      [attributeName]: {\n        ...prev[attributeName],\n        isExpanded: !prev[attributeName]?.isExpanded\n      }\n    }))\n  }, [])\n\n  // Handle search term change\n  const handleSearchChange = useCallback((attributeName: string, searchTerm: string) => {\n    setFilterState(prev => ({\n      ...prev,\n      [attributeName]: {\n        ...prev[attributeName],\n        searchTerm\n      }\n    }))\n  }, [])\n\n  // Clear all filters\n  const clearAllFilters = useCallback(() => {\n    const clearedState: FilterState = {}\n    Object.keys(PIXAL_ATTRIBUTES).forEach(attributeName => {\n      clearedState[attributeName] = {\n        isExpanded: false,\n        selectedValues: new Set(),\n        searchTerm: ''\n      }\n    })\n    setFilterState(clearedState)\n  }, [])\n\n  // Emit filter changes\n  useEffect(() => {\n    const filters: Record<string, string[]> = {}\n    Object.entries(filterState).forEach(([attributeName, state]) => {\n      if (state.selectedValues.size > 0) {\n        filters[attributeName] = Array.from(state.selectedValues)\n      }\n    })\n    onFiltersChange(filters)\n  }, [filterState, onFiltersChange])\n\n  // Get filtered attribute values based on search term\n  const getFilteredValues = (attributeName: string) => {\n    const searchTerm = filterState[attributeName]?.searchTerm?.toLowerCase() || ''\n    const values = PIXAL_ATTRIBUTES[attributeName as keyof typeof PIXAL_ATTRIBUTES] || []\n    \n    if (!searchTerm) return values\n    \n    return values.filter(value => \n      value.toLowerCase().includes(searchTerm)\n    )\n  }\n\n  // Calculate total selected filters\n  const totalSelected = Object.values(filterState).reduce(\n    (total, state) => total + state.selectedValues.size,\n    0\n  )\n\n  return (\n    <div className=\"attribute-filter-container\">\n      <div className=\"filter-header\">\n        <h3>Pixal Traits</h3>\n        {totalSelected > 0 && (\n          <button className=\"clear-all-button\" onClick={clearAllFilters}>\n            Clear All ({totalSelected})\n          </button>\n        )}\n      </div>\n\n      {Object.entries(PIXAL_ATTRIBUTES).map(([attributeName]) => {\n        const state = filterState[attributeName]\n        const filteredValues = getFilteredValues(attributeName)\n        const selectedCount = state?.selectedValues.size || 0\n\n        return (\n          <div key={attributeName} className=\"filter-group\">\n            <div \n              className=\"filter-group-header\"\n              onClick={() => handleAttributeToggle(attributeName)}\n            >\n              <div className=\"attribute-name\">\n                {attributeName}\n                {selectedCount > 0 && (\n                  <span className=\"selected-count\">{selectedCount}</span>\n                )}\n              </div>\n              <div className={`expand-icon ${state?.isExpanded ? 'expanded' : ''}`}>\n                ▼\n              </div>\n            </div>\n\n            {state?.isExpanded && (\n              <div className=\"filter-group-content\">\n                <input\n                  type=\"text\"\n                  placeholder={`Search ${attributeName.toLowerCase()}...`}\n                  value={state.searchTerm}\n                  onChange={(e) => handleSearchChange(attributeName, e.target.value)}\n                  className=\"attribute-search\"\n                />\n\n                <div className=\"attribute-values\">\n                  {filteredValues.length > 0 ? (\n                    filteredValues.map(value => {\n                      const isSelected = state.selectedValues.has(value)\n                      return (\n                        <div\n                          key={value}\n                          className={`attribute-value-item ${isSelected ? 'selected' : ''}`}\n                          onClick={() => handleValueToggle(attributeName, value)}\n                        >\n                          <span className=\"attribute-value-text\">{value}</span>\n                        </div>\n                      )\n                    })\n                  ) : (\n                    <div className=\"no-results\">\n                      No {attributeName.toLowerCase()} found matching \"{state.searchTerm}\"\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { rwaxService, type TokenizedAsset, type FeeToken, type UserAsset } from '../services/rwaxService'\nimport { attributeService } from '../services/attributeService'\nimport { alcorService } from '../services/alcorService'\nimport { priceService } from '../services/priceService'\nimport { balanceService } from '../services/balanceService'\nimport { wharfKitService } from '../services/wharfkit'\nimport MediaRenderer from './MediaRenderer'\nimport TokenizeFromInventoryModal from './TokenizeFromInventoryModal'\nimport AssetDetailModal from './AssetDetailModal'\nimport RWAXLiveTransactions from './RWAXLiveTransactions'\nimport { PixalAttributeFilter } from './PixalAttributeFilter'\nimport ShareModal from './ShareModal'\nimport { log } from '../services/loggingService'\nimport '../css/rwax.css'\nimport SwapInterface from './SwapInterface'\n\n\n\nconst RWax: React.FC = () => {\n  const navigate = useNavigate()\n  const { account, session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  \n  const [activeTab, setActiveTab] = useState<'redeem' | 'other-collections'>('redeem')\n  const [tokenizedAssets, setTokenizedAssets] = useState<TokenizedAsset[]>([])\n\n  const [feeTokens, setFeeTokens] = useState<FeeToken[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  \n  // Modal states\n  const [showTokenizeModal, setShowTokenizeModal] = useState(false)\n  const [showRedeemModal, setShowRedeemModal] = useState(false)\n  const [showInventoryModal, setShowInventoryModal] = useState(false)\n  const [showAssetDetailModal, setShowAssetDetailModal] = useState(false)\n  const [showWaxRedeemModal, setShowWaxRedeemModal] = useState(false)\n  const [selectedAsset, setSelectedAsset] = useState<UserAsset | TokenizedAsset | null>(null)\n  const [selectedDetailAsset, setSelectedDetailAsset] = useState<TokenizedAsset | null>(null)\n  const [selectedFeeToken, setSelectedFeeToken] = useState<FeeToken | null>(null)\n  const [waxRedeemStep, setWaxRedeemStep] = useState<'confirm' | 'swap' | 'redeem' | 'complete'>('confirm')\n  const [waxAmount, setWaxAmount] = useState<string>('')\n  \n  // New state for enhancements\n  const [selectedAssets, setSelectedAssets] = useState<Set<string>>(new Set())\n  const [showImageZoom, setShowImageZoom] = useState(false)\n  const [zoomedImage, setZoomedImage] = useState<{url: string, name: string} | null>(null)\n  const [showWpixalPurchaseModal, setShowWpixalPurchaseModal] = useState(false)\n  const [wpixalToPurchase, setWpixalToPurchase] = useState<number>(0)\n  const [wpixalPriceWAX, setWpixalPriceWAX] = useState<number>(0) // WPIXAL price in WAX\n  const [wpixalPriceUSD, setWpixalPriceUSD] = useState<number>(0) // WPIXAL price in USD\n  \n  // Filter sidebar state\n  const [isFilterSidebarOpen, setIsFilterSidebarOpen] = useState(false)\n  const [priceRange, setPriceRange] = useState({ min: '', max: '' })\n  const [waxPriceUSD, setWaxPriceUSD] = useState<number>(0) // WAX price in USD\n  const [showPriceAlertModal, setShowPriceAlertModal] = useState(false)\n  const [alertAsset] = useState<TokenizedAsset | null>(null)\n  const [alertPercentage, setAlertPercentage] = useState<number>(10)\n  \n  // Share modal state\n  const [showShareModal, setShowShareModal] = useState(false)\n  const [shareAsset, setShareAsset] = useState<TokenizedAsset | null>(null)\n  const [showWpixalAlertModal, setShowWpixalAlertModal] = useState(false)\n  const [wpixalAlertPrice, setWpixalAlertPrice] = useState<string>('')\n  const [waxBalance, setWaxBalance] = useState<string>('0.0000 WAX')\n  \n  // Pagination state for tokenized assets\n  const [assetsPage, setAssetsPage] = useState(1)\n  const [hasMoreAssets, setHasMoreAssets] = useState(true)\n  const [loadingMoreAssets, setLoadingMoreAssets] = useState(false)\n  \n  // Sorting and filtering state\n  const [sortBy, setSortBy] = useState('rarity_score_desc')\n  const [attributeFilters, setAttributeFilters] = useState('')\n  const [selectedAttributeFilters, setSelectedAttributeFilters] = useState<Record<string, string[]>>({})\n  const [searchTerm, setSearchTerm] = useState('')\n  \n  // Watchlist and sharing state\n  const [watchlist, setWatchlist] = useState<Set<string>>(new Set())\n  const [priceAlerts, setPriceAlerts] = useState<Map<string, {\n    assetId: string\n    assetName: string\n    originalPrice: number\n    alertPercentage: number\n    createdAt: number\n  }>>(new Map())\n\n  // Filter assets based on search term\n  const filteredAssets = useMemo(() => {\n    if (!searchTerm.trim()) {\n      return tokenizedAssets\n    }\n    \n    const searchLower = searchTerm.toLowerCase()\n    return tokenizedAssets.filter(asset => {\n      // Search in asset name\n      if (asset.name?.toLowerCase().includes(searchLower)) {\n        return true\n      }\n      \n      // Search in collection name and display name\n      if (asset.collection?.collectionName?.toLowerCase().includes(searchLower) ||\n          asset.collection?.displayName?.toLowerCase().includes(searchLower)) {\n        return true\n      }\n      \n      // Search in template ID\n      if (asset.template?.templateId?.toString().includes(searchLower)) {\n        return true\n      }\n      \n      // Search in immutable data attributes\n      if (asset.immutableData) {\n        for (const attr of asset.immutableData) {\n          if (attr.key?.toLowerCase().includes(searchLower) || \n              attr.value?.[1]?.toString().toLowerCase().includes(searchLower)) {\n            return true\n          }\n        }\n      }\n      \n      // Search in mutable data attributes\n      if (asset.mutableData) {\n        for (const attr of asset.mutableData) {\n          if (attr.key?.toLowerCase().includes(searchLower) || \n              attr.value?.[1]?.toString().toLowerCase().includes(searchLower)) {\n            return true\n          }\n        }\n      }\n      \n      return false\n    })\n  }, [tokenizedAssets, searchTerm])\n\n  // Load tokenized assets from RWAX\n  const loadTokenizedAssets = useCallback(async (page: number = 1, append: boolean = false) => {\n    log.debug('Loading tokenized assets', 'RWax.loadTokenizedAssets', { page, append, sortBy, attributeFilters })\n    try {\n      if (!append) {\n        setLoading(true)\n        setError(null)\n      } else {\n        setLoadingMoreAssets(true)\n      }\n      \n      const limit = 36\n      const offset = (page - 1) * limit\n      log.debug('Calling rwaxService.getTokenizedAssets', 'RWax.loadTokenizedAssets', { limit, offset, sortBy, attributeFilters })\n      const assets = await rwaxService.getTokenizedAssets(limit, offset, sortBy, attributeFilters)\n      log.info('Received tokenized assets', 'RWax.loadTokenizedAssets', { count: assets.length })\n      \n      if (append) {\n        setTokenizedAssets(prev => [...prev, ...assets])\n      } else {\n        setTokenizedAssets(assets)\n      }\n      \n      // Check if there are more assets to load\n      setHasMoreAssets(assets.length === limit)\n      \n    } catch (err) {\n      log.error('Error loading tokenized assets', 'RWax', err as Error)\n      if (!append) {\n        setError('Failed to load tokenized assets. Please try again later.')\n      }\n    } finally {\n      setLoading(false)\n      setLoadingMoreAssets(false)\n    }\n  }, [sortBy, attributeFilters])\n\n  // Load more tokenized assets\n  const loadMoreAssets = useCallback(async () => {\n    const nextPage = assetsPage + 1\n    await loadTokenizedAssets(nextPage, true)\n    setAssetsPage(nextPage)\n  }, [assetsPage, loadTokenizedAssets])\n  \n  // Handle sorting change\n  const handleSortChange = useCallback((newSortBy: string) => {\n    setSortBy(newSortBy)\n    setAssetsPage(1)\n  }, [])\n  \n  // Handle attribute filter changes with debouncing\n  const handleAttributeFiltersChange = useCallback((filters: Record<string, string[]>) => {\n    setSelectedAttributeFilters(filters)\n    const formattedFilters = attributeService.formatAttributesForQuery(filters)\n    setAttributeFilters(formattedFilters)\n    setAssetsPage(1)\n  }, [])\n  \n  // Effect to reload assets when sort or filters change\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (activeTab === 'redeem') {\n        loadTokenizedAssets(1, false)\n      }\n    }, 300) // 300ms debounce\n    \n    return () => clearTimeout(timeoutId)\n  }, [sortBy, attributeFilters, activeTab])\n\n\n\n  // Load fee tokens\n  const loadFeeTokens = useCallback(async () => {\n    try {\n      const tokens = await rwaxService.getFeeTokens()\n      setFeeTokens(tokens)\n    } catch (err) {\n      log.error('Error loading fee tokens', 'RWax', err as Error)\n    }\n  }, [])\n\n  // Load live price data\n  const loadPriceData = useCallback(async () => {\n    try {\n      const [wpixalWAX, wpixalUSD, waxUSD] = await Promise.all([\n        priceService.getWpixalPriceWAX(),\n        priceService.getWpixalPriceUSD(),\n        priceService.getWaxPriceUSD()\n      ])\n      \n      setWpixalPriceWAX(wpixalWAX)\n      setWpixalPriceUSD(wpixalUSD)\n      setWaxPriceUSD(waxUSD)\n    } catch (err) {\n      log.error('Error loading price data', 'RWax', err as Error)\n      // Use more realistic fallback prices and show error to user\n      setWpixalPriceWAX(0.0177) // More realistic WPIXAL/WAX ratio\n      setWpixalPriceUSD(0.0009) // More realistic WPIXAL USD price\n      setWaxPriceUSD(0.051) // More realistic WAX USD price\n      showError('Price Loading Error', 'Unable to fetch current prices. Using fallback values.')\n    }\n  }, [showError])\n\n  // Load WAX balance\n  const loadWaxBalance = useCallback(async () => {\n    if (!account) {\n      setWaxBalance('0.0000 WAX')\n      return\n    }\n\n    try {\n      const balance = await balanceService.getWaxBalance(account)\n      setWaxBalance(balance)\n    } catch (err) {\n      log.error('Error loading WAX balance', 'RWax', err as Error)\n      setWaxBalance('0.0000 WAX')\n    }\n  }, [account])\n\n  useEffect(() => {\n    loadFeeTokens()\n    loadPriceData()\n    loadWaxBalance()\n    if (activeTab === 'redeem') {\n      loadTokenizedAssets(1, false)\n    }\n  }, [activeTab, loadTokenizedAssets, loadFeeTokens, loadPriceData, loadWaxBalance])\n\n  // Refresh price data every 5 minutes\n  useEffect(() => {\n    const priceInterval = setInterval(loadPriceData, 5 * 60 * 1000)\n    return () => clearInterval(priceInterval)\n  }, [loadPriceData])\n\n\n\n  const handleRedeem = (asset: TokenizedAsset) => {\n    setSelectedAsset(asset)\n    setShowRedeemModal(true)\n  }\n\n  const handleWaxRedeem = (asset: TokenizedAsset) => {\n    setSelectedAsset(asset)\n    setShowWaxRedeemModal(true)\n    setWaxRedeemStep('confirm')\n    setWaxAmount('')\n  }\n\n  // New handler functions\n  const handleImageZoom = (imageUrl: string, name: string) => {\n    // Process IPFS URLs properly\n    let processedUrl = imageUrl\n    if (imageUrl && !imageUrl.startsWith('http')) {\n      if (imageUrl.startsWith('Qm') || imageUrl.startsWith('baf')) {\n        processedUrl = `https://ipfs.io/ipfs/${imageUrl}`\n      } else if (imageUrl.startsWith('/ipfs/')) {\n        processedUrl = `https://ipfs.io/ipfs/${imageUrl.replace('/ipfs/', '')}`\n      } else if (imageUrl.startsWith('ipfs://')) {\n        processedUrl = imageUrl.replace('ipfs://', 'https://ipfs.io/ipfs/')\n      }\n    }\n    setZoomedImage({ url: processedUrl, name })\n    setShowImageZoom(true)\n  }\n\n  const handleAssetSelection = (assetId: string) => {\n    const newSelected = new Set(selectedAssets)\n    if (newSelected.has(assetId)) {\n      newSelected.delete(assetId)\n    } else {\n      newSelected.add(assetId)\n    }\n    setSelectedAssets(newSelected)\n  }\n\n  const handleSelectAll = () => {\n    if (selectedAssets.size === tokenizedAssets.length) {\n      setSelectedAssets(new Set())\n    } else {\n      setSelectedAssets(new Set(tokenizedAssets.map(asset => asset.assetId.toString())))\n    }\n  }\n\n  const handleBatchRedeem = async () => {\n    if (selectedAssets.size === 0) return\n    \n    try {\n      setLoading(true)\n      const selectedAssetsList = tokenizedAssets.filter(asset => selectedAssets.has(asset.assetId.toString()))\n      \n      // Use the first available fee token for batch operations\n      const defaultFeeToken = feeTokens.length > 0 ? feeTokens[0] : null\n      if (!defaultFeeToken) {\n        showError('No fee tokens available for batch redemption')\n        return\n      }\n      \n      for (const asset of selectedAssetsList) {\n        if (!account) {\n          showError('Please connect your wallet')\n          return\n        }\n        \n        try {\n          // Create transaction actions for WharfKit\n          const actions = [\n            {\n              account: 'nft.hive',\n              name: 'boost',\n              authorization: [{\n                actor: account,\n                permission: 'active'\n              }],\n              data: {\n                booster: account\n              }\n            },\n            {\n              account: defaultFeeToken.contract,\n              name: 'transfer',\n              authorization: [{\n                actor: account,\n                permission: 'active'\n              }],\n              data: {\n                from: account,\n                to: 'rwax',\n                quantity: defaultFeeToken.fee,\n                memo: 'payfee'\n              }\n            },\n            {\n              account: 'pixeljourney',\n              name: 'transfer',\n              authorization: [{\n                actor: account,\n                permission: 'active'\n              }],\n              data: {\n                from: account,\n                to: 'rwax',\n                quantity: `${asset.rwax.redeemAmount.toFixed(8)} WPIXAL`,\n                memo: 'redeem'\n              }\n            },\n            {\n              account: 'rwax',\n              name: 'redeem',\n              authorization: [{\n                actor: account,\n                permission: 'active'\n              }],\n              data: {\n                redeemer: account,\n                contract: 'pixeljourney',\n                quantity: `${asset.rwax.redeemAmount.toFixed(8)} WPIXAL`,\n                asset_id: asset.assetId.toString(),\n                fee_currency: `8,${defaultFeeToken.symbol}`\n              }\n            }\n          ]\n          \n          // Execute transaction through WharfKit\n          const result = await wharfKitService.transact(actions)\n          log.info(`Redemption transaction completed for ${asset.name}`, 'RWax.handleBatchRedemption', { assetId: asset.assetId, result })\n        } catch (err) {\n          log.error(`Error redeeming asset ${asset.assetId}`, 'RWax', err as Error)\n          // Continue with other assets even if one fails\n        }\n      }\n      \n      showSuccess(`Successfully processed redemption for ${selectedAssets.size} assets!`)\n      setSelectedAssets(new Set())\n      loadTokenizedAssets()\n    } catch (error) {\n      log.error('Batch redemption failed', 'RWax', error as Error)\n      showError('Batch redemption failed. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleWpixalPurchase = (amount: number) => {\n    setWpixalToPurchase(amount)\n    setShowWpixalPurchaseModal(true)\n  }\n\n\n\n\n  const closeWaxRedeemModal = () => {\n    setShowWaxRedeemModal(false)\n    setWaxRedeemStep('confirm')\n    setWaxAmount('')\n    setLoading(false)\n    setSelectedAsset(null)\n  }\n\n  // Handle asset detail view\n  const handleViewAssetDetail = (asset: TokenizedAsset) => {\n    setSelectedDetailAsset(asset)\n    setShowAssetDetailModal(true)\n  }\n\n  // Filter sidebar functions\n  const toggleFilterSidebar = useCallback(() => {\n    setIsFilterSidebarOpen(prev => !prev)\n  }, [])\n\n  const closeFilterSidebar = useCallback(() => {\n    setIsFilterSidebarOpen(false)\n  }, [])\n\n  // Handle redemption from detail modal\n  const handleRedeemFromDetail = async (asset: TokenizedAsset, feeToken: FeeToken) => {\n    if (!account) {\n      showError('Please connect your wallet')\n      return\n    }\n\n    try {\n      setLoading(true)\n      \n      // Create transaction actions for WharfKit\n      const actions = [\n        {\n          account: 'nft.hive',\n          name: 'boost',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            booster: account\n          }\n        },\n        {\n          account: feeToken.contract,\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: feeToken.fee,\n            memo: 'payfee'\n          }\n        },\n        {\n          account: 'pixeljourney',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: `${asset.rwax.redeemAmount.toFixed(8)} WPIXAL`,\n            memo: 'redeem'\n          }\n        },\n        {\n          account: 'rwax',\n          name: 'redeem',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            redeemer: account,\n            contract: 'pixeljourney',\n            quantity: `${asset.rwax.redeemAmount.toFixed(8)} WPIXAL`,\n            asset_id: asset.assetId.toString(),\n            fee_currency: `8,${feeToken.symbol}`\n          }\n        }\n      ]\n      \n      // Execute transaction through WharfKit\n      const result = await wharfKitService.transact(actions)\n      \n      showSuccess('Redemption transaction completed successfully!')\n      log.info('Redemption transaction completed', 'RWax.handleRedemption', { result })\n      setShowAssetDetailModal(false)\n      setSelectedDetailAsset(null)\n      // Refresh data\n      loadTokenizedAssets()\n    } catch (err) {\n      log.error('Error during redemption', 'RWax', err as Error)\n      showError('Redemption failed. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Execute WAX to WPIXAL swap and redemption\n  const executeWaxRedeem = async () => {\n    if (!selectedAsset || !account || !session || !isTokenizedAsset(selectedAsset)) {\n      showError('Missing required data for WAX redemption')\n      return\n    }\n\n    // Check if user has sufficient WAX balance\n    const userWaxAmount = parseFloat(waxBalance.split(' ')[0])\n    const requiredWaxAmount = parseFloat(waxAmount)\n    if (userWaxAmount < requiredWaxAmount) {\n      showError(`Insufficient WAX balance. You have ${waxBalance} but need ${requiredWaxAmount.toFixed(4)} WAX`)\n      return\n    }\n\n    try {\n      setLoading(true)\n      setWaxRedeemStep('swap')\n\n      // Step 1: Execute WAX to WPIXAL swap via Alcor\n      const swapTransaction = await alcorService.executeSwap(waxAmount, account)\n      \n      // Here you would normally execute the transaction with the wallet\n      // For now, we'll simulate the process\n      showSuccess('Swap transaction prepared')\n      log.info('Swap transaction prepared', 'RWax.handleWaxRedemption', { swapTransaction })\n      \n      // Simulate swap completion delay\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      \n      setWaxRedeemStep('redeem')\n      \n      // Step 2: Execute redemption with the swapped WPIXAL\n      const feeToken: FeeToken = {\n        fee: '0.00000000',\n        contract: 'eosio.token',\n        exchange_rate: '1',\n        symbol: 'WAX',\n        amount: '0.00000000'\n      }\n      \n      if (!isTokenizedAsset(selectedAsset)) {\n        showError('Selected asset is not a tokenized asset')\n        return\n      }\n\n      const redeemTransaction = await rwaxService.executeRedemption(\n        selectedAsset.assetId.toString(), \n        selectedAsset.rwax.redeemAmount.toFixed(8) + ' WPIXAL', \n        feeToken\n      )\n      \n      showSuccess('Redemption transaction prepared')\n      log.info('Redemption transaction prepared', 'RWax.handleWaxRedemption', { redeemTransaction })\n      \n      // Simulate redemption completion\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      \n      setWaxRedeemStep('complete')\n      showSuccess('WAX redemption completed successfully!')\n      \n    } catch (err) {\n      log.error('Error during WAX redemption', 'RWax', err as Error)\n      showError('WAX redemption failed. Please try again.')\n      setWaxRedeemStep('confirm')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const executeTokenization = async () => {\n    if (!selectedAsset || !selectedFeeToken || !session || !account) {\n      showError('Please select an asset and fee token')\n      return\n    }\n\n    try {\n      const transaction = await rwaxService.executeTokenization([selectedAsset.assetId.toString()], selectedFeeToken)\n      \n      // This would integrate with WAX wallet for transaction signing\n      // For now, just show success message\n      showSuccess('Tokenization transaction prepared')\n      log.info('Tokenization transaction prepared', 'RWax.handleTokenization', { transaction })\n      \n      setShowTokenizeModal(false)\n      \n      // Refresh data after tokenization\n      setTimeout(() => {\n        loadTokenizedAssets()\n      }, 2000)\n    } catch (err) {\n      log.error('Error during tokenization', 'RWax', err as Error)\n      showError('Tokenization failed. Please try again.')\n    }\n  }\n\n  // Type guard to check if asset is TokenizedAsset\n  const isTokenizedAsset = (asset: TokenizedAsset | UserAsset): asset is TokenizedAsset => {\n    return 'rwax' in asset && asset.rwax && 'redeemAmount' in asset.rwax\n  }\n\n  const executeRedemption = async () => {\n    if (!selectedAsset || !selectedFeeToken || !session || !account || !isTokenizedAsset(selectedAsset)) {\n      showError('Please select an asset and fee token')\n      return\n    }\n\n    try {\n      setLoading(true)\n      \n      // Create transaction actions for WharfKit\n      const actions = [\n        {\n          account: 'nft.hive',\n          name: 'boost',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            booster: account\n          }\n        },\n        {\n          account: selectedFeeToken.contract,\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: selectedFeeToken.fee,\n            memo: 'payfee'\n          }\n        },\n        {\n          account: 'pixeljourney',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'rwax',\n            quantity: `${selectedAsset.rwax.redeemAmount.toFixed(8)} WPIXAL`,\n            memo: 'redeem'\n          }\n        },\n        {\n          account: 'rwax',\n          name: 'redeem',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            redeemer: account,\n            contract: 'pixeljourney',\n            quantity: `${selectedAsset.rwax.redeemAmount.toFixed(8)} WPIXAL`,\n            asset_id: selectedAsset.assetId.toString(),\n            fee_currency: `8,${selectedFeeToken.symbol}`\n          }\n        }\n      ]\n      \n      // Execute transaction through WharfKit\n      const result = await wharfKitService.transact(actions)\n      \n      showSuccess('Redemption transaction completed successfully!')\n      log.info('Redemption transaction completed', 'RWax.handleRedeemFromModal', { result })\n      \n      setShowRedeemModal(false)\n      \n      // Refresh data after redemption\n      setTimeout(() => {\n        loadTokenizedAssets()\n      }, 2000)\n    } catch (err) {\n      log.error('Error during redemption', 'RWax', err as Error)\n      showError('Redemption failed. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Watchlist functionality\n  const handleToggleWatchlist = (assetId: string) => {\n    const newWatchlist = new Set(watchlist)\n    if (newWatchlist.has(assetId)) {\n      newWatchlist.delete(assetId)\n      showSuccess('Removed from watchlist')\n    } else {\n      newWatchlist.add(assetId)\n      showSuccess('Added to watchlist')\n    }\n    setWatchlist(newWatchlist)\n    \n    // Save to localStorage\n    localStorage.setItem('rwax-watchlist', JSON.stringify(Array.from(newWatchlist)))\n  }\n\n  // Load watchlist from localStorage on component mount\n  useEffect(() => {\n    const savedWatchlist = localStorage.getItem('rwax-watchlist')\n    if (savedWatchlist) {\n      try {\n        const watchlistArray = JSON.parse(savedWatchlist)\n        setWatchlist(new Set(watchlistArray))\n      } catch (err) {\n        log.error('Error loading watchlist', 'RWax', err as Error)\n      }\n    }\n  }, [])\n\n  // Sharing functionality - now uses unified ShareModal\n  const handleShareAsset = (asset: TokenizedAsset) => {\n    setShareAsset(asset)\n    setShowShareModal(true)\n  }\n\n  // Price alert functionality\n  const handleSetPriceAlert = useCallback((asset: TokenizedAsset, alertPercentage: number) => {\n    const currentPrice = parseFloat(asset.rwax.redeemAmount.toString())\n    const alertData = {\n      assetId: asset.assetId.toString(),\n        assetName: asset.name,\n      originalPrice: currentPrice,\n      alertPercentage,\n      createdAt: Date.now()\n    }\n    \n    const newPriceAlerts = new Map(priceAlerts)\n    newPriceAlerts.set(asset.assetId.toString(), alertData)\n    setPriceAlerts(newPriceAlerts)\n    \n    // Save to localStorage\n    const alertsArray = Array.from(newPriceAlerts.entries())\n    localStorage.setItem('rwax-price-alerts', JSON.stringify(alertsArray))\n    \n    showSuccess(`Price alert set for ${asset.name} at ${alertPercentage}% change`)\n  }, [priceAlerts, showSuccess])\n\n  const removePriceAlert = useCallback((assetId: string) => {\n    const newPriceAlerts = new Map(priceAlerts)\n    newPriceAlerts.delete(assetId)\n    setPriceAlerts(newPriceAlerts)\n    \n    // Save to localStorage\n    const alertsArray = Array.from(newPriceAlerts.entries())\n    localStorage.setItem('rwax-price-alerts', JSON.stringify(alertsArray))\n    \n    showSuccess('Price alert removed')\n  }, [priceAlerts, showSuccess])\n\n  // Check price alerts against current prices\n  const checkPriceAlerts = useCallback(() => {\n    if (priceAlerts.size === 0 || tokenizedAssets.length === 0) return\n    \n    priceAlerts.forEach((alertData, assetId) => {\n      const currentAsset = tokenizedAssets.find(asset => asset.assetId.toString() === assetId)\n      if (!currentAsset) {\n        // Asset no longer available - notify user\n        showError(`Alert: ${alertData.assetName} is no longer available on RWAX!`)\n        removePriceAlert(assetId)\n        return\n      }\n      \n      const currentPrice = parseFloat(currentAsset.rwax.redeemAmount.toString())\n      const priceChange = ((currentPrice - alertData.originalPrice) / alertData.originalPrice) * 100\n      \n      if (Math.abs(priceChange) >= alertData.alertPercentage) {\n        const direction = priceChange > 0 ? 'increased' : 'decreased'\n        showSuccess(`Price Alert: ${alertData.assetName} has ${direction} by ${Math.abs(priceChange).toFixed(2)}%!`)\n        \n        // Update the alert with new baseline price to avoid repeated notifications\n        handleSetPriceAlert(currentAsset, alertData.alertPercentage)\n      }\n    })\n  }, [priceAlerts, tokenizedAssets, showError, showSuccess, removePriceAlert, handleSetPriceAlert])\n\n  // Load price alerts from localStorage on component mount\n  useEffect(() => {\n    const savedAlerts = localStorage.getItem('rwax-price-alerts')\n    if (savedAlerts) {\n      try {\n        const alertsArray = JSON.parse(savedAlerts)\n        setPriceAlerts(new Map(alertsArray))\n      } catch (err) {\n        log.error('Error loading price alerts', 'RWax', err as Error)\n      }\n    }\n  }, [])\n\n  // Check price alerts when tokenized assets update\n  useEffect(() => {\n    checkPriceAlerts()\n  }, [checkPriceAlerts])\n\n  return (\n    <div className=\"rwax-container\">\n      <div className=\"rwax-header\">\n        <div className=\"rwax-header-top\">\n          <button className=\"rwax-back-button\" onClick={() => navigate('/marketplace')}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path d=\"M19 12H5M12 19l-7-7 7-7\" />\n            </svg>\n            Back to Marketplace\n          </button>\n          <div className=\"header-actions\">\n          </div>\n        </div>\n        <h1>R-WAX Tokenization</h1>\n        <p>Tokenize your Pixals to WPIXAL or redeem WPIXAL back to Pixals</p>\n        <p style={{ marginTop: '16px', fontSize: '0.9rem', color: 'var(--text-secondary)' }}>\n          Visit the <a \n            href=\"https://r-wax.io/token/pixeljourney/WPIXAL\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            style={{ color: 'var(--primary-purple)', textDecoration: 'none', fontWeight: '500' }}\n            onMouseEnter={(e) => (e.target as HTMLAnchorElement).style.textDecoration = 'underline'}\n            onMouseLeave={(e) => (e.target as HTMLAnchorElement).style.textDecoration = 'none'}\n          >\n            official RWAX website\n          </a> for full WPIXAL markets and trading features.\n        </p>\n      </div>\n\n      <div className=\"rwax-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'redeem' ? 'active' : ''}`}\n          onClick={() => setActiveTab('redeem')}\n        >\n          WPIXAL to Pixal PFP\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'other-collections' ? 'active' : ''}`}\n          onClick={() => setActiveTab('other-collections')}\n        >\n          Other RWAX Collections\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"rwax-content\">\n        {activeTab === 'redeem' ? (\n          <div className=\"redeem-section\">\n                       \n            <div className=\"actions-and-controls-container\">\n              <div className=\"left-actions\">\n                <div className=\"action-group\">\n                  <button \n                    className=\"inventory-tokenize-button\"\n                    onClick={() => setShowInventoryModal(true)}\n                  >\n                    Tokenize from Inventory\n                  </button>\n                </div>\n                <div className=\"action-group\">\n                  <button \n                    className={`wpixal-alert-button ${localStorage.getItem('wpixalPriceAlert') ? 'has-alert' : ''}`}\n                    onClick={() => setShowWpixalAlertModal(true)}\n                  >\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                      <path d=\"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\"/>\n                      <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n                    </svg>\n                    WPIXAL Price Alert\n                  </button>\n                  {localStorage.getItem('wpixalPriceAlert') && (\n                    <div className=\"current-alert-display\">\n                      <span>Current Alert: {localStorage.getItem('wpixalPriceAlert')} WAX</span>\n                      <button \n                        className=\"remove-alert\"\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          localStorage.removeItem('wpixalPriceAlert')\n                          // Force re-render by updating a state\n                          setWpixalAlertPrice('')\n                        }}\n                        title=\"Remove Alert\"\n                      >\n                        ×\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"sorting-and-filter-controls\">\n                {/* Search Bar */}\n                <div className=\"search-bar-container\">\n                  <div className=\"search-input-container\">\n                    <svg className=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                    </svg>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search R-WAX assets...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"search-input\"\n                    />\n                    {searchTerm && (\n                      <button \n                        onClick={() => setSearchTerm('')}\n                        className=\"clear-search\"\n                        aria-label=\"Clear search\"\n                      >\n                        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                          <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                        </svg>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              <div className=\"sorting-controls\">\n                <label htmlFor=\"sort-select\">Sort by:</label>\n                <select \n                  id=\"sort-select\"\n                  value={sortBy} \n                  onChange={(e) => handleSortChange(e.target.value)}\n                  className=\"sort-dropdown\"\n                >\n                  <option value=\"date_desc\">Date (Newest First)</option>\n                  <option value=\"date_asc\">Date (Oldest First)</option>\n                  <option value=\"price_desc\">Price (High to Low)</option>\n                  <option value=\"price_asc\">Price (Low to High)</option>\n                  <option value=\"floor_desc\">Floor Price (High to Low)</option>\n                  <option value=\"floor_asc\">Floor Price (Low to High)</option>\n                  <option value=\"mint_desc\">Mint Number (High to Low)</option>\n                  <option value=\"mint_asc\">Mint Number (Low to High)</option>\n                  <option value=\"rarity_score_desc\">Rarity Score (High to Low)</option>\n                  <option value=\"rarity_score_asc\">Rarity Score (Low to High)</option>\n                </select>\n\n                \n              <button \n                className=\"filter-toggle-btn\"\n                onClick={toggleFilterSidebar}\n                title=\"Open Filters\"\n              >\n                <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n                </svg>\n              </button>\n              </div>\n              \n            </div>\n            </div>\n             \n             {loading ? (\n               <div className=\"loading-spinner\">Loading tokenized assets...</div>\n             ) : (\n               <>\n                {filteredAssets.length > 0 && (\n                  <div className=\"multi-select-controls\">\n                    <button \n                      className=\"select-all-button\"\n                      onClick={handleSelectAll}\n                    >\n                      {selectedAssets.size === filteredAssets.length ? 'Deselect All' : 'Select All'}\n                    </button>\n                    <div className=\"selected-count-container\">\n                      <div className=\"selected-count\">\n                        {selectedAssets.size} of {filteredAssets.length} selected\n                      </div>\n                      {hasMoreAssets && (\n                        <button \n                          className=\"load-more-small-button\"\n                          onClick={loadMoreAssets}\n                          disabled={loadingMoreAssets}\n                          title=\"Load More Assets\"\n                        >\n                          {loadingMoreAssets ? 'Loading...' : 'Load More'}\n                        </button>\n                      )}\n                    </div>\n                    <button \n                      className=\"batch-redeem-button\"\n                      onClick={handleBatchRedeem}\n                      disabled={selectedAssets.size === 0 || !account}\n                    >\n                      Batch Redeem ({selectedAssets.size})\n                    </button>\n                  </div>\n                )}\n                \n                <div className=\"rwax-assets-grid\">\n                  {filteredAssets.map((asset, index) => (\n                    <div \n                      key={`${asset.assetId}-${index}`}\n                  className={`asset-card ${selectedAssets.has(asset.assetId.toString()) ? 'selected' : ''}`}\n                    >\n                      <div \n                         className={`selection-checkbox ${selectedAssets.has(asset.assetId.toString()) ? 'checked' : ''}`}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      handleAssetSelection(asset.assetId.toString())\n                    }}\n                       >\n                        {selectedAssets.has(asset.assetId.toString()) && (\n                          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                            <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n                          </svg>\n                        )}\n                      </div>\n                      \n                      <div \n                        className=\"asset-card-content\"\n                        onClick={() => handleViewAssetDetail(asset)}\n                      >\n                        <div className=\"asset-image\">\n                          <MediaRenderer \n                            imageUrl={asset.image}\n                          alt={asset.name}\n                            className=\"nft-image\"\n                          />\n                          <div \n                            className=\"zoom-overlay\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleImageZoom(asset.image, asset.name)\n                            }}\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                              <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n                            </svg>\n                          </div>\n                        </div>\n                        <div className=\"asset-info\">\n                          <h3>{asset.name}</h3>\n                          <div className=\"pricing-info\">\n                            <div \n                              className=\"wpixal-amount\"\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                handleWpixalPurchase(parseFloat(asset.rwax.redeemAmount.toString()))\n                              }}\n                              title={`Exact amount: ${asset.rwax.redeemAmount} WPIXAL`}\n                            >\n                              {parseFloat(asset.rwax.redeemAmount.toString()).toFixed(1)} WPIXAL\n                            </div>\n                            <div className=\"rwax-price-convert\">\n                            <div className=\"wax-price\">\n                              ≈ {(parseFloat(asset.rwax.redeemAmount.toString()) * wpixalPriceWAX).toFixed(4)} WAX\n                            </div>\n                            <div className=\"usd-price\">\n                              ≈ ${(parseFloat(asset.rwax.redeemAmount.toString()) * wpixalPriceUSD).toFixed(4)} USD\n                            </div>\n                          </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"asset-actions\">\n                        {/* Primary action - Green WPIXAL redeem button on top */}\n                        <button \n                          className=\"redeem-button primary\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            handleRedeem(asset)\n                          }}\n                          disabled={!account}\n                        >\n                          Redeem (WPIXAL)\n                        </button>\n                        \n                        {/* Secondary actions - smaller buttons below */}\n                        <div className=\"secondary-actions\">\n                          <button \n                            className=\"wax-redeem-button secondary\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleWaxRedeem(asset)\n                            }}\n                            disabled={!account}\n                          >\n                            Redeem (WAX)\n                          </button>\n                          <button \n                            className=\"info-button secondary\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleViewAssetDetail(asset)\n                            }}\n                          >\n                            Info\n                          </button>\n                        </div>\n                        \n                        {/* Icon-only actions at bottom */}\n                        <div className=\"icon-actions\">\n                          \n                          <button \n                            className={`btn-watchlist icon-only ${watchlist.has(asset.assetId.toString()) ? 'active' : ''}`}\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            handleToggleWatchlist(asset.assetId.toString())\n                          }}\n                          title={watchlist.has(asset.assetId.toString()) ? 'Remove from Watchlist' : 'Add to Watchlist'}\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill={watchlist.has(asset.assetId.toString()) ? 'currentColor' : 'none'} stroke=\"currentColor\">\n                              <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"/>\n                            </svg>\n                          </button>\n\n                          <button \n                            className=\"btn-copy-link icon-only\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              const assetUrl = `${window.location.origin}/asset/${asset.assetId}`\n                              navigator.clipboard.writeText(assetUrl).then(() => {\n                                showSuccess('Asset link copied to clipboard!')\n                              }).catch(() => {\n                                showError('Failed to copy link')\n                              })\n                            }}\n                            title=\"Copy Link\"\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                              <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"/>\n                              <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"/>\n                            </svg>\n                          </button>\n\n                          <button \n                            className=\"btn-share icon-only\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleShareAsset(asset)\n                            }}\n                            title=\"Share Asset\"\n                          >\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                              <path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"/>\n                              <polyline points=\"16,6 12,2 8,6\"/>\n                              <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"/>\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                {/* Load More Assets Button */}\n                {hasMoreAssets && (\n                  <div className=\"load-more-section\">\n                    <button \n                      className=\"load-more-button\"\n                      onClick={loadMoreAssets}\n                      disabled={loadingMoreAssets}\n                    >\n                      {loadingMoreAssets ? 'Loading...' : 'Load More Assets'}\n                    </button>\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        ) : activeTab === 'other-collections' ? (\n          <div className=\"other-collections-section\">\n            <div className=\"construction-message\">\n              <div className=\"construction-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"/>\n                </svg>\n              </div>\n              <h2>Other RWAX Collections</h2>\n              <p>Support for additional RWAX collections is coming soon!</p>\n              <div className=\"construction-details\">\n                <p>We're working on expanding RWAX tokenization to support more NFT collections beyond Pixals. Stay tuned for updates!</p>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n\n      {/* Tokenization Modal */}\n      {showTokenizeModal && selectedAsset && (\n        <div className=\"rwax-modal-overlay\" onClick={() => setShowTokenizeModal(false)}>\n          <div className=\"rwax-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"rwax-modal-header\">\n              <h2>Tokenize Pixal</h2>\n              <button className=\"rwax-close-button\" onClick={() => setShowTokenizeModal(false)}>×</button>\n            </div>\n            <div className=\"rwax-modal-body\">\n              <div className=\"selected-asset\">\n                <MediaRenderer \n                  imageUrl={selectedAsset.image}\n                      alt={selectedAsset.name}\n                  className=\"modal-asset-image\"\n                />\n                <h3>{selectedAsset.name}</h3>\n              </div>\n              \n              <div className=\"fee-selection\">\n                <h4>Select Fee Token:</h4>\n                {feeTokens.map((token, index) => (\n                  <div \n                    key={index} \n                    className={`fee-option ${selectedFeeToken === token ? 'selected' : ''}`}\n                    onClick={() => setSelectedFeeToken(token)}\n                  >\n                    <span className=\"fee-amount\">{token.fee}</span>\n                    {token.wax_value && token.symbol !== 'WAX' && (\n                      <span className=\"wax-equivalent\">≈ {parseFloat(token.wax_value).toFixed(4)} WAX</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"modal-actions\">\n                <button className=\"cancel-button\" onClick={() => setShowTokenizeModal(false)}>\n                  Cancel\n                </button>\n                <button \n                  className=\"confirm-button\"\n                  onClick={executeTokenization}\n                  disabled={!selectedFeeToken}\n                >\n                  Tokenize\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Redemption Modal */}\n      {showRedeemModal && selectedAsset && isTokenizedAsset(selectedAsset) && (\n        <div className=\"rwax-modal-overlay\" onClick={() => setShowRedeemModal(false)}>\n          <div className=\"rwax-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"rwax-modal-header\">\n              <h2>Redeem WPIXAL</h2>\n              <button className=\"rwax-close-button\" onClick={() => setShowRedeemModal(false)}>×</button>\n            </div>\n            <div className=\"rwax-modal-body\">\n              <div className=\"selected-asset\">\n                <MediaRenderer \n                  imageUrl={selectedAsset.image}\n                  alt={selectedAsset.name}\n                  className=\"modal-asset-image\"\n                />\n                <h3>{selectedAsset.name}</h3>\n                {isTokenizedAsset(selectedAsset) && (\n                  <p className=\"wpixal-required\">Required: {selectedAsset.rwax.redeemAmount.toFixed(8)} WPIXAL</p>\n                )}\n              </div>\n              \n              <div className=\"fee-selection\">\n                <h4>Select Fee Token:</h4>\n                {feeTokens.map((token, index) => (\n                  <div \n                    key={index} \n                    className={`fee-option ${selectedFeeToken === token ? 'selected' : ''}`}\n                    onClick={() => setSelectedFeeToken(token)}\n                  >\n                    <span className=\"fee-amount\">{token.fee}</span>\n                    {token.wax_value && token.symbol !== 'WAX' && (\n                      <span className=\"wax-equivalent\">≈ {parseFloat(token.wax_value).toFixed(4)} WAX</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"modal-actions\">\n                <button className=\"cancel-button\" onClick={() => setShowRedeemModal(false)}>\n                  Cancel\n                </button>\n                <button \n                  className=\"confirm-button\"\n                  onClick={executeRedemption}\n                  disabled={!selectedFeeToken}\n                >\n                  Redeem\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Tokenize from Inventory Modal */}\n      <TokenizeFromInventoryModal \n        isOpen={showInventoryModal}\n        onClose={() => setShowInventoryModal(false)}\n        onSuccess={() => {\n          // Refresh tokenized assets after successful tokenization\n          if (activeTab === 'redeem') {\n            loadTokenizedAssets()\n          }\n        }}\n      />\n      \n      {/* Asset Detail Modal */}\n      <AssetDetailModal \n        asset={selectedDetailAsset}\n        isOpen={showAssetDetailModal}\n        onClose={() => {\n          setShowAssetDetailModal(false)\n          setSelectedDetailAsset(null)\n        }}\n        onRedeem={handleRedeemFromDetail}\n      />\n      \n      {/* WAX Redeem Modal */}\n      {showWaxRedeemModal && selectedAsset && (\n        <div className=\"rwax-modal-overlay\" onClick={closeWaxRedeemModal}>\n          <div className=\"rwax-modal-content rwax-wax-redeem-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"rwax-modal-header\">\n              <h2>Pay with WAX</h2>\n              <button className=\"rwax-close-button\" onClick={closeWaxRedeemModal}>×</button>\n            </div>\n            <div className=\"rwax-modal-body\">\n              <div className=\"selected-asset\">\n                <MediaRenderer \n                  imageUrl={selectedAsset.image}\n                  alt={selectedAsset.name}\n                  className=\"modal-asset-image\"\n                />\n                <h3>{selectedAsset.name}</h3>\n                {isTokenizedAsset(selectedAsset) && (\n                  <>\n                    <p className=\"wpixal-required\">Required: {selectedAsset.rwax.redeemAmount.toFixed(8)} WPIXAL</p>\n                    <p className=\"wax-cost\">Cost: {(selectedAsset.rwax.redeemAmount * wpixalPriceWAX).toFixed(4)} WAX</p>\n                    <p className=\"usd-cost\">USD: ${(selectedAsset.rwax.redeemAmount * wpixalPriceUSD).toFixed(4)}</p>\n                  </>\n                )}\n              </div>\n              \n              {waxRedeemStep === 'confirm' && (\n                <div className=\"wax-redeem-step\">\n                  <h4>Step 1: Confirm WAX Payment</h4>\n                  <p className=\"step-description\">\n                    This process will swap your WAX for WPIXAL via Alcor, then use that WPIXAL to redeem your NFT.\n                  </p>\n                  \n                  <div className=\"wax-calculator-section\">\n                    <div className=\"available-wax\">\n                      <h4>Your Available WAX</h4>\n                      <div className=\"wax-balance\">\n                        <span className=\"nav-balance-amount\">{waxBalance}</span>\n                        <span className=\"balance-usd\">(${(parseFloat(waxBalance.split(' ')[0]) * waxPriceUSD).toFixed(2)} USD)</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"wpixal-calculator\">\n                      <h4>WPIXAL Calculator</h4>\n                      <div className=\"calculator-info\">\n                        <p>With your available WAX, you can buy:</p>\n                        <div className=\"max-wpixal\">\n                          <strong>{wpixalPriceWAX > 0 ? (100 / wpixalPriceWAX).toFixed(4) : '0.0000'} WPIXAL</strong>\n                        </div>\n                        <div className=\"rate-info\">\n                          <small>Rate: 1 WPIXAL = {wpixalPriceWAX.toFixed(6)} WAX</small>\n                        </div>\n                      </div>\n                      \n                      <div className=\"purchase-slider\">\n                        <label>Amount to purchase:</label>\n                        <input\n                          type=\"range\"\n                          min=\"0\"\n                          max={Math.min(100, wpixalPriceWAX > 0 && isTokenizedAsset(selectedAsset) ? selectedAsset.rwax.redeemAmount * wpixalPriceWAX : 0)}\n                          step=\"0.0001\"\n                          value={waxAmount ? parseFloat(waxAmount) : 0}\n                          onChange={(e) => setWaxAmount(parseFloat(e.target.value).toFixed(4))}\n                          className=\"wpixal-slider\"\n                        />\n                        <div className=\"slider-labels\">\n                          <span>0 WAX</span>\n                          <span>{Math.min(100, wpixalPriceWAX > 0 && isTokenizedAsset(selectedAsset) ? selectedAsset.rwax.redeemAmount * wpixalPriceWAX : 0).toFixed(4)} WAX</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"purchase-summary\">\n                        <div className=\"summary-row\">\n                          <span>WPIXAL to buy:</span>\n                          <span>{waxAmount ? (parseFloat(waxAmount) / wpixalPriceWAX).toFixed(4) : '0.0000'} WPIXAL</span>\n                        </div>\n                        <div className=\"summary-row\">\n                          <span>WAX cost:</span>\n                          <span>{waxAmount || '0.0000'} WAX</span>\n                        </div>\n                        <div className=\"summary-row\">\n                          <span>USD cost:</span>\n                          <span>${waxAmount ? (parseFloat(waxAmount) * waxPriceUSD).toFixed(4) : '0.0000'}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"process-steps\">\n                    <div className=\"step-item\">\n                      <span className=\"step-number\">1</span>\n                      <span className=\"step-text\">Swap WAX → WPIXAL via Alcor</span>\n                    </div>\n                    <div className=\"step-item\">\n                      <span className=\"step-number\">2</span>\n                      <span className=\"step-text\">Redeem NFT with WPIXAL</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"modal-actions\">\n                    <button className=\"cancel-button\" onClick={closeWaxRedeemModal}>\n                      Cancel\n                    </button>\n                    <button \n                      className=\"confirm-button\"\n                      onClick={executeWaxRedeem}\n                      disabled={!waxAmount || parseFloat(waxAmount) <= 0 || wpixalPriceWAX <= 0 || !isTokenizedAsset(selectedAsset) || (parseFloat(waxAmount) / wpixalPriceWAX) > selectedAsset.rwax.redeemAmount}\n                    >\n                      Buy WPIXAL & Redeem\n                    </button>\n                  </div>\n                </div>\n              )}\n              \n              {waxRedeemStep === 'swap' && (\n                <div className=\"wax-redeem-step\">\n                  <h4>Step 2: Swapping WAX to WPIXAL</h4>\n                  <p className=\"step-description\">\n                    Connecting to Alcor to swap {waxAmount} WAX for WPIXAL...\n                  </p>\n                  \n                  <div className=\"swap-progress\">\n                    <div className=\"progress-spinner\"></div>\n                    <p>Processing swap transaction...</p>\n                  </div>\n                  \n                  <div className=\"modal-actions\">\n                    <button className=\"cancel-button\" onClick={closeWaxRedeemModal}>\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n              \n              {waxRedeemStep === 'redeem' && (\n                <div className=\"wax-redeem-step\">\n                  <h4>Step 3: Redeeming NFT</h4>\n                  <p className=\"step-description\">\n                    Using WPIXAL to redeem your NFT...\n                  </p>\n                  \n                  <div className=\"redeem-progress\">\n                    <div className=\"progress-spinner\"></div>\n                    <p>Processing redemption transaction...</p>\n                  </div>\n                </div>\n              )}\n              \n              {waxRedeemStep === 'complete' && (\n                <div className=\"wax-redeem-step\">\n                  <h4>✅ Redemption Complete!</h4>\n                  <p className=\"step-description success\">\n                    Your NFT has been successfully redeemed using WAX payment.\n                  </p>\n                  \n                  <div className=\"modal-actions\">\n                    <button \n                      className=\"confirm-button\"\n                      onClick={() => {\n                        closeWaxRedeemModal()\n                        loadTokenizedAssets() // Refresh the assets\n                      }}\n                    >\n                      Done\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Live RWAX Transactions Section */}\n      <div className=\"live-transactions-section\">\n        <RWAXLiveTransactions limit={12} refreshInterval={30000} />\n      </div>\n      \n      {/* Image Zoom Modal */}\n      {showImageZoom && (\n        <div className=\"image-zoom-modal\" onClick={() => setShowImageZoom(false)}>\n          <div className=\"zoom-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button \n              className=\"zoom-modal-close\"\n              onClick={() => setShowImageZoom(false)}\n            >\n              ×\n            </button>\n            {zoomedImage && (\n              <>\n                <img \n                  src={zoomedImage.url} \n                  alt={zoomedImage.name}\n                  className=\"zoom-modal-image\"\n                />\n                <div className=\"zoom-modal-info\">\n                  <h3>{zoomedImage.name}</h3>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* WPIXAL Purchase Modal - Now using SwapInterface */}\n      {showWpixalPurchaseModal && (\n        <SwapInterface \n          isModal={true}\n          onClose={() => setShowWpixalPurchaseModal(false)}\n          initialBuyAmount={wpixalToPurchase}\n        />\n      )}\n      \n      {/* Price Alert Modal */}\n      {showPriceAlertModal && alertAsset && (\n        <div className=\"rwax-modal-overlay\" onClick={() => setShowPriceAlertModal(false)}>\n          <div className=\"rwax-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"rwax-modal-header\">\n              <h2>Set Price Alert</h2>\n              <button \n                className=\"rwax-close-button\"\n                onClick={() => setShowPriceAlertModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"rwax-modal-body\">\n              {alertAsset && (\n                <div className=\"alert-asset-info\">\n                  <MediaRenderer \n                    imageUrl={alertAsset.image}\n                    alt={alertAsset.name}\n                    className=\"modal-asset-image\"\n                  />\n                  <h3>{alertAsset.name}</h3>\n                  <p>Current Price: {alertAsset.rwax.redeemAmount.toFixed(8)} WPIXAL</p>\n                </div>\n              )}\n              \n              <div className=\"alert-settings\">\n                <h4>Alert when price changes by:</h4>\n                <div className=\"percentage-options\">\n                  {[5, 10, 15, 20, 25].map(percentage => (\n                    <button\n                      key={percentage}\n                      className={`percentage-option ${alertPercentage === percentage ? 'selected' : ''}`}\n                      onClick={() => setAlertPercentage(percentage)}\n                    >\n                      {percentage}%\n                    </button>\n                  ))}\n                </div>\n                \n                <div className=\"custom-percentage\">\n                  <label>Custom percentage:</label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"100\"\n                    value={alertPercentage}\n                    onChange={(e) => setAlertPercentage(parseInt(e.target.value) || 10)}\n                    className=\"percentage-input\"\n                  />\n                  <span>%</span>\n                </div>\n                \n                <div className=\"alert-preview\">\n                  <p>You will be notified when the price moves {alertPercentage}% from the current value.</p>\n                  <div className=\"price-thresholds\">\n                    <div className=\"threshold-item\">\n                      <span className=\"threshold-label\">Alert above:</span>\n                      <span className=\"threshold-value\">\n                        {(alertAsset.rwax.redeemAmount * (1 + alertPercentage / 100)).toFixed(4)} WPIXAL\n                      </span>\n                    </div>\n                    <div className=\"threshold-item\">\n                      <span className=\"threshold-label\">Alert below:</span>\n                      <span className=\"threshold-value\">\n                        {(alertAsset.rwax.redeemAmount * (1 - alertPercentage / 100)).toFixed(4)} WPIXAL\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"modal-actions\">\n                <button \n                  className=\"cancel-button\"\n                  onClick={() => setShowPriceAlertModal(false)}\n                >\n                  Cancel\n                </button>\n                {alertAsset && priceAlerts.has(alertAsset.assetId.toString()) && (\n                  <button \n                    className=\"remove-alert-button\"\n                    onClick={() => {\n                      if (alertAsset) {\n                        removePriceAlert(alertAsset.assetId.toString())\n                        setShowPriceAlertModal(false)\n                      }\n                    }}\n                  >\n                    Remove Alert\n                  </button>\n                )}\n                <button \n                  className=\"confirm-button\"\n                  onClick={() => {\n                    if (alertAsset) {\n                      handleSetPriceAlert(alertAsset, alertPercentage)\n                      setShowPriceAlertModal(false)\n                    }\n                  }}\n                >\n                  {alertAsset && priceAlerts.has(alertAsset.assetId.toString()) ? 'Update Alert' : 'Set Alert'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* WPIXAL Price Alert Modal */}\n      {showWpixalAlertModal && (\n        <div className=\"rwax-modal-overlay\" onClick={() => setShowWpixalAlertModal(false)}>\n          <div className=\"rwax-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"rwax-modal-header\">\n              <h2>WPIXAL Price Alert</h2>\n              <button \n                className=\"rwax-close-button\"\n                onClick={() => setShowWpixalAlertModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"rwax-modal-body\">\n              <div className=\"wpixal-alert-info\">\n                <h3>Set WPIXAL Price Alert</h3>\n                <div className=\"current-wpixal-prices\">\n                  <p>Current WPIXAL Price:</p>\n                  <div className=\"price-display\">\n                    <span className=\"wax-price\">{wpixalPriceWAX > 0 ? `${wpixalPriceWAX.toFixed(8)} WAX` : 'Loading...'}</span>\n                    <span className=\"usd-price\">{wpixalPriceUSD > 0 ? `($${wpixalPriceUSD.toFixed(6)} USD)` : ''}</span>\n                  </div>\n                </div>\n                {localStorage.getItem('wpixalPriceAlert') && (\n                  <div className=\"existing-alert-info\">\n                    <p>Your Current Alert: {localStorage.getItem('wpixalPriceAlert')} WAX</p>\n                    <p className=\"price-comparison\">\n                      {wpixalPriceWAX > 0 && localStorage.getItem('wpixalPriceAlert') ? \n                        `Current price is ${((wpixalPriceWAX - parseFloat(localStorage.getItem('wpixalPriceAlert')!)) / parseFloat(localStorage.getItem('wpixalPriceAlert')!) * 100).toFixed(2)}% ${wpixalPriceWAX > parseFloat(localStorage.getItem('wpixalPriceAlert')!) ? 'above' : 'below'} your alert` \n                        : ''\n                      }\n                    </p>\n                  </div>\n                )}\n                <p>Get notified when WPIXAL price drops below your target value</p>\n              </div>\n              \n              <div className=\"alert-settings\">\n                <h4>Alert when WPIXAL price (in WAX) drops below:</h4>\n                <div className=\"price-input-container\">\n                  <input\n                    type=\"number\"\n                    step=\"0.00000001\"\n                    min=\"0\"\n                    value={wpixalAlertPrice}\n                    onChange={(e) => setWpixalAlertPrice(e.target.value)}\n                    placeholder=\"Enter WAX amount\"\n                    className=\"price-alert-input\"\n                  />\n                  <span className=\"currency-label\">WAX</span>\n                </div>\n                \n              </div>\n              \n              <div className=\"modal-actions\">\n                <button \n                  className=\"cancel-button\"\n                  onClick={() => setShowWpixalAlertModal(false)}\n                >\n                  Cancel\n                </button>\n                <button \n                  className=\"confirm-button\"\n                  onClick={() => {\n                    if (wpixalAlertPrice && parseFloat(wpixalAlertPrice) > 0) {\n                      // Store WPIXAL alert in localStorage\n                      localStorage.setItem('wpixalPriceAlert', wpixalAlertPrice)\n                      setShowWpixalAlertModal(false)\n                      setWpixalAlertPrice('')\n                      // Show success message\n                      showSuccess('Price Alert Set', `WPIXAL price alert set for ${wpixalAlertPrice} WAX`)\n                    }\n                  }}\n                  disabled={!wpixalAlertPrice || parseFloat(wpixalAlertPrice) <= 0}\n                >\n                  Set Alert\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Filter Sidebar */}\n      {isFilterSidebarOpen && (\n        <>\n          <div className=\"filter-sidebar-overlay\" onClick={closeFilterSidebar}></div>\n          <div className=\"filter-sidebar\">\n            <div className=\"filter-sidebar-header\">\n              <h3>Advanced Filters</h3>\n              <button className=\"close-sidebar-btn\" onClick={closeFilterSidebar}>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"filter-section\">\n              <h4>Price Range (WPIXAL)</h4>\n              <div className=\"price-range-inputs\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Min\"\n                  value={priceRange.min}\n                  onChange={(e) => setPriceRange(prev => ({ ...prev, min: e.target.value }))}\n                  className=\"price-input\"\n                />\n                <span>to</span>\n                <input\n                  type=\"number\"\n                  placeholder=\"Max\"\n                  value={priceRange.max}\n                  onChange={(e) => setPriceRange(prev => ({ ...prev, max: e.target.value }))}\n                  className=\"price-input\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"filter-section\">\n              <PixalAttributeFilter\n                onFiltersChange={handleAttributeFiltersChange}\n                initialFilters={selectedAttributeFilters}\n              />\n            </div>\n          </div>\n        </>\n      )}\n      \n      {/* Share Modal */}\n      {showShareModal && shareAsset && (\n        <ShareModal\n          isOpen={showShareModal}\n          onClose={() => {\n            setShowShareModal(false)\n            setShareAsset(null)\n          }}\n          type=\"nft\"\n          title={''}\n          shareUrl={`${window.location.origin}/rwax/asset/${shareAsset.assetId}`}\n          defaultShareText={`Check out this tokenized Pixal: ${shareAsset.name} - ${shareAsset.rwax.redeemAmount.toFixed(8)} WPIXAL on PxMarket! 🎮✨`}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default RWax","import React, { useState, useMemo } from 'react'\nimport CraftingModal from './CraftingModal'\nimport type { CraftingRecipe } from '../types/ingredients'\nimport { CRAFTING_RECIPES } from '../data/ingredients'\nimport '../css/pxcrafting.css'\n\n// Template data with staking values and upgrade costs\nconst templates = [\n  { id: 781515, pxj: 1, wuf: 22.0, pxjUpgrade: 0, name: \"Pixal PFP\", type: \"pixals\" },\n  { id: 820134, pxj: 2.22, wuf: 5.0, pxjUpgrade: 0, name: \"Pixel Ingredient Pack\", type: \"pixelpack\" },\n  { id: 858568, pxj: 142.0, wuf: 142.0, pxjUpgrade: 0, name: \"Black\", type: \"special\" },\n  { id: 858569, pxj: 0.42, wuf: 1.0, pxjUpgrade: 0, name: \"Blue\", type: \"primary ingredient\" },\n  { id: 858570, pxj: 0.42, wuf: 1.0, pxjUpgrade: 0, name: \"Red\", type: \"primary ingredient\" },\n  { id: 858571, pxj: 0.42, wuf: 1.0, pxjUpgrade: 0, name: \"Yellow\", type: \"primary ingredient\" },\n  { id: 858572, pxj: 2.22, wuf: 1.0, pxjUpgrade: 25000, name: \"Green\", type: \"secondary ingredient\" },\n  { id: 858573, pxj: 2.22, wuf: 1.0, pxjUpgrade: 25000, name: \"Orange\", type: \"secondary ingredient\" },\n  { id: 858574, pxj: 2.22, wuf: 1.0, pxjUpgrade: 25000, name: \"Purple\", type: \"secondary ingredient\" },\n  { id: 858575, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Amber\", type: \"tertiary ingredient\" },\n  { id: 858576, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Chartreuse\", type: \"tertiary ingredient\" },\n  { id: 858577, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Violet\", type: \"tertiary ingredient\" },\n  { id: 858578, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Teal\", type: \"tertiary ingredient\" },\n  { id: 858580, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Vermillion\", type: \"tertiary ingredient\" },\n  { id: 859273, pxj: 14.2, wuf: 14.2, pxjUpgrade: 150000, name: \"Magenta\", type: \"tertiary ingredient\" }\n]\n\ninterface ROICalculation {\n  craftingCost: number\n  dailyEarnings: number\n  roiDays: number\n  profitMargin: number\n}\n\nconst PxCrafting: React.FC = () => {\n\n  const [activeTab, setActiveTab] = useState<'overview' | 'calculator' | 'recipes' | 'staking'>('overview')\n  const [craftingModalOpen, setCraftingModalOpen] = useState(false)\n\n  const [pxjPrice, setPxjPrice] = useState(0.001) // Default PXJ price in WAX\n  const [wufPrice, setWufPrice] = useState(0.0005) // Default WUF price in WAX\n  const [collapsedSections, setCollapsedSections] = useState({\n    ingredients: true,\n    governance: true,\n    collectibles: true,\n    overviewIngredients: true\n  })\n\n  // Calculate ROI for crafting recipes\n  const calculateROI = (recipe: CraftingRecipe): ROICalculation => {\n    const template = templates.find(t => t.id === recipe.resultTemplateId)\n    if (!template) {\n      return { craftingCost: 0, dailyEarnings: 0, roiDays: 0, profitMargin: 0 }\n    }\n\n    // Calculate crafting cost (PXJ cost for ingredients + upgrade cost)\n    const ingredientCosts = recipe.ingredients.reduce((total: number, ing: any) => {\n      const ingTemplate = templates.find(t => t.id === ing.templateId)\n      return total + (ingTemplate ? ingTemplate.pxj * ing.quantity : 0)\n    }, 0)\n    \n    const craftingCost = (ingredientCosts + template.pxjUpgrade) * pxjPrice\n    const dailyEarnings = template.pxj * 24 * pxjPrice // PXJ per hour * 24 hours * PXJ price\n    const roiDays = craftingCost > 0 ? craftingCost / dailyEarnings : 0\n    const profitMargin = dailyEarnings > 0 ? ((dailyEarnings - (craftingCost / 365)) / dailyEarnings) * 100 + 100 : 100 // +100% baseline for NFT value retention\n\n    return { craftingCost, dailyEarnings, roiDays, profitMargin }\n  }\n\n  // Group templates by type\n  const templatesByType = useMemo(() => {\n    const groups: { [key: string]: typeof templates } = {\n      'special': [],\n      'primary ingredient': [],\n      'secondary ingredient': [],\n      'tertiary ingredient': [],\n      'pixals': [],\n      'pixelpack': []\n    }\n    \n    templates.forEach(template => {\n      if (groups[template.type]) {\n        groups[template.type].push(template)\n      }\n    })\n    \n    return groups\n  }, [])\n\n\n\n  const openCraftingModal = () => {\n    setCraftingModalOpen(true)\n  }\n\n  const getIngredientImage = (templateId: number) => {\n    const templateVideos: { [key: string]: string } = {\n      '858575': 'http://pixeljourney.xyz/ingredients/Pixel_Amber_vid_25fps_300px.mp4', // amber\n      '858576': 'http://pixeljourney.xyz/ingredients/Pixel_Chartreuse_vid_25fps_300px.mp4', // chartreuse\n      '858577': 'http://pixeljourney.xyz/ingredients/Pixel_Violet_vid_25fps_300px.mp4', // violet\n      '858578': 'http://pixeljourney.xyz/ingredients/Pixel_Teal_vid_25fps_300px.mp4', // teal\n      '858580': 'http://pixeljourney.xyz/ingredients/Pixel_Vermillion_vid_25fps_300px.mp4', // vermillion\n      '859273': 'http://pixeljourney.xyz/ingredients/Pixel_Magenta_vid_25fps_300px.mp4', // magenta\n      '858574': 'http://pixeljourney.xyz/ingredients/Pixel_Purple_vid_25fps_300px.mp4', // purple\n      '858573': 'http://pixeljourney.xyz/ingredients/Pixel_Orange_vid_25fps_300px.mp4', // orange\n      '858572': 'http://pixeljourney.xyz/ingredients/Pixel_Green_vid_25fps_300px.mp4', // green\n      '858570': 'http://pixeljourney.xyz/ingredients/Pixel_Red_vid_25fps_300px.mp4', // red\n      '858569': 'http://pixeljourney.xyz/ingredients/Pixel_Blue_vid_25fps_300px.mp4', // blue\n      '858571': 'http://pixeljourney.xyz/ingredients/Pixel_Yellow_vid_25fps_300px.mp4', // yellow\n      '858568': 'http://pixeljourney.xyz/ingredients/Pixel_Black_White_vid_25fps_300px.mp4', // black\n    };\n    \n    return templateVideos[templateId.toString()] || `/img/ingredients/${templateId}.png`;\n  };\n\n  const isVideoFormat = (src: string) => {\n    return src.includes('.mp4') || src.includes('.webm');\n  };\n\n  return (\n    <div className=\"pxcrafting-container\">\n      <div className=\"pxcrafting-header\">\n        <h1>Pixel Ingredient Crafting</h1>\n        <p className=\"pxcrafting-subtitle\">\n          Master the art of pixel ingredient crafting with comprehensive guides, ROI calculations, and staking insights.\n        </p>\n      </div>\n\n      <div className=\"pxcrafting-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'overview' ? 'active' : ''}`}\n          onClick={() => setActiveTab('overview')}\n        >\n          Overview\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'recipes' ? 'active' : ''}`}\n          onClick={() => setActiveTab('recipes')}\n        >\n          Recipes\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'calculator' ? 'active' : ''}`}\n          onClick={() => setActiveTab('calculator')}\n        >\n          ROI Calculator\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'staking' ? 'active' : ''}`}\n          onClick={() => setActiveTab('staking')}\n        >\n          Staking Info\n        </button>\n      </div>\n\n      <div className=\"pxcrafting-content\">\n        {activeTab === 'overview' && (\n          <div className=\"overview-tab\">\n            <div className=\"overview-grid\">\n              <div className=\"overview-card\">\n                <h3>🎨 Crafting System</h3>\n                <p>\n                  Create powerful pixel ingredients by combining primary colors into secondary and tertiary ingredients. \n                  Each tier offers increased staking rewards and unique properties.\n                </p>\n                <button \n                  className=\"cta-button\"\n                  onClick={() => openCraftingModal()}\n                >\n                  Start Crafting\n                </button>\n              </div>\n              \n              <div className=\"overview-card\">\n                <h3>💰 Staking Rewards</h3>\n                <p>\n                  Stake your crafted ingredients to earn PXJ and WUF tokens. Higher tier ingredients provide \n                  significantly better returns on your investment.\n                </p>\n                <button \n                  className=\"cta-button secondary\"\n                  onClick={() => setActiveTab('staking')}\n                >\n                  View Staking Info\n                </button>\n              </div>\n              \n              <div className=\"overview-card\">\n                <h3>📊 ROI Analysis</h3>\n                <p>\n                  Calculate the return on investment for different crafting strategies. Optimize your \n                  crafting decisions with real-time profitability analysis.\n                </p>\n                <button \n                  className=\"cta-button secondary\"\n                  onClick={() => setActiveTab('calculator')}\n                >\n                  Calculate ROI\n                </button>\n              </div>\n            </div>\n\n            {/* Main Staking Platform Section */}\n            <div className=\"main-staking-section\">\n              <div className=\"main-staking-card\">\n                <h3>🏛️ Main Staking Platform</h3>\n                <p>Visit the official Pixel Journey staking platform to stake all your NFT collectibles and earn rewards across the entire ecosystem.</p>\n                <a \n                  href=\"https://stake.pixeljourney.xyz\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"main-staking-button\"\n                >\n                  Visit Staking Platform\n                </a>\n              </div>\n            </div>\n\n            <div className=\"ingredient-tiers\">\n              <div className=\"collapsible-section\">\n                <button className=\"section-header\" onClick={() => setCollapsedSections(prev => ({ ...prev, overviewIngredients: !prev.overviewIngredients }))}>\n                  <h2>Staking Values</h2>\n                  <span className={`collapse-icon ${collapsedSections.overviewIngredients ? 'collapsed' : ''}`}>▼</span>\n                </button>\n                {!collapsedSections.overviewIngredients && (\n                  <div className=\"smart-tier-layout\">\n                    {/* First Row: Pixelpack and Special Ingredients */}\n                    <div className=\"tier-row tier-row-premium\">\n                <div className=\"tier-card pixelpack\">\n                  <h4>Pixel Ingredient Pack</h4>\n                  <div className=\"tier-ingredients\">\n                    {templates.filter(t => t.type === 'pixelpack').map(template => {\n                        const imageSrc = getIngredientImage(template.id) || 'https://pixeljourney.xyz/img/pixel_journey_pack_002_500x500.gif'\n                        return (\n                          <div key={template.id} className=\"ingredient-preview\">\n                            {isVideoFormat(imageSrc) ? (\n                              <video \n                                src={imageSrc}\n                                autoPlay\n                                loop\n                                muted\n                                onError={(e) => {\n                                  e.currentTarget.style.display = 'none';\n                                  const img = document.createElement('img');\n                                  img.src = 'https://pixeljourney.xyz/img/pixel_journey_pack_002_500x500.gif';\n                                  img.alt = template.name;\n                                  e.currentTarget.parentNode?.appendChild(img);\n                                }}\n                              />\n                            ) : (\n                              <img \n                                src={imageSrc}\n                                alt={template.name}\n                                onError={(e) => {\n                                  e.currentTarget.src = 'https://pixeljourney.xyz/img/pixel_journey_pack_002_500x500.gif'\n                                }}\n                              />\n                            )}\n                          <span>{template.name} <span className=\"season-tag\">Season 1</span></span>\n                          <small>{template.pxj} PXJ/hr</small>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                \n                <div className=\"tier-card special\">\n                  <h4>Special Ingredients</h4>\n                  <div className=\"tier-ingredients\">\n                    {templates.filter(t => t.type === 'special').map(template => {\n                      const imageSrc = getIngredientImage(template.id)\n                      return (\n                        <div key={template.id} className=\"ingredient-preview\">\n                          {isVideoFormat(imageSrc) ? (\n                            <video \n                              src={imageSrc}\n                              autoPlay\n                              loop\n                              muted\n                              onError={(e) => {\n                                e.currentTarget.style.display = 'none';\n                                const img = document.createElement('img');\n                                img.src = '/img/placeholder-ingredient.png';\n                                img.alt = template.name;\n                                e.currentTarget.parentNode?.appendChild(img);\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src={imageSrc}\n                              alt={template.name}\n                              onError={(e) => {\n                                e.currentTarget.src = '/img/placeholder-ingredient.png'\n                              }}\n                            />\n                          )}\n                          <span>{template.name} <span className=\"season-tag\">Season 1</span></span>\n                          <small>{template.pxj} PXJ/hr</small>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                    </div>\n                    \n                    {/* Second Row: Primary and Secondary Ingredients */}\n                    <div className=\"tier-row tier-row-standard\">\n                <div className=\"tier-card primary\">\n                  <h4>Primary Ingredients</h4>\n                  <div className=\"tier-ingredients\">\n                    {templates.filter(t => t.type === 'primary ingredient').map(template => {\n                      const imageSrc = getIngredientImage(template.id)\n                      return (\n                        <div key={template.id} className=\"ingredient-preview\">\n                          {isVideoFormat(imageSrc) ? (\n                            <video \n                              src={imageSrc}\n                              autoPlay\n                              loop\n                              muted\n                              onError={(e) => {\n                                e.currentTarget.style.display = 'none';\n                                const img = document.createElement('img');\n                                img.src = '/img/placeholder-ingredient.png';\n                                img.alt = template.name;\n                                e.currentTarget.parentNode?.appendChild(img);\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src={imageSrc}\n                              alt={template.name}\n                              onError={(e) => {\n                                e.currentTarget.src = '/img/placeholder-ingredient.png'\n                              }}\n                            />\n                          )}\n                            <span>{template.name} <span className=\"season-tag\">Season 1</span></span>\n                            <small>{template.pxj} PXJ/hr</small>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                \n                <div className=\"tier-card secondary\">\n                  <h4>Secondary Ingredients</h4>\n                  <div className=\"tier-ingredients\">\n                    {templates.filter(t => t.type === 'secondary ingredient').map(template => {\n                      const imageSrc = getIngredientImage(template.id)\n                      return (\n                        <div key={template.id} className=\"ingredient-preview\">\n                          {isVideoFormat(imageSrc) ? (\n                            <video \n                              src={imageSrc}\n                              autoPlay\n                              loop\n                              muted\n                              onError={(e) => {\n                                e.currentTarget.style.display = 'none';\n                                const img = document.createElement('img');\n                                img.src = '/img/placeholder-ingredient.png';\n                                img.alt = template.name;\n                                e.currentTarget.parentNode?.appendChild(img);\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src={imageSrc}\n                              alt={template.name}\n                              onError={(e) => {\n                                e.currentTarget.src = '/img/placeholder-ingredient.png'\n                              }}\n                            />\n                          )}\n                            <span>{template.name} <span className=\"season-tag\">Season 1</span></span>\n                            <small>{template.pxj} PXJ/hr</small>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                    </div>\n                    \n                    {/* Third Row: Tertiary Ingredients Grid */}\n                    <div className=\"tier-row tier-row-tertiary\">\n                <div className=\"tier-card tertiary\">\n                  <h4>Tertiary Ingredients</h4>\n                  <div className=\"tier-ingredients\">\n                    {templates.filter(t => t.type === 'tertiary ingredient').map(template => {\n                      const imageSrc = getIngredientImage(template.id)\n                      return (\n                        <div key={template.id} className=\"ingredient-preview\">\n                          {isVideoFormat(imageSrc) ? (\n                            <video \n                              src={imageSrc}\n                              autoPlay\n                              loop\n                              muted\n                              onError={(e) => {\n                                e.currentTarget.style.display = 'none';\n                                const img = document.createElement('img');\n                                img.src = '/img/placeholder-ingredient.png';\n                                img.alt = template.name;\n                                e.currentTarget.parentNode?.appendChild(img);\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src={imageSrc}\n                              alt={template.name}\n                              onError={(e) => {\n                                e.currentTarget.src = '/img/placeholder-ingredient.png'\n                              }}\n                            />\n                          )}\n                            <span>{template.name} <span className=\"season-tag\">Season 1</span></span>\n                            <small>{template.pxj} PXJ/hr</small>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n                \n                <div className=\"tier-card collectibles\">\n                  <h4>Collectibles</h4>\n                  <div className=\"tier-ingredients\">\n                    <div className=\"sub-tier\">\n                      <h5>PFPs</h5>\n                      {templates.filter(t => t.type === 'pixals').map(template => {\n                        const imageSrc = getIngredientImage(template.id) || 'https://ipfs.io/ipfs/QmQKA9fxWBAsoDnMRZj1v1vsjwZeWZpHmnoEyujmeMi2rp'\n                        return (\n                          <div key={template.id} className=\"ingredient-preview\">\n                            {isVideoFormat(imageSrc) ? (\n                              <video \n                                src={imageSrc}\n                                autoPlay\n                                loop\n                                muted\n                                onError={(e) => {\n                                  e.currentTarget.style.display = 'none';\n                                  const img = document.createElement('img');\n                                  img.src = 'https://ipfs.io/ipfs/QmQKA9fxWBAsoDnMRZj1v1vsjwZeWZpHmnoEyujmeMi2rp';\n                                  img.alt = template.name;\n                                  e.currentTarget.parentNode?.appendChild(img);\n                                }}\n                              />\n                            ) : (\n                              <img \n                                src={imageSrc}\n                                alt={template.name}\n                                onError={(e) => {\n                                  e.currentTarget.src = 'https://ipfs.io/ipfs/QmQKA9fxWBAsoDnMRZj1v1vsjwZeWZpHmnoEyujmeMi2rp'\n                                }}\n                              />\n                            )}\n                            <span>{template.name} <span className=\"season-tag\">Season 1</span></span>\n                            <small>{template.pxj} PXJ/hr</small>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                </div>\n                    </div>\n                  </div>\n                  )\n                }\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'recipes' && (\n          <div className=\"recipes-tab\">\n            <div className=\"recipes-header\">\n              <h2>Crafting Recipes</h2>\n              <div className=\"recipe-category-tabs\">\n                <button className=\"recipe-tab active\">Ingredient</button>\n                <button className=\"recipe-tab disabled\" title=\"Coming Soon\">Collectibles</button>\n                <button className=\"recipe-tab disabled\" title=\"Coming Soon\">Event</button>\n                <button className=\"recipe-tab disabled\" title=\"Coming Soon\">Governance</button>\n              </div>\n            </div>\n            <div className=\"recipes-grid\">\n              {CRAFTING_RECIPES.map((recipe, index) => {\n                const roi = calculateROI(recipe)\n                const resultTemplate = templates.find(t => t.id === recipe.resultTemplateId)\n                \n                return (\n                  <div key={index} className=\"recipe-card\">\n                    <div className=\"recipe-header\">\n                      <h3>{recipe.name}</h3>\n                      <span className={`tier-badge ${recipe.tier}`}>{recipe.tier}</span>\n                    </div>\n                    \n                    <div className=\"recipe-ingredients\">\n                      <h4>Ingredients Required:</h4>\n                      {recipe.ingredients.map((ing, ingIndex) => {\n                        const ingTemplate = templates.find(t => t.id === ing.templateId)\n                        const imageSrc = getIngredientImage(ing.templateId)\n                        return (\n                          <div key={ingIndex} className=\"ingredient-requirement\">\n                            {isVideoFormat(imageSrc) ? (\n                              <video \n                                src={imageSrc}\n                                autoPlay\n                                loop\n                                muted\n                                onError={(e) => {\n                                  e.currentTarget.style.display = 'none';\n                                  const img = document.createElement('img');\n                                  img.src = '/img/placeholder-ingredient.png';\n                                  img.alt = ingTemplate?.name || 'Unknown';\n                                  e.currentTarget.parentNode?.appendChild(img);\n                                }}\n                              />\n                            ) : (\n                              <img \n                                src={imageSrc}\n                                alt={ingTemplate?.name || 'Unknown'}\n                                onError={(e) => {\n                                  e.currentTarget.src = '/img/placeholder-ingredient.png'\n                                }}\n                              />\n                            )}\n                            <span>{ing.quantity}x {ingTemplate?.name || 'Unknown'}</span>\n                          </div>\n                        )\n                      })}\n                    </div>\n                    \n                    <div className=\"recipe-result\">\n                      <h4>Creates:</h4>\n                      <div className=\"result-item\">\n                        {(() => {\n                          const imageSrc = getIngredientImage(recipe.resultTemplateId)\n                          return isVideoFormat(imageSrc) ? (\n                            <video \n                              src={imageSrc}\n                              autoPlay\n                              loop\n                              muted\n                              onError={(e) => {\n                                e.currentTarget.style.display = 'none';\n                                const img = document.createElement('img');\n                                img.src = '/img/placeholder-ingredient.png';\n                                img.alt = resultTemplate?.name || 'Unknown';\n                                e.currentTarget.parentNode?.appendChild(img);\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src={imageSrc}\n                              alt={resultTemplate?.name || 'Unknown'}\n                              onError={(e) => {\n                                e.currentTarget.src = '/img/placeholder-ingredient.png'\n                              }}\n                            />\n                          )\n                        })()}\n                        <span>1x {resultTemplate?.name || 'Unknown'}</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"recipe-stats\">\n                      <div className=\"stat\">\n                        <label>Cost:</label>\n                        <span>{roi.craftingCost.toFixed(4)} WAX</span>\n                      </div>\n                      <div className=\"stat\">\n                        <label>Daily Earnings:</label>\n                        <span>{roi.dailyEarnings.toFixed(4)} WAX</span>\n                      </div>\n                      <div className=\"stat\">\n                        <label>ROI Period:</label>\n                        <span>{roi.roiDays.toFixed(1)} days</span>\n                      </div>\n                    </div>\n                    \n                    <button \n                      className=\"craft-button\"\n                      onClick={() => {\n                        openCraftingModal()\n                      }}\n                    >\n                      Craft This Recipe\n                    </button>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'calculator' && (\n          <div className=\"calculator-tab\">\n            <h2>ROI Calculator</h2>\n            \n            <div className=\"price-inputs\">\n              <div className=\"input-group\">\n                <label>PXJ Price (WAX):</label>\n                <input \n                  type=\"number\" \n                  step=\"0.0001\" \n                  value={pxjPrice} \n                  onChange={(e) => setPxjPrice(parseFloat(e.target.value) || 0)}\n                />\n              </div>\n              <div className=\"input-group\">\n                <label>WUF Price (WAX):</label>\n                <input \n                  type=\"number\" \n                  step=\"0.0001\" \n                  value={wufPrice} \n                  onChange={(e) => setWufPrice(parseFloat(e.target.value) || 0)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"roi-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Recipe</th>\n                    <th>Tier</th>\n                    <th>Crafting Cost</th>\n                    <th>Daily Earnings</th>\n                    <th>ROI Period</th>\n                    <th>Profit Margin</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {CRAFTING_RECIPES.map((recipe, index) => {\n                    const roi = calculateROI(recipe)\n                    return (\n                      <tr key={index}>\n                        <td>{recipe.name}</td>\n                        <td><span className={`tier-badge ${recipe.tier}`}>{recipe.tier}</span></td>\n                        <td>{roi.craftingCost.toFixed(4)} WAX</td>\n                        <td>{roi.dailyEarnings.toFixed(4)} WAX</td>\n                        <td>{roi.roiDays.toFixed(1)} days</td>\n                        <td className={roi.profitMargin > 0 ? 'positive' : 'negative'}>\n                          {roi.profitMargin.toFixed(1)}%\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'staking' && (\n          <div className=\"staking-tab\">\n            <h2>Staking Information</h2>\n            <p className=\"staking-description\">\n              Stake your Pixel Journey NFTs to earn PXJ and WUF rewards. Use PXJ to infuse, upgrade, and unlock new journeys while earning returns over a 2-3 year period. Benefit from our yearly PXJ allocations (~25% of yearly inflation) that boost crafting incentives and reward active participants in the ecosystem.\n            </p>\n            \n            <div className=\"staking-tiers\">\n              <div className=\"collapsible-section\">\n                <button className=\"section-header\" onClick={() => setCollapsedSections(prev => ({ ...prev, collectibles: !prev.collectibles }))}>\n                  <h3>Collectibles</h3>\n                  <span className={`collapse-icon ${collapsedSections.collectibles ? 'collapsed' : ''}`}>▼</span>\n                </button>\n                {!collapsedSections.collectibles && (\n                  <div className=\"tiers-grid\">\n                    <div className=\"tier-section\">\n                      <h4 className=\"tier-title\">PFPs</h4>\n                      <div className=\"tier-items\">\n                        {templates.filter(t => t.type === 'pixals').map((template) => {\n                          const imageSrc = getIngredientImage(template.id)\n                          const fallbackUrl = 'https://ipfs.io/ipfs/QmQKA9fxWBAsoDnMRZj1v1vsjwZeWZpHmnoEyujmeMi2rp'\n                          return (\n                            <div key={template.id} className=\"tier-item\">\n                              {isVideoFormat(imageSrc) ? (\n                                <video \n                                  src={imageSrc}\n                                  autoPlay\n                                  loop\n                                  muted\n                                  onError={(e) => {\n                                    e.currentTarget.style.display = 'none';\n                                    const img = document.createElement('img');\n                                    img.src = fallbackUrl;\n                                    img.alt = template.name;\n                                    e.currentTarget.parentNode?.appendChild(img);\n                                  }}\n                                />\n                              ) : (\n                                <img \n                                  src={imageSrc}\n                                  alt={template.name}\n                                  onError={(e) => {\n                                    e.currentTarget.src = fallbackUrl\n                                  }}\n                                />\n                              )}\n                              <div className=\"tier-info\">\n                                <h5>{template.name}</h5>\n                                <div className=\"tier-stats\">\n                                  <span>PXJ: {template.pxj}</span>\n                                  <span>WUF: {template.wuf}</span>\n                                  {template.pxjUpgrade > 0 && (\n                                    <span>Upgrade: {template.pxjUpgrade.toLocaleString()} PXJ</span>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          )\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"collapsible-section\">\n                <button className=\"section-header\" onClick={() => setCollapsedSections(prev => ({ ...prev, ingredients: !prev.ingredients }))}>\n                  <h3>Ingredients</h3>\n                  <span className={`collapse-icon ${collapsedSections.ingredients ? 'collapsed' : ''}`}>▼</span>\n                </button>\n                {!collapsedSections.ingredients && (\n                  <div className=\"tiers-grid\">\n                    {/* Pixelpack first */}\n                    {templatesByType.pixelpack.length > 0 && (\n                      <div className=\"tier-section\">\n                        <h4 className=\"tier-title\">Pixel Ingredient Pack</h4>\n                        <div className=\"tier-items\">\n                          {templatesByType.pixelpack.map((template) => {\n                            const imageSrc = getIngredientImage(template.id)\n                            const fallbackUrl = 'https://pixeljourney.xyz/img/pixel_journey_pack_002_500x500.gif'\n                            return (\n                              <div key={template.id} className=\"tier-item\">\n                                {isVideoFormat(imageSrc) ? (\n                                  <video \n                                    src={imageSrc}\n                                    autoPlay\n                                    loop\n                                    muted\n                                    onError={(e) => {\n                                      e.currentTarget.style.display = 'none';\n                                      const img = document.createElement('img');\n                                      img.src = fallbackUrl;\n                                      img.alt = template.name;\n                                      e.currentTarget.parentNode?.appendChild(img);\n                                    }}\n                                  />\n                                ) : (\n                                  <img \n                                    src={imageSrc}\n                                    alt={template.name}\n                                    onError={(e) => {\n                                      e.currentTarget.src = fallbackUrl\n                                    }}\n                                  />\n                                )}\n                                <div className=\"ingredient-info\">\n                                  <h5>{template.name}</h5>\n                                  <div className=\"ingredient-stats\">\n                                    <span>PXJ: {template.pxj}</span>\n                                    <span>WUF: {template.wuf}</span>\n                                    {template.pxjUpgrade > 0 && (\n                                      <span>Cost: {template.pxjUpgrade.toLocaleString()} PXJ</span>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                            )\n                          })}\n                        </div>\n                      </div>\n                    )}\n                    {/* Other ingredient types excluding pixals and pixelpack */}\n                    {Object.entries(templatesByType).filter(([type]) => type !== 'pixals' && type !== 'pixelpack').map(([type, typeTemplates]) => (\n                      <div key={type} className=\"tier-section\">\n                        <h4 className=\"tier-title\">{type.charAt(0).toUpperCase() + type.slice(1)} Ingredients</h4>\n                        <div className=\"tier-items\">\n                          {typeTemplates.map((template) => {\n                            const imageSrc = getIngredientImage(template.id)\n                            const fallbackUrl = template.type === 'pixelpack' \n                              ? 'https://pixeljourney.xyz/img/pixel_journey_pack_002_500x500.gif'\n                              : template.type === 'pixals'\n                              ? 'https://ipfs.io/ipfs/QmQKA9fxWBAsoDnMRZj1v1vsjwZeWZpHmnoEyujmeMi2rp'\n                              : '/img/placeholder-ingredient.png'\n                            return (\n                              <div key={template.id} className=\"tier-item\">\n                                {isVideoFormat(imageSrc) ? (\n                                  <video \n                                    src={imageSrc}\n                                    autoPlay\n                                    loop\n                                    muted\n                                    onError={(e) => {\n                                      e.currentTarget.style.display = 'none';\n                                      const img = document.createElement('img');\n                                      img.src = fallbackUrl;\n                                      img.alt = template.name;\n                                      e.currentTarget.parentNode?.appendChild(img);\n                                    }}\n                                  />\n                                ) : (\n                                  <img \n                                    src={imageSrc}\n                                    alt={template.name}\n                                    onError={(e) => {\n                                      e.currentTarget.src = fallbackUrl\n                                    }}\n                                  />\n                                )}\n                                <div className=\"ingredient-info\">\n                                  <h5>{template.name}</h5>\n                                  <div className=\"ingredient-stats\">\n                                    <span>PXJ: {template.pxj}</span>\n                                    <span>WUF: {template.wuf}</span>\n                                    {template.pxjUpgrade > 0 && (\n                                      <span>Cost: {template.pxjUpgrade.toLocaleString()} PXJ</span>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                            )\n                          })}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"collapsible-section\">\n                <button className=\"section-header\" onClick={() => setCollapsedSections(prev => ({ ...prev, governance: !prev.governance }))}>\n                  <h3>Governance NFTs</h3>\n                  <span className={`collapse-icon ${collapsedSections.governance ? 'collapsed' : ''}`}>▼</span>\n                </button>\n                {!collapsedSections.governance && (\n                  <div className=\"coming-soon-content\">\n                    <p>Coming soon at next PixelDAO expansions</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Crafting Modal */}\n      <CraftingModal \n        isOpen={craftingModalOpen}\n        onClose={() => setCraftingModalOpen(false)}\n        ingredient={null}\n      />\n    </div>\n  )\n}\n\nexport default PxCrafting","import { log } from './loggingService'\n\nexport interface FeaturedTokenPromo {\n  id: string\n  tokenSymbol: string\n  tokenContract: string\n  description: string\n  imageUrl?: string\n  websiteUrl?: string\n  paidAmount: number\n  startDate: Date\n  endDate: Date\n  transactionId: string\n  isActive: boolean\n}\n\nexport interface PromoPayment {\n  amount: number // PXJ amount (500K to 5M)\n  duration: number // days (30 to 365)\n  tokenSymbol: string\n  tokenContract: string\n  description: string\n  imageUrl?: string\n  websiteUrl?: string\n}\n\nclass FeaturedTokensService {\n  private readonly FEATURE_ACCOUNT = 'feature.pxj'\n  private readonly MIN_AMOUNT = 500000 // 500K PXJ\n  private readonly MAX_AMOUNT = 5000000 // 5M PXJ\n  private readonly MIN_DAYS = 30\n  private readonly MAX_DAYS = 365\n  \n  /**\n   * Calculate promotion duration based on PXJ amount\n   */\n  calculateDuration(pxjAmount: number): number {\n    // Linear scale: 500K PXJ = 30 days, 5M PXJ = 365 days\n    const ratio = (pxjAmount - this.MIN_AMOUNT) / (this.MAX_AMOUNT - this.MIN_AMOUNT)\n    return Math.floor(this.MIN_DAYS + (ratio * (this.MAX_DAYS - this.MIN_DAYS)))\n  }\n  \n  /**\n   * Calculate required PXJ amount for desired duration\n   */\n  calculateRequiredAmount(days: number): number {\n    const ratio = (days - this.MIN_DAYS) / (this.MAX_DAYS - this.MIN_DAYS)\n    return Math.floor(this.MIN_AMOUNT + (ratio * (this.MAX_AMOUNT - this.MIN_AMOUNT)))\n  }\n  \n  /**\n   * Generate compact memo for promotion payment\n   * Format: TOKEN@CONTRACT|DESCRIPTION|IMAGE|WEBSITE\n   */\n  generatePromoMemo(payment: PromoPayment): string {\n    const token = `${payment.tokenSymbol}@${payment.tokenContract}`\n    \n    // Calculate available space for description\n    const baseLength = token.length + 1 // 1 pipe after token\n    const imageLength = payment.imageUrl ? payment.imageUrl.length + 1 : 0 // +1 for pipe\n    const websiteLength = payment.websiteUrl ? payment.websiteUrl.length + 1 : 0 // +1 for pipe\n    const usedLength = baseLength + imageLength + websiteLength\n    const maxDescLength = Math.min(100, 235 - usedLength) // Leave 5 chars buffer\n    \n    // Truncate description if needed\n    let description = payment.description\n    if (description.length > maxDescLength) {\n      description = description.substring(0, maxDescLength - 3) + '...'\n    }\n    \n    // Build compact memo: TOKEN@CONTRACT|DESCRIPTION|IMAGE|WEBSITE\n    let memo = `${token}|${description}`\n    \n    if (payment.imageUrl) {\n      memo += `|${payment.imageUrl}`\n    }\n    \n    if (payment.websiteUrl) {\n      memo += `|${payment.websiteUrl}`\n    }\n    \n    return memo\n  }\n  \n  /**\n   * Parse memo from blockchain transaction\n   * Supports both new compact format and old JSON format for backward compatibility\n   */\n  parseMemo(memo: string): any {\n    if (!memo) return null\n    \n    try {\n      // Try parsing new compact format first: TOKEN@CONTRACT|DESCRIPTION|IMAGE|WEBSITE\n      if (memo.includes('|') && memo.includes('@') && !memo.startsWith('{')) {\n        const parts = memo.split('|')\n        if (parts.length >= 2) {\n          const [token, description, image = '', website = ''] = parts\n          const [tokenSymbol, tokenContract] = token.split('@')\n          \n          return {\n            type: 'feature_token',\n            token,\n            tokenSymbol,\n            tokenContract,\n            description,\n            image,\n            website\n          }\n        }\n      }\n      \n      // Fall back to old JSON format\n      const parsed = JSON.parse(memo)\n      if (parsed.type === 'feature_token') {\n        return parsed\n      }\n      \n      return null\n    } catch (error) {\n      log.error('Failed to parse memo:', 'FeaturedTokensService.parseMemo', error as Error)\n      return null\n    }\n  }\n  \n  /**\n   * Fetch featured token promotions from blockchain\n   */\n  async getFeaturedTokens(): Promise<FeaturedTokenPromo[]> {\n    try {\n      // Query transfers to feature.pxj account\n      const response = await fetch(`https://wax.eosrio.io/v2/history/get_actions?account=${this.FEATURE_ACCOUNT}&filter=eosio.token:transfer&limit=100&sort=desc`)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      const promos: FeaturedTokenPromo[] = []\n      \n      for (const action of data.actions || []) {\n        try {\n          const transfer = action.act.data\n          const memo = this.parseMemo(transfer.memo)\n          \n          if (!memo || memo.type !== 'feature_token') continue\n          \n          const pxjAmount = parseFloat(transfer.quantity.split(' ')[0])\n          const startDate = new Date(action.timestamp)\n          const endDate = new Date(startDate.getTime() + (memo.duration * 24 * 60 * 60 * 1000))\n          const isActive = new Date() <= endDate\n          \n          // Only include valid promotions with sufficient payment\n          if (pxjAmount >= this.MIN_AMOUNT && isActive) {\n            const [tokenSymbol, tokenContract] = memo.token.split('@')\n            \n            promos.push({\n              id: action.trx_id,\n              tokenSymbol,\n              tokenContract,\n              description: memo.description,\n              imageUrl: memo.image,\n              websiteUrl: memo.website,\n              paidAmount: pxjAmount,\n              startDate,\n              endDate,\n              transactionId: action.trx_id,\n              isActive\n            })\n          }\n        } catch (error) {\n          log.error('Error processing featured token action:', 'FeaturedTokensService.getFeaturedTokens', error as Error)\n        }\n      }\n      \n      // Sort by paid amount (highest first) and then by start date (newest first)\n      return promos.sort((a, b) => {\n        if (a.paidAmount !== b.paidAmount) {\n          return b.paidAmount - a.paidAmount\n        }\n        return b.startDate.getTime() - a.startDate.getTime()\n      })\n      \n    } catch (error) {\n      log.error('Failed to fetch featured tokens:', 'FeaturedTokensService.getFeaturedTokens', error as Error)\n      return []\n    }\n  }\n  \n  /**\n   * Validate promotion payment parameters\n   */\n  validatePayment(payment: PromoPayment): { valid: boolean; error?: string } {\n    if (payment.amount < this.MIN_AMOUNT || payment.amount > this.MAX_AMOUNT) {\n      return {\n        valid: false,\n        error: `Amount must be between ${this.MIN_AMOUNT.toLocaleString()} and ${this.MAX_AMOUNT.toLocaleString()} PXJ`\n      }\n    }\n    \n    if (payment.duration < this.MIN_DAYS || payment.duration > this.MAX_DAYS) {\n      return {\n        valid: false,\n        error: `Duration must be between ${this.MIN_DAYS} and ${this.MAX_DAYS} days`\n      }\n    }\n    \n    if (!payment.tokenSymbol || !payment.tokenContract) {\n      return {\n        valid: false,\n        error: 'Token symbol and contract are required'\n      }\n    }\n    \n    if (!payment.description || payment.description.length < 10) {\n      return {\n        valid: false,\n        error: 'Description must be at least 10 characters'\n      }\n    }\n    \n    // Calculate max description length based on other fields\n    const token = `${payment.tokenSymbol}@${payment.tokenContract}`\n    const baseLength = token.length + 1 // 1 pipe after token\n    const imageLength = payment.imageUrl ? payment.imageUrl.length + 1 : 0\n    const websiteLength = payment.websiteUrl ? payment.websiteUrl.length + 1 : 0\n    const usedLength = baseLength + imageLength + websiteLength\n    const maxDescLength = Math.min(100, 235 - usedLength)\n    \n    if (payment.description.length > maxDescLength) {\n      return {\n        valid: false,\n        error: `Description too long. Maximum ${maxDescLength} characters allowed with current image/website URLs.`\n      }\n    }\n    \n    return { valid: true }\n  }\n}\n\nexport const featuredTokensService = new FeaturedTokensService()","import React, { useState, useEffect } from 'react'\nimport { useWallet } from '../contexts/WalletContext'\nimport { useNotifications } from '../hooks/useNotifications'\nimport { featuredTokensService, type FeaturedTokenPromo, type PromoPayment } from '../services/featuredTokensService'\nimport { log } from '../services/loggingService'\nimport '../css/featured-tokens.css'\n\ninterface FeaturedTokensProps {\n  className?: string\n}\n\nconst FeaturedTokens: React.FC<FeaturedTokensProps> = ({ className = '' }) => {\n  const { account, session } = useWallet()\n  const { showSuccess, showError } = useNotifications()\n  const [featuredTokens, setFeaturedTokens] = useState<FeaturedTokenPromo[]>([])\n  const [loading, setLoading] = useState(true)\n  const [showPromoModal, setShowPromoModal] = useState(false)\n  const [promoForm, setPromoForm] = useState<PromoPayment>({\n    amount: 500000,\n    duration: 30,\n    tokenSymbol: '',\n    tokenContract: '',\n    description: '',\n    imageUrl: '',\n    websiteUrl: ''\n  })\n\n  useEffect(() => {\n    loadFeaturedTokens()\n  }, [])\n\n  const loadFeaturedTokens = async () => {\n    try {\n      setLoading(true)\n      const tokens = await featuredTokensService.getFeaturedTokens()\n      setFeaturedTokens(tokens)\n    } catch (error) {\n      log.error('Failed to load featured tokens:', 'FeaturedTokens.loadFeaturedTokens', error as Error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleAmountChange = (amount: number) => {\n    const duration = featuredTokensService.calculateDuration(amount)\n    setPromoForm(prev => ({ ...prev, amount, duration }))\n  }\n\n\n\n  const submitPromotion = async () => {\n    if (!account || !session) {\n      showError('Please connect your wallet first')\n      return\n    }\n\n    const validation = featuredTokensService.validatePayment(promoForm)\n    if (!validation.valid) {\n      showError(validation.error || 'Invalid promotion parameters')\n      return\n    }\n\n    try {\n      const memo = featuredTokensService.generatePromoMemo(promoForm)\n      \n      const transaction = {\n        actions: [{\n          account: 'pixeljourney',\n          name: 'transfer',\n          authorization: [{\n            actor: account,\n            permission: 'active'\n          }],\n          data: {\n            from: account,\n            to: 'feature.pxj',\n            quantity: `${promoForm.amount.toFixed(4)} PXJ`,\n            memo: memo\n          }\n        }]\n      }\n\n      const result = await session.transact(transaction) as any\n      \n      // Extract transaction ID from various possible response formats\n      let transactionId: string | null = null\n      \n      if (result) {\n        transactionId = result.transaction_id || \n                       result.id || \n                       result.processed?.id || \n                       result.processed?.transaction_id ||\n                       (result.response && result.response.transaction_id) ||\n                       (result.transaction && result.transaction.id)\n      }\n      \n      if (transactionId) {\n        showSuccess(`Promotion submitted successfully! Transaction: ${transactionId}`)\n      } else {\n        showSuccess('Promotion submitted successfully!')\n      }\n      setShowPromoModal(false)\n      \n      // Reload featured tokens after a short delay\n      setTimeout(() => {\n        loadFeaturedTokens()\n      }, 3000)\n      \n    } catch (error) {\n      log.error('Failed to submit promotion:', 'FeaturedTokens.submitPromotion', error as Error)\n      showError(`Failed to submit promotion: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  const formatTimeRemaining = (endDate: Date): string => {\n    const now = new Date()\n    const diff = endDate.getTime() - now.getTime()\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    \n    if (days > 0) {\n      return `${days}d ${hours}h remaining`\n    } else if (hours > 0) {\n      return `${hours}h remaining`\n    } else {\n      return 'Expires soon'\n    }\n  }\n\n  return (\n    <div className={`featured-tokens ${className}`}>\n      <div className=\"featured-tokens-header\">\n        <h3>🌟 Featured Tokens</h3>\n        <button \n          className=\"promote-button\"\n          onClick={() => setShowPromoModal(true)}\n          disabled={!account}\n        >\n          Promote Your Token\n        </button>\n      </div>\n\n      {loading ? (\n        <div className=\"featured-tokens-loading\">\n          <div className=\"loading-spinner\"></div>\n          <span>Loading featured tokens...</span>\n        </div>\n      ) : featuredTokens.length > 0 ? (\n        <div className=\"featured-tokens-grid\">\n          {featuredTokens.slice(0, 6).map((token) => (\n            <div key={token.id} className=\"featured-token-card\">\n              {token.imageUrl && (\n                <div className=\"token-image\">\n                  <img src={token.imageUrl} alt={token.tokenSymbol} />\n                </div>\n              )}\n              <div className=\"token-info\">\n                <div className=\"token-header\">\n                  <span className=\"token-symbol\">{token.tokenSymbol}</span>\n                  <span className=\"token-contract\">@{token.tokenContract}</span>\n                </div>\n                <p className=\"token-description\">{token.description}</p>\n                <div className=\"token-meta\">\n                  <span className=\"promo-amount\">{token.paidAmount.toLocaleString()} PXJ</span>\n                  <span className=\"time-remaining\">{formatTimeRemaining(token.endDate)}</span>\n                </div>\n                {token.websiteUrl && (\n                  <a \n                    href={token.websiteUrl} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"token-website\"\n                  >\n                    Visit Website →\n                  </a>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"no-featured-tokens\">\n          <p>No featured tokens at the moment.</p>\n          <p>Be the first to promote your token!</p>\n        </div>\n      )}\n\n      {/* Promotion Modal */}\n      {showPromoModal && (\n        <div className=\"promo-modal-overlay\" onClick={() => setShowPromoModal(false)}>\n          <div className=\"promo-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"promo-modal-header\">\n              <h3>Promote Your Token</h3>\n              <button \n                className=\"close-button\"\n                onClick={() => setShowPromoModal(false)}\n              >\n                ×\n              </button>\n            </div>\n\n            <div className=\"promo-form\">\n              <div className=\"form-group\">\n                <label>Token Symbol</label>\n                <input\n                  type=\"text\"\n                  value={promoForm.tokenSymbol}\n                  onChange={(e) => setPromoForm(prev => ({ ...prev, tokenSymbol: e.target.value.toUpperCase() }))}\n                  placeholder=\"e.g., MYTOKEN\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Token Contract</label>\n                <input\n                  type=\"text\"\n                  value={promoForm.tokenContract}\n                  onChange={(e) => setPromoForm(prev => ({ ...prev, tokenContract: e.target.value }))}\n                  placeholder=\"e.g., mycontract12\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Description</label>\n                <textarea\n                  value={promoForm.description}\n                  onChange={(e) => setPromoForm(prev => ({ ...prev, description: e.target.value }))}\n                  placeholder=\"Describe your token and why users should trade it...\"\n                  rows={3}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Image URL (optional)</label>\n                <input\n                  type=\"url\"\n                  value={promoForm.imageUrl}\n                  onChange={(e) => setPromoForm(prev => ({ ...prev, imageUrl: e.target.value }))}\n                  placeholder=\"https://example.com/token-logo.png\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Website URL (optional)</label>\n                <input\n                  type=\"url\"\n                  value={promoForm.websiteUrl}\n                  onChange={(e) => setPromoForm(prev => ({ ...prev, websiteUrl: e.target.value }))}\n                  placeholder=\"https://yourtoken.com\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Promotion Amount: {promoForm.amount.toLocaleString()} PXJ</label>\n                <input\n                  type=\"range\"\n                  min={500000}\n                  max={5000000}\n                  step={50000}\n                  value={promoForm.amount}\n                  onChange={(e) => handleAmountChange(parseInt(e.target.value))}\n                  className=\"amount-slider\"\n                />\n                <div className=\"slider-labels\">\n                  <span>500K PXJ (30 days)</span>\n                  <span>5M PXJ (365 days)</span>\n                </div>\n              </div>\n\n              <div className=\"promotion-summary\">\n                <div className=\"summary-item\">\n                  <span>Duration:</span>\n                  <span>{promoForm.duration} days</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span>Cost:</span>\n                  <span>{promoForm.amount.toLocaleString()} PXJ</span>\n                </div>\n              </div>\n\n              <div className=\"form-actions\">\n                <button \n                  className=\"cancel-button\"\n                  onClick={() => setShowPromoModal(false)}\n                >\n                  Cancel\n                </button>\n                <button \n                  className=\"submit-button\"\n                  onClick={submitPromotion}\n                  disabled={!promoForm.tokenSymbol || !promoForm.tokenContract || !promoForm.description}\n                >\n                  Submit Promotion\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FeaturedTokens","import React from 'react'\nimport SwapInterface from './SwapInterface'\nimport FeaturedTokens from './FeaturedTokens'\nimport '../css/pxswap.css'\nimport '../styles/swap-info.css'\n\nconst PxSwap: React.FC = () => {\n  return (\n    <div className=\"pxswap-page\">\n      <div className=\"pxswap-container\">\n        <div className=\"pxswap-header\">\n          <h1>PxSwap</h1>\n          <p>PxSwap currently uses <strong><a \n            href=\"https://alcor.exchange/swap\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            style={{ color: 'var(--primary-purple)', textDecoration: 'none', fontWeight: '500' }}\n            onMouseEnter={(e) => (e.target as HTMLAnchorElement).style.textDecoration = 'underline'}\n            onMouseLeave={(e) => (e.target as HTMLAnchorElement).style.textDecoration = 'none'}\n          >Alcor Exchange</a></strong> for all swaps, providing reliable \n                  liquidity and competitive rates. We're expanding to include multi-DEX routing in the future.</p>\n        </div>\n        \n        <div className=\"pxswap-content\">\n          <SwapInterface />\n        </div>\n        \n        <div className=\"pxswap-info\">\n          {/* Page Description & Routing Info */}\n          <div className=\"swap-info-section\">\n            <h3>🔄 PxSwap Platform Overview</h3>\n            <div className=\"info-grid\">\n              <div className=\"info-card\">\n                <h4>Universal Token Swapping</h4>\n                <p>\n                  PxSwap enables seamless trading of any tokens held directly on our platform. \n                  Trade between WAX ecosystem tokens, community tokens, and project-specific assets \n                  with ease using our integrated Alcor Exchange routing.\n                </p>\n              </div>\n              <div className=\"info-card routing-info\">\n                <h4>🛣️ Multi-DEX Routing</h4>\n                <p>\n                  PxSwap currently uses <strong>Alcor Exchange</strong> for all swaps, providing reliable \n                  liquidity and competitive rates. We're expanding to include multi-DEX routing in the future \n                  for even better prices and deeper liquidity.\n                </p>\n                <p>\n                  <strong>Want advanced routing now?</strong> Visit{' '}\n                  <a \n                    href=\"https://waxonedge.app/swap/WAX_eosio.token/PXJ_pixeljourney\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"external-link\"\n                  >\n                    WaxOnEdge\n                  </a>{' '}\n                  for their ecosystem-MVP swap routing platform.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Featured Tokens */}\n          <FeaturedTokens />\n\n          {/* DeFi and LP Farming */}\n          <div className=\"swap-info-section\">\n            <h3>💰 DeFi & LP Farming on WAX</h3>\n            <div className=\"info-grid\">\n              <div className=\"info-card\">\n                <h4>🏛️ Alcor Exchange</h4>\n                <p>The premier DEX on WAX with deep liquidity pools and farming opportunities.</p>\n                <a \n                  href=\"https://alcor.exchange/farm\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  Farm on Alcor →\n                </a>\n              </div>\n              <div className=\"info-card\">\n                <h4>🌮 TacoCrypto</h4>\n                <p>Innovative DeFi platform offering unique yield farming and staking mechanisms.</p>\n                <a \n                  href=\"https://swap.tacocrypto.io/meal\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  Explore TacoCrypto →\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {/* PXJ Spot Markets */}\n          <div className=\"swap-info-section\">\n            <h3>📈 PXJ Spot Markets</h3>\n            <div className=\"info-grid\">\n              <div className=\"info-card\">\n                <h4>PXJ/WAX</h4>\n                <p>Primary trading pair with highest liquidity</p>\n                <a \n                  href=\"https://alcor.exchange/trade/pxj-pixeljourney_wax-eosio.token\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  Trade PXJ/WAX →\n                </a>\n              </div>\n              <div className=\"info-card\">\n                <h4>PXJ/WUF</h4>\n                <p>Community favorite pairing</p>\n                <a \n                  href=\"https://alcor.exchange/trade/pxj-pixeljourney_wuf-wuffi\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  Trade PXJ/WUF →\n                </a>\n              </div>\n              <div className=\"info-card community-request\">\n                <h4>🤔 What's Next?</h4>\n                <p>\n                  What market should we open next? WPIXAL/PXJ? WPIXAL/USDC? \n                  Let us and the WaxRock Council know on our Discord!\n                </p>\n                <a \n                  href=\"#\" \n                  className=\"info-link discord-link\"\n                >\n                  Join Discord →\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {/* Analytics */}\n          <div className=\"swap-info-section\">\n            <h3>📊 WAX DeFi Analytics</h3>\n            <div className=\"info-grid\">\n              <div className=\"info-card\">\n                <h4>📈 Alcor Analytics</h4>\n                <p>Detailed trading data and market insights for Alcor Exchange</p>\n                <a \n                  href=\"https://alcor.exchange/analytics/\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  View Alcor Data →\n                </a>\n              </div>\n              <div className=\"info-card\">\n                <h4>🌊 WaxOnEdge Analytics</h4>\n                <p>Comprehensive ecosystem analytics and cross-DEX insights</p>\n                <a \n                  href=\"https://waxonedge.app/analytics\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  Explore WaxOnEdge →\n                </a>\n              </div>\n              <div className=\"info-card\">\n                <h4>🔍 WAX Network Overview</h4>\n                <p>Complete WAX blockchain DeFi metrics and network statistics</p>\n                <a \n                  href=\"https://grafana.waxtools.net/\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"info-link\"\n                >\n                  View Network Stats →\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      \n    </div>\n  )\n}\n\nexport default PxSwap","import React, { useState, useEffect, useCallback } from 'react'\nimport '../css/price-alert-notification.css'\n\ninterface PriceAlertEvent {\n  item: {\n    nft: {\n      asset_id: string\n      name: string\n      image: string\n      price: string\n    }\n  }\n  message: string\n}\n\ninterface NotificationProps {\n  alert: PriceAlertEvent\n  onClose: () => void\n}\n\nconst PriceAlertNotification: React.FC<NotificationProps> = ({ alert, onClose }) => {\n  const [isVisible, setIsVisible] = useState(false)\n  const [isClosing, setIsClosing] = useState(false)\n\n  const handleClose = useCallback(() => {\n    setIsClosing(true)\n    setTimeout(() => {\n      onClose()\n    }, 300)\n  }, [onClose])\n\n  useEffect(() => {\n    // Show notification with animation\n    const showTimer = setTimeout(() => setIsVisible(true), 100)\n    \n    // Auto-close after 8 seconds\n    const autoCloseTimer = setTimeout(() => {\n      handleClose()\n    }, 8000)\n\n    return () => {\n      clearTimeout(showTimer)\n      clearTimeout(autoCloseTimer)\n    }\n  }, [handleClose])\n\n  const handleViewWatchlist = () => {\n    window.location.href = '/watchlist'\n    handleClose()\n  }\n\n  return (\n    <div className={`price-alert-notification ${\n      isVisible && !isClosing ? 'visible' : ''\n    } ${\n      isClosing ? 'closing' : ''\n    }`}>\n      <div className=\"notification-content\">\n        <div className=\"notification-header\">\n          <div className=\"notification-icon\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path d=\"M15 17h5l-5 5-5-5h5v-5a7.5 7.5 0 1 0-15 0v5h5l-5 5-5-5h5v-5a12.5 12.5 0 1 1 25 0v5z\"></path>\n            </svg>\n          </div>\n          <div className=\"notification-title\">\n            <h4>Price Alert</h4>\n            <span className=\"notification-time\">{new Date().toLocaleTimeString()}</span>\n          </div>\n          <button className=\"notification-close\" onClick={handleClose}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n        \n        <div className=\"notification-body\">\n          <div className=\"nft-preview\">\n            <img \n              src={alert.item.nft.image} \n              alt={alert.item.nft.name}\n              onError={(e) => {\n                const target = e.target as HTMLImageElement\n                target.src = 'https://pixeljourney.xyz/img/toppixals/10.webp'\n              }}\n            />\n          </div>\n          <div className=\"alert-details\">\n            <h5 className=\"nft-name\">{alert.item.nft.name}</h5>\n            <p className=\"alert-message\">{alert.message}</p>\n          </div>\n        </div>\n        \n        <div className=\"notification-actions\">\n          <button className=\"btn-secondary\" onClick={handleClose}>\n            Dismiss\n          </button>\n          <button className=\"btn-primary\" onClick={handleViewWatchlist}>\n            View Watchlist\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst PriceAlertManager: React.FC = () => {\n  const [alerts, setAlerts] = useState<PriceAlertEvent[]>([])\n\n  useEffect(() => {\n    const handlePriceAlert = (event: CustomEvent<PriceAlertEvent>) => {\n      setAlerts(prev => [...prev, event.detail])\n    }\n\n    window.addEventListener('priceAlert', handlePriceAlert as EventListener)\n    \n    return () => {\n      window.removeEventListener('priceAlert', handlePriceAlert as EventListener)\n    }\n  }, [])\n\n  const removeAlert = (index: number) => {\n    setAlerts(prev => prev.filter((_, i) => i !== index))\n  }\n\n  return (\n    <div className=\"price-alert-manager\">\n      {alerts.map((alert, index) => (\n        <PriceAlertNotification\n          key={`${alert.item.nft.asset_id}-${Date.now()}-${index}`}\n          alert={alert}\n          onClose={() => removeAlert(index)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default PriceAlertManager\nexport { PriceAlertNotification }","import React, { useEffect, useRef, useCallback } from 'react'\nimport { useNotifications } from '../hooks/useNotifications'\nimport '../css/notifications.css'\n\nconst NotificationContainer: React.FC = () => {\n  const { notifications, removeNotification, soundEnabled } = useNotifications()\n  const audioContextRef = useRef<AudioContext | null>(null)\n  const soundsRef = useRef<{ [key: string]: AudioBuffer }>({})\n\n  const createTone = (audioContext: AudioContext, frequency: number, duration: number, type: OscillatorType): AudioBuffer => {\n    const sampleRate = audioContext.sampleRate\n    const frameCount = sampleRate * duration\n    const buffer = audioContext.createBuffer(1, frameCount, sampleRate)\n    const channelData = buffer.getChannelData(0)\n    \n    for (let i = 0; i < frameCount; i++) {\n      const t = i / sampleRate\n      let sample = 0\n      \n      switch (type) {\n        case 'sine':\n          sample = Math.sin(2 * Math.PI * frequency * t)\n          break\n        case 'square':\n          sample = Math.sign(Math.sin(2 * Math.PI * frequency * t))\n          break\n        case 'triangle':\n          sample = (2 / Math.PI) * Math.asin(Math.sin(2 * Math.PI * frequency * t))\n          break\n      }\n      \n      // Apply envelope for smooth sound\n      const envelope = Math.exp(-t * 5) // Exponential decay\n      channelData[i] = sample * envelope * 0.1 // Low volume\n    }\n    \n    return buffer\n  }\n\n  const playNotificationSound = useCallback((type: string) => {\n    if (!soundEnabled || !audioContextRef.current || !soundsRef.current[type]) return\n    \n    try {\n      const source = audioContextRef.current.createBufferSource()\n      source.buffer = soundsRef.current[type]\n      source.connect(audioContextRef.current.destination)\n      source.start()\n    } catch (error) {\n      console.warn('Failed to play notification sound:', error)\n    }\n  }, [soundEnabled])\n\n  // Initialize audio context and load sounds\n  useEffect(() => {\n    const initAudio = async () => {\n      try {\n        audioContextRef.current = new (window.AudioContext || (window as { webkitAudioContext?: typeof AudioContext }).webkitAudioContext)()\n        \n        // Create sound buffers for different notification types\n        const sounds = {\n          success: createTone(audioContextRef.current, 800, 0.1, 'sine'),\n          error: createTone(audioContextRef.current, 400, 0.2, 'square'),\n          warning: createTone(audioContextRef.current, 600, 0.15, 'triangle'),\n          info: createTone(audioContextRef.current, 500, 0.1, 'sine')\n        }\n        \n        soundsRef.current = sounds\n      } catch (error) {\n        console.warn('Audio context initialization failed:', error)\n      }\n    }\n    \n    initAudio()\n    \n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close()\n      }\n    }\n  }, [])\n  \n  // Play sound when new notification appears\n  useEffect(() => {\n    if (notifications.length > 0) {\n      const latestNotification = notifications[notifications.length - 1]\n      playNotificationSound(latestNotification.type)\n    }\n  }, [notifications.length, notifications, playNotificationSound])\n\n  if (notifications.length === 0) {\n    return null\n  }\n  \n  const handleRemoveNotification = (id: string) => {\n    // Add removing class for exit animation\n    const notificationElement = document.querySelector(`[data-notification-id=\"${id}\"]`)\n    if (notificationElement) {\n      notificationElement.classList.add('removing')\n      setTimeout(() => {\n        removeNotification(id)\n      }, 300) // Match animation duration\n    } else {\n      removeNotification(id)\n    }\n  }\n\n  return (\n    <div className=\"notification-container\">\n      {notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`notification notification-${notification.type}`}\n          data-notification-id={notification.id}\n        >\n          <div className=\"notification-content\">\n            <div className=\"notification-header\">\n              {notification.title && (\n                <h4 className=\"notification-title\">{notification.title}</h4>\n              )}\n              <button\n                className=\"notification-close\"\n                onClick={() => handleRemoveNotification(notification.id)}\n                aria-label=\"Close notification\"\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                </svg>\n              </button>\n            </div>\n            <div className=\"notification-body\">\n              <div className=\"notification-icon\">\n                {notification.type === 'success' && (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                    <polyline points=\"22,4 12,14.01 9,11.01\"></polyline>\n                  </svg>\n                )}\n                {notification.type === 'error' && (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                    <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n                    <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n                  </svg>\n                )}\n                {notification.type === 'warning' && (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n                    <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line>\n                    <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\n                  </svg>\n                )}\n                {notification.type === 'info' && (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                    <path d=\"M12 16v-4\"></path>\n                    <path d=\"M12 8h.01\"></path>\n                  </svg>\n                )}\n              </div>\n              <div className=\"notification-message\">\n                <p>{notification.message}</p>\n                {notification.action && (\n                  <button\n                    className=\"notification-action\"\n                    onClick={notification.action.onClick}\n                  >\n                    {notification.action.label}\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default NotificationContainer","import React from 'react'\nimport { useNotifications } from '../hooks/useNotifications'\nimport '../css/notifications.css'\n\nconst ConfirmDialog: React.FC = () => {\n  const { confirmDialog, resolveConfirm } = useNotifications()\n\n  if (!confirmDialog) {\n    return null\n  }\n\n  const handleConfirm = () => {\n    resolveConfirm(true)\n  }\n\n  const handleCancel = () => {\n    resolveConfirm(false)\n  }\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleCancel}>\n      <div className=\"modal confirm-dialog\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>{confirmDialog.title || 'Confirm Action'}</h3>\n          <button className=\"modal-close\" onClick={handleCancel}>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <p>{confirmDialog.message}</p>\n        </div>\n        <div className=\"modal-actions\">\n          <button className=\"btn-secondary\" onClick={handleCancel}>\n            {confirmDialog.cancelText || 'Cancel'}\n          </button>\n          <button className=\"btn-primary\" onClick={handleConfirm}>\n            {confirmDialog.confirmText || 'Confirm'}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ConfirmDialog","import React, { Component, type ReactNode } from 'react'\nimport { logger } from '../services/loggingService'\nimport ErrorMessage from './ErrorMessage'\nimport '../css/error-message.css'\n\ninterface Props {\n  children: ReactNode\n  fallback?: ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\ninterface State {\n  hasError: boolean\n  error?: Error\n  errorInfo?: React.ErrorInfo\n  retryCount: number\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = { hasError: false, retryCount: 0 }\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<State> {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    logger.error('ErrorBoundary caught an error', 'ErrorBoundary', error, {\n      componentStack: errorInfo.componentStack,\n      errorBoundary: this.constructor.name\n    })\n    \n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo)\n    }\n    \n    this.setState({\n      error,\n      errorInfo\n    })\n    \n    // Report error to monitoring service (if available)\n    this.reportError(error, errorInfo)\n  }\n\n  private reportError = async (error: Error, errorInfo: React.ErrorInfo) => {\n    try {\n      const errorReport = {\n        message: error.message,\n        stack: error.stack,\n        componentStack: errorInfo.componentStack,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        url: window.location.href\n      }\n      \n      logger.warn('Error Report generated', 'ErrorBoundary', errorReport)\n      \n      // Error reporting is now handled by the logging service\n      // The logger will automatically report errors in production\n    } catch (reportingError) {\n      logger.error('Failed to report error', 'ErrorBoundary', reportingError as Error)\n    }\n  }\n\n  handleRetry = () => {\n    const newRetryCount = this.state.retryCount + 1\n    \n    // Prevent infinite retry loops\n    if (newRetryCount > 3) {\n      logger.warn('Maximum retry attempts reached', 'ErrorBoundary')\n      return\n    }\n    \n    this.setState({ \n      hasError: false, \n      error: undefined, \n      errorInfo: undefined,\n      retryCount: newRetryCount\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback\n      }\n\n      // Default error UI\n      const isMaxRetries = this.state.retryCount >= 3\n      \n      return (\n        <ErrorMessage\n          title=\"Something went wrong\"\n          message={isMaxRetries \n            ? \"Multiple errors occurred. Please refresh the page or contact support if the problem persists.\"\n            : \"An unexpected error occurred. Please try again or refresh the page.\"\n          }\n          onRetry={isMaxRetries ? undefined : this.handleRetry}\n          showRetry={!isMaxRetries}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component, type ReactNode } from 'react'\nimport ErrorMessage from './ErrorMessage'\nimport { ErrorMessageService } from '../services/errorMessageService'\nimport { log } from '../services/loggingService'\n\n\ninterface Props {\n  children: ReactNode\n  fallback?: ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\ninterface State {\n  hasError: boolean\n  error?: Error\n  errorInfo?: React.ErrorInfo\n  retryCount: number\n  isRetrying: boolean\n  lastRetryTime?: number\n  errorCategory: 'network' | 'api' | 'timeout' | 'unknown'\n}\n\nclass APIErrorBoundary extends Component<Props, State> {\n  private maxRetries = 3\n  private retryTimeouts: NodeJS.Timeout[] = []\n\n  constructor(props: Props) {\n    super(props)\n    this.state = { \n      hasError: false, \n      retryCount: 0,\n      isRetrying: false,\n      errorCategory: 'unknown'\n    }\n  }\n\n  componentWillUnmount() {\n    // Clear any pending retry timeouts\n    this.retryTimeouts.forEach(timeout => clearTimeout(timeout))\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<State> {\n    // Categorize the error\n    const errorMessage = error.message.toLowerCase()\n    let errorCategory: State['errorCategory'] = 'unknown'\n    \n    if (errorMessage.includes('fetch') || errorMessage.includes('network') || errorMessage.includes('connection')) {\n      errorCategory = 'network'\n    } else if (errorMessage.includes('timeout') || errorMessage.includes('aborted')) {\n      errorCategory = 'timeout'\n    } else if (errorMessage.includes('http') || errorMessage.includes('api') || errorMessage.includes('failed to load')) {\n      errorCategory = 'api'\n    }\n    \n    // Check if this is an error we should handle\n    const shouldHandle = ['network', 'api', 'timeout'].includes(errorCategory) ||\n                        error.name === 'ChunkLoadError' ||\n                        error.name === 'TypeError' && errorMessage.includes('fetch')\n    \n    if (shouldHandle) {\n      return { hasError: true, error, errorCategory }\n    }\n    \n    // Let other error boundaries handle non-API errors\n    throw error\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Use centralized error logging\n    ErrorMessageService.logError('APIErrorBoundary', error, {\n      errorInfo,\n      retryCount: this.state.retryCount,\n      componentStack: errorInfo.componentStack\n    })\n    \n    this.setState({\n      error,\n      errorInfo\n    })\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo)\n    }\n  }\n\n  handleRetry = () => {\n    if (this.state.retryCount >= this.maxRetries) {\n      log.warn('Max retries reached for API error boundary')\n      return\n    }\n\n    // Calculate exponential backoff delay\n    const baseDelay = 1000 // 1 second\n    const delay = baseDelay * Math.pow(2, this.state.retryCount)\n    const jitter = Math.random() * 0.1 * delay // Add 10% jitter\n    const finalDelay = Math.min(delay + jitter, 30000) // Cap at 30 seconds\n\n    this.setState({ isRetrying: true, lastRetryTime: Date.now() })\n\n    const timeout = setTimeout(() => {\n      this.setState(prevState => ({ \n        hasError: false, \n        error: undefined, \n        errorInfo: undefined,\n        retryCount: prevState.retryCount + 1,\n        isRetrying: false\n      }))\n    }, finalDelay)\n\n    this.retryTimeouts.push(timeout)\n  }\n\n  handleReset = () => {\n    this.setState({ \n      hasError: false, \n      error: undefined, \n      errorInfo: undefined,\n      retryCount: 0\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback\n      }\n\n      const canRetry = this.state.retryCount < this.maxRetries\n      \n      // Determine appropriate error type based on error category\n      let errorType: keyof typeof ErrorMessageService.MESSAGES\n      \n      switch (this.state.errorCategory) {\n        case 'network':\n          errorType = 'NETWORK_ERROR'\n          break\n        case 'timeout':\n          errorType = 'TIMEOUT_ERROR'\n          break\n        case 'api':\n          errorType = 'API_ERROR'\n          break\n        default:\n          errorType = 'LOAD_FAILED'\n      }\n      \n      return (\n        <div className=\"error-boundary-container\">\n          <ErrorMessage\n            errorType={errorType}\n            onRetry={canRetry ? this.handleRetry : this.handleReset}\n            showRetry={true}\n            isRetrying={this.state.isRetrying}\n            retryCount={this.state.retryCount}\n            maxRetries={this.maxRetries}\n          />\n          {this.state.retryCount > 0 && (\n            <div className=\"error-retry-info\">\n              <p>Retry attempt {this.state.retryCount} of {this.maxRetries}</p>\n              {this.state.isRetrying && (\n                <div className=\"retry-progress\">\n                  <div className=\"retry-spinner\"></div>\n                  <span>Retrying...</span>\n                </div>\n              )}\n            </div>\n          )}\n          {process.env.NODE_ENV === 'development' && this.state.error && (\n            <details className=\"error-details\">\n              <summary>Error Details (Development)</summary>\n              <pre>{this.state.error.stack}</pre>\n              {this.state.errorInfo && (\n                <pre>{this.state.errorInfo.componentStack}</pre>\n              )}\n            </details>\n          )}\n        </div>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default APIErrorBoundary","import React, { useEffect } from 'react'\nimport { watchlistService } from '../services/watchlistService'\nimport { useWallet } from '../hooks/useWallet'\nimport { log } from '../services/loggingService'\nimport type { NFTAsset } from '../types'\n\n/**\n * Component that checks for triggered watchlist alerts on page load\n * and displays notifications for any alerts that have been triggered\n * since the user's last visit.\n */\nconst WatchlistAlertChecker: React.FC = () => {\n  const { isConnected, account } = useWallet()\n\n  useEffect(() => {\n    if (!isConnected || !account) return\n\n    const checkTriggeredAlerts = async () => {\n      try {\n        // Get the last check timestamp from localStorage\n        const lastCheckKey = `watchlist_last_check_${account}`\n        const lastCheck = localStorage.getItem(lastCheckKey)\n        const lastCheckTime = lastCheck ? parseInt(lastCheck) : 0\n        const now = Date.now()\n        \n        // Only check if it's been more than 5 minutes since last check\n        if (now - lastCheckTime < 5 * 60 * 1000) {\n          return\n        }\n\n        // Get watchlist items\n        const watchlistItems = await watchlistService.getWatchlist()\n        \n        if (watchlistItems.length === 0) {\n          // Update last check time even if no items\n          localStorage.setItem(lastCheckKey, now.toString())\n          return\n        }\n\n        // Check each item for recent alerts\n        interface AlertData {\n          targetPrice: number\n          alertType: 'below' | 'above' | 'any'\n          enabled: boolean\n          lastTriggered?: number\n        }\n        \n        interface WatchlistItem {\n          nft: NFTAsset\n          targetPrice?: number\n          alertType: 'below' | 'above' | 'any'\n          addedAt: number\n          lastPrice: number\n          priceChange?: number\n        }\n        \n        interface RecentAlert {\n          alert: AlertData\n          item: WatchlistItem\n          message: string\n          triggeredAt: number\n        }\n        \n        const recentAlerts: RecentAlert[] = []\n        \n        for (const item of watchlistItems) {\n          const alert = watchlistService.getPriceAlert(item.nft.asset_id)\n          \n          if (alert && alert.enabled && alert.lastTriggered) {\n            // Check if alert was triggered since last check\n            if (alert.lastTriggered > lastCheckTime) {\n              // Create alert message based on alert type\n              let message = ''\n              const currentPrice = item.lastPrice || parseFloat(item.nft.price || '0')\n              \n              switch (alert.alertType) {\n                case 'below':\n                  message = `${item.nft.name} price dropped to ${currentPrice.toFixed(2)} WAX (target: ${alert.targetPrice} WAX)`\n                  break\n                case 'above':\n                  message = `${item.nft.name} price rose to ${currentPrice.toFixed(2)} WAX (target: ${alert.targetPrice} WAX)`\n                  break\n                case 'any': {\n                  const changePercent = Math.abs(item.priceChange || 0)\n                  const direction = (item.priceChange || 0) > 0 ? 'increased' : 'decreased'\n                  message = `${item.nft.name} price ${direction} by ${changePercent.toFixed(1)}% to ${currentPrice.toFixed(2)} WAX`\n                  break\n                }\n              }\n              \n              recentAlerts.push({\n                alert,\n                item,\n                message,\n                triggeredAt: alert.lastTriggered\n              })\n            }\n          }\n        }\n\n        // Sort alerts by trigger time (most recent first)\n        recentAlerts.sort((a, b) => b.triggeredAt - a.triggeredAt)\n        \n        // Display alerts with a small delay between each\n        recentAlerts.forEach((alertData, index) => {\n          setTimeout(() => {\n            // Dispatch custom event for PriceAlertManager to handle\n            window.dispatchEvent(new CustomEvent('priceAlert', {\n              detail: {\n                item: alertData.item,\n                message: alertData.message\n              }\n            }))\n          }, index * 1000) // 1 second delay between alerts\n        })\n\n        // Update last check timestamp\n        localStorage.setItem(lastCheckKey, now.toString())\n        \n        if (recentAlerts.length > 0) {\n          log.info(`Found ${recentAlerts.length} triggered watchlist alerts since last visit`)\n        }\n        \n      } catch (error) {\n        log.error('Error checking watchlist alerts:', 'WatchlistAlertChecker.checkTriggeredAlerts', error as Error)\n      }\n    }\n\n    // Check alerts after a short delay to ensure everything is loaded\n    const timeoutId = setTimeout(checkTriggeredAlerts, 2000)\n    \n    return () => clearTimeout(timeoutId)\n  }, [isConnected, account])\n\n  // This component doesn't render anything visible\n  return null\n}\n\nexport default WatchlistAlertChecker","import { useState, useEffect } from 'react';\nimport { log } from '../services/loggingService';\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  readonly userChoice: Promise<{\n    outcome: 'accepted' | 'dismissed';\n    platform: string;\n  }>;\n  prompt(): Promise<void>;\n}\n\ninterface PWAState {\n  isInstallable: boolean;\n  isInstalled: boolean;\n  isOnline: boolean;\n  isStandalone: boolean;\n  installPrompt: BeforeInstallPromptEvent | null;\n  showInstallPrompt: () => Promise<void>;\n  dismissInstallPrompt: () => void;\n}\n\nexport const usePWA = (): PWAState => {\n  const [installPrompt, setInstallPrompt] = useState<BeforeInstallPromptEvent | null>(null);\n  const [isInstallable, setIsInstallable] = useState(false);\n  const [isInstalled, setIsInstalled] = useState(false);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [isStandalone, setIsStandalone] = useState(false);\n\n  useEffect(() => {\n    // Check if app is running in standalone mode\n    const checkStandalone = () => {\n      const isStandaloneMode = \n        window.matchMedia('(display-mode: standalone)').matches ||\n        (window.navigator as { standalone?: boolean }).standalone ||\n        document.referrer.includes('android-app://');\n      \n      setIsStandalone(isStandaloneMode);\n      setIsInstalled(isStandaloneMode);\n    };\n\n    checkStandalone();\n\n    // Listen for beforeinstallprompt event\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n      const promptEvent = e as BeforeInstallPromptEvent;\n      setInstallPrompt(promptEvent);\n      setIsInstallable(true);\n    };\n\n    // Listen for appinstalled event\n    const handleAppInstalled = () => {\n      setIsInstalled(true);\n      setIsInstallable(false);\n      setInstallPrompt(null);\n    };\n\n    // Listen for online/offline events\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    // Add event listeners\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    window.addEventListener('appinstalled', handleAppInstalled);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Listen for display mode changes\n    const mediaQuery = window.matchMedia('(display-mode: standalone)');\n    const handleDisplayModeChange = (e: MediaQueryListEvent) => {\n      setIsStandalone(e.matches);\n      setIsInstalled(e.matches);\n    };\n    \n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener('change', handleDisplayModeChange);\n    } else {\n      // Fallback for older browsers\n      mediaQuery.addListener(handleDisplayModeChange);\n    }\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      window.removeEventListener('appinstalled', handleAppInstalled);\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      \n      if (mediaQuery.removeEventListener) {\n        mediaQuery.removeEventListener('change', handleDisplayModeChange);\n      } else {\n        mediaQuery.removeListener(handleDisplayModeChange);\n      }\n    };\n  }, []);\n\n  const showInstallPrompt = async (): Promise<void> => {\n    if (!installPrompt) return;\n\n    try {\n      await installPrompt.prompt();\n      const { outcome } = await installPrompt.userChoice;\n      \n      if (outcome === 'accepted') {\n        log.info('User accepted the install prompt');\n      } else {\n        log.info('User dismissed the install prompt');\n      }\n      \n      setInstallPrompt(null);\n      setIsInstallable(false);\n    } catch (error) {\n      log.error('Error showing install prompt:', 'usePWA.showInstallPrompt', error as Error);\n    }\n  };\n\n  const dismissInstallPrompt = (): void => {\n    setInstallPrompt(null);\n    setIsInstallable(false);\n  };\n\n  return {\n    isInstallable,\n    isInstalled,\n    isOnline,\n    isStandalone,\n    installPrompt,\n    showInstallPrompt,\n    dismissInstallPrompt,\n  };\n};\n\nexport default usePWA;","import React from 'react';\nimport { usePWA } from '../hooks/usePWA';\nimport '../css/pwa-install-banner.css';\n\ninterface PWAInstallBannerProps {\n  className?: string;\n}\n\nconst PWAInstallBanner: React.FC<PWAInstallBannerProps> = ({ className = '' }) => {\n  const { isInstallable, isInstalled, isStandalone, showInstallPrompt, dismissInstallPrompt } = usePWA();\n\n  // Don't show banner if app is already installed or not installable\n  if (!isInstallable || isInstalled || isStandalone) {\n    return null;\n  }\n\n  return (\n    <div className={`pwa-install-banner ${className}`} role=\"banner\" aria-label=\"Install app banner\">\n      <div className=\"pwa-banner-content\">\n        <div className=\"pwa-banner-icon\">\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n            <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" fill=\"currentColor\" fillOpacity=\"0.1\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n            <path d=\"M8 12l2 2 4-4\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          </svg>\n        </div>\n        \n        <div className=\"pwa-banner-text\">\n          <h3 className=\"pwa-banner-title\">Install PxMarket</h3>\n          <p className=\"pwa-banner-description\">\n            Get the full app experience with offline access and faster loading.\n          </p>\n        </div>\n        \n        <div className=\"pwa-banner-actions\">\n          <button\n            type=\"button\"\n            className=\"pwa-install-button\"\n            onClick={showInstallPrompt}\n            aria-label=\"Install PxMarket app\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n              <path d=\"M8 1v10M4 7l4 4 4-4\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n            Install\n          </button>\n          \n          <button\n            type=\"button\"\n            className=\"pwa-dismiss-button\"\n            onClick={dismissInstallPrompt}\n            aria-label=\"Dismiss install banner\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n              <path d=\"M12 4L4 12M4 4l8 8\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PWAInstallBanner;","import React from 'react';\nimport { usePWA } from '../hooks/usePWA';\nimport '../css/offline-indicator.css';\n\ninterface OfflineIndicatorProps {\n  className?: string;\n}\n\nconst OfflineIndicator: React.FC<OfflineIndicatorProps> = ({ className = '' }) => {\n  const { isOnline } = usePWA();\n\n  // Don't show indicator when online\n  if (isOnline) {\n    return null;\n  }\n\n  return (\n    <div \n      className={`offline-indicator ${className}`} \n      role=\"status\" \n      aria-live=\"polite\"\n      aria-label=\"You are currently offline\"\n    >\n      <div className=\"offline-content\">\n        <div className=\"offline-icon\">\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n            <path \n              d=\"M3 7c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v6c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V7z\" \n              stroke=\"currentColor\" \n              strokeWidth=\"1.5\" \n              fill=\"none\"\n            />\n            <path \n              d=\"M7 9l6 4M13 9l-6 4\" \n              stroke=\"currentColor\" \n              strokeWidth=\"1.5\" \n              strokeLinecap=\"round\"\n            />\n          </svg>\n        </div>\n        \n        <div className=\"offline-text\">\n          <span className=\"offline-title\">You're offline</span>\n          <span className=\"offline-description\">Some features may be limited</span>\n        </div>\n        \n        <div className=\"offline-pulse\" aria-hidden=\"true\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default OfflineIndicator;","import React, { useState, useEffect, useCallback } from 'react'\nimport { useTransactionManager } from '../hooks/useTransactionManager'\nimport { useNotifications } from '../hooks/useNotifications'\n\nimport '../css/transaction-notifications.css'\n\ninterface NotificationItem {\n  id: string\n  type: 'success' | 'error' | 'info' | 'warning'\n  title: string\n  message: string\n  timestamp: number\n  transactionId?: string\n  autoHide?: boolean\n  duration?: number\n}\n\nconst TransactionNotifications: React.FC = () => {\n  const [notifications, setNotifications] = useState<NotificationItem[]>([])\n  const [processedTransactions, setProcessedTransactions] = useState<Set<string>>(new Set())\n  const { activeTransactions, completedTransactions } = useTransactionManager()\n  const { showSuccess, showError } = useNotifications()\n\n  const addNotification = useCallback((notification: Omit<NotificationItem, 'id' | 'timestamp'>) => {\n    const newNotification: NotificationItem = {\n      ...notification,\n      id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: Date.now(),\n      autoHide: notification.autoHide ?? true,\n      duration: notification.duration ?? 5000\n    }\n\n    setNotifications(prev => [newNotification, ...prev.slice(0, 4)]) // Keep max 5 notifications\n\n    // Auto-hide notification\n    if (newNotification.autoHide) {\n      setTimeout(() => {\n        removeNotification(newNotification.id)\n      }, newNotification.duration)\n    }\n  }, [])\n\n  const removeNotification = useCallback((id: string) => {\n    setNotifications(prev => prev.filter(n => n.id !== id))\n  }, [])\n\n  // Monitor transaction status changes\n  useEffect(() => {\n    const allTransactions = [...activeTransactions, ...completedTransactions]\n    \n    allTransactions.forEach(tx => {\n      if (processedTransactions.has(tx.id)) return\n      \n      // Mark as processed to avoid duplicate notifications\n      setProcessedTransactions(prev => new Set([...prev, tx.id]))\n      \n      // Handle different transaction statuses\n      switch (tx.status) {\n        case 'pending':\n          addNotification({\n            type: 'info',\n            title: 'Transaction Started',\n            message: `${getTransactionTypeLabel(tx.type)} transaction is being prepared...`,\n            transactionId: tx.id,\n            duration: 3000\n          })\n          break\n          \n        case 'processing':\n          addNotification({\n            type: 'info',\n            title: 'Processing Transaction',\n            message: `${getTransactionTypeLabel(tx.type)} is being processed on the blockchain...`,\n            transactionId: tx.id,\n            duration: 4000\n          })\n          break\n          \n        case 'success':\n          addNotification({\n            type: 'success',\n            title: 'Transaction Successful!',\n            message: `${getTransactionTypeLabel(tx.type)} completed successfully`,\n            transactionId: tx.id,\n            duration: 6000\n          })\n          \n          // Also use the global notification system\n          showSuccess(\n            'Transaction Complete',\n            `Your ${getTransactionTypeLabel(tx.type).toLowerCase()} has been processed successfully!`\n          )\n          break\n          \n        case 'failed':\n          addNotification({\n            type: 'error',\n            title: 'Transaction Failed',\n            message: tx.error || `${getTransactionTypeLabel(tx.type)} failed to process`,\n            transactionId: tx.id,\n            autoHide: false // Keep error notifications visible\n          })\n          \n          // Also use the global notification system\n          showError(\n            'Transaction Failed',\n            tx.error || 'Your transaction failed to process. Please try again.'\n          )\n          break\n          \n        case 'cancelled':\n          addNotification({\n            type: 'warning',\n            title: 'Transaction Cancelled',\n            message: `${getTransactionTypeLabel(tx.type)} was cancelled`,\n            transactionId: tx.id,\n            duration: 4000\n          })\n          break\n      }\n    })\n  }, [activeTransactions, completedTransactions, processedTransactions, addNotification, showSuccess, showError])\n\n  const getTransactionTypeLabel = (type: string): string => {\n    switch (type) {\n      case 'nft_purchase':\n        return 'NFT Purchase'\n      case 'nft_transfer':\n        return 'NFT Transfer'\n      case 'token_transfer':\n        return 'Token Transfer'\n      case 'nft_listing':\n        return 'NFT Listing'\n      case 'listing_cancel':\n        return 'Cancel Listing'\n      case 'crafting':\n        return 'Crafting'\n      case 'blend':\n        return 'Blend'\n      case 'burn':\n        return 'Burn Assets'\n      case 'unpack':\n        return 'Unpack Asset'\n      case 'auction_bid':\n        return 'Auction Bid'\n      case 'tokenize_wax':\n        return 'Tokenize WAX'\n      default:\n        return type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n    }\n  }\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'success':\n        return '✅'\n      case 'error':\n        return '❌'\n      case 'warning':\n        return '⚠️'\n      case 'info':\n      default:\n        return 'ℹ️'\n    }\n  }\n\n  const formatTimeAgo = (timestamp: number): string => {\n    const now = Date.now()\n    const diffMs = now - timestamp\n    const diffSecs = Math.floor(diffMs / 1000)\n    const diffMins = Math.floor(diffSecs / 60)\n    \n    if (diffSecs < 60) return 'Just now'\n    if (diffMins < 60) return `${diffMins}m ago`\n    \n    const diffHours = Math.floor(diffMins / 60)\n    if (diffHours < 24) return `${diffHours}h ago`\n    \n    return new Date(timestamp).toLocaleDateString()\n  }\n\n  if (notifications.length === 0) return null\n\n  return (\n    <div className=\"transaction-notifications\">\n      {notifications.map(notification => (\n        <div \n          key={notification.id}\n          className={`notification notification-${notification.type}`}\n        >\n          <div className=\"notification-content\">\n            <div className=\"notification-header\">\n              <span className=\"notification-icon\">\n                {getNotificationIcon(notification.type)}\n              </span>\n              <span className=\"notification-title\">\n                {notification.title}\n              </span>\n              <span className=\"notification-time\">\n                {formatTimeAgo(notification.timestamp)}\n              </span>\n              <button \n                className=\"notification-close\"\n                onClick={() => removeNotification(notification.id)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"notification-message\">\n              {notification.message}\n            </div>\n            \n            {notification.transactionId && (\n              <div className=\"notification-transaction-id\">\n                ID: {notification.transactionId.slice(0, 8)}...{notification.transactionId.slice(-8)}\n              </div>\n            )}\n          </div>\n          \n          {notification.autoHide && (\n            <div \n              className=\"notification-progress\"\n              style={{\n                animationDuration: `${notification.duration}ms`\n              }}\n            />\n          )}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TransactionNotifications","import { useState, useCallback, useRef } from 'react'\nimport { useWallet } from './useWallet'\nimport { log } from '../services/loggingService'\nimport type { TransactionData, TransactionType } from '../services/transactionService'\n\ninterface TransactionManagerState {\n  activeTransactions: Map<string, TransactionData>\n  completedTransactions: TransactionData[]\n  isProcessing: boolean\n}\n\ninterface UseTransactionManagerReturn {\n  // State\n  activeTransactions: TransactionData[]\n  completedTransactions: TransactionData[]\n  isProcessing: boolean\n  \n  // Actions\n  startTransaction: (type: TransactionType, data: any) => Promise<string | null>\n  getTransaction: (id: string) => TransactionData | null\n  cancelTransaction: (id: string) => Promise<boolean>\n  clearCompleted: () => void\n  \n  // Status tracking\n  getActiveCount: () => number\n  getCompletedCount: () => number\n  hasFailedTransactions: () => boolean\n}\n\nexport const useTransactionManager = (): UseTransactionManagerReturn => {\n  const [state, setState] = useState<TransactionManagerState>({\n    activeTransactions: new Map(),\n    completedTransactions: [],\n    isProcessing: false\n  })\n  \n  const { \n    executeTransaction, \n    getTransaction: getWalletTransaction,\n    cancelTransaction: cancelWalletTransaction \n  } = useWallet()\n  \n  const pollIntervals = useRef<Map<string, NodeJS.Timeout>>(new Map())\n\n  const updateTransaction = useCallback((id: string, updates: Partial<TransactionData>) => {\n    setState(prev => {\n      const newActiveTransactions = new Map(prev.activeTransactions)\n      const existing = newActiveTransactions.get(id)\n      \n      if (existing) {\n        const updated = { ...existing, ...updates }\n        \n        // If transaction is completed, move to completed list\n        if (updated.status === 'success' || updated.status === 'failed' || updated.status === 'cancelled') {\n          newActiveTransactions.delete(id)\n          \n          // Clear polling interval\n          const interval = pollIntervals.current.get(id)\n          if (interval) {\n            clearInterval(interval)\n            pollIntervals.current.delete(id)\n          }\n          \n          return {\n            ...prev,\n            activeTransactions: newActiveTransactions,\n            completedTransactions: [updated, ...prev.completedTransactions.slice(0, 49)], // Keep last 50\n            isProcessing: newActiveTransactions.size > 0\n          }\n        } else {\n          newActiveTransactions.set(id, updated)\n          return {\n            ...prev,\n            activeTransactions: newActiveTransactions\n          }\n        }\n      }\n      \n      return prev\n    })\n  }, [])\n\n  const pollTransactionStatus = useCallback(async (id: string) => {\n    try {\n      if (!getWalletTransaction) {\n        log.warn('getWalletTransaction not available')\n        return\n      }\n      const txData = await getWalletTransaction(id)\n      if (txData) {\n        updateTransaction(id, txData)\n      }\n    } catch (error) {\n      log.error(`Error polling transaction ${id}:`, 'useTransactionManager.pollTransactionStatus', error as Error)\n      updateTransaction(id, { \n        status: 'failed', \n        error: 'Failed to check transaction status' \n      })\n    }\n  }, [getWalletTransaction, updateTransaction])\n\n  const startPolling = useCallback((id: string) => {\n    // Clear existing interval if any\n    const existingInterval = pollIntervals.current.get(id)\n    if (existingInterval) {\n      clearInterval(existingInterval)\n    }\n    \n    // Start new polling interval\n    const interval = setInterval(() => {\n      pollTransactionStatus(id)\n    }, 2000) // Poll every 2 seconds\n    \n    pollIntervals.current.set(id, interval)\n    \n    // Auto-cleanup after 5 minutes\n    setTimeout(() => {\n      const currentInterval = pollIntervals.current.get(id)\n      if (currentInterval === interval) {\n        clearInterval(interval)\n        pollIntervals.current.delete(id)\n        updateTransaction(id, { \n          status: 'failed', \n          error: 'Transaction timeout - please check manually' \n        })\n      }\n    }, 5 * 60 * 1000)\n  }, [pollTransactionStatus, updateTransaction])\n\n  const startTransaction = useCallback(async (type: TransactionType, data: any): Promise<string | null> => {\n    try {\n      setState(prev => ({ ...prev, isProcessing: true }))\n      \n      if (!executeTransaction) {\n        throw new Error('executeTransaction not available - wallet not connected')\n      }\n      \n      const transactionId = await executeTransaction(type, data)\n      \n      if (transactionId) {\n        // Add to active transactions\n        const newTransaction: TransactionData = {\n          id: transactionId,\n          type,\n          status: 'pending',\n          timestamp: Date.now(),\n          account: '', // Will be set by the transaction service\n          actions: [], // Will be populated by the transaction service\n          metadata: data // Store the data as metadata\n        }\n        \n        setState(prev => {\n          const newActiveTransactions = new Map(prev.activeTransactions)\n          newActiveTransactions.set(transactionId, newTransaction)\n          \n          return {\n            ...prev,\n            activeTransactions: newActiveTransactions\n          }\n        })\n        \n        // Start polling for status updates\n        startPolling(transactionId)\n        \n        return transactionId\n      }\n      \n      return null\n    } catch (error) {\n      log.error('Error starting transaction:', 'useTransactionManager.startTransaction', error as Error)\n      setState(prev => ({ ...prev, isProcessing: false }))\n      throw error\n    }\n  }, [executeTransaction, startPolling])\n\n  const getTransaction = useCallback((id: string): TransactionData | null => {\n    // Check active transactions first\n    const active = state.activeTransactions.get(id)\n    if (active) return active\n    \n    // Check completed transactions\n    const completed = state.completedTransactions.find(tx => tx.id === id)\n    return completed || null\n  }, [state.activeTransactions, state.completedTransactions])\n\n  const cancelTransaction = useCallback(async (id: string): Promise<boolean> => {\n    try {\n      if (!cancelWalletTransaction) {\n        log.warn('cancelWalletTransaction not available')\n        return false\n      }\n      \n      const success = await cancelWalletTransaction(id)\n      \n      if (success) {\n        updateTransaction(id, { \n          status: 'cancelled',\n          error: 'Transaction cancelled by user'\n        })\n      }\n      \n      return success\n    } catch (error) {\n      log.error('Error cancelling transaction:', 'useTransactionManager.cancelTransaction', error as Error)\n      return false\n    }\n  }, [cancelWalletTransaction, updateTransaction])\n\n  const clearCompleted = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      completedTransactions: []\n    }))\n  }, [])\n\n  const getActiveCount = useCallback(() => {\n    return state.activeTransactions.size\n  }, [state.activeTransactions.size])\n\n  const getCompletedCount = useCallback(() => {\n    return state.completedTransactions.length\n  }, [state.completedTransactions.length])\n\n  const hasFailedTransactions = useCallback(() => {\n    return state.completedTransactions.some(tx => tx.status === 'failed')\n  }, [state.completedTransactions])\n\n  return {\n    // State\n    activeTransactions: Array.from(state.activeTransactions.values()),\n    completedTransactions: state.completedTransactions,\n    isProcessing: state.isProcessing,\n    \n    // Actions\n    startTransaction,\n    getTransaction,\n    cancelTransaction,\n    clearCompleted,\n    \n    // Status tracking\n    getActiveCount,\n    getCompletedCount,\n    hasFailedTransactions\n  }\n}\n\nexport default useTransactionManager","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"file":"assets/js/index-CSL_gUiJ.js"}